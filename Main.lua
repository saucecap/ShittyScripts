game.StarterGui:SetCore("SendNotification", {
  Title = "discord.gg/shibahub",
  Text = "discord.gg/shibahub",
  Duration = 5
})
if setclipboard then
  setclipboard("discord.gg/shibahub")
end
settings().Physics.AllowSleep = false
game:GetService("Players").LocalPlayer.ReplicationFocus = workspace
settings().Physics.ThrottleAdjustTime = math.huge - math.huge
Instance.new("Sound", workspace).Looped = true
Instance.new("Sound", workspace).Volume = 0.5
game.Players.LocalPlayer.Character.Humanoid.Died:Connect(function()
  va.Playing = false
  va.TimePosition = 0
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Reanimations"):NewSection("Reanimations"):NewButton("Improved Simple Reanimation", "funny button go brr", function()
  loadstring(game:HttpGet("https://paste.ee/r/" .. "AQ2" .. "Lk/0"))()
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Reanimations"):NewSection("Reanimations"):NewButton("Fling Reanimation (MIGHT LOSE PARTS)", "Flings. Thats. All.", function()
  loadstring(game:HttpGet("https://paste.ee/r/" .. "RBv" .. "lt/0"))()
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Reanimations"):NewSection("Reanimations"):NewButton("Cheems Reanimation", "funny button go brr", function()
  if game.PlaceId == 2041312716 then
    game.Players.LocalPlayer.Character["Local Ragdoll"]:Destroy()
  end
  wait(1)
  thing = game:GetObjects("rbxassetid://5904819435")[1]
  thing.Name = "Raw"
  thing.Parent = game.Players.LocalPlayer.Character
  game.Players.LocalPlayer.Character.Animate:Clone().Parent = thing
  for fh, fj in pairs(game.Players.LocalPlayer.Character.Animate:GetChildren()) do
    fj:Clone().Parent = game.Players.LocalPlayer.Character.Animate:Clone()
  end
  game.Players.LocalPlayer.Character.Torso["Right Shoulder"]:Destroy()
  game.Players.LocalPlayer.Character.Torso["Left Shoulder"]:Destroy()
  game.Players.LocalPlayer.Character.Torso["Right Hip"]:Destroy()
  game.Players.LocalPlayer.Character.Torso["Left Hip"]:Destroy()
  thing:MoveTo(game.Players.LocalPlayer.Character.HumanoidRootPart.Position)
  thing.Humanoid:Move(game.Players.LocalPlayer.Character.Humanoid.MoveDirection, false)
  thing.HumanoidRootPart.Anchored = false
  game.Players.LocalPlayer.Character.LavanderHair.Handle.Mesh:Destroy()
  game.Players.LocalPlayer.Character.LavanderHair.Handle.AccessoryWeld:Destroy()
  game.Players.LocalPlayer.Character.SeeMonkey.Handle.Mesh:Destroy()
  game.Players.LocalPlayer.Character.SeeMonkey.Handle.AccessoryWeld:Destroy()
  game.Players.LocalPlayer.Character.Hat1.Handle.Mesh:Destroy()
  game.Players.LocalPlayer.Character.Hat1.Handle.AccessoryWeld:Destroy()
  game.Players.LocalPlayer.Character.Robloxclassicred.Handle.Mesh:Destroy()
  game.Players.LocalPlayer.Character.Robloxclassicred.Handle.AccessoryWeld:Destroy()
  game.Players.LocalPlayer.Character["Kate Hair"].Handle.Mesh:Destroy()
  game.Players.LocalPlayer.Character["Kate Hair"].Handle.AccessoryWeld:Destroy()
  game.Players.LocalPlayer.Character["Sly Dog"].Handle.AccessoryWeld:Destroy();
  (function(a, b)
    a = a
    attachment = Instance.new("Attachment", a)
    attachment.Position = Vector3.new(0, 0, 0)
    attachment.Orientation = Vector3.new(0, 0, 0)
    attachment02 = Instance.new("Attachment", b)
    lol = Instance.new("AlignPosition", a)
    lol.Attachment0 = attachment
    lol.Attachment1 = attachment02
    lol.MaxForce = 67734
    lol.RigidityEnabled = true
    pog = Instance.new("AlignOrientation", a)
    pog.Attachment0 = attachment
    pog.Attachment1 = attachment02
    pog.RigidityEnabled = true
  end)(game.Players.LocalPlayer.Character["Sly Dog"].Handle, thing.Head)
  game.Players.LocalPlayer.Character["Sly Dog"].Handle.Attachment.Position = Vector3.new(0, -0.4, 0)
  (function(a, b)
    a = a
    attachment = Instance.new("Attachment", a)
    attachment.Position = Vector3.new(0, 0, 0)
    attachment.Orientation = Vector3.new(0, 0, 0)
    attachment02 = Instance.new("Attachment", b)
    lol = Instance.new("AlignPosition", a)
    lol.Attachment0 = attachment
    lol.Attachment1 = attachment02
    lol.MaxForce = 67734
    lol.RigidityEnabled = true
    pog = Instance.new("AlignOrientation", a)
    pog.Attachment0 = attachment
    pog.Attachment1 = attachment02
    pog.RigidityEnabled = true
  end)(game.Players.LocalPlayer.Character.LavanderHair.Handle, thing["Left Arm"]);
  (function(a, b)
    a = a
    attachment = Instance.new("Attachment", a)
    attachment.Position = Vector3.new(0, 0, 0)
    attachment.Orientation = Vector3.new(0, 0, 0)
    attachment02 = Instance.new("Attachment", b)
    lol = Instance.new("AlignPosition", a)
    lol.Attachment0 = attachment
    lol.Attachment1 = attachment02
    lol.MaxForce = 67734
    lol.RigidityEnabled = true
    pog = Instance.new("AlignOrientation", a)
    pog.Attachment0 = attachment
    pog.Attachment1 = attachment02
    pog.RigidityEnabled = true
  end)(game.Players.LocalPlayer.Character.SeeMonkey.Handle, thing.Torso);
  (function(a, b)
    a = a
    attachment = Instance.new("Attachment", a)
    attachment.Position = Vector3.new(0, 0, 0)
    attachment.Orientation = Vector3.new(0, 0, 0)
    attachment02 = Instance.new("Attachment", b)
    lol = Instance.new("AlignPosition", a)
    lol.Attachment0 = attachment
    lol.Attachment1 = attachment02
    lol.MaxForce = 67734
    lol.RigidityEnabled = true
    pog = Instance.new("AlignOrientation", a)
    pog.Attachment0 = attachment
    pog.Attachment1 = attachment02
    pog.RigidityEnabled = true
  end)(game.Players.LocalPlayer.Character.Hat1.Handle, thing["Right Arm"]);
  (function(a, b)
    a = a
    attachment = Instance.new("Attachment", a)
    attachment.Position = Vector3.new(0, 0, 0)
    attachment.Orientation = Vector3.new(0, 0, 0)
    attachment02 = Instance.new("Attachment", b)
    lol = Instance.new("AlignPosition", a)
    lol.Attachment0 = attachment
    lol.Attachment1 = attachment02
    lol.MaxForce = 67734
    lol.RigidityEnabled = true
    pog = Instance.new("AlignOrientation", a)
    pog.Attachment0 = attachment
    pog.Attachment1 = attachment02
    pog.RigidityEnabled = true
  end)(game.Players.LocalPlayer.Character.Robloxclassicred.Handle, thing["Left Leg"]);
  (function(a, b)
    a = a
    attachment = Instance.new("Attachment", a)
    attachment.Position = Vector3.new(0, 0, 0)
    attachment.Orientation = Vector3.new(0, 0, 0)
    attachment02 = Instance.new("Attachment", b)
    lol = Instance.new("AlignPosition", a)
    lol.Attachment0 = attachment
    lol.Attachment1 = attachment02
    lol.MaxForce = 67734
    lol.RigidityEnabled = true
    pog = Instance.new("AlignOrientation", a)
    pog.Attachment0 = attachment
    pog.Attachment1 = attachment02
    pog.RigidityEnabled = true
  end)(game.Players.LocalPlayer.Character["Kate Hair"].Handle, thing["Right Leg"])
  game.Players.LocalPlayer.Character["Sly Dog"].Handle.Attachment.Orientation = Vector3.new(0, 0, 0)
  game.Players.LocalPlayer.Character["Sly Dog"].Handle.Attachment.Position = Vector3.new(0, -0.3, 0.2)
  game.Players.LocalPlayer.Character.LavanderHair.Handle.Attachment.Orientation = Vector3.new(90, 0, 0)
  game.Players.LocalPlayer.Character.SeeMonkey.Handle.Attachment.Orientation = Vector3.new(90, 0, 0)
  game.Players.LocalPlayer.Character.Hat1.Handle.Attachment.Orientation = Vector3.new(90, 0, 0)
  game.Players.LocalPlayer.Character.Robloxclassicred.Handle.Attachment.Orientation = Vector3.new(90, 0, 0)
  game.Players.LocalPlayer.Character["Kate Hair"].Handle.Attachment.Orientation = Vector3.new(90, 0, 0)
  game.Players.LocalPlayer.Character["Right Arm"].Anchored = false
  game.Players.LocalPlayer.Character.Torso.Anchored = false
  game.Players.LocalPlayer.Character["Left Arm"].Anchored = false
  game.Players.LocalPlayer.Character["Right Leg"].Anchored = false
  game.Players.LocalPlayer.Character["Left Leg"].Anchored = false
  thing.Humanoid.MaxHealth = math.huge
  thing.Humanoid.Health = math.huge
  thing.Head.face.Texture = "rbxassetid//0"
  game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = true
  Humanoid = game.Players.LocalPlayer.Character.Humanoid
  game.Players.LocalPlayer.Character.HumanoidRootPart.RootJoint:Destroy()
  game:GetService("UserInputService").InputBegan:Connect(function(a, b)
    a = a
    if a.KeyCode == Enum.KeyCode.Space and b == false then
      thing.Humanoid.Jump = true
    end
  end)
  game.Workspace.CurrentCamera.CameraSubject = thing.Humanoid
  for fr, fs in pairs(thing:GetChildren()) do
    if fs:IsA("Part") then
      if fs.Name == "Head" then
        fs.Transparency = 1
      else
        fs.Transparency = 1
      end
    end
  end
  game:GetService("RunService").Stepped:Connect(function()
    thing.Humanoid:Move(game.Players.LocalPlayer.Character:WaitForChild("Humanoid").MoveDirection, false)
    for fe, fg in pairs((Humanoid:GetPlayingAnimationTracks())) do
      fg:Stop()
    end
    for fe, fg in pairs(thing:GetChildren()) do
      pcall(function()
        if va.ClassName == "Part" then
          va.CanCollide = false
        elseif va.ClassName == "Model" then
          va.Head.CanCollide = false
        end
      end)
    end
  end)
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Free Scripts"):NewSection("Free Scripts"):NewButton("Distraction Dance", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    wait(0.1)
    IT = Instance.new
    CF = CFrame.new
    VT = Vector3.new
    C3 = Color3.new
    UD2 = UDim2.new
    BRICKC = BrickColor.new
    NS = NumberSequence.new
    NSK = NumberSequenceKeypoint.new
    RAY = Ray.new
    CS = ColorSequence.new
    NR = NumberRange.new
    TI = TweenInfo.new
    RAND = Random.new
    ANGLES = CFrame.Angles
    COS = math.cos
    ACOS = math.acos
    RAD = math.rad
    SIN = math.sin
    MRANDOM = math.random
    MHUGE = math.huge
    FLOOR = math.floor
    SQRT = math.sqrt
    CEIL = math.ceil
    Character = game.Players.LocalPlayer.Character.Raw
    Torso = Character.Torso
    Root = Character.HumanoidRootPart
    Neck = Torso.Neck
    RootJoint = Root.RootJoint
    RightShoulder = Torso["Right Shoulder"]
    LeftShoulder = Torso["Left Shoulder"]
    RightHip = Torso["Right Hip"]
    LeftHip = Torso["Left Hip"]
    NeckOrg = CF(0, -0.5, 0) * ANGLES(RAD(-90), 0, RAD(180))
    RootJointOrg = CF(0, 0, 0) * ANGLES(RAD(-90), 0, RAD(180))
    LeftShoulderOrg = CF(0.5, 0.5, 0) * ANGLES(0, RAD(-90), 0)
    RightShoulderOrg = CF(-0.5, 0.5, 0) * ANGLES(0, RAD(90), 0)
    LeftHipOrg = CF(-0.5, 1, 0) * ANGLES(0, RAD(-90), 0)
    RightHipOrg = CF(0.5, 1, 0) * ANGLES(0, RAD(90), 0)
    HB = game["Run Service"].Heartbeat
    IT("Sound").SoundId = "rbxassetid://5599347184"
    IT("Sound").Looped = true
    IT("Sound").Volume = 4
    IT("Sound").Parent = Root
    repeat
      wait()
    until IT("Sound").IsLoaded
    function co(a)
      a = a
      coroutine.resume(coroutine.create(a))
    end
    function Clerp(a, b, c)
      a = a
      if c == false then
      end
      game.TweenService:Create(a, TweenInfo.new(0.191780821917808, Enum.EasingStyle.Sine, Enum.EasingDirection.In), {C1 = b}):Play()
      if a == RightHip then
        wait(0.191780821917808)
      end
    end
    function swait(a)
      a = a
      if a ~= 0 then
      end
      if a == nil then
        HB:Wait()
      else
        for fe = 1, a do
          HB:Wait()
        end
      end
    end
    Clerp(Neck, NeckOrg, false)
    Clerp(RootJoint, RootJointOrg * CF(0, 0, 0.5), false)
    Clerp(LeftShoulder, LeftShoulderOrg * ANGLES(RAD(60), 0, RAD(15)), false)
    Clerp(RightShoulder, RightShoulderOrg * ANGLES(RAD(60), 0, RAD(-15)), false)
    Clerp(LeftHip, LeftHipOrg * CF(0.5, -0.5, 0), false)
    Clerp(RightHip, RightHipOrg * CF(-0.5, -0.5, 0), false)
    IT("Sound"):Play()
    while true do
      Clerp(Neck, NeckOrg)
      Clerp(RootJoint, RootJointOrg * ANGLES(0, 0, RAD(-45)))
      Clerp(LeftShoulder, LeftShoulderOrg * ANGLES(RAD(105), 0, RAD(120)))
      Clerp(RightShoulder, RightShoulderOrg * ANGLES(RAD(105), 0, RAD(-120)))
      Clerp(LeftHip, LeftHipOrg * CF(0.5, -0.5, 0))
      Clerp(RightHip, RightHipOrg)
      Clerp(Neck, NeckOrg, false)
      Clerp(RootJoint, RootJointOrg * CF(0, 0, 0.5), false)
      Clerp(LeftShoulder, LeftShoulderOrg * ANGLES(RAD(-45), 0, RAD(120)), false)
      Clerp(RightShoulder, RightShoulderOrg * ANGLES(RAD(-45), 0, RAD(-120)), false)
      Clerp(LeftHip, LeftHipOrg * CF(0.5, -0.5, 0), false)
      Clerp(RightHip, RightHipOrg * CF(-0.5, -0.5, 0), false)
      Clerp(Neck, NeckOrg)
      Clerp(RootJoint, RootJointOrg * ANGLES(0, 0, RAD(45)))
      Clerp(LeftShoulder, LeftShoulderOrg * ANGLES(0, 0, RAD(120)))
      Clerp(RightShoulder, RightShoulderOrg * ANGLES(0, 0, RAD(-120)))
      Clerp(LeftHip, LeftHipOrg)
      Clerp(RightHip, RightHipOrg * CF(-0.5, -0.5, 0))
      Clerp(Neck, NeckOrg, false)
      Clerp(RootJoint, RootJointOrg * CF(0, 0, 0.5), false)
      Clerp(LeftShoulder, LeftShoulderOrg * ANGLES(RAD(25), 0, 0), false)
      Clerp(RightShoulder, RightShoulderOrg * ANGLES(RAD(25), 0, 0), false)
      Clerp(LeftHip, LeftHipOrg * CF(0.5, -0.5, 0), false)
      Clerp(RightHip, RightHipOrg * CF(-0.5, -0.5, 0), false)
      Clerp(Neck, NeckOrg)
      Clerp(RootJoint, RootJointOrg * ANGLES(0, 0, RAD(-45)))
      Clerp(LeftShoulder, LeftShoulderOrg * ANGLES(RAD(60), 0, RAD(15)))
      Clerp(RightShoulder, RightShoulderOrg * ANGLES(RAD(60), 0, RAD(-15)))
      Clerp(LeftHip, LeftHipOrg * CF(0.5, -0.5, 0))
      Clerp(RightHip, RightHipOrg)
      Clerp(Neck, NeckOrg, false)
      Clerp(RootJoint, RootJointOrg * CF(0, 0, 0.5), false)
      Clerp(LeftShoulder, LeftShoulderOrg * CF(0, -0.5, 0) * ANGLES(RAD(-45), 0, RAD(15)), false)
      Clerp(RightShoulder, RightShoulderOrg * CF(0, -0.5, 0) * ANGLES(RAD(-45), 0, RAD(-15)), false)
      Clerp(LeftHip, LeftHipOrg * CF(0.5, -0.5, 0), false)
      Clerp(RightHip, RightHipOrg * CF(-0.5, -0.5, 0), false)
      Clerp(Neck, NeckOrg)
      Clerp(RootJoint, RootJointOrg * ANGLES(0, 0, RAD(45)))
      Clerp(LeftShoulder, LeftShoulderOrg * ANGLES(RAD(-105), 0, RAD(20)))
      Clerp(RightShoulder, RightShoulderOrg * ANGLES(RAD(-105), 0, RAD(-20)))
      Clerp(LeftHip, LeftHipOrg)
      Clerp(RightHip, RightHipOrg * CF(-0.5, -0.5, 0))
      Clerp(Neck, NeckOrg, false)
      Clerp(RootJoint, RootJointOrg * CF(0, 0, 0.5), false)
      Clerp(LeftShoulder, LeftShoulderOrg * ANGLES(RAD(60), 0, RAD(15)), false)
      Clerp(RightShoulder, RightShoulderOrg * ANGLES(RAD(60), 0, RAD(-15)), false)
      Clerp(LeftHip, LeftHipOrg * CF(0.5, -0.5, 0), false)
      Clerp(RightHip, RightHipOrg * CF(-0.5, -0.5, 0), false)
    end
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Free Scripts"):NewSection("Free Scripts"):NewButton("Seizure", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    for fe, fg in pairs(game.Players.LocalPlayer.Character.Raw:GetDescendants()) do
      if fg:IsA("Motor6D") then
        Instance.new("Attachment").Parent = fg.Part0
        Instance.new("Attachment").Parent = fg.Part1
        Instance.new("BallSocketConstraint").Attachment1, Instance.new("BallSocketConstraint").Attachment0, Instance.new("BallSocketConstraint").Parent = Instance.new("Attachment"), Instance.new("Attachment"), fg.Parent
        Instance.new("Attachment").CFrame = fg.C0
        Instance.new("Attachment").CFrame = fg.C1
        Instance.new("BallSocketConstraint").LimitsEnabled = true
        Instance.new("BallSocketConstraint").TwistLimitsEnabled = true
        fg:Destroy()
      end
      game.Players.LocalPlayer.Character.Humanoid.Sit = true
    end
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Free Scripts"):NewSection("Free Scripts"):NewButton("Ragdoll Death", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    for fe, fg in pairs(game.Players.LocalPlayer.Character.Raw:GetDescendants()) do
      if fg:IsA("Motor6D") and fg.Parent.Name ~= "HumanoidRootPart" then
        Instance.new("Attachment").Parent = fg.Part0
        Instance.new("Attachment").Parent = fg.Part1
        Instance.new("BallSocketConstraint").Attachment1, Instance.new("BallSocketConstraint").Attachment0, Instance.new("BallSocketConstraint").Parent = Instance.new("Attachment"), Instance.new("Attachment"), fg.Parent
        Instance.new("Attachment").CFrame = fg.C0
        Instance.new("Attachment").CFrame = fg.C1
        Instance.new("BallSocketConstraint").LimitsEnabled = true
        Instance.new("BallSocketConstraint").TwistLimitsEnabled = true
        fg:Destroy()
      end
      game.Players.LocalPlayer.Character.Humanoid.Sit = true
    end
    wait(1)
    game.Players.LocalPlayer.Character.Torso.Neck:Destroy()
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Free Scripts"):NewSection("Free Scripts"):NewButton("Weird Break Limbs", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    for fe, fg in pairs(game.Players.LocalPlayer.Character.Raw:GetDescendants()) do
      if fg:IsA("Motor6D") and fg.Parent.Name ~= "HumanoidRootPart" and fg.Name ~= "Neck" then
        Instance.new("Attachment").Parent = fg.Part0
        Instance.new("Attachment").Parent = fg.Part1
        Instance.new("BallSocketConstraint").Attachment1, Instance.new("BallSocketConstraint").Attachment0, Instance.new("BallSocketConstraint").Parent = Instance.new("Attachment"), Instance.new("Attachment"), fg.Parent
        Instance.new("Attachment").CFrame = fg.C0
        Instance.new("Attachment").CFrame = fg.C1
        Instance.new("BallSocketConstraint").LimitsEnabled = false
        Instance.new("BallSocketConstraint").TwistLimitsEnabled = false
        fg:Destroy()
      end
      game.Players.LocalPlayer.Character.Humanoid.RequiresNeck = false
    end
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Free Scripts"):NewSection("Free Scripts"):NewButton("Master of Elements", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    Player = game:GetService("Players").LocalPlayer
    Character = Player.Character.Raw
    hum = Character.Humanoid
    LeftArm = Character["Left Arm"]
    LeftLeg = Character["Left Leg"]
    RightArm = Character["Right Arm"]
    RightLeg = Character["Right Leg"]
    Root = Character.HumanoidRootPart
    Head = Character.Head
    Torso = Character.Torso
    Neck = Torso.Neck
    attacking = false
    laughing = false
    running = false
    touchedistrue = false
    throw1 = true
    throw2 = false
    downpress = false
    id = 2435339444
    taim = nil
    change = 0
    ws = 90
    avatarstate = false
    hpheight = 5
    appi = false
    dontforgetthisbool = false
    ravagewind = false
    fireball1 = true
    firsttimewtr = false
    nottouched = false
    nottouched2 = false
    fireball2 = false
    breakwaterm = false
    tauntdebounce = false
    allowlev = true
    position = nil
    spwt = false
    MseGuide = true
    tornadobounce = false
    bbv = false
    levitate = false
    firsttime = false
    apocalypse = false
    powvol = 0
    waterp = false
    spinwater = false
    settime = 0
    waterz = false
    winddashing = false
    bluetotem = false
    browntotem = false
    redtotem = false
    whitetotem = false
    sine = 0
    t = 0
    dgs = 75
    mouse = Player:GetMouse()
    RunSrv = game:GetService("RunService")
    RenderStepped = game:GetService("RunService").RenderStepped
    removeuseless = game:GetService("Debris")
    grasstable = {}
    watertable = {}
    colortable = {
      "Bright yellow",
      "Bright orange"
    }
    colortable2 = {
      "Cyan",
      "Light Royal blue"
    }
    pitchtable = {
      1.1,
      1.05,
      1,
      0.95,
      0.9,
      0.95,
      0.8,
      0.75,
      1.001,
      1.2
    }
    gottalktable = {
      2489876894,
      2489876696,
      2489876326,
      2489876052,
      2489875728
    }
    got = #gottalktable
    gottalktable2 = {
      2492598999,
      2492599159,
      2492599503,
      2492599303,
      2492599663,
      2492599795,
      2492599925,
      2492600097,
      2492600455,
      2492600258
    }
    got2 = #gottalktable2
    randompitch = #pitchtable
    colors = #colortable
    colors2 = #colortable2
    screenGui = Instance.new("ScreenGui")
    screenGui.Parent = script.Parent
    Instance.new("ManualWeld").Parent = Head
    Instance.new("ManualWeld").Part0 = Head
    Instance.new("ManualWeld").Part1 = Head
    Instance.new("ManualWeld").C0 = CFrame.new(0, -1.5, 0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0))
    Instance.new("ManualWeld").Parent = Root
    Instance.new("ManualWeld").Part0 = Torso
    Instance.new("ManualWeld").C0 = CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0))
    Instance.new("ManualWeld").Parent = Root
    Instance.new("ManualWeld").Part0 = Root
    Instance.new("ManualWeld").Part1 = Torso
    Instance.new("ManualWeld").C0 = CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0))
    Instance.new("ManualWeld").Parent = RightArm
    Instance.new("ManualWeld").Part0 = RightArm
    Instance.new("ManualWeld").Part1 = Torso
    Instance.new("ManualWeld").C0 = CFrame.new(-1.5, 0, 0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0))
    Instance.new("ManualWeld").Parent = LeftArm
    Instance.new("ManualWeld").Part0 = LeftArm
    Instance.new("ManualWeld").Part1 = Torso
    Instance.new("ManualWeld").C0 = CFrame.new(1.5, 0, 0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0))
    Instance.new("ManualWeld").Parent = RightLeg
    Instance.new("ManualWeld").Part0 = RightLeg
    Instance.new("ManualWeld").Part1 = Torso
    Instance.new("ManualWeld").C0 = CFrame.new(-0.5, 2, 0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0))
    Instance.new("ManualWeld").Parent = LeftLeg
    Instance.new("ManualWeld").Part0 = LeftLeg
    Instance.new("ManualWeld").Part1 = Torso
    Instance.new("ManualWeld").C0 = CFrame.new(0.5, 2, 0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0))
    function MAKETRAIL(a, b, c, d, e)
      a = a
      A = Instance.new("Attachment", a)
      A.Position = b
      A.Name = "A"
      B = Instance.new("Attachment", a)
      B.Position = c
      B.Name = "B"
      tr1 = Instance.new("Trail", a)
      tr1.Attachment0 = A
      tr1.Attachment1 = B
      tr1.Enabled = true
      tr1.Lifetime = d
      tr1.TextureMode = "Static"
      tr1.LightInfluence = 0
      tr1.Color = e
      tr1.Transparency = NumberSequence.new(0, 1)
    end
    coroutine.wrap(function()
      while wait() do
        if allowlev then
          hum.HipHeight = hpheight
        end
        hum.WalkSpeed = ws
        LeftArm.BrickColor = BrickColor.new("Really black")
        RightArm.BrickColor = BrickColor.new("Really black")
        Head.BrickColor = BrickColor.new("Really black")
      end
    end)()
    godmode = coroutine.wrap(function()
      for fd, fe in pairs(Character:GetChildren()) do
        if fe:IsA("BasePart") and fe ~= Root then
          fe.Anchored = false
        end
        while true do
          hum.MaxHealth = math.huge
          wait(1E-07)
          hum.Health = math.huge
          wait()
        end
      end
    end)
    godmode()
    ff = Instance.new("ForceField", Character)
    ff.Visible = false
    coroutine.wrap(function()
      for fd, fe in pairs(Character:GetChildren()) do
        if fe.Name == "Animate" then
          fe:Remove()
        end
      end
    end)()
    function damagealll(a, b)
      a = a
      return
    end
    ArtificialHB = Instance.new("BindableEvent", script)
    ArtificialHB.Name = "Heartbeat"
    script:WaitForChild("Heartbeat")
    frame = 0.0166666666666667
    tf = 0
    allowframeloss = false
    tossremainder = false
    lastframe = tick()
    script.Heartbeat:Fire()
    game:GetService("RunService").Heartbeat:connect(function(a, b)
      a = a
      tf = tf + a
      if tf >= frame then
        if allowframeloss then
          script.Heartbeat:Fire()
          lastframe = tick()
        else
          for fg = 1, math.floor(tf / frame) do
            script.Heartbeat:Fire()
          end
          lastframe = tick()
        end
        if tossremainder then
          tf = 0
        else
          tf = tf - frame * math.floor(tf / frame)
        end
      end
    end)
    function swait(a)
      a = a
      if a ~= 0 then
      end
      if a == nil then
        game:service("RunService").Stepped:wait(0)
      else
        for fe = 0, a do
          game:service("RunService").Stepped:wait(0)
        end
      end
    end
    doomtheme = Instance.new("Sound", Torso)
    doomtheme.Volume = 3
    doomtheme.Name = "doomtheme"
    doomtheme.Looped = true
    doomtheme.SoundId = "rbxassetid://" .. id
    doomtheme:Play()
    Powerup = Instance.new("Sound", Torso)
    Powerup.Volume = powvol
    Powerup.SoundId = "rbxassetid://2492215919"
    Powerup.Name = "powerup"
    Powerup:Play()
    Powerup.Looped = true
    Torso.ChildRemoved:connect(function(a)
      a = a
      if a.Name == "doomtheme" then
        doomtheme = Instance.new("Sound", Torso)
        if avatarstate then
          doomtheme.Volume = 6
        else
          doomtheme.Volume = 3
        end
        doomtheme.Name = "doomtheme"
        doomtheme.Looped = true
        if avatarstate then
          doomtheme.SoundId = "rbxassetid://2497727458"
        else
          doomtheme.SoundId = "rbxassetid://" .. id
        end
        doomtheme:Play()
      end
    end)
    coroutine.wrap(function()
      while wait() do
        pcall(function()
          Powerup.Volume = powvol
        end)
      end
    end)()
    Torso.ChildRemoved:connect(function(a)
      a = a
      if a.Name == "powerup" then
        Powerup = Instance.new("Sound", Torso)
        Powerup.Volume = powvol
        Powerup.SoundId = "rbxassetid://2492215919"
        Powerup.Name = "powerup"
        Powerup:Play()
        Powerup.Looped = true
      end
    end)
    function SOUND(a, b, c, d, e)
      a = a
      so = Instance.new("Sound")
      so.Parent = a
      so.SoundId = "rbxassetid://" .. b
      so.Volume = c
      so.Looped = d
      so:Play()
      removeuseless:AddItem(so, e)
    end
    mouse.KeyDown:connect(function(a)
      a = a
      a = a:lower()
      if a == "m" then
        if debounce then
          return
        end
        debounce = true
        attacking = true
        allowlev = false
        dontforgetthisbool = true
        coroutine.wrap(function()
          while dontforgetthisbool do
            va.C0 = va.C0:lerp(CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(0 - 0 * math.sin(sine / 12)), math.rad(0), math.rad(0)), 0.1)
            vb.C0 = vb.C0:lerp(CFrame.new(0.7, 1.705, -0.2) * CFrame.Angles(math.rad(-10), math.rad(0), math.rad(75 + 1 * math.sin(sine / 12))), 0.1)
            vc.C0 = vc.C0:lerp(CFrame.new(-0.7, 1.705, -0.2) * CFrame.Angles(math.rad(-10), math.rad(0), math.rad(-75 - 1 * math.sin(sine / 12))), 0.1)
            vd.C0 = vd.C0:lerp(CFrame.new(-0.7, 1.8, 0) * CFrame.Angles(math.rad(3), math.rad(0), math.rad(10 + 2 * math.sin(sine / 12))), 0.1)
            ve.C0 = ve.C0:lerp(CFrame.new(0.7, 1.8, 0) * CFrame.Angles(math.rad(-3), math.rad(0), math.rad(-10 - 2 * math.sin(sine / 12))), 0.1)
            swait()
          end
        end)()
        craterloc = Instance.new("Part", Torso)
        craterloc.Size = Vector3.new(1, 1, 1)
        craterloc.Transparency = 0
        craterloc.Anchored = false
        craterloc.CanCollide = false
        craterlocweld = vg(craterloc, levitatewave)
        bnmv = 0
        for fe = 1, 75 do
          bnmv = bnmv + 15
          grassblocks = Instance.new("Part", Torso)
          grassblocks.Size = Vector3.new(1, 1, 1)
          grassblocks.Material = "Grass"
          grassblocks.Anchored = false
          grassblocks.Transparency = 0
          grassblocks.CanCollide = false
          grassblocks.Name = "nme"
          grassblockswld = vg(grassblocks, craterloc)
          grassblockswld.C0 = CFrame.new(-15, 0, 0) * CFrame.Angles(math.rad(0), math.rad(bnmv), 0)
          removeuseless:AddItem(grassblocks, 25)
          crater2 = Instance.new("Part", Torso)
          crater2.CFrame = grassblocks.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)))
          crater2.Size = Vector3.new(6.5, 6.5, 6.5)
          crater2.Anchored = true
          crater2.Name = "cr2"
          crater2.CanCollide = false
          crater2.Transparency = 1
          crater2.Material = "Grass"
          crater2.BrickColor = BrickColor.new("Bright green")
          grassblockswld:Remove()
        end
        grassblockswld:Remove()
        for fe, fg in pairs(Torso:GetChildren()) do
          if fg.Name == "nme" then
            fg.Anchored = true
          end
        end
        coroutine.wrap(function()
          for fd = 1, 100 do
            swait()
            for fj, fk in pairs(Torso:GetChildren()) do
              if fk.Name == "ele" then
                fk.Transparency = fk.Transparency + 0.05
              end
            end
          end
        end)()
        elesize = 0.1
        coroutine.wrap(function()
          for fd = 1, 10 do
            shockwef = Instance.new("Part", Torso)
            shockwef.Anchored = true
            shockwef.CanCollide = false
            shockwef.Size = Vector3.new(4, 4, 4)
            shockwef.CFrame = Root.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)))
            shockwef.BrickColor = BrickColor.new("White")
            shockwef.Transparency = 0.5
            shockwef.Material = "Neon"
            shockwef.Name = "corodaad"
            removeuseless:AddItem(shockwef, 5)
            for fj, fk in pairs(Torso:GetChildren()) do
              if fk.Name == "corodaad" then
                fk.Size = fk.Size + Vector3.new(2, 2, 2)
                fk.Transparency = fk.Transparency + 0.05
              end
            end
            swait()
          end
          for fd = 1, 25 do
            for fj, fk in pairs(Torso:GetChildren()) do
              if fk.Name == "corodaad" then
                fk.Size = fk.Size + Vector3.new(2, 2, 2)
                fk.Transparency = fk.Transparency + 0.05
              end
            end
            swait()
          end
        end)()
        for fe = 1, 100 do
          elesize = elesize + 0.25
          for fk, fl in pairs(Torso:GetChildren()) do
            if fl.Name == "nme" then
              elementblock = Instance.new("Part", Torso)
              elementblock.Size = Vector3.new(3.5 + elesize, 3.5 + elesize, 3.5 + elesize)
              elementblock.Transparency = 0
              elementblock.Anchored = true
              elementblock.CanCollide = false
              elementblock.CFrame = fl.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)))
              elementblock.Material = "Grass"
              elementblock.BrickColor = BrickColor.new("Bright green")
              elementblock.Name = "ele"
              removeuseless:AddItem(elementblock, 1.5)
              craterswoo = fl
              fl.CFrame = fl.CFrame * CFrame.new(2, 0, 2)
            end
          end
          swait()
        end
        for fe, fg in pairs(Torso:GetChildren()) do
          if fg.Name == "nme" then
            fg:Remove()
          end
        end
        for fe, fg in pairs(Torso:GetChildren()) do
          if fg.Name == "cr2" then
            fg:Remove()
          end
        end
        craterloc:Remove()
        craterloc = Instance.new("Part", Torso)
        craterloc.Size = Vector3.new(1, 1, 1)
        craterloc.Transparency = 0
        craterloc.Anchored = false
        craterloc.CanCollide = false
        craterlocweld = vg(craterloc, levitatewave)
        bnmv = 0
        for fe = 1, 75 do
          bnmv = bnmv + 15
          grassblocks = Instance.new("Part", Torso)
          grassblocks.Size = Vector3.new(1, 1, 1)
          grassblocks.Material = "Grass"
          grassblocks.Anchored = false
          grassblocks.Transparency = 0
          grassblocks.CanCollide = false
          grassblocks.Name = "nme"
          grassblockswld = vg(grassblocks, craterloc)
          grassblockswld.C0 = CFrame.new(-15, 0, 0) * CFrame.Angles(math.rad(0), math.rad(bnmv), 0)
          removeuseless:AddItem(grassblocks, 25)
          crater2 = Instance.new("Part", Torso)
          crater2.CFrame = grassblocks.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)))
          crater2.Size = Vector3.new(6.5, 6.5, 6.5)
          crater2.Anchored = true
          crater2.Name = "cr2"
          crater2.CanCollide = false
          crater2.Transparency = 1
          crater2.Material = "Grass"
          crater2.BrickColor = BrickColor.new("Cyan")
          grassblockswld:Remove()
        end
        grassblockswld:Remove()
        for fe, fg in pairs(Torso:GetChildren()) do
          if fg.Name == "nme" then
            fg.Anchored = true
          end
        end
        coroutine.wrap(function()
          for fd = 1, 100 do
            swait()
            for fj, fk in pairs(Torso:GetChildren()) do
              if fk.Name == "ele" then
                fk.Transparency = fk.Transparency + 0.05
              end
            end
          end
        end)()
        elesize = 0.1
        coroutine.wrap(function()
          for fd = 1, 10 do
            shockwef = Instance.new("Part", Torso)
            shockwef.Anchored = true
            shockwef.CanCollide = false
            shockwef.Size = Vector3.new(4, 4, 4)
            shockwef.CFrame = Root.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)))
            shockwef.BrickColor = BrickColor.new("White")
            shockwef.Transparency = 0.5
            shockwef.Material = "Neon"
            shockwef.Name = "corodaad"
            removeuseless:AddItem(shockwef, 5)
            for fj, fk in pairs(Torso:GetChildren()) do
              if fk.Name == "corodaad" then
                fk.Size = fk.Size + Vector3.new(2, 2, 2)
                fk.Transparency = fk.Transparency + 0.05
              end
            end
            swait()
          end
          for fd = 1, 25 do
            for fj, fk in pairs(Torso:GetChildren()) do
              if fk.Name == "corodaad" then
                fk.Size = fk.Size + Vector3.new(2, 2, 2)
                fk.Transparency = fk.Transparency + 0.05
              end
            end
            swait()
          end
        end)()
        for fe = 1, 100 do
          elesize = elesize + 0.25
          for fk, fl in pairs(Torso:GetChildren()) do
            if fl.Name == "nme" then
              colors = colortable[math.random(1, #colortable)]
              elementblock = Instance.new("Part", Torso)
              elementblock.Size = Vector3.new(3.5 + elesize, 3.5 + elesize, 3.5 + elesize)
              elementblock.Transparency = 0.5
              elementblock.Anchored = true
              elementblock.CanCollide = false
              elementblock.Material = "Neon"
              elementblock.CFrame = fl.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)))
              elementblock.BrickColor = BrickColor.new(colors)
              elementblock.Name = "ele"
              removeuseless:AddItem(elementblock, 1.5)
              craterswoo = fl
              fl.CFrame = fl.CFrame * CFrame.new(2, 0, 2)
            end
          end
          swait()
        end
        for fe, fg in pairs(Torso:GetChildren()) do
          if fg.Name == "nme" then
            fg:Remove()
          end
        end
        for fe, fg in pairs(Torso:GetChildren()) do
          if fg.Name == "cr2" then
            fg:Remove()
          end
        end
        craterloc:Remove()
        craterloc = Instance.new("Part", Torso)
        craterloc.Size = Vector3.new(1, 1, 1)
        craterloc.Transparency = 0
        craterloc.Anchored = false
        craterloc.CanCollide = false
        craterlocweld = vg(craterloc, levitatewave)
        bnmv = 0
        for fe = 1, 75 do
          bnmv = bnmv + 15
          grassblocks = Instance.new("Part", Torso)
          grassblocks.Size = Vector3.new(1, 1, 1)
          grassblocks.Material = "Grass"
          grassblocks.Anchored = false
          grassblocks.Transparency = 0
          grassblocks.CanCollide = false
          grassblocks.Name = "nme"
          grassblockswld = vg(grassblocks, craterloc)
          grassblockswld.C0 = CFrame.new(-15, 0, 0) * CFrame.Angles(math.rad(0), math.rad(bnmv), 0)
          removeuseless:AddItem(grassblocks, 25)
          crater2 = Instance.new("Part", Torso)
          crater2.CFrame = grassblocks.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)))
          crater2.Size = Vector3.new(6.5, 6.5, 6.5)
          crater2.Anchored = true
          crater2.Name = "cr2"
          crater2.CanCollide = false
          crater2.Transparency = 1
          crater2.Material = "Grass"
          crater2.BrickColor = BrickColor.new("Cyan")
          grassblockswld:Remove()
        end
        grassblockswld:Remove()
        for fe, fg in pairs(Torso:GetChildren()) do
          if fg.Name == "nme" then
            fg.Anchored = true
          end
        end
        coroutine.wrap(function()
          for fd = 1, 100 do
            swait()
            for fj, fk in pairs(Torso:GetChildren()) do
              if fk.Name == "ele" then
                fk.Transparency = fk.Transparency + 0.05
              end
            end
          end
        end)()
        elesize = 0.1
        coroutine.wrap(function()
          for fd = 1, 10 do
            shockwef = Instance.new("Part", Torso)
            shockwef.Anchored = true
            shockwef.CanCollide = false
            shockwef.Size = Vector3.new(4, 4, 4)
            shockwef.CFrame = Root.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)))
            shockwef.BrickColor = BrickColor.new("White")
            shockwef.Transparency = 0.5
            shockwef.Material = "Neon"
            shockwef.Name = "corodaad"
            removeuseless:AddItem(shockwef, 5)
            for fj, fk in pairs(Torso:GetChildren()) do
              if fk.Name == "corodaad" then
                fk.Size = fk.Size + Vector3.new(2, 2, 2)
                fk.Transparency = fk.Transparency + 0.05
              end
            end
            swait()
          end
          for fd = 1, 25 do
            for fj, fk in pairs(Torso:GetChildren()) do
              if fk.Name == "corodaad" then
                fk.Size = fk.Size + Vector3.new(2, 2, 2)
                fk.Transparency = fk.Transparency + 0.05
              end
            end
            swait()
          end
        end)()
        for fe = 1, 100 do
          elesize = elesize + 0.25
          for fk, fl in pairs(Torso:GetChildren()) do
            if fl.Name == "nme" then
              colors2 = colortable2[math.random(1, #colortable2)]
              elementblock = Instance.new("Part", Torso)
              elementblock.Size = Vector3.new(3.5 + elesize, 3.5 + elesize, 3.5 + elesize)
              elementblock.Transparency = 0.5
              elementblock.Anchored = true
              elementblock.CanCollide = false
              elementblock.Material = "Neon"
              elementblock.CFrame = fl.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)))
              elementblock.BrickColor = BrickColor.new(colors2)
              elementblock.Name = "ele"
              removeuseless:AddItem(elementblock, 1.5)
              craterswoo = fl
              fl.CFrame = fl.CFrame * CFrame.new(2, 0, 2)
            end
          end
          swait()
        end
        for fe, fg in pairs(Torso:GetChildren()) do
          if fg.Name == "nme" then
            fg:Remove()
          end
        end
        for fe, fg in pairs(Torso:GetChildren()) do
          if fg.Name == "cr2" then
            fg:Remove()
          end
        end
        craterloc:Remove()
        craterloc = Instance.new("Part", Torso)
        craterloc.Size = Vector3.new(1, 1, 1)
        craterloc.Transparency = 0
        craterloc.Anchored = false
        craterloc.CanCollide = false
        craterlocweld = vg(craterloc, levitatewave)
        bnmv = 0
        for fe = 1, 100 do
          bnmv = bnmv + 15
          grassblocks = Instance.new("Part", Torso)
          grassblocks.Size = Vector3.new(1, 1, 1)
          grassblocks.Material = "Grass"
          grassblocks.Anchored = false
          grassblocks.Transparency = 0
          grassblocks.CanCollide = false
          grassblocks.Name = "nme"
          grassblockswld = vg(grassblocks, craterloc)
          grassblockswld.C0 = CFrame.new(-15, 0, 0) * CFrame.Angles(math.rad(0), math.rad(bnmv), 0)
          removeuseless:AddItem(grassblocks, 25)
          crater2 = Instance.new("Part", Torso)
          crater2.CFrame = grassblocks.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)))
          crater2.Size = Vector3.new(6.5, 6.5, 6.5)
          crater2.Anchored = true
          crater2.Name = "cr2"
          crater2.CanCollide = false
          crater2.Transparency = 1
          crater2.Material = "Neon"
          crater2.BrickColor = BrickColor.new("White")
          grassblockswld:Remove()
        end
        grassblockswld:Remove()
        for fe, fg in pairs(Torso:GetChildren()) do
          if fg.Name == "nme" then
            fg.Anchored = true
          end
        end
        coroutine.wrap(function()
          for fd = 1, 100 do
            swait()
            for fj, fk in pairs(Torso:GetChildren()) do
              if fk.Name == "ele" then
                fk.Transparency = fk.Transparency + 0.05
              end
            end
          end
        end)()
        elesize = 0.1
        coroutine.wrap(function()
          for fd = 1, 10 do
            shockwef = Instance.new("Part", Torso)
            shockwef.Anchored = true
            shockwef.CanCollide = false
            shockwef.Size = Vector3.new(4, 4, 4)
            shockwef.CFrame = Root.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)))
            shockwef.BrickColor = BrickColor.new("White")
            shockwef.Transparency = 0.5
            shockwef.Material = "Neon"
            shockwef.Name = "corodaad"
            removeuseless:AddItem(shockwef, 5)
            for fj, fk in pairs(Torso:GetChildren()) do
              if fk.Name == "corodaad" then
                fk.Size = fk.Size + Vector3.new(2, 2, 2)
                fk.Transparency = fk.Transparency + 0.05
              end
            end
            swait()
          end
          for fd = 1, 25 do
            for fj, fk in pairs(Torso:GetChildren()) do
              if fk.Name == "corodaad" then
                fk.Size = fk.Size + Vector3.new(2, 2, 2)
                fk.Transparency = fk.Transparency + 0.05
              end
            end
            swait()
          end
        end)()
        for fe = 1, 75 do
          elesize = elesize + 0.25
          for fk, fl in pairs(Torso:GetChildren()) do
            if fl.Name == "nme" then
              elementblock = Instance.new("Part", Torso)
              elementblock.Size = Vector3.new(3.5 + elesize, 3.5 + elesize, 3.5 + elesize)
              elementblock.Transparency = 0.5
              elementblock.Anchored = true
              elementblock.CanCollide = false
              elementblock.Material = "Neon"
              elementblock.CFrame = fl.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)))
              elementblock.BrickColor = BrickColor.new("White")
              elementblock.Name = "ele"
              removeuseless:AddItem(elementblock, 1.5)
              craterswoo = fl
              fl.CFrame = fl.CFrame * CFrame.new(2, 0, 2)
            end
          end
          swait()
        end
        for fe, fg in pairs(Torso:GetChildren()) do
          if fg.Name == "nme" then
            fg:Remove()
          end
        end
        for fe, fg in pairs(Torso:GetChildren()) do
          if fg.Name == "cr2" then
            fg:Remove()
          end
        end
        craterloc:Remove()
        for fe = 1, 2 do
          swait()
          craterloc = Instance.new("Part", Torso)
          craterloc.Size = Vector3.new(1, 1, 1)
          craterloc.Transparency = 0
          craterloc.Anchored = false
          craterloc.CanCollide = false
          craterlocweld = vg(craterloc, levitatewave)
          bnmv = 0
          for fk = 1, 40 do
            bnmv = bnmv + 15
            grassblocks = Instance.new("Part", Torso)
            grassblocks.Size = Vector3.new(1, 1, 1)
            grassblocks.Material = "Grass"
            grassblocks.Anchored = false
            grassblocks.Transparency = 0
            grassblocks.CanCollide = false
            grassblocks.Name = "nme"
            grassblockswld = vg(grassblocks, craterloc)
            grassblockswld.C0 = CFrame.new(-15, 0, 0) * CFrame.Angles(math.rad(0), math.rad(bnmv), 0)
            removeuseless:AddItem(grassblocks, 25)
            crater2 = Instance.new("Part", Torso)
            crater2.CFrame = grassblocks.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)))
            crater2.Size = Vector3.new(6.5, 6.5, 6.5)
            crater2.Anchored = true
            crater2.Name = "cr2"
            crater2.CanCollide = false
            crater2.Transparency = 1
            crater2.Material = "Grass"
            crater2.BrickColor = BrickColor.new("Bright green")
            grassblockswld:Remove()
          end
          grassblockswld:Remove()
          for fk, fl in pairs(Torso:GetChildren()) do
            if fl.Name == "nme" then
              fl.Anchored = true
            end
          end
          coroutine.wrap(function()
            for fd = 1, 100 do
              swait()
              for fj, fk in pairs(Torso:GetChildren()) do
                if fk.Name == "ele" then
                  fk.Transparency = fk.Transparency + 0.025
                end
              end
            end
          end)()
          elesize = 0.1
          coroutine.wrap(function()
            for fd = 1, 10 do
              shockwef = Instance.new("Part", Torso)
              shockwef.Anchored = true
              shockwef.CanCollide = false
              shockwef.Size = Vector3.new(4, 4, 4)
              shockwef.CFrame = Root.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)))
              shockwef.BrickColor = BrickColor.new("White")
              shockwef.Transparency = 0.5
              shockwef.Material = "Neon"
              shockwef.Name = "corodaad"
              removeuseless:AddItem(shockwef, 5)
              for fj, fk in pairs(Torso:GetChildren()) do
                if fk.Name == "corodaad" then
                  fk.Size = fk.Size + Vector3.new(5, 5, 5)
                  fk.Transparency = fk.Transparency + 0.05
                end
              end
              swait()
            end
            for fd = 1, 25 do
              for fj, fk in pairs(Torso:GetChildren()) do
                if fk.Name == "corodaad" then
                  fk.Size = fk.Size + Vector3.new(5, 5, 5)
                  fk.Transparency = fk.Transparency + 0.05
                end
              end
              swait()
            end
          end)()
          for fk = 1, 40 do
            elesize = elesize + 1
            for fp, fn in pairs(Torso:GetChildren()) do
              if fn.Name == "nme" then
                elementblock = Instance.new("Part", Torso)
                elementblock.Size = Vector3.new(3.5 + elesize, 3.5 + elesize, 3.5 + elesize)
                elementblock.Transparency = 0
                elementblock.Anchored = true
                elementblock.CanCollide = false
                elementblock.CFrame = fn.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)))
                elementblock.Material = "Grass"
                elementblock.BrickColor = BrickColor.new("Bright green")
                elementblock.Name = "ele"
                removeuseless:AddItem(elementblock, 3)
                craterswoo = fn
                fn.CFrame = fn.CFrame * CFrame.new(3, 0, 12)
              end
            end
            swait()
          end
          for fk, fl in pairs(Torso:GetChildren()) do
            if fl.Name == "nme" then
              fl:Remove()
            end
          end
          for fk, fl in pairs(Torso:GetChildren()) do
            if fl.Name == "cr2" then
              fl:Remove()
            end
          end
          craterloc:Remove()
          craterloc = Instance.new("Part", Torso)
          craterloc.Size = Vector3.new(1, 1, 1)
          craterloc.Transparency = 0
          craterloc.Anchored = false
          craterloc.CanCollide = false
          craterlocweld = vg(craterloc, levitatewave)
          bnmv = 0
          for fk = 1, 40 do
            bnmv = bnmv + 15
            grassblocks = Instance.new("Part", Torso)
            grassblocks.Size = Vector3.new(1, 1, 1)
            grassblocks.Material = "Grass"
            grassblocks.Anchored = false
            grassblocks.Transparency = 0
            grassblocks.CanCollide = false
            grassblocks.Name = "nme"
            grassblockswld = vg(grassblocks, craterloc)
            grassblockswld.C0 = CFrame.new(-15, 0, 0) * CFrame.Angles(math.rad(0), math.rad(bnmv), 0)
            removeuseless:AddItem(grassblocks, 25)
            crater2 = Instance.new("Part", Torso)
            crater2.CFrame = grassblocks.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)))
            crater2.Size = Vector3.new(6.5, 6.5, 6.5)
            crater2.Anchored = true
            crater2.Name = "cr2"
            crater2.CanCollide = false
            crater2.Transparency = 1
            crater2.Material = "Grass"
            crater2.BrickColor = BrickColor.new("Cyan")
            grassblockswld:Remove()
          end
          grassblockswld:Remove()
          for fk, fl in pairs(Torso:GetChildren()) do
            if fl.Name == "nme" then
              fl.Anchored = true
            end
          end
          coroutine.wrap(function()
            for fd = 1, 100 do
              swait()
              for fj, fk in pairs(Torso:GetChildren()) do
                if fk.Name == "ele" then
                  fk.Transparency = fk.Transparency + 0.025
                end
              end
            end
          end)()
          elesize = 0.1
          coroutine.wrap(function()
            for fd = 1, 10 do
              shockwef = Instance.new("Part", Torso)
              shockwef.Anchored = true
              shockwef.CanCollide = false
              shockwef.Size = Vector3.new(4, 4, 4)
              shockwef.CFrame = Root.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)))
              shockwef.BrickColor = BrickColor.new("White")
              shockwef.Transparency = 0.5
              shockwef.Material = "Neon"
              shockwef.Name = "corodaad"
              removeuseless:AddItem(shockwef, 5)
              for fj, fk in pairs(Torso:GetChildren()) do
                if fk.Name == "corodaad" then
                  fk.Size = fk.Size + Vector3.new(5, 5, 5)
                  fk.Transparency = fk.Transparency + 0.05
                end
              end
              swait()
            end
            for fd = 1, 25 do
              for fj, fk in pairs(Torso:GetChildren()) do
                if fk.Name == "corodaad" then
                  fk.Size = fk.Size + Vector3.new(5, 5, 5)
                  fk.Transparency = fk.Transparency + 0.05
                end
              end
              swait()
            end
          end)()
          for fk = 1, 40 do
            elesize = elesize + 1
            for fp, fn in pairs(Torso:GetChildren()) do
              if fn.Name == "nme" then
                colors = colortable[math.random(1, #colortable)]
                elementblock = Instance.new("Part", Torso)
                elementblock.Size = Vector3.new(3.5 + elesize, 3.5 + elesize, 3.5 + elesize)
                elementblock.Transparency = 0.5
                elementblock.Anchored = true
                elementblock.CanCollide = false
                elementblock.Material = "Neon"
                elementblock.CFrame = fn.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)))
                elementblock.BrickColor = BrickColor.new(colors)
                elementblock.Name = "ele"
                removeuseless:AddItem(elementblock, 3)
                craterswoo = fn
                fn.CFrame = fn.CFrame * CFrame.new(3, 0, 12)
              end
            end
            swait()
          end
          for fk, fl in pairs(Torso:GetChildren()) do
            if fl.Name == "nme" then
              fl:Remove()
            end
          end
          for fk, fl in pairs(Torso:GetChildren()) do
            if fl.Name == "cr2" then
              fl:Remove()
            end
          end
          craterloc:Remove()
          craterloc = Instance.new("Part", Torso)
          craterloc.Size = Vector3.new(1, 1, 1)
          craterloc.Transparency = 0
          craterloc.Anchored = false
          craterloc.CanCollide = false
          craterlocweld = vg(craterloc, levitatewave)
          bnmv = 0
          for fk = 1, 40 do
            bnmv = bnmv + 15
            grassblocks = Instance.new("Part", Torso)
            grassblocks.Size = Vector3.new(1, 1, 1)
            grassblocks.Material = "Grass"
            grassblocks.Anchored = false
            grassblocks.Transparency = 0
            grassblocks.CanCollide = false
            grassblocks.Name = "nme"
            grassblockswld = vg(grassblocks, craterloc)
            grassblockswld.C0 = CFrame.new(-15, 0, 0) * CFrame.Angles(math.rad(0), math.rad(bnmv), 0)
            removeuseless:AddItem(grassblocks, 25)
            crater2 = Instance.new("Part", Torso)
            crater2.CFrame = grassblocks.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)))
            crater2.Size = Vector3.new(6.5, 6.5, 6.5)
            crater2.Anchored = true
            crater2.Name = "cr2"
            crater2.CanCollide = false
            crater2.Transparency = 1
            crater2.Material = "Grass"
            crater2.BrickColor = BrickColor.new("Cyan")
            grassblockswld:Remove()
          end
          grassblockswld:Remove()
          for fk, fl in pairs(Torso:GetChildren()) do
            if fl.Name == "nme" then
              fl.Anchored = true
            end
          end
          coroutine.wrap(function()
            for fd = 1, 100 do
              swait()
              for fj, fk in pairs(Torso:GetChildren()) do
                if fk.Name == "ele" then
                  fk.Transparency = fk.Transparency + 0.025
                end
              end
            end
          end)()
          elesize = 0.1
          coroutine.wrap(function()
            for fd = 1, 10 do
              shockwef = Instance.new("Part", Torso)
              shockwef.Anchored = true
              shockwef.CanCollide = false
              shockwef.Size = Vector3.new(4, 4, 4)
              shockwef.CFrame = Root.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)))
              shockwef.BrickColor = BrickColor.new("White")
              shockwef.Transparency = 0.5
              shockwef.Material = "Neon"
              shockwef.Name = "corodaad"
              removeuseless:AddItem(shockwef, 5)
              for fj, fk in pairs(Torso:GetChildren()) do
                if fk.Name == "corodaad" then
                  fk.Size = fk.Size + Vector3.new(5, 5, 5)
                  fk.Transparency = fk.Transparency + 0.05
                end
              end
              swait()
            end
            for fd = 1, 25 do
              for fj, fk in pairs(Torso:GetChildren()) do
                if fk.Name == "corodaad" then
                  fk.Size = fk.Size + Vector3.new(5, 5, 5)
                  fk.Transparency = fk.Transparency + 0.05
                end
              end
              swait()
            end
          end)()
          for fk = 1, 40 do
            elesize = elesize + 1
            for fp, fn in pairs(Torso:GetChildren()) do
              if fn.Name == "nme" then
                colors2 = colortable2[math.random(1, #colortable2)]
                elementblock = Instance.new("Part", Torso)
                elementblock.Size = Vector3.new(3.5 + elesize, 3.5 + elesize, 3.5 + elesize)
                elementblock.Transparency = 0.5
                elementblock.Anchored = true
                elementblock.CanCollide = false
                elementblock.Material = "Neon"
                elementblock.CFrame = fn.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)))
                elementblock.BrickColor = BrickColor.new(colors2)
                elementblock.Name = "ele"
                removeuseless:AddItem(elementblock, 3)
                craterswoo = fn
                fn.CFrame = fn.CFrame * CFrame.new(3, 0, 12)
              end
            end
            swait()
          end
          for fk, fl in pairs(Torso:GetChildren()) do
            if fl.Name == "nme" then
              fl:Remove()
            end
          end
          for fk, fl in pairs(Torso:GetChildren()) do
            if fl.Name == "cr2" then
              fl:Remove()
            end
          end
          craterloc:Remove()
          craterloc = Instance.new("Part", Torso)
          craterloc.Size = Vector3.new(1, 1, 1)
          craterloc.Transparency = 0
          craterloc.Anchored = false
          craterloc.CanCollide = false
          craterlocweld = vg(craterloc, levitatewave)
          bnmv = 0
          for fk = 1, 40 do
            bnmv = bnmv + 15
            grassblocks = Instance.new("Part", Torso)
            grassblocks.Size = Vector3.new(1, 1, 1)
            grassblocks.Material = "Grass"
            grassblocks.Anchored = false
            grassblocks.Transparency = 0
            grassblocks.CanCollide = false
            grassblocks.Name = "nme"
            grassblockswld = vg(grassblocks, craterloc)
            grassblockswld.C0 = CFrame.new(-15, 0, 0) * CFrame.Angles(math.rad(0), math.rad(bnmv), 0)
            removeuseless:AddItem(grassblocks, 25)
            crater2 = Instance.new("Part", Torso)
            crater2.CFrame = grassblocks.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)))
            crater2.Size = Vector3.new(6.5, 6.5, 6.5)
            crater2.Anchored = true
            crater2.Name = "cr2"
            crater2.CanCollide = false
            crater2.Transparency = 1
            crater2.Material = "Neon"
            crater2.BrickColor = BrickColor.new("White")
            grassblockswld:Remove()
          end
          grassblockswld:Remove()
          for fk, fl in pairs(Torso:GetChildren()) do
            if fl.Name == "nme" then
              fl.Anchored = true
            end
          end
          coroutine.wrap(function()
            for fd = 1, 100 do
              swait()
              for fj, fk in pairs(Torso:GetChildren()) do
                if fk.Name == "ele" then
                  fk.Transparency = fk.Transparency + 0.025
                end
              end
            end
          end)()
          elesize = 0.1
          coroutine.wrap(function()
            for fd = 1, 10 do
              shockwef = Instance.new("Part", Torso)
              shockwef.Anchored = true
              shockwef.CanCollide = false
              shockwef.Size = Vector3.new(4, 4, 4)
              shockwef.CFrame = Root.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)))
              shockwef.BrickColor = BrickColor.new("White")
              shockwef.Transparency = 0.5
              shockwef.Material = "Neon"
              shockwef.Name = "corodaad"
              removeuseless:AddItem(shockwef, 5)
              for fj, fk in pairs(Torso:GetChildren()) do
                if fk.Name == "corodaad" then
                  fk.Size = fk.Size + Vector3.new(5, 5, 5)
                  fk.Transparency = fk.Transparency + 0.05
                end
              end
              swait()
            end
            for fd = 1, 25 do
              for fj, fk in pairs(Torso:GetChildren()) do
                if fk.Name == "corodaad" then
                  fk.Size = fk.Size + Vector3.new(5, 5, 5)
                  fk.Transparency = fk.Transparency + 0.05
                end
              end
              swait()
            end
          end)()
          for fk = 1, 40 do
            elesize = elesize + 1
            for fp, fn in pairs(Torso:GetChildren()) do
              if fn.Name == "nme" then
                elementblock = Instance.new("Part", Torso)
                elementblock.Size = Vector3.new(3.5 + elesize, 3.5 + elesize, 3.5 + elesize)
                elementblock.Transparency = 0.5
                elementblock.Anchored = true
                elementblock.CanCollide = false
                elementblock.Material = "Neon"
                elementblock.CFrame = fn.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)))
                elementblock.BrickColor = BrickColor.new("White")
                elementblock.Name = "ele"
                removeuseless:AddItem(elementblock, 3)
                craterswoo = fn
                fn.CFrame = fn.CFrame * CFrame.new(3, 0, 12)
              end
            end
            swait()
          end
          for fk, fl in pairs(Torso:GetChildren()) do
            if fl.Name == "nme" then
              fl:Remove()
            end
          end
          for fk, fl in pairs(Torso:GetChildren()) do
            if fl.Name == "cr2" then
              fl:Remove()
            end
          end
          craterloc:Remove()
        end
      elseif a == "n" then
        if debounce then
          return
        end
        if bluetotem then
          return
        end
        if whitetotem then
          return
        end
        if redtotem then
          return
        end
        if browntotem then
          debounce = true
          particlemiter1.Enabled = false
          particlemiter2.Enabled = false
          particlemiter4.Enabled = false
          particlemiter5.Enabled = false
          particlemiter6.Enabled = false
          particlemiter7.Enabled = false
          SOUND(locbrick, 1119859528, 8, false, 5)
          coroutine.wrap(function()
            for fd = 1, 35 do
              swait()
              powvol = powvol - 0.075
              for fj, fk in pairs(Torso:GetChildren()) do
                if fk.Name == "crator" then
                  fk.Transparency = fk.Transparency + 0.05
                end
              end
            end
            for fd, fe in pairs(Torso:GetChildren()) do
              if fe.Name == "crator" then
                fe:Remove()
              end
            end
          end)()
          for fe = 1, 5 do
            rockttm.CFrame = rockttm.CFrame * CFrame.new(0, 0.25, 0)
            swait()
          end
          for fe = 1, 15 do
            rockttm.CFrame = rockttm.CFrame * CFrame.new(0, -2, 0)
            swait()
          end
          browntotem = false
          rockttm:Remove()
          debounce = false
        else
          ws = 16
          browntotem = true
          debounce = true
          attacking = true
          got = gottalktable[math.random(1, #gottalktable)]
          smh = Instance.new("Sound", Head)
          if avatarstate then
            smh.Volume = 10
          else
            smh.Volume = 8
          end
          smh.SoundId = "http://www.roblox.com/asset/?id=" .. got
          smh.Looped = false
          if avatarstate then
            smh.Pitch = 0.85
          else
            smh.Pitch = 1
          end
          smh:Play()
          removeuseless:AddItem(smh, 5)
          g1 = Instance.new("BodyGyro", Root)
          g1.D = 175
          g1.P = 20000
          g1.MaxTorque = Vector3.new(0, 9000, 0)
          for fe = 1, 15 do
            g1.CFrame = g1.CFrame:lerp(CFrame.new(Root.Position, mouse.Hit.p), 0.2)
            va.C0 = va.C0:Lerp(CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(-30), 0, 0), 0.4)
            vc.C0 = vc.C0:lerp(CFrame.new(-1.3, 0, 0.2) * CFrame.Angles(math.rad(30), math.rad(30), 0), 0.4)
            vb.C0 = vb.C0:lerp(CFrame.new(1.3, 0, 0.2) * CFrame.Angles(math.rad(30), math.rad(-30), 0), 0.4)
            swait()
          end
          particlecolor = ColorSequence.new(BrickColor.new("Earth green").Color)
          particlemiter1.Enabled = true
          particlemiter2.Enabled = true
          particlemiter4.Enabled = true
          particlemiter5.Enabled = true
          particlemiter6.Enabled = true
          particlemiter7.Enabled = true
          rockttm = Instance.new("Part", Torso)
          rockttm.Size = Vector3.new(0.5, 0.5, 0.5)
          rockttm.Material = "Neon"
          rockttm.BrickColor = BrickColor.new("Earth green")
          rockttm.Transparency = 0.5
          rockttm.Anchored = true
          rockttm.CanCollide = false
          rockttm.CFrame = CFrame.new(mouse.Hit.p) * CFrame.new(0, -15, 0) * CFrame.Angles(math.rad(math.random(-4, 4)), math.rad(math.random(-4, 4)), math.rad(math.random(-4, 4)))
          ttmmeshrock = Instance.new("SpecialMesh", rockttm)
          ttmmeshrock.Scale = Vector3.new(0.1, 0.1, 0.1)
          ttmmeshrock.MeshId = "rbxassetid://574506349"
          coroutine.wrap(function()
            locbrick = Instance.new("Part", Torso)
            locbrick.Size = Vector3.new(1, 1, 1)
            locbrick.Transparency = 1
            locbrick.CFrame = CFrame.new(mouse.Hit.p)
            locbrick.CanCollide = false
            locbrick.Anchored = true
            locbrick2 = Instance.new("Part", workspace)
            locbrick2.Size = Vector3.new(1, 1, 1)
            locbrick2.Transparency = 1
            locbrick2.CFrame = CFrame.new(mouse.Hit.p)
            locbrick2.CanCollide = false
            locbrick2weld = va(locbrick2, locbrick)
            zxp2 = 0
            for fd = 1, 65 do
              zxp2 = zxp2 + 5
              crater = Instance.new("Part", Torso)
              crater.BrickColor = BrickColor.new("Earth green")
              crater.Size = Vector3.new(5, 5, 5)
              crater.Transparency = 1
              crater.Name = "crator"
              craterweld = va(crater, locbrick2)
              craterweld.C0 = craterweld.C0 * CFrame.new(2.5, 0, 0) * CFrame.Angles(math.rad(0), math.rad(zxp2), math.rad(0))
              crater2 = Instance.new("Part", Torso)
              crater2.CFrame = crater.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)))
              crater2.Size = Vector3.new(4, 4, 4)
              crater2.Anchored = true
              crater2.Material = "Grass"
              crater2.Name = "crator"
              crater2.BrickColor = BrickColor.new("Bright green")
            end
          end)()
          shockwave = Instance.new("Part", Torso)
          shockwave.Size = Vector3.new(1, 1, 1)
          shockwave.CanCollide = false
          shockwave.Anchored = true
          shockwave.Transparency = 0.5
          shockwave.BrickColor = BrickColor.new("White")
          shockwave.CFrame = CFrame.new(mouse.Hit.p)
          shockwavemesh = Instance.new("SpecialMesh", shockwave)
          shockwavemesh.Scale = Vector3.new(7, 3, 7)
          shockwavemesh.MeshId = "rbxassetid://20329976"
          removeuseless:AddItem(shockwave, 4)
          shockwave2 = Instance.new("Part", Torso)
          shockwave2.Size = Vector3.new(1, 1, 1)
          shockwave2.CanCollide = false
          shockwave2.Anchored = true
          shockwave2.Transparency = 0.5
          shockwave2.BrickColor = BrickColor.new("White")
          shockwave2.CFrame = CFrame.new(mouse.Hit.p)
          shockwavemesh2 = Instance.new("SpecialMesh", shockwave2)
          shockwavemesh2.Scale = Vector3.new(5, 3, 5)
          shockwavemesh2.MeshId = "rbxassetid://20329976"
          removeuseless:AddItem(shockwave2, 4)
          coroutine.wrap(function()
            for fd = 1, 30 do
              swait()
              shockwave.CFrame = shockwave.CFrame * CFrame.Angles(math.rad(0), math.rad(15), 0)
              shockwave2.CFrame = shockwave2.CFrame * CFrame.Angles(math.rad(0), math.rad(-8), 0)
              shockwave.Transparency = shockwave.Transparency + 0.025
              shockwave2.Transparency = shockwave2.Transparency + 0.025
              shockwavemesh2.Scale = shockwavemesh2.Scale + Vector3.new(3, 0.5, 3)
              shockwavemesh.Scale = shockwavemesh.Scale + Vector3.new(4, 0.6, 4)
            end
          end)()
          SOUND(locbrick, 1119859528, 8, false, 5)
          coroutine.wrap(function()
            for fd = 1, 10 do
              rockttm.CFrame = rockttm.CFrame * CFrame.new(0, 2, 0)
              swait()
            end
            for fd = 1, 8 do
              rockttm.CFrame = rockttm.CFrame * CFrame.new(0, 0.25, 0)
              swait()
            end
            for fd = 1, 5 do
              rockttm.CFrame = rockttm.CFrame * CFrame.new(0, -0.25, 0)
              swait()
            end
          end)()
          for fe = 1, 35 do
            powvol = powvol + 0.075
            va.C0 = va.C0:Lerp(CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(30), 0, 0), 0.4)
            vb.C0 = vb.C0:lerp(CFrame.new(1.3, 1, 0.35) * CFrame.Angles(math.rad(-110), math.rad(-12), math.rad(1)), 0.4)
            vc.C0 = vc.C0:lerp(CFrame.new(-1.3, 1, 0.35) * CFrame.Angles(math.rad(-110), math.rad(12), math.rad(-1)), 0.4)
            swait()
          end
          removeuseless:AddItem(g1, 0.001)
          debounce = false
          attacking = false
          ws = 90
        end
      elseif a == "b" then
        if debounce then
          return
        end
        if bluetotem then
          return
        end
        if browntotem then
          return
        end
        if redtotem then
          return
        end
        if whitetotem then
          debounce = true
          particlemiter1.Enabled = false
          particlemiter2.Enabled = false
          particlemiter4.Enabled = false
          particlemiter5.Enabled = false
          particlemiter6.Enabled = false
          particlemiter7.Enabled = false
          SOUND(locbrick, 1119859528, 8, false, 5)
          coroutine.wrap(function()
            for fd = 1, 35 do
              swait()
              powvol = powvol - 0.075
              for fj, fk in pairs(Torso:GetChildren()) do
                if fk.Name == "crator" then
                  fk.Transparency = fk.Transparency + 0.05
                end
              end
            end
            for fd, fe in pairs(Torso:GetChildren()) do
              if fe.Name == "crator" then
                fe:Remove()
              end
            end
          end)()
          for fe = 1, 5 do
            rockttm.CFrame = rockttm.CFrame * CFrame.new(0, 0.25, 0)
            swait()
          end
          for fe = 1, 15 do
            rockttm.CFrame = rockttm.CFrame * CFrame.new(0, -2, 0)
            swait()
          end
          whitetotem = false
          rockttm:Remove()
          debounce = false
        else
          ws = 16
          whitetotem = true
          debounce = true
          attacking = true
          got = gottalktable[math.random(1, #gottalktable)]
          smh = Instance.new("Sound", Head)
          if avatarstate then
            smh.Volume = 10
          else
            smh.Volume = 8
          end
          smh.SoundId = "http://www.roblox.com/asset/?id=" .. got
          smh.Looped = false
          if avatarstate then
            smh.Pitch = 0.85
          else
            smh.Pitch = 1
          end
          smh:Play()
          removeuseless:AddItem(smh, 5)
          g1 = Instance.new("BodyGyro", Root)
          g1.D = 175
          g1.P = 20000
          g1.MaxTorque = Vector3.new(0, 9000, 0)
          for fe = 1, 15 do
            g1.CFrame = g1.CFrame:lerp(CFrame.new(Root.Position, mouse.Hit.p), 0.2)
            va.C0 = va.C0:Lerp(CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(-30), 0, 0), 0.4)
            vc.C0 = vc.C0:lerp(CFrame.new(-1.3, 0, 0.2) * CFrame.Angles(math.rad(30), math.rad(30), 0), 0.4)
            vb.C0 = vb.C0:lerp(CFrame.new(1.3, 0, 0.2) * CFrame.Angles(math.rad(30), math.rad(-30), 0), 0.4)
            swait()
          end
          particlecolor = ColorSequence.new(BrickColor.new("White").Color)
          particlemiter1.Enabled = true
          particlemiter2.Enabled = true
          particlemiter4.Enabled = true
          particlemiter5.Enabled = true
          particlemiter6.Enabled = true
          particlemiter7.Enabled = true
          rockttm = Instance.new("Part", Torso)
          rockttm.Size = Vector3.new(0.5, 0.5, 0.5)
          rockttm.Material = "Neon"
          rockttm.BrickColor = BrickColor.new("White")
          rockttm.Transparency = 0.5
          rockttm.Anchored = true
          rockttm.CanCollide = false
          rockttm.CFrame = CFrame.new(mouse.Hit.p) * CFrame.new(0, -15, 0) * CFrame.Angles(math.rad(math.random(-4, 4)), math.rad(math.random(-4, 4)), math.rad(math.random(-4, 4)))
          ttmmeshrock = Instance.new("SpecialMesh", rockttm)
          ttmmeshrock.Scale = Vector3.new(0.1, 0.1, 0.1)
          ttmmeshrock.MeshId = "rbxassetid://574506349"
          coroutine.wrap(function()
            locbrick = Instance.new("Part", Torso)
            locbrick.Size = Vector3.new(1, 1, 1)
            locbrick.Transparency = 1
            locbrick.CFrame = CFrame.new(mouse.Hit.p)
            locbrick.CanCollide = false
            locbrick.Anchored = true
            locbrick2 = Instance.new("Part", workspace)
            locbrick2.Size = Vector3.new(1, 1, 1)
            locbrick2.Transparency = 1
            locbrick2.CFrame = CFrame.new(mouse.Hit.p)
            locbrick2.CanCollide = false
            locbrick2weld = va(locbrick2, locbrick)
            zxp2 = 0
            for fd = 1, 65 do
              zxp2 = zxp2 + 5
              crater = Instance.new("Part", Torso)
              crater.BrickColor = BrickColor.new("White")
              crater.Size = Vector3.new(5, 5, 5)
              crater.Transparency = 1
              crater.Name = "crator"
              craterweld = va(crater, locbrick2)
              craterweld.C0 = craterweld.C0 * CFrame.new(2.5, 0, 0) * CFrame.Angles(math.rad(0), math.rad(zxp2), math.rad(0))
              crater2 = Instance.new("Part", Torso)
              crater2.CFrame = crater.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)))
              crater2.Size = Vector3.new(4, 4, 4)
              crater2.Anchored = true
              crater2.Material = "Grass"
              crater2.Name = "crator"
              crater2.BrickColor = BrickColor.new("Bright green")
            end
          end)()
          shockwave = Instance.new("Part", Torso)
          shockwave.Size = Vector3.new(1, 1, 1)
          shockwave.CanCollide = false
          shockwave.Anchored = true
          shockwave.Transparency = 0.5
          shockwave.BrickColor = BrickColor.new("White")
          shockwave.CFrame = CFrame.new(mouse.Hit.p)
          shockwavemesh = Instance.new("SpecialMesh", shockwave)
          shockwavemesh.Scale = Vector3.new(7, 3, 7)
          shockwavemesh.MeshId = "rbxassetid://20329976"
          removeuseless:AddItem(shockwave, 4)
          shockwave2 = Instance.new("Part", Torso)
          shockwave2.Size = Vector3.new(1, 1, 1)
          shockwave2.CanCollide = false
          shockwave2.Anchored = true
          shockwave2.Transparency = 0.5
          shockwave2.BrickColor = BrickColor.new("White")
          shockwave2.CFrame = CFrame.new(mouse.Hit.p)
          shockwavemesh2 = Instance.new("SpecialMesh", shockwave2)
          shockwavemesh2.Scale = Vector3.new(5, 3, 5)
          shockwavemesh2.MeshId = "rbxassetid://20329976"
          removeuseless:AddItem(shockwave2, 4)
          coroutine.wrap(function()
            for fd = 1, 30 do
              swait()
              shockwave.CFrame = shockwave.CFrame * CFrame.Angles(math.rad(0), math.rad(15), 0)
              shockwave2.CFrame = shockwave2.CFrame * CFrame.Angles(math.rad(0), math.rad(-8), 0)
              shockwave.Transparency = shockwave.Transparency + 0.025
              shockwave2.Transparency = shockwave2.Transparency + 0.025
              shockwavemesh2.Scale = shockwavemesh2.Scale + Vector3.new(3, 0.5, 3)
              shockwavemesh.Scale = shockwavemesh.Scale + Vector3.new(4, 0.6, 4)
            end
          end)()
          SOUND(locbrick, 1119859528, 8, false, 5)
          coroutine.wrap(function()
            for fd = 1, 10 do
              rockttm.CFrame = rockttm.CFrame * CFrame.new(0, 2, 0)
              swait()
            end
            for fd = 1, 8 do
              rockttm.CFrame = rockttm.CFrame * CFrame.new(0, 0.25, 0)
              swait()
            end
            for fd = 1, 5 do
              rockttm.CFrame = rockttm.CFrame * CFrame.new(0, -0.25, 0)
              swait()
            end
          end)()
          for fe = 1, 35 do
            powvol = powvol + 0.075
            va.C0 = va.C0:Lerp(CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(30), 0, 0), 0.4)
            vb.C0 = vb.C0:lerp(CFrame.new(1.3, 1, 0.35) * CFrame.Angles(math.rad(-110), math.rad(-12), math.rad(1)), 0.4)
            vc.C0 = vc.C0:lerp(CFrame.new(-1.3, 1, 0.35) * CFrame.Angles(math.rad(-110), math.rad(12), math.rad(-1)), 0.4)
            swait()
          end
          removeuseless:AddItem(g1, 0.001)
          debounce = false
          attacking = false
          ws = 90
          do return end
          if a == "v" then
            if debounce then
              return
            end
            if bluetotem then
              return
            end
            if browntotem then
              return
            end
            if whitetotem then
              return
            end
            if redtotem then
              debounce = true
              particlemiter1.Enabled = false
              particlemiter2.Enabled = false
              particlemiter4.Enabled = false
              particlemiter5.Enabled = false
              particlemiter6.Enabled = false
              particlemiter7.Enabled = false
              SOUND(locbrick, 1119859528, 8, false, 5)
              coroutine.wrap(function()
                for fd = 1, 35 do
                  swait()
                  powvol = powvol - 0.075
                  for fj, fk in pairs(Torso:GetChildren()) do
                    if fk.Name == "crator" then
                      fk.Transparency = fk.Transparency + 0.05
                    end
                  end
                end
                for fd, fe in pairs(Torso:GetChildren()) do
                  if fe.Name == "crator" then
                    fe:Remove()
                  end
                end
              end)()
              for fe = 1, 5 do
                rockttm.CFrame = rockttm.CFrame * CFrame.new(0, 0.25, 0)
                swait()
              end
              for fe = 1, 15 do
                rockttm.CFrame = rockttm.CFrame * CFrame.new(0, -2, 0)
                swait()
              end
              redtotem = false
              rockttm:Remove()
              debounce = false
            else
              ws = 16
              redtotem = true
              debounce = true
              attacking = true
              got = gottalktable[math.random(1, #gottalktable)]
              smh = Instance.new("Sound", Head)
              if avatarstate then
                smh.Volume = 10
              else
                smh.Volume = 8
              end
              smh.SoundId = "http://www.roblox.com/asset/?id=" .. got
              smh.Looped = false
              if avatarstate then
                smh.Pitch = 0.85
              else
                smh.Pitch = 1
              end
              smh:Play()
              removeuseless:AddItem(smh, 10)
              g1 = Instance.new("BodyGyro", Root)
              g1.D = 175
              g1.P = 20000
              g1.MaxTorque = Vector3.new(0, 9000, 0)
              for fe = 1, 15 do
                g1.CFrame = g1.CFrame:lerp(CFrame.new(Root.Position, mouse.Hit.p), 0.2)
                va.C0 = va.C0:Lerp(CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(-30), 0, 0), 0.4)
                vc.C0 = vc.C0:lerp(CFrame.new(-1.3, 0, 0.2) * CFrame.Angles(math.rad(30), math.rad(30), 0), 0.4)
                vb.C0 = vb.C0:lerp(CFrame.new(1.3, 0, 0.2) * CFrame.Angles(math.rad(30), math.rad(-30), 0), 0.4)
                swait()
              end
              particlecolor = ColorSequence.new(BrickColor.new("Bright yellow").Color)
              particlemiter1.Enabled = true
              particlemiter2.Enabled = true
              particlemiter4.Enabled = true
              particlemiter5.Enabled = true
              particlemiter6.Enabled = true
              particlemiter7.Enabled = true
              rockttm = Instance.new("Part", Torso)
              rockttm.Size = Vector3.new(0.5, 0.5, 0.5)
              rockttm.Material = "Neon"
              rockttm.BrickColor = BrickColor.new("Bright yellow")
              rockttm.Transparency = 0.5
              rockttm.Anchored = true
              rockttm.CanCollide = false
              rockttm.CFrame = CFrame.new(mouse.Hit.p) * CFrame.new(0, -15, 0) * CFrame.Angles(math.rad(math.random(-4, 4)), math.rad(math.random(-4, 4)), math.rad(math.random(-4, 4)))
              ttmmeshrock = Instance.new("SpecialMesh", rockttm)
              ttmmeshrock.Scale = Vector3.new(0.1, 0.1, 0.1)
              ttmmeshrock.MeshId = "rbxassetid://574506349"
              coroutine.wrap(function()
                locbrick = Instance.new("Part", Torso)
                locbrick.Size = Vector3.new(1, 1, 1)
                locbrick.Transparency = 1
                locbrick.CFrame = CFrame.new(mouse.Hit.p)
                locbrick.CanCollide = false
                locbrick.Anchored = true
                locbrick2 = Instance.new("Part", workspace)
                locbrick2.Size = Vector3.new(1, 1, 1)
                locbrick2.Transparency = 1
                locbrick2.CFrame = CFrame.new(mouse.Hit.p)
                locbrick2.CanCollide = false
                locbrick2weld = va(locbrick2, locbrick)
                zxp2 = 0
                for fd = 1, 65 do
                  zxp2 = zxp2 + 5
                  crater = Instance.new("Part", Torso)
                  crater.BrickColor = BrickColor.new("Bright yellow")
                  crater.Size = Vector3.new(5, 5, 5)
                  crater.Transparency = 1
                  crater.Name = "crator"
                  craterweld = va(crater, locbrick2)
                  craterweld.C0 = craterweld.C0 * CFrame.new(2.5, 0, 0) * CFrame.Angles(math.rad(0), math.rad(zxp2), math.rad(0))
                  crater2 = Instance.new("Part", Torso)
                  crater2.CFrame = crater.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)))
                  crater2.Size = Vector3.new(4, 4, 4)
                  crater2.Anchored = true
                  crater2.Material = "Grass"
                  crater2.Name = "crator"
                  crater2.BrickColor = BrickColor.new("Bright green")
                end
              end)()
              shockwave = Instance.new("Part", Torso)
              shockwave.Size = Vector3.new(1, 1, 1)
              shockwave.CanCollide = false
              shockwave.Anchored = true
              shockwave.Transparency = 0.5
              shockwave.BrickColor = BrickColor.new("White")
              shockwave.CFrame = CFrame.new(mouse.Hit.p)
              shockwavemesh = Instance.new("SpecialMesh", shockwave)
              shockwavemesh.Scale = Vector3.new(7, 3, 7)
              shockwavemesh.MeshId = "rbxassetid://20329976"
              removeuseless:AddItem(shockwave, 4)
              shockwave2 = Instance.new("Part", Torso)
              shockwave2.Size = Vector3.new(1, 1, 1)
              shockwave2.CanCollide = false
              shockwave2.Anchored = true
              shockwave2.Transparency = 0.5
              shockwave2.BrickColor = BrickColor.new("White")
              shockwave2.CFrame = CFrame.new(mouse.Hit.p)
              shockwavemesh2 = Instance.new("SpecialMesh", shockwave2)
              shockwavemesh2.Scale = Vector3.new(5, 3, 5)
              shockwavemesh2.MeshId = "rbxassetid://20329976"
              removeuseless:AddItem(shockwave2, 4)
              coroutine.wrap(function()
                for fd = 1, 30 do
                  swait()
                  shockwave.CFrame = shockwave.CFrame * CFrame.Angles(math.rad(0), math.rad(15), 0)
                  shockwave2.CFrame = shockwave2.CFrame * CFrame.Angles(math.rad(0), math.rad(-8), 0)
                  shockwave.Transparency = shockwave.Transparency + 0.025
                  shockwave2.Transparency = shockwave2.Transparency + 0.025
                  shockwavemesh2.Scale = shockwavemesh2.Scale + Vector3.new(3, 0.5, 3)
                  shockwavemesh.Scale = shockwavemesh.Scale + Vector3.new(4, 0.6, 4)
                end
              end)()
              SOUND(locbrick, 1119859528, 8, false, 5)
              coroutine.wrap(function()
                for fd = 1, 10 do
                  rockttm.CFrame = rockttm.CFrame * CFrame.new(0, 2, 0)
                  swait()
                end
                for fd = 1, 8 do
                  rockttm.CFrame = rockttm.CFrame * CFrame.new(0, 0.25, 0)
                  swait()
                end
                for fd = 1, 5 do
                  rockttm.CFrame = rockttm.CFrame * CFrame.new(0, -0.25, 0)
                  swait()
                end
              end)()
              for fe = 1, 35 do
                powvol = powvol + 0.075
                va.C0 = va.C0:Lerp(CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(30), 0, 0), 0.4)
                vb.C0 = vb.C0:lerp(CFrame.new(1.3, 1, 0.35) * CFrame.Angles(math.rad(-110), math.rad(-12), math.rad(1)), 0.4)
                vc.C0 = vc.C0:lerp(CFrame.new(-1.3, 1, 0.35) * CFrame.Angles(math.rad(-110), math.rad(12), math.rad(-1)), 0.4)
                swait()
              end
              removeuseless:AddItem(g1, 0.001)
              debounce = false
              attacking = false
              ws = 90
              do return end
              if a == "c" then
                if debounce then
                  return
                end
                if redtotem then
                  return
                end
                if browntotem then
                  return
                end
                if whitetotem then
                  return
                end
                if bluetotem then
                  debounce = true
                  particlemiter1.Enabled = false
                  particlemiter2.Enabled = false
                  particlemiter4.Enabled = false
                  particlemiter5.Enabled = false
                  particlemiter6.Enabled = false
                  particlemiter7.Enabled = false
                  SOUND(locbrick, 1119859528, 8, false, 5)
                  coroutine.wrap(function()
                    for fd = 1, 35 do
                      swait()
                      powvol = powvol - 0.075
                      for fj, fk in pairs(Torso:GetChildren()) do
                        if fk.Name == "crator" then
                          fk.Transparency = fk.Transparency + 0.05
                        end
                      end
                    end
                    for fd, fe in pairs(Torso:GetChildren()) do
                      if fe.Name == "crator" then
                        fe:Remove()
                      end
                    end
                  end)()
                  for fe = 1, 5 do
                    rockttm.CFrame = rockttm.CFrame * CFrame.new(0, 0.25, 0)
                    swait()
                  end
                  for fe = 1, 15 do
                    rockttm.CFrame = rockttm.CFrame * CFrame.new(0, -2, 0)
                    swait()
                  end
                  bluetotem = false
                  rockttm:Remove()
                  debounce = false
                else
                  ws = 16
                  bluetotem = true
                  debounce = true
                  attacking = true
                  got = gottalktable[math.random(1, #gottalktable)]
                  smh = Instance.new("Sound", Head)
                  if avatarstate then
                    smh.Volume = 10
                  else
                    smh.Volume = 8
                  end
                  smh.SoundId = "http://www.roblox.com/asset/?id=" .. got
                  smh.Looped = false
                  if avatarstate then
                    smh.Pitch = 0.85
                  else
                    smh.Pitch = 1
                  end
                  smh:Play()
                  removeuseless:AddItem(smh, 5)
                  g1 = Instance.new("BodyGyro", Root)
                  g1.D = 175
                  g1.P = 20000
                  g1.MaxTorque = Vector3.new(0, 9000, 0)
                  for fe = 1, 15 do
                    g1.CFrame = g1.CFrame:lerp(CFrame.new(Root.Position, mouse.Hit.p), 0.2)
                    va.C0 = va.C0:Lerp(CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(-30), 0, 0), 0.4)
                    vc.C0 = vc.C0:lerp(CFrame.new(-1.3, 0, 0.2) * CFrame.Angles(math.rad(30), math.rad(30), 0), 0.4)
                    vb.C0 = vb.C0:lerp(CFrame.new(1.3, 0, 0.2) * CFrame.Angles(math.rad(30), math.rad(-30), 0), 0.4)
                    swait()
                  end
                  particlecolor = ColorSequence.new(Color3.new(0, 5, 255))
                  particlemiter1.Enabled = true
                  particlemiter2.Enabled = true
                  particlemiter4.Enabled = true
                  particlemiter5.Enabled = true
                  particlemiter6.Enabled = true
                  particlemiter7.Enabled = true
                  rockttm = Instance.new("Part", Torso)
                  rockttm.Size = Vector3.new(0.5, 0.5, 0.5)
                  rockttm.Material = "Neon"
                  rockttm.BrickColor = BrickColor.new("Cyan")
                  rockttm.Transparency = 0.5
                  rockttm.Anchored = true
                  rockttm.CanCollide = false
                  rockttm.CFrame = CFrame.new(mouse.Hit.p) * CFrame.new(0, -15, 0) * CFrame.Angles(math.rad(math.random(-4, 4)), math.rad(math.random(-4, 4)), math.rad(math.random(-4, 4)))
                  ttmmeshrock = Instance.new("SpecialMesh", rockttm)
                  ttmmeshrock.Scale = Vector3.new(0.1, 0.1, 0.1)
                  ttmmeshrock.MeshId = "rbxassetid://574506349"
                  coroutine.wrap(function()
                    locbrick = Instance.new("Part", Torso)
                    locbrick.Size = Vector3.new(1, 1, 1)
                    locbrick.Transparency = 1
                    locbrick.CFrame = CFrame.new(mouse.Hit.p)
                    locbrick.CanCollide = false
                    locbrick.Anchored = true
                    locbrick2 = Instance.new("Part", workspace)
                    locbrick2.Size = Vector3.new(1, 1, 1)
                    locbrick2.Transparency = 1
                    locbrick2.CFrame = CFrame.new(mouse.Hit.p)
                    locbrick2.CanCollide = false
                    locbrick2weld = va(locbrick2, locbrick)
                    zxp2 = 0
                    for fd = 1, 65 do
                      zxp2 = zxp2 + 5
                      crater = Instance.new("Part", Torso)
                      crater.BrickColor = BrickColor.new("Cyan")
                      crater.Size = Vector3.new(5, 5, 5)
                      crater.Transparency = 1
                      crater.Name = "crator"
                      craterweld = va(crater, locbrick2)
                      craterweld.C0 = craterweld.C0 * CFrame.new(2.5, 0, 0) * CFrame.Angles(math.rad(0), math.rad(zxp2), math.rad(0))
                      crater2 = Instance.new("Part", Torso)
                      crater2.CFrame = crater.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)))
                      crater2.Size = Vector3.new(4, 4, 4)
                      crater2.Anchored = true
                      crater2.Material = "Grass"
                      crater2.Name = "crator"
                      crater2.BrickColor = BrickColor.new("Bright green")
                    end
                  end)()
                  shockwave = Instance.new("Part", Torso)
                  shockwave.Size = Vector3.new(1, 1, 1)
                  shockwave.CanCollide = false
                  shockwave.Anchored = true
                  shockwave.Transparency = 0.5
                  shockwave.BrickColor = BrickColor.new("White")
                  shockwave.CFrame = CFrame.new(mouse.Hit.p)
                  shockwavemesh = Instance.new("SpecialMesh", shockwave)
                  shockwavemesh.Scale = Vector3.new(7, 3, 7)
                  shockwavemesh.MeshId = "rbxassetid://20329976"
                  removeuseless:AddItem(shockwave, 4)
                  shockwave2 = Instance.new("Part", Torso)
                  shockwave2.Size = Vector3.new(1, 1, 1)
                  shockwave2.CanCollide = false
                  shockwave2.Anchored = true
                  shockwave2.Transparency = 0.5
                  shockwave2.BrickColor = BrickColor.new("White")
                  shockwave2.CFrame = CFrame.new(mouse.Hit.p)
                  shockwavemesh2 = Instance.new("SpecialMesh", shockwave2)
                  shockwavemesh2.Scale = Vector3.new(5, 3, 5)
                  shockwavemesh2.MeshId = "rbxassetid://20329976"
                  removeuseless:AddItem(shockwave2, 4)
                  coroutine.wrap(function()
                    for fd = 1, 30 do
                      swait()
                      shockwave.CFrame = shockwave.CFrame * CFrame.Angles(math.rad(0), math.rad(15), 0)
                      shockwave2.CFrame = shockwave2.CFrame * CFrame.Angles(math.rad(0), math.rad(-8), 0)
                      shockwave.Transparency = shockwave.Transparency + 0.025
                      shockwave2.Transparency = shockwave2.Transparency + 0.025
                      shockwavemesh2.Scale = shockwavemesh2.Scale + Vector3.new(3, 0.5, 3)
                      shockwavemesh.Scale = shockwavemesh.Scale + Vector3.new(4, 0.6, 4)
                    end
                  end)()
                  SOUND(locbrick, 1119859528, 8, false, 5)
                  coroutine.wrap(function()
                    for fd = 1, 10 do
                      rockttm.CFrame = rockttm.CFrame * CFrame.new(0, 2, 0)
                      swait()
                    end
                    for fd = 1, 8 do
                      rockttm.CFrame = rockttm.CFrame * CFrame.new(0, 0.25, 0)
                      swait()
                    end
                    for fd = 1, 5 do
                      rockttm.CFrame = rockttm.CFrame * CFrame.new(0, -0.25, 0)
                      swait()
                    end
                  end)()
                  for fe = 1, 35 do
                    powvol = powvol + 0.075
                    va.C0 = va.C0:Lerp(CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(30), 0, 0), 0.4)
                    vb.C0 = vb.C0:lerp(CFrame.new(1.3, 1, 0.35) * CFrame.Angles(math.rad(-110), math.rad(-12), math.rad(1)), 0.4)
                    vc.C0 = vc.C0:lerp(CFrame.new(-1.3, 1, 0.35) * CFrame.Angles(math.rad(-110), math.rad(12), math.rad(-1)), 0.4)
                    swait()
                  end
                  removeuseless:AddItem(g1, 0.001)
                  debounce = false
                  attacking = false
                  ws = 90
                  do return end
                  if a == "l" then
                    if debounce then
                      return
                    end
                    if tornadobounce then
                      return
                    end
                    tornadobounce = true
                    debounce = true
                    attacking = true
                    coroutine.wrap(function()
                      Instance.new("Part", Torso).Size = Vector3.new(10, 10, 10)
                      Instance.new("Part", Torso).CanCollide = false
                      Instance.new("Part", Torso).Transparency = 1
                      Instance.new("Part", Torso).CFrame = CFrame.new(mouse.Hit.p)
                      Instance.new("Part", Torso).Anchored = true
                      Instance.new("Part", Torso).BrickColor = BrickColor.new("White")
                      Instance.new("Part", Torso).Material = "Neon"
                      Instance.new("Part", Torso).Name = "tornblock"
                      tornsound = Instance.new("Sound", (Instance.new("Part", Torso)))
                      tornsound.Volume = 0
                      tornsound.SoundId = "rbxassetid://151051389"
                      tornsound:Play()
                      tornsound.Looped = true
                      wrn = Instance.new("Sound", workspace)
                      wrn.Volume = 1
                      wrn.SoundId = "rbxassetid://130767714"
                      wrn:Play()
                      Instance.new("Part", Torso).Size = Vector3.new(20, 20, 20)
                      Instance.new("Part", Torso).CanCollide = false
                      Instance.new("Part", Torso).Transparency = 1
                      Instance.new("Part", Torso).CFrame = CFrame.new(mouse.Hit.p) * CFrame.new(0, 12, 0)
                      Instance.new("Part", Torso).Anchored = true
                      Instance.new("Part", Torso).BrickColor = BrickColor.new("White")
                      Instance.new("Part", Torso).Material = "Neon"
                      Instance.new("Part", Torso).Name = "tornblock2"
                      Instance.new("Part", Torso).Size = Vector3.new(30, 30, 30)
                      Instance.new("Part", Torso).CanCollide = false
                      Instance.new("Part", Torso).Transparency = 1
                      Instance.new("Part", Torso).CFrame = CFrame.new(mouse.Hit.p) * CFrame.new(0, 24, 0)
                      Instance.new("Part", Torso).Anchored = true
                      Instance.new("Part", Torso).BrickColor = BrickColor.new("White")
                      Instance.new("Part", Torso).Material = "Neon"
                      Instance.new("Part", Torso).Name = "tornblock3"
                      Instance.new("Part", Torso).Size = Vector3.new(40, 40, 40)
                      Instance.new("Part", Torso).CanCollide = false
                      Instance.new("Part", Torso).Transparency = 1
                      Instance.new("Part", Torso).CFrame = CFrame.new(mouse.Hit.p) * CFrame.new(0, 36, 0)
                      Instance.new("Part", Torso).Anchored = true
                      Instance.new("Part", Torso).BrickColor = BrickColor.new("White")
                      Instance.new("Part", Torso).Material = "Neon"
                      Instance.new("Part", Torso).Name = "tornblock4"
                      Instance.new("Part", Torso).Size = Vector3.new(50, 50, 50)
                      Instance.new("Part", Torso).CanCollide = false
                      Instance.new("Part", Torso).Transparency = 1
                      Instance.new("Part", Torso).CFrame = CFrame.new(mouse.Hit.p) * CFrame.new(0, 48, 0)
                      Instance.new("Part", Torso).Anchored = true
                      Instance.new("Part", Torso).BrickColor = BrickColor.new("White")
                      Instance.new("Part", Torso).Material = "Neon"
                      Instance.new("Part", Torso).Name = "tornblock5"
                      Instance.new("Part", Torso).Size = Vector3.new(70, 70, 70)
                      Instance.new("Part", Torso).CanCollide = false
                      Instance.new("Part", Torso).Transparency = 1
                      Instance.new("Part", Torso).CFrame = CFrame.new(mouse.Hit.p) * CFrame.new(0, 80, 0)
                      Instance.new("Part", Torso).Anchored = true
                      Instance.new("Part", Torso).BrickColor = BrickColor.new("White")
                      Instance.new("Part", Torso).Material = "Neon"
                      Instance.new("Part", Torso).Name = "tornblock6"
                      Instance.new("Part", Torso).Size = Vector3.new(90, 90, 90)
                      Instance.new("Part", Torso).CanCollide = false
                      Instance.new("Part", Torso).Transparency = 1
                      Instance.new("Part", Torso).CFrame = CFrame.new(mouse.Hit.p) * CFrame.new(0, 150, 0)
                      Instance.new("Part", Torso).Anchored = true
                      Instance.new("Part", Torso).BrickColor = BrickColor.new("White")
                      Instance.new("Part", Torso).Material = "Neon"
                      Instance.new("Part", Torso).Name = "tornblock7"
                      Instance.new("Part", Torso).Size = Vector3.new(110, 110, 110)
                      Instance.new("Part", Torso).CanCollide = false
                      Instance.new("Part", Torso).Transparency = 1
                      Instance.new("Part", Torso).CFrame = CFrame.new(mouse.Hit.p) * CFrame.new(0, 220, 0)
                      Instance.new("Part", Torso).Anchored = true
                      Instance.new("Part", Torso).BrickColor = BrickColor.new("White")
                      Instance.new("Part", Torso).Material = "Neon"
                      Instance.new("Part", Torso).Name = "tornblock8"
                      wind = Instance.new("Part", Torso)
                      wind.Size = Vector3.new(0.5, 0.5, 0.5)
                      wind.Material = "Neon"
                      wind.BrickColor = BrickColor.new("Really white")
                      wind.Transparency = 1
                      wind.Anchored = true
                      wind.CanCollide = false
                      wind.CFrame = Instance.new("Part", Torso).CFrame * CFrame.new(0, 120, 0)
                      windMESH = Instance.new("SpecialMesh", wind)
                      windMESH.Scale = Vector3.new(40.5, 70.5, 40.5)
                      windMESH.MeshId = "rbxassetid://168892432"
                      wind2 = Instance.new("Part", Torso)
                      wind2.Size = Vector3.new(0.5, 0.5, 0.5)
                      wind2.Material = "Neon"
                      wind2.BrickColor = BrickColor.new("Really white")
                      wind2.Transparency = 1
                      wind2.Anchored = true
                      wind2.CanCollide = false
                      wind2.CFrame = Instance.new("Part", Torso).CFrame * CFrame.new(0, 120, 0)
                      windMESH2 = Instance.new("SpecialMesh", wind2)
                      windMESH2.Scale = Vector3.new(40.5, 70.5, 40.5)
                      windMESH2.MeshId = "rbxassetid://168892432"
                      wind3 = Instance.new("Part", Torso)
                      wind3.Size = Vector3.new(0.5, 0.5, 0.5)
                      wind3.Material = "Neon"
                      wind3.BrickColor = BrickColor.new("Really white")
                      wind3.Transparency = 1
                      wind3.Anchored = true
                      wind3.CanCollide = false
                      wind3.CFrame = Instance.new("Part", Torso).CFrame * CFrame.new(0, 160, 0)
                      windMESH3 = Instance.new("SpecialMesh", wind3)
                      windMESH3.Scale = Vector3.new(70.5, 100.5, 70.5)
                      windMESH3.MeshId = "rbxassetid://168892432"
                      wind4 = Instance.new("Part", Torso)
                      wind4.Size = Vector3.new(0.5, 0.5, 0.5)
                      wind4.Material = "Neon"
                      wind4.BrickColor = BrickColor.new("Really white")
                      wind4.Transparency = 1
                      wind4.Anchored = true
                      wind4.CanCollide = false
                      wind4.CFrame = Instance.new("Part", Torso).CFrame * CFrame.new(0, 120, 0)
                      windMESH4 = Instance.new("SpecialMesh", wind4)
                      windMESH4.Scale = Vector3.new(70.5, 100.5, 70.5)
                      windMESH4.MeshId = "rbxassetid://168892432"
                      coroutine.wrap(function()
                        for fd = 1, 20 do
                          tornsound.Volume = tornsound.Volume + 0.5
                          wind.Transparency = wind.Transparency - 0.002
                          wind2.Transparency = wind2.Transparency - 0.002
                          wind3.Transparency = wind3.Transparency - 0.001
                          wind4.Transparency = wind4.Transparency - 0.001
                          va.Transparency = va.Transparency - 0.025
                          vb.Transparency = vb.Transparency - 0.025
                          vc.Transparency = vc.Transparency - 0.025
                          vd.Transparency = vd.Transparency - 0.025
                          ve.Transparency = ve.Transparency - 0.025
                          vg.Transparency = vg.Transparency - 0.025
                          vh.Transparency = vh.Transparency - 0.025
                          vj.Transparency = vj.Transparency - 0.025
                          swait()
                        end
                      end)()
                      coroutine.wrap(function()
                        coroutine.wrap(function()
                          for fd = 1, 110 do
                            swait(10)
                            Hit = damagealll(52, va.Position)
                            for fj, fk in pairs(Hit) do
                              if whitetotem then
                              else
                                if avatarstate then
                                else
                                end
                              end
                              vel = Instance.new("BodyVelocity", fk:FindFirstChild("Torso") or fk:FindFirstChild("UpperTorso"))
                              vel.maxForce = Vector3.new(9999999999999, 9999999999999, 9999999999999)
                              torso = fk:FindFirstChild("Torso") or fk:FindFirstChild("UpperTorso")
                              vel.velocity = CFrame.new(torso.Position, va.Position).lookVector * 175
                              removeuseless:AddItem(vel, 0.1)
                            end
                          end
                        end)()
                        to3 = 0
                        to4 = 0
                        for fd = 1, 1200 do
                          to3 = to3 + 2
                          to4 = to4 - 2
                          Instance.new("Part", Torso).Size = Vector3.new(math.random(8, 11), math.random(8, 11), math.random(8, 11))
                          Instance.new("Part", Torso).Material = "Grass"
                          Instance.new("Part", Torso).CanCollide = false
                          Instance.new("Part", Torso).Anchored = true
                          Instance.new("Part", Torso).BrickColor = BrickColor.new("Bright green")
                          Instance.new("Part", Torso).CFrame = va.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)))
                          Instance.new("Part", Torso).Name = "grasssblockss"
                          removeuseless:AddItem(Instance.new("Part", Torso), 2)
                          Instance.new("Part", Torso).CanCollide = false
                          Instance.new("Part", Torso).Anchored = true
                          Instance.new("Part", Torso).BrickColor = BrickColor.new("White")
                          Instance.new("Part", Torso).Name = "sk"
                          Instance.new("Part", Torso).CFrame = va.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), 0, math.rad(math.random(-180, 180)))
                          Instance.new("SpecialMesh", (Instance.new("Part", Torso))).MeshId = "rbxassetid://662586858"
                          Instance.new("SpecialMesh", (Instance.new("Part", Torso))).Name = "wave"
                          Instance.new("SpecialMesh", (Instance.new("Part", Torso))).Scale = Vector3.new(0.04, 0.01, 0.04)
                          removeuseless:AddItem(Instance.new("Part", Torso), 2)
                          for fm, fo in pairs(Torso:GetDescendants()) do
                            if fo.Name == "wave" then
                              fo.Scale = fo.Scale + Vector3.new(0.05, 0, 0.05)
                              fo.Parent.Transparency = fo.Parent.Transparency + 0.05
                            end
                          end
                          for fm, fo in pairs(Torso:GetDescendants()) do
                            if fo.Name == "grasssblockss" then
                              fo.CFrame = fo.CFrame * CFrame.new(0, 4, 0)
                              fo.Transparency = fo.Transparency + 0.035
                            end
                          end
                          wind.CFrame = wind.CFrame * CFrame.Angles(0, math.rad(17), 0)
                          wind2.CFrame = wind2.CFrame * CFrame.Angles(0, math.rad(-17), 0)
                          wind3.CFrame = wind3.CFrame * CFrame.Angles(0, math.rad(12), 0)
                          wind4.CFrame = wind4.CFrame * CFrame.Angles(0, math.rad(-12), 0)
                          va.CFrame = va.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)))
                          vb.CFrame = vb.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)))
                          vc.CFrame = vc.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)))
                          vd.CFrame = vd.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)))
                          ve.CFrame = ve.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)))
                          vg.CFrame = vg.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)))
                          vh.CFrame = vh.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)))
                          vj.CFrame = vj.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)))
                          swait()
                        end
                        for fd = 1, 20 do
                          tornsound.Volume = tornsound.Volume - 0.5
                          for fj, fk in pairs(Torso:GetDescendants()) do
                            if fk.Name == "grasssblockss" then
                              fk.CFrame = fk.CFrame * CFrame.new(0, 4, 0)
                              fk.Transparency = fk.Transparency + 0.1
                            end
                          end
                          for fj, fk in pairs(Torso:GetDescendants()) do
                            if fk.Name == "wave" then
                              fk.Scale = fk.Scale + Vector3.new(0.05, 0, 0.05)
                              fk.Parent.Transparency = fk.Parent.Transparency + 0.1
                            end
                          end
                          wind.Transparency = wind.Transparency + 0.002
                          wind2.Transparency = wind2.Transparency + 0.002
                          wind3.Transparency = wind3.Transparency + 0.001
                          wind4.Transparency = wind4.Transparency + 0.001
                          va.Transparency = va.Transparency + 0.025
                          vb.Transparency = vb.Transparency + 0.025
                          vc.Transparency = vc.Transparency + 0.025
                          vd.Transparency = vd.Transparency + 0.025
                          ve.Transparency = ve.Transparency + 0.025
                          vg.Transparency = vg.Transparency + 0.025
                          vh.Transparency = vh.Transparency + 0.025
                          vj.Transparency = vj.Transparency + 0.025
                          swait()
                        end
                        wind:Remove()
                        wind2:Remove()
                        wind3:Remove()
                        wind4:Remove()
                        tornsound:Remove()
                        va:Remove()
                        vb:Remove()
                        vc:Remove()
                        vd:Remove()
                        ve:Remove()
                        vg:Remove()
                        vh:Remove()
                        vj:Remove()
                        tornadobounce = false
                      end)()
                    end)()
                    for fe = 1, 20 do
                      sk = Instance.new("Part", Torso)
                      sk.CanCollide = false
                      sk.Anchored = true
                      sk.BrickColor = BrickColor.new("White")
                      sk.Name = "sk"
                      sk.CFrame = Root.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), 0, math.rad(math.random(-180, 180)))
                      Instance.new("SpecialMesh", sk).MeshId = "rbxassetid://662586858"
                      Instance.new("SpecialMesh", sk).Name = "wave2"
                      Instance.new("SpecialMesh", sk).Scale = Vector3.new(0.02, 0.01, 0.02)
                      removeuseless:AddItem(sk, 2)
                    end
                    for fe = 1, 3 do
                      blastwave = Instance.new("Part", Torso)
                      blastwave.Size = Vector3.new(1, 1, 1)
                      blastwave.CanCollide = false
                      blastwave.Material = "Neon"
                      blastwave.Anchored = true
                      blastwave.Transparency = 0.6
                      blastwave.CFrame = Root.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), 0, math.rad(math.random(-180, 180)))
                      blastwave.BrickColor = BrickColor.new("White")
                      blastwave.Name = "zin"
                      removeuseless:AddItem(blastwave, 2)
                    end
                    SOUND(Torso, 2458107258, 8, false, 5)
                    g1 = Instance.new("BodyGyro", Root)
                    g1.D = 175
                    g1.P = 20000
                    g1.MaxTorque = Vector3.new(0, 9000, 0)
                    for fe = 1, 22 do
                      va.C0 = va.C0:Lerp(CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(39 - 12 * math.sin(sine / 12)), 0, 0), 0.4)
                      vc.C0 = vc.C0:Lerp(CFrame.new(-1.65, 0.75, 0) * CFrame.Angles(math.rad(10), math.rad(5), math.rad(-35)), 0.4)
                      vb.C0 = vb.C0:Lerp(CFrame.new(1.65, 0.75, 0) * CFrame.Angles(math.rad(10), math.rad(-5), math.rad(35)), 0.4)
                      for fk, fl in pairs(Torso:GetDescendants()) do
                        if fl.Name == "wave2" then
                          fl.Scale = fl.Scale + Vector3.new(0.03, 0, 0.03)
                          fl.Parent.Transparency = fl.Parent.Transparency + 0.05
                        end
                      end
                      for fk, fl in pairs(Torso:GetDescendants()) do
                        if fl.Name == "zin" then
                          fl.Size = fl.Size + Vector3.new(4, 4, 4)
                          fl.Transparency = fl.Transparency + 0.05
                        end
                      end
                      g1.CFrame = g1.CFrame:lerp(CFrame.new(Root.Position, mouse.Hit.p), 0.2)
                      swait()
                    end
                    removeuseless:AddItem(g1, 0.001)
                    attacking = false
                    debounce = false
                    break
                  end
                  if a == "k" then
                    if debounce then
                      return
                    end
                    debounce = true
                    attacking = true
                    waterz = true
                    ws = 0
                    g1 = Instance.new("BodyGyro", Root)
                    g1.D = 175
                    g1.P = 20000
                    g1.MaxTorque = Vector3.new(0, 9000, 0)
                    if avatarstate then
                      for fe = 1, 7 do
                        g1.CFrame = g1.CFrame:lerp(CFrame.new(Root.Position, mouse.Hit.p), 0.4)
                        va.C0 = va.C0:Lerp(CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(-30), 0, 0), 0.8)
                        vc.C0 = vc.C0:lerp(CFrame.new(-1.3, 0, 0.2) * CFrame.Angles(math.rad(30), math.rad(30), 0), 0.8)
                        vb.C0 = vb.C0:lerp(CFrame.new(1.3, 0, 0.2) * CFrame.Angles(math.rad(30), math.rad(-30), 0), 0.8)
                        swait()
                      end
                    else
                      for fe = 1, 15 do
                        g1.CFrame = g1.CFrame:lerp(CFrame.new(Root.Position, mouse.Hit.p), 0.2)
                        va.C0 = va.C0:Lerp(CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(-30), 0, 0), 0.4)
                        vc.C0 = vc.C0:lerp(CFrame.new(-1.3, 0, 0.2) * CFrame.Angles(math.rad(30), math.rad(30), 0), 0.4)
                        vb.C0 = vb.C0:lerp(CFrame.new(1.3, 0, 0.2) * CFrame.Angles(math.rad(30), math.rad(-30), 0), 0.4)
                        swait()
                      end
                    end
                    SOUND(Torso, 169486406, 8, false, 5)
                    coroutine.wrap(function()
                      if avatarstate then
                        for fd = 1, 7 do
                          va.C0 = va.C0:Lerp(CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(30), 0, 0), 0.8)
                          vb.C0 = vb.C0:lerp(CFrame.new(1.3, 1, 0.35) * CFrame.Angles(math.rad(-110), math.rad(-12), math.rad(1)), 0.8)
                          vc.C0 = vc.C0:lerp(CFrame.new(-1.3, 1, 0.35) * CFrame.Angles(math.rad(-110), math.rad(12), math.rad(-1)), 0.8)
                          swait()
                        end
                      else
                        for fd = 1, 15 do
                          va.C0 = va.C0:Lerp(CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(30), 0, 0), 0.4)
                          vb.C0 = vb.C0:lerp(CFrame.new(1.3, 1, 0.35) * CFrame.Angles(math.rad(-110), math.rad(-12), math.rad(1)), 0.4)
                          vc.C0 = vc.C0:lerp(CFrame.new(-1.3, 1, 0.35) * CFrame.Angles(math.rad(-110), math.rad(12), math.rad(-1)), 0.4)
                          swait()
                        end
                      end
                    end)()
                    for fe = 1, 6 do
                      waterblock = Instance.new("Part", Torso)
                      waterblock.Size = Vector3.new(4, 4, 4)
                      waterblock.Transparency = 0.6
                      waterblock.Anchored = true
                      waterblock.CanCollide = false
                      waterblock.BrickColor = BrickColor.new("Cyan")
                      waterblock.Material = "Neon"
                      waterblock.Name = "water"
                      waterblock.CFrame = Root.CFrame * CFrame.new(math.random(-15, 15), -15, math.random(-15, 15))
                    end
                    coroutine.wrap(function()
                      while waterz do
                        swait()
                        colors2 = colortable2[math.random(1, #colortable2)]
                        for fd, fe in pairs(Torso:GetChildren()) do
                          if fe.Name == "water" then
                            waterwv = Instance.new("Part", fe)
                            waterwv.Size = Vector3.new(5, 5, 5)
                            waterwv.CFrame = fe.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)))
                            waterwv.Anchored = false
                            waterwv.CanCollide = false
                            waterwv.Name = "waterv"
                            waterwv.Material = "Neon"
                            waterwv.BrickColor = BrickColor.new(colors2)
                            removeuseless:AddItem(waterwv, 2)
                          end
                        end
                        for fd, fe in pairs(Torso:GetDescendants()) do
                          if fe.Name == "waterv" then
                            fe.Size = fe.Size - Vector3.new(0.35, 0.35, 0.35)
                            fe.Transparency = fe.Transparency + 0.02
                          end
                        end
                        swait()
                      end
                    end)()
                    if avatarstate then
                      for fe = 1, 13 do
                        for fk, fl in pairs(Torso:GetChildren()) do
                          if fl.Name == "water" then
                            fl.CFrame = fl.CFrame * CFrame.new(0, 2, 0)
                          end
                        end
                        swait()
                      end
                    else
                      for fe = 1, 25 do
                        for fk, fl in pairs(Torso:GetChildren()) do
                          if fl.Name == "water" then
                            fl.CFrame = fl.CFrame * CFrame.new(0, 1, 0)
                          end
                        end
                        swait()
                      end
                    end
                    wait(0.5)
                    ws = 12
                    coroutine.wrap(function()
                      if avatarstate then
                        for fd = 1, 38 do
                          g1.CFrame = g1.CFrame:lerp(CFrame.new(Root.Position, mouse.Hit.p), 0.4)
                          va.C0 = va.C0:lerp(CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(10 * math.sin(sine / 12)), math.rad(-40), math.rad(0)), 0.4)
                          vb.C0 = vb.C0:lerp(CFrame.new(0.9, 0.65 + 0.4 * math.sin(sine / 12), 1.2) * CFrame.Angles(math.rad(-35 - 15 * math.sin(sine / 12)), math.rad(-50 - 3 * math.sin(sine / 12)), math.rad(-3 + 1 * math.sin(sine / 12))), 0.4)
                          vc.C0 = vc.C0:lerp(CFrame.new(-0.54, 2 + 0.02 * math.sin(sine / 12), 0.2 + 0.1 * math.sin(sine / 12)) * CFrame.Angles(math.rad(25 + 5 * math.sin(sine / 12)), math.rad(-20), math.rad(0)), 0.4)
                          vd.C0 = vd.C0:lerp(CFrame.new(0.54, 2 + 0.02 * math.sin(sine / 12), 0.2 + 0.1 * math.sin(sine / 12)) * CFrame.Angles(math.rad(25 + 5 * math.sin(sine / 12)), math.rad(20), math.rad(0)), 0.4)
                          ve.C0 = ve.C0:lerp(CFrame.new(0.5, 2, 0) * CFrame.Angles(math.rad(0), math.rad(-25), math.rad(-140)), 0.4)
                          swait()
                        end
                      else
                        for fd = 1, 75 do
                          g1.CFrame = g1.CFrame:lerp(CFrame.new(Root.Position, mouse.Hit.p), 0.2)
                          va.C0 = va.C0:lerp(CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(10 * math.sin(sine / 12)), math.rad(-40), math.rad(0)), 0.2)
                          vb.C0 = vb.C0:lerp(CFrame.new(0.9, 0.65 + 0.4 * math.sin(sine / 12), 1.2) * CFrame.Angles(math.rad(-35 - 15 * math.sin(sine / 12)), math.rad(-50 - 3 * math.sin(sine / 12)), math.rad(-3 + 1 * math.sin(sine / 12))), 0.2)
                          vc.C0 = vc.C0:lerp(CFrame.new(-0.54, 2 + 0.02 * math.sin(sine / 12), 0.2 + 0.1 * math.sin(sine / 12)) * CFrame.Angles(math.rad(25 + 5 * math.sin(sine / 12)), math.rad(-20), math.rad(0)), 0.2)
                          vd.C0 = vd.C0:lerp(CFrame.new(0.54, 2 + 0.02 * math.sin(sine / 12), 0.2 + 0.1 * math.sin(sine / 12)) * CFrame.Angles(math.rad(25 + 5 * math.sin(sine / 12)), math.rad(20), math.rad(0)), 0.2)
                          ve.C0 = ve.C0:lerp(CFrame.new(0.5, 2, 0) * CFrame.Angles(math.rad(0), math.rad(-25), math.rad(-140)), 0.2)
                          swait()
                        end
                      end
                    end)()
                    if avatarstate then
                      for fe = 1, 39 do
                        for fk, fl in pairs(Torso:GetChildren()) do
                          if fl.Name == "water" then
                            fl.CFrame = fl.CFrame:lerp(CFrame.new(rightlocation.Position) * CFrame.new(0, 10, 0), 0.1)
                          end
                        end
                        swait()
                      end
                    else
                      for fe = 1, 75 do
                        for fk, fl in pairs(Torso:GetChildren()) do
                          if fl.Name == "water" then
                            fl.CFrame = fl.CFrame:lerp(CFrame.new(rightlocation.Position) * CFrame.new(0, 10, 0), 0.05)
                          end
                        end
                        swait()
                      end
                    end
                    for fe, fg in pairs(Torso:GetChildren()) do
                      if fg.Name == "water" then
                        fg:Remove()
                      end
                    end
                    waterb = Instance.new("Part", Torso)
                    waterb.Size = Vector3.new(1, 1, 1)
                    waterb.Transparency = 1
                    waterb.CFrame = CFrame.new(rightlocation.Position) * CFrame.new(0, 10, 0)
                    waterb.Anchored = true
                    waterb.CanCollide = false
                    waterb.Name = "waterbx"
                    SOUND(rightlocation, 413682983, 9, false, 10)
                    coroutine.wrap(function()
                      waterb2 = Instance.new("Part", Torso)
                      waterb2.Size = Vector3.new(10, 10, 10)
                      waterb2.Transparency = 0
                      waterb2.CFrame = CFrame.new(rightlocation.Position) * CFrame.new(0, 10, 0) * CFrame.Angles(math.rad(math.random(-180, 180)), 0, math.rad(math.random(-180, 180)))
                      waterb2.Anchored = true
                      waterb2.CanCollide = false
                      waterb2.Name = "waterb"
                      waterb2.Material = "Neon"
                      for fd = 1, 30 do
                        waterb2.Size = waterb2.Size + Vector3.new(3, 3, 3)
                        waterb2.Transparency = waterb2.Transparency + 0.05
                        swait()
                      end
                      waterb2:Remove()
                    end)()
                    coroutine.wrap(function()
                      for fd = 1, 25 do
                        swait()
                        sk = Instance.new("Part", Torso)
                        sk.CanCollide = false
                        sk.Anchored = true
                        sk.BrickColor = BrickColor.new(colors2)
                        sk.Name = "sk"
                        sk.CFrame = waterb.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), 0, math.rad(math.random(-180, 180)))
                        skmesh = Instance.new("SpecialMesh", sk)
                        skmesh.MeshId = "rbxassetid://662586858"
                        skmesh.Name = "firewave"
                        skmesh.Scale = Vector3.new(0.04, 0.01, 0.04)
                        removeuseless:AddItem(sk, 2)
                        for fj, fk in pairs(Torso:GetDescendants()) do
                          if fk.Name == "firewave" then
                            fk.Scale = fk.Scale + Vector3.new(0.03, 0, 0.03)
                            fk.Parent.Transparency = fk.Parent.Transparency + 0.05
                          end
                        end
                      end
                      for fd = 1, 30 do
                        for fj, fk in pairs(Torso:GetDescendants()) do
                          if fk.Name == "firewave" then
                            fk.Scale = fk.Scale + Vector3.new(0.03, 0, 0.03)
                            fk.Parent.Transparency = fk.Parent.Transparency + 0.05
                          end
                        end
                        swait()
                      end
                    end)()
                    coroutine.wrap(function()
                      while waterz do
                        colors2 = colortable2[math.random(1, #colortable2)]
                        blwater = Instance.new("Part", Torso)
                        blwater.Size = Vector3.new(10, 10, 10)
                        blwater.Transparency = 0.5
                        blwater.BrickColor = BrickColor.new(colors2)
                        blwater.Material = "Neon"
                        blwater.Anchored = false
                        blwater.CanCollide = false
                        blwater.CFrame = waterb.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)))
                        blwater.Name = "blyat"
                        removeuseless:AddItem(blwater, 2)
                        for fd, fe in pairs(Torso:GetChildren()) do
                          if fe.Name == "blyat" then
                            fe.Size = fe.Size - Vector3.new(0.25, 0.25, 0.25)
                            fe.Transparency = fe.Transparency + 0.025
                          end
                        end
                        swait()
                      end
                    end)()
                    for fe = 1, 25 do
                      waterb.CFrame = CFrame.new(rightlocation.Position) * CFrame.new(0, 10, 0)
                      vc.C0 = vc.C0:lerp(CFrame.new(0.6, 1.9, 0.2) * CFrame.Angles(math.rad(-85), math.rad(120), math.rad(-20)), 0.5)
                      swait()
                    end
                    waterb:Remove()
                    waterz = false
                    Instance.new("Part", Torso).Size = Vector3.new(1, 1, 1)
                    Instance.new("Part", Torso).Transparency = 1
                    Instance.new("Part", Torso).CFrame = CFrame.new(rightlocation.Position) * CFrame.new(0, 10, 0)
                    Instance.new("Part", Torso).Anchored = false
                    Instance.new("Part", Torso).CanCollide = false
                    Instance.new("Part", Torso).Name = "waterbx2"
                    bov = Instance.new("BodyVelocity", (Instance.new("Part", Torso)))
                    bov.maxForce = Vector3.new(99999, 99999, 99999)
                    Instance.new("Part", Torso).CFrame = CFrame.new(Instance.new("Part", Torso).Position, mouse.Hit.p)
                    bov.velocity = Instance.new("Part", Torso).CFrame.lookVector * 220
                    Instance.new("Part", Torso).Touched:connect(function(a)
                      a = a
                      if a.Name ~= "blyat" and a.Name ~= "firewave" and a.Name ~= "waterb" and a.Name ~= "sk" and a.Name ~= "beeg" then
                        if va then
                          return
                        end
                        va = true
                        vb.Anchored = true
                        Hit = damagealll(38, vb.Position)
                        for fe, fg in pairs(Hit) do
                          if bluetotem then
                          else
                            if avatarstate then
                            else
                            end
                          end
                          vel = Instance.new("BodyVelocity", fg:FindFirstChild("Torso") or fg:FindFirstChild("UpperTorso"))
                          vel.maxForce = Vector3.new(9999999999999, 9999999999999, 9999999999999)
                          torso = fg:FindFirstChild("Torso") or fg:FindFirstChild("UpperTorso")
                          vel.velocity = CFrame.new(vb.Position, torso.Position).lookVector * 175
                          removeuseless:AddItem(vel, 0.1)
                        end
                        Instance.new("Part", Torso).Name = "bluex"
                        Instance.new("Part", Torso).Size = Vector3.new(6, 6, 6)
                        Instance.new("Part", Torso).Anchored = true
                        Instance.new("Part", Torso).Transparency = 0.6
                        Instance.new("Part", Torso).CanCollide = false
                        Instance.new("Part", Torso).CFrame = vb.CFrame
                        Instance.new("Part", Torso).Material = "Neon"
                        Instance.new("Part", Torso).Shape = "Ball"
                        Instance.new("Part", Torso).BrickColor = BrickColor.new(colors2)
                        SOUND(Instance.new("Part", Torso), 2350560656, 8, false, 5)
                        Instance.new("Part", Torso).Name = "bluex"
                        Instance.new("Part", Torso).Size = Vector3.new(4, 4, 4)
                        Instance.new("Part", Torso).Anchored = true
                        Instance.new("Part", Torso).Transparency = 0.4
                        Instance.new("Part", Torso).CanCollide = false
                        Instance.new("Part", Torso).CFrame = vb.CFrame
                        Instance.new("Part", Torso).Material = "Neon"
                        Instance.new("Part", Torso).Shape = "Ball"
                        Instance.new("Part", Torso).BrickColor = BrickColor.new(colors2)
                        Instance.new("Part", Torso).Name = "bluex"
                        Instance.new("Part", Torso).Transparency = 0.2
                        Instance.new("Part", Torso).Size = Vector3.new(2, 2, 2)
                        Instance.new("Part", Torso).Anchored = true
                        Instance.new("Part", Torso).CanCollide = false
                        Instance.new("Part", Torso).CFrame = vb.CFrame
                        Instance.new("Part", Torso).Material = "Neon"
                        Instance.new("Part", Torso).Shape = "Ball"
                        Instance.new("Part", Torso).BrickColor = BrickColor.new(colors2)
                        vb:Remove()
                        for fj = 1, 25 do
                          sk = Instance.new("Part", Torso)
                          sk.CanCollide = false
                          sk.Anchored = true
                          sk.BrickColor = BrickColor.new(colors2)
                          sk.Name = "sk"
                          sk.CFrame = Instance.new("Part", Torso).CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), 0, math.rad(math.random(-180, 180)))
                          skmesh = Instance.new("SpecialMesh", sk)
                          skmesh.MeshId = "rbxassetid://662586858"
                          skmesh.Name = "lolwtf"
                          skmesh.Scale = Vector3.new(0.04, 0.01, 0.04)
                        end
                        for fj = 1, 15 do
                          for fo, fp in pairs(Torso:GetDescendants()) do
                            if fp.Name == "lolwtf" then
                              fp.Scale = fp.Scale + Vector3.new(0.04, 0, 0.04)
                            end
                          end
                          Instance.new("Part", Torso).Size = Instance.new("Part", Torso).Size + Vector3.new(4, 4, 4)
                          Instance.new("Part", Torso).Size = Instance.new("Part", Torso).Size + Vector3.new(4, 4, 4)
                          Instance.new("Part", Torso).Size = Instance.new("Part", Torso).Size + Vector3.new(4, 4, 4)
                          swait()
                        end
                        for fj = 1, 15 do
                          for fo, fp in pairs(Torso:GetDescendants()) do
                            if fp.Name == "lolwtf" then
                              fp.Scale = fp.Scale + Vector3.new(0.02, 0, 0.02)
                            end
                          end
                          Instance.new("Part", Torso).Size = Instance.new("Part", Torso).Size + Vector3.new(2, 2, 2)
                          Instance.new("Part", Torso).Size = Instance.new("Part", Torso).Size + Vector3.new(2, 2, 2)
                          Instance.new("Part", Torso).Size = Instance.new("Part", Torso).Size + Vector3.new(2, 2, 2)
                          swait()
                        end
                        for fj = 1, 40 do
                          for fo, fp in pairs(Torso:GetDescendants()) do
                            if fp.Name == "lolwtf" then
                              fp.Scale = fp.Scale - Vector3.new(0.04, 0, 0.04)
                              fp.Parent.Transparency = fp.Parent.Transparency + 0.05
                            end
                          end
                          Instance.new("Part", Torso).Transparency = Instance.new("Part", Torso).Transparency + 0.025
                          Instance.new("Part", Torso).Transparency = Instance.new("Part", Torso).Transparency + 0.025
                          Instance.new("Part", Torso).Transparency = Instance.new("Part", Torso).Transparency + 0.025
                          Instance.new("Part", Torso).Size = Instance.new("Part", Torso).Size - Vector3.new(3, 3, 3)
                          Instance.new("Part", Torso).Size = Instance.new("Part", Torso).Size - Vector3.new(3, 3, 3)
                          Instance.new("Part", Torso).Size = Instance.new("Part", Torso).Size - Vector3.new(3, 3, 3)
                          swait()
                        end
                        for fj, fk in pairs(Torso:GetDescendants()) do
                          if fk.Name == "lolwtf" then
                            fk:Remove()
                          end
                        end
                        Instance.new("Part", Torso):Remove()
                        Instance.new("Part", Torso):Remove()
                        Instance.new("Part", Torso):Remove()
                        print(a.Name)
                      end
                    end)
                    coroutine.wrap(function()
                      for fd = 1, 350 do
                        if breakwaterm then
                          break
                        end
                        colors2 = colortable2[math.random(1, #colortable2)]
                        blwater = Instance.new("Part", Torso)
                        blwater.Size = Vector3.new(10, 10, 10)
                        blwater.Transparency = 0.5
                        blwater.BrickColor = BrickColor.new(colors2)
                        blwater.Material = "Neon"
                        blwater.Anchored = false
                        blwater.CanCollide = false
                        blwater.CFrame = va.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)))
                        blwater.Name = "blyat"
                        removeuseless:AddItem(blwater, 2)
                        for fj, fk in pairs(Torso:GetChildren()) do
                          if fk.Name == "blyat" then
                            fk.Size = fk.Size - Vector3.new(0.25, 0.25, 0.25)
                            fk.Transparency = fk.Transparency + 0.025
                          end
                        end
                        swait()
                      end
                      pcall(function()
                        va:Remove()
                      end)
                    end)()
                    for fh = 1, 50 do
                      va.C0 = va.C0:lerp(CFrame.new(0, 0, 0) * CFrame.Angles(0, math.rad(40), 0), 0.4)
                      vc.C1 = vc.C1:lerp(CFrame.new(0.2, 0.2, 0.2) * CFrame.Angles(0, 0, 0), 0.5)
                      vc.C0 = vc.C0:lerp(CFrame.new(-1, 1.1, 0.4) * CFrame.Angles(math.rad(-75), math.rad(15), math.rad(4)), 0.5)
                      swait()
                    end
                    vc.C1 = CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0)
                    debounce = false
                    attacking = false
                    removeuseless:AddItem(g1, 0.001)
                    ws = 90
                  elseif a == "j" then
                    if debounce then
                      return
                    end
                    if nottouched then
                      return
                    end
                    nottouched = true
                    nottouched2 = true
                    debounce = true
                    attacking = true
                    ws = 6
                    fireballsize = 0
                    fireballsize2 = 0
                    phjv = 0
                    phjl = 0
                    g1 = Instance.new("BodyGyro", Root)
                    g1.D = 175
                    g1.P = 20000
                    g1.MaxTorque = Vector3.new(0, 9000, 0)
                    bigfireball = Instance.new("Part", Torso)
                    bigfireball.Anchored = true
                    bigfireball.CanCollide = false
                    bigfireball.Size = Vector3.new(2, 2, 2)
                    bigfireball.BrickColor = BrickColor.new(colors)
                    bigfireball.Material = "Neon"
                    bigfireball.CFrame = rightlocation.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), 0, math.rad(math.random(-180, 180)))
                    bigfireball2 = bigfireball:Clone()
                    bigfireball2.Parent = Torso
                    bigfireball2.Name = "beeg"
                    bigfireball2.BrickColor = BrickColor.new(colors)
                    bigfireball2.CFrame = rightlocation.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), 0, math.rad(math.random(-180, 180)))
                    ohno = Instance.new("Sound", bigfireball)
                    ohno.SoundId = "rbxassetid://2469853862"
                    ohno.Volume = 9
                    ohno:Play()
                    firsound = Instance.new("Sound", bigfireball)
                    firsound.SoundId = "rbxassetid://2371433183"
                    firsound.Volume = 0
                    firsound.Looped = true
                    firsound:Play()
                    for fe = 1, 350 do
                      g1.CFrame = g1.CFrame:lerp(CFrame.new(Root.Position, mouse.Hit.p), 0.2)
                      firsound.Volume = firsound.Volume + 0.05
                      phjv = phjv + 0.225
                      phjl = phjl + 0.225
                      fireballsize = fireballsize + 0.005
                      fireballsize2 = fireballsize2 + 0.0152
                      bigfireball2.CFrame = Root.CFrame * CFrame.new(6, phjv, 0) * CFrame.Angles(math.rad(math.random(-180, 180)), 0, math.rad(math.random(-180, 180)))
                      bigfireball.CFrame = Root.CFrame * CFrame.new(6, phjl, 0) * CFrame.Angles(math.rad(math.random(-180, 180)), 0, math.rad(math.random(-180, 180)))
                      bigfireball.Size = bigfireball.Size + Vector3.new(0.25, 0.25, 0.25)
                      bigfireball2.Size = bigfireball2.Size + Vector3.new(0.25, 0.25, 0.25)
                      wshockwave = Instance.new("Part", Torso)
                      wshockwave.Size = Vector3.new(1, 1, 1)
                      wshockwave.CanCollide = false
                      wshockwave.Anchored = true
                      wshockwave.Name = "wsw"
                      wshockwave.Transparency = 0.45
                      wshockwave.BrickColor = BrickColor.new(colors)
                      wshockwave.CFrame = CFrame.new(bigfireball.Position) * CFrame.Angles(math.rad(math.random(-180, 180)), 0, math.rad(math.random(-180, 180)))
                      wshockwavemesh = Instance.new("SpecialMesh", wshockwave)
                      wshockwavemesh.Scale = Vector3.new(1, 0.05, 1)
                      wshockwavemesh.Name = "wswm"
                      wshockwavemesh.MeshId = "rbxassetid://20329976"
                      removeuseless:AddItem(wshockwave, 2)
                      for fk, fl in pairs(Torso:GetDescendants()) do
                        if fl.Name == "wswm" then
                          fl.Parent.Transparency = fl.Parent.Transparency + 0.05
                          fl.Scale = fl.Scale + Vector3.new(fireballsize, 0, fireballsize2)
                        end
                      end
                      sk = Instance.new("Part", Torso)
                      sk.CanCollide = false
                      sk.Anchored = true
                      sk.BrickColor = BrickColor.new(colors)
                      sk.Name = "sk"
                      sk.CFrame = bigfireball.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), 0, math.rad(math.random(-180, 180)))
                      skmesh = Instance.new("SpecialMesh", sk)
                      skmesh.MeshId = "rbxassetid://662586858"
                      skmesh.Name = "firewave"
                      skmesh.Scale = Vector3.new(0.04, 0.01, 0.04)
                      removeuseless:AddItem(sk, 2)
                      for fk, fl in pairs(Torso:GetDescendants()) do
                        if fl.Name == "firewave" then
                          fl.Scale = fl.Scale + Vector3.new(fireballsize / 10, 0, fireballsize / 10)
                          fl.Parent.Transparency = fl.Parent.Transparency + 0.05
                        end
                      end
                      g1.CFrame = g1.CFrame:lerp(CFrame.new(Root.Position, mouse.Hit.p), 0.2)
                      va.C0 = va.C0:lerp(CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(10 * math.sin(sine / 12)), math.rad(0), math.rad(0)), 0.2)
                      vb.C0 = vb.C0:lerp(CFrame.new(0.9, 0.65 + 0.4 * math.sin(sine / 12), 1.2) * CFrame.Angles(math.rad(-35 - 15 * math.sin(sine / 12)), math.rad(-50 - 3 * math.sin(sine / 12)), math.rad(-3 + 1 * math.sin(sine / 12))), 0.2)
                      vd.C0 = vd.C0:lerp(CFrame.new(-0.54, 2 + 0.02 * math.sin(sine / 12), 0.2 + 0.1 * math.sin(sine / 12)) * CFrame.Angles(math.rad(25 + 5 * math.sin(sine / 12)), math.rad(-20), math.rad(0)), 0.2)
                      ve.C0 = ve.C0:lerp(CFrame.new(0.54, 2 + 0.02 * math.sin(sine / 12), 0.2 + 0.1 * math.sin(sine / 12)) * CFrame.Angles(math.rad(25 + 5 * math.sin(sine / 12)), math.rad(20), math.rad(0)), 0.2)
                      vc.C0 = vc.C0:lerp(CFrame.new(0.5, 2, 0) * CFrame.Angles(math.rad(0), math.rad(-25), math.rad(-140)), 0.3)
                      swait()
                    end
                    coroutine.wrap(function()
                      for fd = 1, 45 do
                        for fj, fk in pairs(Torso:GetDescendants()) do
                          if fk.Name == "firewave" then
                            fk.Scale = fk.Scale + Vector3.new(0.02, 0, 0.02)
                            fk.Parent.Transparency = fk.Parent.Transparency + 0.05
                          end
                        end
                        for fj, fk in pairs(Torso:GetDescendants()) do
                          if fk.Name == "wswm" then
                            fk.Parent.Transparency = fk.Parent.Transparency + 0.05
                            fk.Scale = fk.Scale + Vector3.new(4, 0, 4)
                          end
                        end
                        swait()
                      end
                    end)()
                    for fe = 1, 75 do
                      g1.CFrame = g1.CFrame:lerp(CFrame.new(Root.Position, mouse.Hit.p), 0.2)
                      firsound.Volume = firsound.Volume - 0.05
                      va.C0 = va.C0:lerp(CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(10 * math.sin(sine / 12)), math.rad(0), math.rad(0)), 0.2)
                      vb.C0 = vb.C0:lerp(CFrame.new(0.9, 0.65 + 0.4 * math.sin(sine / 12), 1.2) * CFrame.Angles(math.rad(-35 - 15 * math.sin(sine / 12)), math.rad(-50 - 3 * math.sin(sine / 12)), math.rad(-3 + 1 * math.sin(sine / 12))), 0.2)
                      vd.C0 = vd.C0:lerp(CFrame.new(-0.54, 2 + 0.02 * math.sin(sine / 12), 0.2 + 0.1 * math.sin(sine / 12)) * CFrame.Angles(math.rad(25 + 5 * math.sin(sine / 12)), math.rad(-20), math.rad(0)), 0.2)
                      ve.C0 = ve.C0:lerp(CFrame.new(0.54, 2 + 0.02 * math.sin(sine / 12), 0.2 + 0.1 * math.sin(sine / 12)) * CFrame.Angles(math.rad(25 + 5 * math.sin(sine / 12)), math.rad(20), math.rad(0)), 0.2)
                      vc.C0 = vc.C0:lerp(CFrame.new(0.5, 2, 0) * CFrame.Angles(math.rad(0), math.rad(-25), math.rad(-140)), 0.3)
                      bigfireball2.CFrame = Root.CFrame * CFrame.new(6, phjv, 0) * CFrame.Angles(math.rad(math.random(-180, 180)), 0, math.rad(math.random(-180, 180)))
                      bigfireball.CFrame = Root.CFrame * CFrame.new(6, phjl, 0) * CFrame.Angles(math.rad(math.random(-180, 180)), 0, math.rad(math.random(-180, 180)))
                      swait()
                    end
                    removeuseless:AddItem(g1, 0.001)
                    for fe = 1, 35 do
                      firsound.Volume = firsound.Volume - 0.05
                      bigfireball2.CFrame = Root.CFrame * CFrame.new(6, phjv, 0) * CFrame.Angles(math.rad(math.random(-180, 180)), 0, math.rad(math.random(-180, 180)))
                      bigfireball.CFrame = Root.CFrame * CFrame.new(6, phjl, 0) * CFrame.Angles(math.rad(math.random(-180, 180)), 0, math.rad(math.random(-180, 180)))
                      vb.C0 = vb.C0:lerp(CFrame.new(1.5, 0.55, 0) * CFrame.Angles(math.rad(-20), math.rad(5), math.rad(20)), 0.3)
                      va.C0 = va.C0:lerp(CFrame.new(0, 0, 0) * CFrame.Angles(0, math.rad(-40), 0), 0.4)
                      swait()
                    end
                    firsound:Remove()
                    lozz = bigfireball.Size
                    bigfireball.Anchored = false
                    bigfireball.Transparency = 1
                    bigfireball.Size = Vector3.new(5, 5, 5)
                    coroutine.wrap(function()
                      bov = Instance.new("BodyVelocity", bigfireball)
                      bov.maxForce = Vector3.new(99999, 99999, 99999)
                      bigfireball.CFrame = CFrame.new(bigfireball.Position, mouse.Hit.p)
                      bov.velocity = bigfireball.CFrame.lookVector * 75
                      coroutine.wrap(function()
                        for fd = 1, 45 do
                          bigfireball2.Size = bigfireball2.Size + Vector3.new(4, 4, 4)
                          bigfireball2.Transparency = bigfireball2.Transparency + 0.05
                          swait()
                        end
                      end)()
                      function explo()
                        SOUND(bigfireball, 240795638, 36, false, 10)
                        colors = colortable[math.random(1, #colortable)]
                        bigfireexplosion = bigfireball:Clone()
                        bigfireexplosion.Parent = Torso
                        bigfireexplosion.Size = smke.Size + Vector3.new(120, 120, 120)
                        bigfireexplosion.BrickColor = BrickColor.new(colors)
                        bigfireexplosion.CFrame = bigfireball.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)))
                        colors = colortable[math.random(1, #colortable)]
                        bigfireexplosion2 = bigfireball:Clone()
                        bigfireexplosion2.Parent = Torso
                        bigfireexplosion2.Size = smke.Size + Vector3.new(120, 120, 120)
                        bigfireexplosion2.BrickColor = BrickColor.new(colors)
                        bigfireexplosion2.CFrame = bigfireball.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)))
                        coroutine.wrap(function()
                          for fd = 1, 25 do
                            for fj, fk in pairs(Torso:GetDescendants()) do
                              if fk.Name == "firewave" then
                                fk.Scale = fk.Scale + Vector3.new(0.02, 0, 0.02)
                                fk.Parent.Transparency = fk.Parent.Transparency + 0.08
                              end
                            end
                            bigfireexplosion.Size = bigfireexplosion.Size + Vector3.new(10, 10, 10)
                            bigfireexplosion.Transparency = bigfireexplosion.Transparency + 0.05
                            bigfireexplosion2.Size = bigfireexplosion2.Size + Vector3.new(10, 10, 10)
                            bigfireexplosion2.Transparency = bigfireexplosion2.Transparency + 0.05
                            swait()
                          end
                          bigfireexplosion:Remove()
                          bigfireexplosion2:Remove()
                        end)()
                        rlplosion = Instance.new("Part", Torso)
                        rlplosion.Size = Vector3.new(100, 100, 100)
                        rlplosion.BrickColor = BrickColor.new(colors)
                        rlplosion.Material = "Neon"
                        rlplosion.Anchored = true
                        rlplosion.Shape = "Ball"
                        rlplosion.CanCollide = false
                        rlplosion.CFrame = bigfireball.CFrame
                        deadlyring = Instance.new("Part", Torso)
                        deadlyring.Size = Vector3.new(5, 5, 5)
                        deadlyring.Transparency = 0.7
                        deadlyring.BrickColor = BrickColor.new("White")
                        deadlyring.Anchored = true
                        deadlyring.CanCollide = false
                        deadlyring.CFrame = rlplosion.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)))
                        deadlyringh = Instance.new("SpecialMesh", deadlyring)
                        deadlyringh.MeshId = "http://www.roblox.com/asset/?id=3270017"
                        deadlyringh.Scale = Vector3.new(8, 8, 0.1)
                        deadlyring2 = Instance.new("Part", Torso)
                        deadlyring2.Size = Vector3.new(5, 5, 5)
                        deadlyring2.Transparency = 0.7
                        deadlyring2.BrickColor = BrickColor.new("White")
                        deadlyring2.Anchored = true
                        deadlyring2.CanCollide = false
                        deadlyring2.CFrame = rlplosion.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)))
                        deadlyringh2 = Instance.new("SpecialMesh", deadlyring2)
                        deadlyringh2.MeshId = "http://www.roblox.com/asset/?id=3270017"
                        deadlyringh2.Scale = Vector3.new(8, 8, 0.1)
                        deadlywave = Instance.new("Part", Torso)
                        deadlywave.Size = Vector3.new(18, 1, 18)
                        deadlywave.CanCollide = false
                        deadlywave.Anchored = true
                        deadlywave.Transparency = 0.5
                        deadlywave.BrickColor = BrickColor.new("White")
                        deadlywave.CFrame = CFrame.new(rlplosion.Position)
                        deadlywavemesh = Instance.new("SpecialMesh", deadlywave)
                        deadlywavemesh.Scale = Vector3.new(15, 60, 15)
                        deadlywavemesh.MeshId = "rbxassetid://20329976"
                        deadlywave2 = Instance.new("Part", Torso)
                        deadlywave2.Size = Vector3.new(1, 1, 1)
                        deadlywave2.CanCollide = false
                        deadlywave2.Anchored = true
                        deadlywave2.Transparency = 0.5
                        deadlywave2.BrickColor = BrickColor.new("White")
                        deadlywave2.CFrame = CFrame.new(rlplosion.Position)
                        deadlywave2mesh = Instance.new("SpecialMesh", deadlywave2)
                        deadlywave2mesh.Scale = Vector3.new(60, 5, 60)
                        deadlywave2mesh.MeshId = "rbxassetid://20329976"
                        rlplosions = 5
                        for fd = 1, 250 do
                          rlplosions = rlplosions + 1
                          Hit = damagealll(80 + rlplosions, rlplosion.Position)
                          for fj, fk in pairs(Hit) do
                            if redtotem then
                            else
                              if avatarstate then
                              else
                              end
                            end
                            vel = Instance.new("BodyVelocity", fk:FindFirstChild("Torso") or fk:FindFirstChild("UpperTorso"))
                            vel.maxForce = Vector3.new(9999999999999, 9999999999999, 9999999999999)
                            torso = fk:FindFirstChild("Torso") or fk:FindFirstChild("UpperTorso")
                            vel.velocity = CFrame.new(rlplosion.Position, torso.Position).lookVector * 125
                            removeuseless:AddItem(vel, 0.1)
                          end
                          deadlyringh2.Scale = deadlyringh2.Scale + Vector3.new(5, 5, 0)
                          deadlyringh.Scale = deadlyringh.Scale + Vector3.new(5, 5, 0)
                          deadlyring.CFrame = deadlyring.CFrame * CFrame.Angles(math.rad(7), math.rad(-7), math.rad(7))
                          deadlyring2.CFrame = deadlyring2.CFrame * CFrame.Angles(math.rad(-7), math.rad(7), math.rad(-7))
                          deadlywave.CFrame = deadlywave.CFrame * CFrame.Angles(0, math.rad(21), 0)
                          deadlywave2.CFrame = deadlywave2.CFrame * CFrame.Angles(0, math.rad(14), 0)
                          deadlywavemesh.Scale = deadlywavemesh.Scale + Vector3.new(4, 0, 4)
                          deadlywave2mesh.Scale = deadlywave2mesh.Scale + Vector3.new(5, 0, 5)
                          rlplosion.Size = rlplosion.Size + Vector3.new(2.5, 2.5, 2.5)
                          swait()
                        end
                        for fd = 1, 50 do
                          ohno.Volume = ohno.Volume - 0.2
                          deadlyringh2.Scale = deadlyringh2.Scale + Vector3.new(5, 5, 0)
                          deadlyringh.Scale = deadlyringh.Scale + Vector3.new(5, 5, 0)
                          deadlyring.CFrame = deadlyring.CFrame * CFrame.Angles(math.rad(7), math.rad(-7), math.rad(7))
                          deadlyring2.CFrame = deadlyring2.CFrame * CFrame.Angles(math.rad(-7), math.rad(7), math.rad(-7))
                          deadlyring.Transparency = deadlyring.Transparency + 0.05
                          deadlyring2.Transparency = deadlyring2.Transparency + 0.05
                          deadlywave.CFrame = deadlywave.CFrame * CFrame.Angles(0, math.rad(7), 0)
                          deadlywave2.CFrame = deadlywave2.CFrame * CFrame.Angles(0, math.rad(4), 0)
                          deadlywavemesh.Scale = deadlywavemesh.Scale + Vector3.new(0.4, 0, 0.4)
                          deadlywave2mesh.Scale = deadlywave2mesh.Scale + Vector3.new(0.5, 0, 0.5)
                          deadlywave.Transparency = deadlywave.Transparency + 0.05
                          deadlywave2.Transparency = deadlywave2.Transparency + 0.05
                          rlplosion.Size = rlplosion.Size + Vector3.new(1, 1, 1)
                          rlplosion.Transparency = rlplosion.Transparency + 0.02
                          swait()
                        end
                        deadlyring:Remove()
                        deadlyring2:Remove()
                        deadlywave:Remove()
                        deadlywave2:Remove()
                        rlplosion:Remove()
                        bigfireball:Remove()
                        touchedistrue = false
                        nottouched = false
                      end
                      bigfireball.Touched:connect(function(a)
                        a = a
                        if a.Name ~= "smke" and a.Name ~= "sk" and a.Name ~= "beeg" and a.Name ~= "wsw" then
                          if touchedistrue then
                            return
                          end
                          touchedistrue = true
                          nottouched2 = false
                          bigfireball.Anchored = true
                          bov:Remove()
                          explo()
                        end
                      end)
                      coroutine.wrap(function()
                        while nottouched2 do
                          swait(10)
                          colors = colortable[math.random(1, #colortable)]
                          smke = Instance.new("Part", Torso)
                          smke.Size = lozz
                          smke.BrickColor = BrickColor.new(colors)
                          smke.Anchored = true
                          smke.CanCollide = false
                          smke.Material = "Neon"
                          smke.Name = "smke"
                          smke.CFrame = bigfireball.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)))
                          removeuseless:AddItem(smke, 3)
                        end
                      end)()
                      while nottouched2 do
                        swait()
                        for fd, fe in pairs(Torso:GetDescendants()) do
                          if fe.Name == "smke" then
                            fe.Transparency = fe.Transparency + 0.02
                          end
                        end
                        sk = Instance.new("Part", Torso)
                        sk.CanCollide = false
                        sk.Anchored = true
                        sk.BrickColor = BrickColor.new(colors)
                        sk.Name = "sk"
                        sk.CFrame = bigfireball.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), 0, math.rad(math.random(-180, 180)))
                        skmesh = Instance.new("SpecialMesh", sk)
                        skmesh.MeshId = "rbxassetid://662586858"
                        skmesh.Name = "firewave"
                        skmesh.Scale = Vector3.new(0.04, 0.01, 0.04)
                        removeuseless:AddItem(sk, 2)
                        for fd, fe in pairs(Torso:GetDescendants()) do
                          if fe.Name == "firewave" then
                            fe.Scale = fe.Scale + Vector3.new(fireballsize / 10, 0, fireballsize / 10)
                            fe.Parent.Transparency = fe.Parent.Transparency + 0.05
                          end
                        end
                        swait()
                      end
                    end)()
                    for fe = 1, 50 do
                      va.C0 = va.C0:lerp(CFrame.new(0, 0, 0) * CFrame.Angles(0, math.rad(40), 0), 0.4)
                      vc.C1 = vc.C1:lerp(CFrame.new(0.2, 0.2, 0.2) * CFrame.Angles(0, 0, 0), 0.5)
                      vc.C0 = vc.C0:lerp(CFrame.new(-1, 1.1, 0.4) * CFrame.Angles(math.rad(-75), math.rad(15), math.rad(4)), 0.5)
                      swait()
                    end
                    vc.C1 = CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0)
                    coroutine.wrap(function()
                      for fd = 1, 1000 do
                        if touchedistrue == true then
                          break
                        end
                        swait()
                      end
                      if not touchedistrue then
                        touchedistrue = true
                        nottouched2 = false
                        explo()
                      end
                    end)()
                    attacking = false
                    debounce = false
                    ws = 90
                  elseif a == "h" then
                    if winddashing then
                      ws = 0
                      winddashing = false
                      tornad:Remove()
                      pzp4:Remove()
                      pzp3:Remove()
                      pzp2:Remove()
                      earthquak:Remove()
                      removeuseless:AddItem(g1, 0.001)
                      attacking = false
                      allowlev = true
                      SOUND(Torso, 1619519574, 8, false, 5)
                      for fe = 1, 35 do
                        for fk, fl in pairs(Torso:GetDescendants()) do
                          if fl.Name == "windwave" then
                            fl.Scale = fl.Scale + Vector3.new(0.01, 0, 0.01)
                            fl.Parent.Transparency = fl.Parent.Transparency + 0.05
                          end
                        end
                        windball.Size = windball.Size + Vector3.new(1, 1, 1)
                        windball.Transparency = windball.Transparency + 0.05
                        swait()
                      end
                      windball:Remove()
                      debounce = false
                      ws = 90
                    else
                      if debounce then
                        return
                      end
                      debounce = true
                      attacking = true
                      allowlev = false
                      ws = 0
                      for fe = 1, 25 do
                        sk = Instance.new("Part", Torso)
                        sk.CanCollide = false
                        sk.Anchored = true
                        sk.BrickColor = BrickColor.new("White")
                        sk.Name = "sk"
                        sk.CFrame = Torso.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), 0, math.rad(math.random(-180, 180)))
                        skmesh = Instance.new("SpecialMesh", sk)
                        skmesh.MeshId = "rbxassetid://662586858"
                        skmesh.Name = "windwave"
                        skmesh.Scale = Vector3.new(0.04, 0.01, 0.04)
                        removeuseless:AddItem(sk, 2)
                        for fk, fl in pairs(Torso:GetDescendants()) do
                          if fl.Name == "windwave" then
                            fl.Scale = fl.Scale + Vector3.new(0.01, 0, 0.01)
                            fl.Parent.Transparency = fl.Parent.Transparency + 0.05
                          end
                        end
                        va.C0 = va.C0:Lerp(CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(29 - 12 * math.sin(sine / 12)), 0, 0), 0.05)
                        vc.C0 = vc.C0:Lerp(CFrame.new(-1.65, 0.75, 0) * CFrame.Angles(math.rad(10), math.rad(5), math.rad(-35)), 0.05)
                        vb.C0 = vb.C0:Lerp(CFrame.new(1.65, 0.75, 0) * CFrame.Angles(math.rad(10), math.rad(-5), math.rad(35)), 0.05)
                        hum.HipHeight = hum.HipHeight + 0.1
                        swait()
                      end
                      coroutine.wrap(function()
                        for fd = 1, 45 do
                          for fj, fk in pairs(Torso:GetDescendants()) do
                            if fk.Name == "windwave" then
                              fk.Scale = fk.Scale + Vector3.new(0.01, 0, 0.01)
                              fk.Parent.Transparency = fk.Parent.Transparency + 0.05
                            end
                          end
                          swait()
                        end
                      end)()
                      SOUND(Torso, 2458107258, 8, false, 5)
                      groundrum = Instance.new("Sound", Torso)
                      groundrum.SoundId = "rbxassetid://1265219916"
                      groundrum.Volume = 10
                      groundrum.Pitch = 1.5
                      groundrum:Play()
                      removeuseless:AddItem(groundrum, 4)
                      hum.HipHeight = 0
                      wait(0.2)
                      Hit = damagealll(31, Torso.Position)
                      for fe, fg in pairs(Hit) do
                        if whitetotem then
                        else
                          if avatarstate then
                          else
                          end
                        end
                        vel = Instance.new("BodyVelocity", fg:FindFirstChild("Torso") or fg:FindFirstChild("UpperTorso"))
                        vel.maxForce = Vector3.new(9999999999999, 9999999999999, 9999999999999)
                        torso = fg:FindFirstChild("Torso") or fg:FindFirstChild("UpperTorso")
                        vel.velocity = CFrame.new(Torso.Position, torso.Position).lookVector * 125
                        removeuseless:AddItem(vel, 0.1)
                      end
                      coroutine.wrap(function()
                        bnmv = 0
                        craterloc = Instance.new("Part", Torso)
                        craterloc.Size = Vector3.new(1, 1, 1)
                        craterloc.Transparency = 1
                        craterloc.Anchored = false
                        craterloc.CanCollide = false
                        craterlocweld = va(craterloc, Root)
                        removeuseless:AddItem(craterloc, 25)
                        shockwave = Instance.new("Part", Torso)
                        shockwave.Size = Vector3.new(1, 1, 1)
                        shockwave.CanCollide = false
                        shockwave.Anchored = true
                        shockwave.Transparency = 0.5
                        shockwave.BrickColor = BrickColor.new("White")
                        shockwave.CFrame = CFrame.new(craterloc.Position)
                        shockwavemesh = Instance.new("SpecialMesh", shockwave)
                        shockwavemesh.Scale = Vector3.new(7, 14, 7)
                        shockwavemesh.MeshId = "rbxassetid://20329976"
                        shockwave2 = Instance.new("Part", Torso)
                        shockwave2.Size = Vector3.new(1, 1, 1)
                        shockwave2.CanCollide = false
                        shockwave2.Anchored = true
                        shockwave2.Transparency = 0.5
                        shockwave2.BrickColor = BrickColor.new("White")
                        shockwave2.CFrame = CFrame.new(craterloc.Position)
                        shockwavemesh2 = Instance.new("SpecialMesh", shockwave2)
                        shockwavemesh2.Scale = Vector3.new(5, 14, 5)
                        shockwavemesh2.MeshId = "rbxassetid://20329976"
                        coroutine.wrap(function()
                          for fd = 1, 30 do
                            swait()
                            shockwave.CFrame = shockwave.CFrame * CFrame.Angles(math.rad(0), math.rad(15), 0)
                            shockwave2.CFrame = shockwave2.CFrame * CFrame.Angles(math.rad(0), math.rad(-8), 0)
                            shockwave.Transparency = shockwave.Transparency + 0.025
                            shockwave2.Transparency = shockwave2.Transparency + 0.025
                            shockwavemesh2.Scale = shockwavemesh2.Scale + Vector3.new(6, 1, 6)
                            shockwavemesh.Scale = shockwavemesh.Scale + Vector3.new(6, 1, 6)
                          end
                          shockwave:Remove()
                          shockwave2:Remove()
                        end)()
                        for fd = 1, 75 do
                          bnmv = bnmv + 15
                          grassblocks = Instance.new("Part", craterloc)
                          grassblocks.Size = Vector3.new(1, 1, 1)
                          grassblocks.Material = "Grass"
                          grassblocks.Anchored = false
                          grassblocks.Transparency = 1
                          grassblocks.CanCollide = false
                          grassblockswld = va(grassblocks, craterloc)
                          grassblockswld.C0 = CFrame.new(-15, 8.5, 0) * CFrame.Angles(math.rad(0), math.rad(bnmv), 0)
                          removeuseless:AddItem(grassblocks, 25)
                          crater2 = Instance.new("Part", Torso)
                          crater2.CFrame = grassblocks.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)))
                          crater2.Size = Vector3.new(6.5, 6.5, 6.5)
                          crater2.Anchored = true
                          crater2.Name = "cr2"
                          crater2.Material = "Grass"
                          crater2.BrickColor = BrickColor.new("Bright green")
                        end
                      end)()
                      for fe = 1, 45 do
                        vb.C0 = vb.C0:lerp(CFrame.new(1.4, 1, 0.501) * CFrame.Angles(math.rad(-80), math.rad(-5), math.rad(0)), 0.3)
                        vc.C0 = vc.C0:lerp(CFrame.new(-1.5, 0, 0) * CFrame.Angles(math.rad(-30), math.rad(0), math.rad(0)), 0.3)
                        va.C0 = va.C0:lerp(CFrame.new(0, -1, 0) * CFrame.Angles(math.rad(-80), math.rad(-10), math.rad(0)), 0.3)
                        vd.C0 = vd.C0:lerp(CFrame.new(-0.5, 1.2, 0.8) * CFrame.Angles(math.rad(-80), math.rad(0), math.rad(0)), 0.3)
                        ve.C0 = ve.C0:lerp(CFrame.new(0.3, 1.9, -0.34) * CFrame.Angles(math.rad(-40), math.rad(0), math.rad(10)), 0.3)
                        swait()
                      end
                      for fe = 1, 50 do
                        va.C0 = va.C0:lerp(CFrame.new(0, -0.2, 0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0)), 0.08)
                        vd.C1 = vd.C1:lerp(CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(0), 0, 0), 0.08)
                        vd.C0 = vd.C0:lerp(CFrame.new(-0.3, 2 - 0.1 * math.sin(sine / 12), 0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(-10)), 0.08)
                        ve.C1 = ve.C1:lerp(CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 0.08)
                        ve.C0 = ve.C0:lerp(CFrame.new(0.3, 2 - 0.1 * math.sin(sine / 12), 0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(10)), 0.08)
                        vb.C0 = vb.C0:lerp(CFrame.new(1.5, 0.5, 0) * CFrame.Angles(math.rad(-10), math.rad(0), math.rad(20)), 0.08)
                        vc.C0 = vc.C0:lerp(CFrame.new(-1.5, 0.5, 0) * CFrame.Angles(math.rad(-10), math.rad(0), math.rad(-20)), 0.08)
                        swait()
                      end
                      SOUND(Torso, 2466413404, 8, false, 6)
                      coroutine.wrap(function()
                        for fd = 1, 25 do
                          sk = Instance.new("Part", Torso)
                          sk.CanCollide = false
                          sk.Anchored = true
                          sk.BrickColor = BrickColor.new("White")
                          sk.Name = "sk"
                          sk.CFrame = Torso.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), 0, math.rad(math.random(-180, 180)))
                          skmesh = Instance.new("SpecialMesh", sk)
                          skmesh.MeshId = "rbxassetid://662586858"
                          skmesh.Name = "windwave"
                          skmesh.Scale = Vector3.new(0.01, 0.01, 0.01)
                          removeuseless:AddItem(sk, 4)
                        end
                        for fd = 1, 25 do
                          for fj, fk in pairs(Torso:GetDescendants()) do
                            if fk.Name == "windwave" then
                              fk.Scale = fk.Scale + Vector3.new(0.02, 0, 0.02)
                              fk.Parent.Transparency = fk.Parent.Transparency + 0.01
                            end
                          end
                          swait()
                        end
                        for fd = 1, 25 do
                          for fj, fk in pairs(Torso:GetDescendants()) do
                            if fk.Name == "windwave" then
                              fk.Scale = fk.Scale + Vector3.new(0.005, 0, 0.005)
                              fk.Parent.Transparency = fk.Parent.Transparency + 0.05
                            end
                          end
                          swait()
                        end
                      end)()
                      windball = Instance.new("Part", Torso)
                      windball.Size = Vector3.new(20, 20, 20)
                      windball.Shape = "Ball"
                      windball.CanCollide = false
                      windball.Anchored = true
                      windball.Material = "Neon"
                      windball.CFrame = Root.CFrame
                      windball.Transparency = 1
                      for fe = 1, 75 do
                        windball.CFrame = Root.CFrame
                        windball.Transparency = windball.Transparency - 0.02
                        va.C0 = va.C0:Lerp(CFrame.new(0, -0.4, 0) * CFrame.Angles(math.rad(29), 0, 0), 0.2)
                        vc.C0 = vc.C0:Lerp(CFrame.new(-1.65, 0.75, 0) * CFrame.Angles(math.rad(40), math.rad(5), math.rad(-35)), 0.2)
                        vb.C0 = vb.C0:Lerp(CFrame.new(1.65, 0.75, 0) * CFrame.Angles(math.rad(40), math.rad(-5), math.rad(35)), 0.2)
                        vd.C0 = vd.C0:lerp(CFrame.new(-0.3, 1.9, 0.39) * CFrame.Angles(math.rad(30), math.rad(0), math.rad(-10)), 0.2)
                        ve.C0 = ve.C0:lerp(CFrame.new(0.3, 1.9, 0.39) * CFrame.Angles(math.rad(30), math.rad(0), math.rad(10)), 0.2)
                        swait()
                      end
                      windball2 = windball:Clone()
                      windball2.Parent = Torso
                      windball.Transparency = 0.5
                      coroutine.wrap(function()
                        for fd = 1, 25 do
                          sk = Instance.new("Part", Torso)
                          sk.CanCollide = false
                          sk.Anchored = true
                          sk.BrickColor = BrickColor.new("White")
                          sk.Name = "sk"
                          sk.CFrame = Torso.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), 0, math.rad(math.random(-180, 180)))
                          skmesh = Instance.new("SpecialMesh", sk)
                          skmesh.MeshId = "rbxassetid://662586858"
                          skmesh.Name = "windwave"
                          skmesh.Scale = Vector3.new(0.01, 0.01, 0.01)
                          removeuseless:AddItem(sk, 4)
                        end
                        for fd = 1, 25 do
                          for fj, fk in pairs(Torso:GetDescendants()) do
                            if fk.Name == "windwave" then
                              fk.Scale = fk.Scale + Vector3.new(0.02, 0, 0.02)
                              fk.Parent.Transparency = fk.Parent.Transparency + 0.01
                            end
                          end
                          swait()
                        end
                        for fd = 1, 25 do
                          for fj, fk in pairs(Torso:GetDescendants()) do
                            if fk.Name == "windwave" then
                              fk.Scale = fk.Scale + Vector3.new(0.005, 0, 0.005)
                              fk.Parent.Transparency = fk.Parent.Transparency + 0.05
                            end
                          end
                          swait()
                        end
                      end)()
                      SOUND(Torso, 1619519574, 8, false, 5)
                      for fe = 1, 50 do
                        for fk, fl in pairs(Torso:GetDescendants()) do
                          if fl.Name == "cr2" then
                            fl.Transparency = fl.Transparency + 0.02
                          end
                        end
                        windball2.Size = windball2.Size + Vector3.new(4, 4, 4)
                        windball2.Transparency = windball2.Transparency + 0.05
                        ve.C1 = ve.C1:lerp(CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 0.05)
                        vd.C1 = vd.C1:lerp(CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(0), 0, 0), 0.05)
                        vb.C0 = vb.C0:lerp(CFrame.new(1.6, 0.5 - 0.1 * -math.sin(sine / 12), 0) * CFrame.Angles(math.rad(35 - 2 * math.sin(sine / 12)), math.rad(0), math.rad(25 + 5 * math.sin(sine / 12))), 0.05)
                        vc.C0 = vc.C0:lerp(CFrame.new(-1.6, 0.5 - 0.1 * -math.sin(sine / 12), 0) * CFrame.Angles(math.rad(35 - 2 * math.sin(sine / 12)), math.rad(0), math.rad(-25 - 5 * math.sin(sine / 12))), 0.05)
                        va.C0 = va.C0:lerp(CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(-41 - 1 * math.sin(sine / 9)), math.rad(0 + 0 * math.cos(sine / 8)), math.rad(0) + Root.RotVelocity.Y / 15, math.cos(10 * math.cos(sine / 10))), 0.05)
                        vd.C0 = vd.C0:lerp(CFrame.new(-0.54, 2 + 0.02 * math.sin(sine / 12), 0.2 + 0.1 * math.sin(sine / 12)) * CFrame.Angles(math.rad(25 + 5 * math.sin(sine / 12)), math.rad(-20), math.rad(0)), 0.05)
                        ve.C0 = ve.C0:lerp(CFrame.new(0.54, 2 + 0.02 * math.sin(sine / 12), 0.2 + 0.1 * math.sin(sine / 12)) * CFrame.Angles(math.rad(25 + 5 * math.sin(sine / 12)), math.rad(20), math.rad(0)), 0.05)
                        swait()
                      end
                      for fe, fg in pairs(Torso:GetDescendants()) do
                        if fg.Name == "cr2" then
                          fg:Remove()
                        end
                      end
                      windball.Anchored = false
                      windballweld = vg(windball, Torso)
                      windball2:Remove()
                      pzp = Instance.new("Part", Torso)
                      pzp.Size = Vector3.new(1, 1, 1)
                      pzp.CanCollide = false
                      pzp.Transparency = 1
                      pzpweld = vg(pzp, Torso)
                      pzpweld.C0 = CFrame.new(0, 0, 0)
                      pzp2 = Instance.new("Part", Torso)
                      pzp2.Size = Vector3.new(1, 1, 1)
                      pzp2.CanCollide = false
                      pzp2.Transparency = 1
                      pzpweld2 = vg(pzp2, pzp)
                      pzpweld2.C0 = CFrame.new(12, 3, 0)
                      pzp3 = Instance.new("Part", Torso)
                      pzp3.Size = Vector3.new(1, 1, 1)
                      pzp3.CanCollide = false
                      pzp3.Transparency = 1
                      pzpweld3 = vg(pzp3, pzp)
                      pzpweld3.C0 = CFrame.new(-12, 3, 0)
                      pzp4 = Instance.new("Part", Torso)
                      pzp4.Size = Vector3.new(1, 1, 1)
                      pzp4.CanCollide = false
                      pzp4.Transparency = 1
                      pzpweld4 = vg(pzp4, Root)
                      pzpweld4.C0 = CFrame.new(0, 0, 10.5)
                      earthquak = Instance.new("Sound", Torso)
                      earthquak.Volume = 9
                      earthquak.SoundId = "rbxassetid://2017948224"
                      earthquak.Looped = true
                      earthquak:Play()
                      tornad = Instance.new("Sound", windball)
                      tornad.Volume = 10
                      tornad.Looped = true
                      tornad.SoundId = "rbxassetid://1245010022"
                      tornad:Play()
                      g1 = Instance.new("BodyGyro", Root)
                      g1.D = 175
                      g1.P = 20000
                      g1.MaxTorque = Vector3.new(0, 9000, 0)
                      winddashing = true
                      while winddashing do
                        Hit = damagealll(35, Torso.Position)
                        for fe, fg in pairs(Hit) do
                          if whitetotem then
                          else
                          end
                          vel = Instance.new("BodyVelocity", fg:FindFirstChild("Torso") or fg:FindFirstChild("UpperTorso"))
                          vel.maxForce = Vector3.new(9999999999999, 9999999999999, 9999999999999)
                          torso = fg:FindFirstChild("Torso") or fg:FindFirstChild("UpperTorso")
                          vel.velocity = CFrame.new(Torso.Position, torso.Position).lookVector * 190
                          removeuseless:AddItem(vel, 0.1)
                        end
                        if mouse.Target ~= nil then
                          sk = Instance.new("Part", Torso)
                          sk.CanCollide = false
                          sk.Anchored = true
                          sk.BrickColor = BrickColor.new("White")
                          sk.Name = "sk"
                          sk.CFrame = pzp4.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), 0, math.rad(math.random(-180, 180)))
                          skmesh = Instance.new("SpecialMesh", sk)
                          skmesh.MeshId = "rbxassetid://662586858"
                          skmesh.Name = "windwave"
                          skmesh.Scale = Vector3.new(0.01, 0.01, 0.01)
                          removeuseless:AddItem(sk, 4)
                          for fe, fg in pairs(Torso:GetDescendants()) do
                            if fg.Name == "windwave" then
                              fg.Scale = fg.Scale + Vector3.new(0.02, 0, 0.02)
                              fg.Parent.Transparency = fg.Parent.Transparency + 0.025
                            end
                          end
                          vb.C0 = vb.C0:lerp(CFrame.new(1.6, 0.5 - 0.1 * -math.sin(sine / 12), 0) * CFrame.Angles(math.rad(35 - 2 * math.sin(sine / 12)), math.rad(0), math.rad(25 + 5 * math.sin(sine / 12))), 0.5)
                          vc.C0 = vc.C0:lerp(CFrame.new(-1.6, 0.5 - 0.1 * -math.sin(sine / 12), 0) * CFrame.Angles(math.rad(35 - 2 * math.sin(sine / 12)), math.rad(0), math.rad(-25 - 5 * math.sin(sine / 12))), 0.5)
                          va.C0 = va.C0:lerp(CFrame.Angles(math.rad(-41), math.rad(0), math.rad(0)), 0.5)
                          vd.C0 = vd.C0:lerp(CFrame.new(-0.54, 2 + 0.02 * math.sin(sine / 12), 0.2 + 0.1 * math.sin(sine / 12)) * CFrame.Angles(math.rad(25 + 5 * math.sin(sine / 12)), math.rad(-20), math.rad(0)), 0.5)
                          ve.C0 = ve.C0:lerp(CFrame.new(0.54, 2 + 0.02 * math.sin(sine / 12), 0.2 + 0.1 * math.sin(sine / 12)) * CFrame.Angles(math.rad(25 + 5 * math.sin(sine / 12)), math.rad(20), math.rad(0)), 0.5)
                          earthquak.Volume = 9
                          g1.CFrame = g1.CFrame:lerp(CFrame.new(Root.Position, mouse.Hit.p), 0.2)
                          Root.CFrame = Root.CFrame * CFrame.new(0, 0, -4)
                          coroutine.wrap(function()
                            Instance.new("Part", Torso).Size = Vector3.new(6, 6, 6)
                            Instance.new("Part", Torso).Material = "Grass"
                            Instance.new("Part", Torso).BrickColor = BrickColor.new("Bright green")
                            Instance.new("Part", Torso).Anchored = true
                            Instance.new("Part", Torso).Transparency = 0
                            Instance.new("Part", Torso).CanCollide = false
                            Instance.new("Part", Torso).CFrame = pzp3.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)))
                            Instance.new("Part", Torso).Size = Vector3.new(6, 6, 6)
                            Instance.new("Part", Torso).Material = "Grass"
                            Instance.new("Part", Torso).Anchored = true
                            Instance.new("Part", Torso).BrickColor = BrickColor.new("Bright green")
                            Instance.new("Part", Torso).Transparency = 0
                            Instance.new("Part", Torso).CanCollide = false
                            Instance.new("Part", Torso).CFrame = pzp2.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)))
                            wait(2)
                            for fg = 1, 25 do
                              Instance.new("Part", Torso).Transparency = Instance.new("Part", Torso).Transparency + 0.05
                              Instance.new("Part", Torso).Transparency = Instance.new("Part", Torso).Transparency + 0.05
                              swait()
                            end
                            Instance.new("Part", Torso):Remove()
                            Instance.new("Part", Torso):Remove()
                          end)()
                        else
                          for fe, fg in pairs(Torso:GetDescendants()) do
                            if fg.Name == "windwave" then
                              fg.Scale = fg.Scale + Vector3.new(0.02, 0, 0.02)
                              fg.Parent.Transparency = fg.Parent.Transparency + 0.01
                            end
                          end
                          earthquak.Volume = 0
                          va.C0 = va.C0:lerp(CFrame.new(0, -0.2 + -0.1 * math.sin(sine / 12), 0) * CFrame.Angles(math.rad(0), math.rad(25), math.rad(0)), 0.4)
                          vb.C0 = vb.C0:lerp(CFrame.new(1, -0.2, 0.4) * CFrame.Angles(math.rad(-87 + 0.01 * math.sin(sine / 9)), math.rad(80 - 3 * math.sin(sine / 9)), math.rad(0)), 0.4)
                          vc.C0 = vc.C0:lerp(CFrame.new(-0.7, -0.2, 0.4) * CFrame.Angles(math.rad(-87 - 0.01 * math.sin(sine / 9)), math.rad(-88 + 0.7 * math.sin(sine / 9)), math.rad(0)), 0.4)
                          vd.C1 = vd.C1:lerp(CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(0), 0, 0), 0.4)
                          vd.C0 = vd.C0:lerp(CFrame.new(-0.3, 2 - 0.1 * math.sin(sine / 12), 0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(-10)), 0.4)
                          ve.C1 = ve.C1:lerp(CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 0.4)
                          ve.C0 = ve.C0:lerp(CFrame.new(0.3, 2 - 0.1 * math.sin(sine / 12), 0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(10)), 0.4)
                        end
                        swait()
                      end
                    end
                  elseif a == "f" then
                    if avatarstate then
                      return
                    end
                    if debounce then
                      return
                    end
                    debounce = true
                    attacking = true
                    allowlev = false
                    avatarstatee = Instance.new("Sound", Torso)
                    avatarstatee.SoundId = "rbxassetid://2496371442"
                    avatarstatee.Volume = 10
                    avatarstatee:Play()
                    coroutine.wrap(function()
                      for fd = 1, 100 do
                        va.C0 = va.C0:lerp(CFrame.new(-0.54, 1.9, -0.2) * CFrame.Angles(math.rad(-25 + 5 * math.sin(sine / 12)), math.rad(20), math.rad(0)), 0.05)
                        vb.C0 = vb.C0:lerp(CFrame.new(0.54, 1.9, -0.2) * CFrame.Angles(math.rad(-25 + 5 * math.sin(sine / 12)), math.rad(-20), math.rad(0)), 0.05)
                        vc.C0 = vc.C0:lerp(CFrame.new(1.5, 0.75, 0.5) * CFrame.Angles(math.rad(-60), math.rad(-20 + 1 * math.sin(sine / 12)), 0), 0.05)
                        vd.C0 = vd.C0:lerp(CFrame.new(-1.5, 0.75, 0.5) * CFrame.Angles(math.rad(-60), math.rad(20 - 1 * math.sin(sine / 12)), 0), 0.05)
                        ve.C0 = ve.C0:Lerp(CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(-60), 0, 0), 0.05)
                        swait()
                      end
                    end)()
                    for fe = 1, 140 do
                      doomtheme.Volume = doomtheme.Volume - 0.05
                      swait()
                    end
                    doomtheme.Volume = 6
                    doomtheme:Play()
                    levitatewave3 = Instance.new("Part", Torso)
                    levitatewave3.Size = Vector3.new(1, 1, 1)
                    levitatewave3.CanCollide = false
                    levitatewave3.Anchored = false
                    levitatewave3.Transparency = 0.75
                    levitatewave3.BrickColor = BrickColor.new("White")
                    levitatewave3.CFrame = CFrame.new(Root.Position) * CFrame.new(0, -5, 0)
                    levitatewavemesh3 = Instance.new("SpecialMesh", levitatewave3)
                    levitatewavemesh3.Scale = Vector3.new(11, 1.25, 11)
                    levitatewavemesh3.MeshId = "rbxassetid://20329976"
                    levitatewaveweld3 = vg(levitatewave3, locbrick1)
                    levitatewave4 = Instance.new("Part", Torso)
                    levitatewave4.Size = Vector3.new(1, 1, 1)
                    levitatewave4.CanCollide = false
                    levitatewave4.Anchored = false
                    levitatewave4.Transparency = 0.75
                    levitatewave4.BrickColor = BrickColor.new("White")
                    levitatewave4.CFrame = CFrame.new(Root.Position) * CFrame.new(0, -5, 0)
                    levitatewavemesh4 = Instance.new("SpecialMesh", levitatewave4)
                    levitatewavemesh4.Scale = Vector3.new(15, 2, 15)
                    levitatewavemesh4.MeshId = "rbxassetid://20329976"
                    levitatewaveweld4 = vg(levitatewave4, locbrick1)
                    levitatewave5 = Instance.new("Part", Torso)
                    levitatewave5.Size = Vector3.new(1, 1, 1)
                    levitatewave5.CanCollide = false
                    levitatewave5.Anchored = false
                    levitatewave5.Transparency = 0.75
                    levitatewave5.BrickColor = BrickColor.new("White")
                    levitatewave5.CFrame = CFrame.new(Root.Position) * CFrame.new(0, -5, 0)
                    levitatewavemesh5 = Instance.new("SpecialMesh", levitatewave5)
                    levitatewavemesh5.Scale = Vector3.new(24, 6, 24)
                    levitatewavemesh5.MeshId = "rbxassetid://20329976"
                    levitatewaveweld5 = vg(levitatewave5, locbrick1)
                    levitatewave6 = Instance.new("Part", Torso)
                    levitatewave6.Size = Vector3.new(1, 1, 1)
                    levitatewave6.CanCollide = false
                    levitatewave6.Anchored = false
                    levitatewave6.Transparency = 0.75
                    levitatewave6.BrickColor = BrickColor.new("White")
                    levitatewave6.CFrame = CFrame.new(Root.Position) * CFrame.new(0, -5, 0)
                    levitatewavemesh6 = Instance.new("SpecialMesh", levitatewave6)
                    levitatewavemesh6.Scale = Vector3.new(23, 6, 23)
                    levitatewavemesh6.MeshId = "rbxassetid://20329976"
                    levitatewaveweld6 = vg(levitatewave6, locbrick1)
                    windblocks3 = Instance.new("Part", Torso)
                    windblocks3.Size = Vector3.new(1, 1, 1)
                    windblocks3.Transparency = 1
                    windblocks3.Anchored = false
                    windblocks3.CanCollide = false
                    windblocks3weld = vg(windblocks3, Root)
                    windblocks4 = Instance.new("Part", Torso)
                    windblocks4.Size = Vector3.new(1, 1, 1)
                    windblocks4.Transparency = 1
                    windblocks4.Anchored = false
                    windblocks4.CanCollide = false
                    windblocks4weld = vg(windblocks4, Root)
                    windring3 = Instance.new("Part", Torso)
                    windring3.Size = Vector3.new(1, 1, 1)
                    windring3.Transparency = 0.9
                    windring3.Anchored = false
                    windring3.BrickColor = BrickColor.new("Really white")
                    windring3.CanCollide = false
                    ringh3 = Instance.new("SpecialMesh", windring3)
                    ringh3.MeshId = "http://www.roblox.com/asset/?id=3270017"
                    ringh3.Scale = Vector3.new(39, 39, 4)
                    windring3weld = vg(windring3, windblocks3)
                    windring4 = Instance.new("Part", Torso)
                    windring4.Size = Vector3.new(1, 1, 1)
                    windring4.Transparency = 0.9
                    windring4.Anchored = false
                    windring4.BrickColor = BrickColor.new("Really white")
                    windring4.CanCollide = false
                    ringh4 = Instance.new("SpecialMesh", windring4)
                    ringh4.MeshId = "http://www.roblox.com/asset/?id=3270017"
                    ringh4.Scale = Vector3.new(39, 39, 4)
                    windring4weld = vg(windring4, windblocks4)
                    wind3 = Instance.new("Part", Torso)
                    wind3.Size = Vector3.new(0.5, 0.5, 0.5)
                    wind3.Material = "Neon"
                    wind3.BrickColor = BrickColor.new("Really white")
                    wind3.Transparency = 0.88
                    wind3.CanCollide = false
                    windMESH3 = Instance.new("SpecialMesh", wind3)
                    windMESH3.Scale = Vector3.new(9.5, 9.5, 9.5)
                    windMESH3.MeshId = "rbxassetid://168892432"
                    windWeld3 = vg(wind3, Root)
                    windWeld3.C0 = CFrame.new(0, -10, 0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0))
                    wind4 = Instance.new("Part", Torso)
                    wind4.Size = Vector3.new(0.5, 0.5, 0.5)
                    wind4.Material = "Neon"
                    wind4.BrickColor = BrickColor.new("Really white")
                    wind4.Transparency = 0.96
                    wind4.CanCollide = false
                    windMESH4 = Instance.new("SpecialMesh", wind4)
                    windMESH4.Scale = Vector3.new(12, 12, 12)
                    windMESH4.MeshId = "rbxassetid://168892432"
                    windWeld4 = vg(wind4, Root)
                    windWeld4.C0 = CFrame.new(0, -10, 0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0))
                    waind = 0
                    for fe = 1, 50 do
                      waind = waind + 5
                      Instance.new("Part", Torso).Material = "Neon"
                      Instance.new("Part", Torso).BrickColor = BrickColor.new("White")
                      Instance.new("Part", Torso).Anchored = true
                      Instance.new("Part", Torso).Transparency = 0.5
                      Instance.new("Part", Torso).CanCollide = false
                      Instance.new("Part", Torso).Size = Vector3.new(5 + waind, 5 + waind, 5 + waind)
                      Instance.new("Part", Torso).Name = "waind2"
                      Instance.new("Part", Torso).CFrame = Root.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)))
                      removeuseless:AddItem(Instance.new("Part", Torso), 6)
                      coroutine.wrap(function()
                        for fd = 1, 40 do
                          va.Transparency = va.Transparency + 0.025
                          swait()
                        end
                        va:Remove()
                      end)()
                      swait(1)
                    end
                    avatarstate = true
                    debounce = false
                    attacking = false
                    allowlev = true
                  elseif a == "g" then
                    if debounce then
                      return
                    end
                    debounce = true
                    attacking = true
                    allowlev = false
                    ws = 6
                    g1 = Instance.new("BodyGyro", Root)
                    g1.D = 175
                    g1.P = 20000
                    g1.MaxTorque = Vector3.new(0, 9000, 0)
                    coroutine.wrap(function()
                      for fd = 1, 85 do
                        coroutine.wrap(function()
                          Instance.new("Part", Torso).CFrame = rightlocation.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)))
                          Instance.new("Part", Torso).Material = "Neon"
                          Instance.new("Part", Torso).BrickColor = BrickColor.new("White")
                          Instance.new("Part", Torso).Transparency = 0.75
                          Instance.new("Part", Torso).Size = Vector3.new(1, 1, 1)
                          Instance.new("Part", Torso).Anchored = true
                          Instance.new("Part", Torso).CanCollide = false
                          Instance.new("Part", Torso).CFrame = leftlocation.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)))
                          Instance.new("Part", Torso).Material = "Neon"
                          Instance.new("Part", Torso).BrickColor = BrickColor.new("White")
                          Instance.new("Part", Torso).Transparency = 0.75
                          Instance.new("Part", Torso).Size = Vector3.new(1, 1, 1)
                          Instance.new("Part", Torso).Anchored = true
                          Instance.new("Part", Torso).CanCollide = false
                          for fg = 1, 25 do
                            Instance.new("Part", Torso).Size = Instance.new("Part", Torso).Size + Vector3.new(2, 2, 2)
                            Instance.new("Part", Torso).Transparency = Instance.new("Part", Torso).Transparency + 0.05
                            Instance.new("Part", Torso).Size = Instance.new("Part", Torso).Size + Vector3.new(2, 2, 2)
                            Instance.new("Part", Torso).Transparency = Instance.new("Part", Torso).Transparency + 0.05
                            swait()
                          end
                          Instance.new("Part", Torso):Remove()
                          Instance.new("Part", Torso):Remove()
                        end)()
                        sk = Instance.new("Part", Torso)
                        sk.CanCollide = false
                        sk.Anchored = true
                        sk.BrickColor = BrickColor.new("White")
                        sk.Name = "sk"
                        sk.CFrame = rightlocation.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), 0, math.rad(math.random(-180, 180)))
                        skmesh = Instance.new("SpecialMesh", sk)
                        skmesh.MeshId = "rbxassetid://662586858"
                        skmesh.Name = "windwave"
                        skmesh.Scale = Vector3.new(0.04, 0.01, 0.04)
                        removeuseless:AddItem(sk, 2)
                        sk2 = Instance.new("Part", Torso)
                        sk2.CanCollide = false
                        sk2.Anchored = true
                        sk2.BrickColor = BrickColor.new("White")
                        sk2.Name = "sk2"
                        sk2.CFrame = leftlocation.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), 0, math.rad(math.random(-180, 180)))
                        skmesh2 = Instance.new("SpecialMesh", sk2)
                        skmesh2.MeshId = "rbxassetid://662586858"
                        skmesh2.Name = "windwave2"
                        skmesh2.Scale = Vector3.new(0.04, 0.01, 0.04)
                        removeuseless:AddItem(sk2, 2)
                        for fj, fk in pairs(Torso:GetDescendants()) do
                          if fk.Name == "windwave" then
                            fk.Parent.Transparency = fk.Parent.Transparency + 0.045
                            fk.Scale = fk.Scale + Vector3.new(0.005, 0, 0.005)
                          end
                        end
                        for fj, fk in pairs(Torso:GetDescendants()) do
                          if fk.Name == "windwave2" then
                            fk.Parent.Transparency = fk.Parent.Transparency + 0.045
                            fk.Scale = fk.Scale + Vector3.new(0.005, 0, 0.005)
                          end
                        end
                        swait()
                      end
                    end)()
                    Wind = Instance.new("Sound", Torso)
                    Wind.Volume = 8
                    Wind.SoundId = "rbxassetid://147348734"
                    Wind.Pitch = 1.2
                    Wind:Play()
                    removeuseless:AddItem(Wind, 6)
                    for fe = 1, 85 do
                      g1.CFrame = g1.CFrame:lerp(CFrame.new(Root.Position, mouse.Hit.p), 0.2)
                      va.C0 = va.C0:Lerp(CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(30), 0, 0), 0.3)
                      vc.C0 = vc.C0:lerp(CFrame.new(0.5, 2, 0) * CFrame.Angles(math.rad(0), math.rad(20), math.rad(-140)), 0.3)
                      vb.C0 = vb.C0:lerp(CFrame.new(-0.5, 2, 0) * CFrame.Angles(math.rad(0), math.rad(-20), math.rad(140)), 0.3)
                      swait()
                    end
                    coroutine.wrap(function()
                      for fd = 1, 15 do
                        sk = Instance.new("Part", Torso)
                        sk.CanCollide = false
                        sk.Anchored = true
                        sk.BrickColor = BrickColor.new("White")
                        sk.Name = "sk"
                        sk.CFrame = rightlocation.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), 0, math.rad(math.random(-180, 180)))
                        skmesh = Instance.new("SpecialMesh", sk)
                        skmesh.MeshId = "rbxassetid://662586858"
                        skmesh.Name = "xm"
                        skmesh.Scale = Vector3.new(0.04, 0.01, 0.04)
                        removeuseless:AddItem(sk, 2)
                        sk2 = Instance.new("Part", Torso)
                        sk2.CanCollide = false
                        sk2.Anchored = true
                        sk2.BrickColor = BrickColor.new("White")
                        sk2.Name = "sk2"
                        sk2.CFrame = leftlocation.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), 0, math.rad(math.random(-180, 180)))
                        skmesh2 = Instance.new("SpecialMesh", sk2)
                        skmesh2.MeshId = "rbxassetid://662586858"
                        skmesh2.Name = "mx"
                        skmesh2.Scale = Vector3.new(0.04, 0.01, 0.04)
                        removeuseless:AddItem(sk2, 2)
                        for fj, fk in pairs(Torso:GetDescendants()) do
                          if fk.Name == "mx" then
                            fk.Scale = fk.Scale + Vector3.new(0.03, 0, 0.03)
                            fk.Parent.Transparency = fk.Parent.Transparency + 0.05
                          end
                        end
                        for fj, fk in pairs(Torso:GetDescendants()) do
                          if fk.Name == "xm" then
                            fk.Scale = fk.Scale + Vector3.new(0.03, 0, 0.03)
                            fk.Parent.Transparency = fk.Parent.Transparency + 0.05
                          end
                        end
                        swait()
                      end
                      for fd = 1, 45 do
                        for fj, fk in pairs(Torso:GetDescendants()) do
                          if fk.Name == "mx" then
                            fk.Scale = fk.Scale + Vector3.new(0.03, 0, 0.03)
                            fk.Parent.Transparency = fk.Parent.Transparency + 0.05
                          end
                        end
                        for fj, fk in pairs(Torso:GetDescendants()) do
                          if fk.Name == "xm" then
                            fk.Scale = fk.Scale + Vector3.new(0.03, 0, 0.03)
                            fk.Parent.Transparency = fk.Parent.Transparency + 0.05
                          end
                        end
                        swait()
                      end
                    end)()
                    removeuseless:AddItem(g1, 0.001)
                    coroutine.wrap(function()
                      for fd = 1, 50 do
                        swait()
                        for fj, fk in pairs(Torso:GetDescendants()) do
                          if fk.Name == "windwave" then
                            fk.Parent.Transparency = fk.Parent.Transparency + 0.045
                            fk.Scale = fk.Scale + Vector3.new(0.005, 0, 0.005)
                          end
                        end
                        for fj, fk in pairs(Torso:GetDescendants()) do
                          if fk.Name == "windwave2" then
                            fk.Parent.Transparency = fk.Parent.Transparency + 0.045
                            fk.Scale = fk.Scale + Vector3.new(0.005, 0, 0.005)
                          end
                        end
                      end
                    end)()
                    ws = 0
                    SOUND(Torso, 2458107258, 10, false, 4)
                    coroutine.wrap(function()
                      SOUND(Instance.new("Part", Torso), 479309152, 8, true, 50)
                      Instance.new("Part", Torso).Size = Vector3.new(5, 5, 5)
                      Instance.new("Part", Torso).Name = "blastpart"
                      Instance.new("Part", Torso).Anchored = true
                      Instance.new("Part", Torso).Transparency = 1
                      Instance.new("Part", Torso).CanCollide = false
                      Instance.new("Part", Torso).CFrame = Root.CFrame
                      Instance.new("Part", (Instance.new("Part", Torso))).Size = Vector3.new(5, 5, 5)
                      Instance.new("Part", (Instance.new("Part", Torso))).CanCollide = false
                      Instance.new("Part", (Instance.new("Part", Torso))).Anchored = true
                      Instance.new("Part", (Instance.new("Part", Torso))).Transparency = 1
                      Instance.new("Part", (Instance.new("Part", Torso))).CFrame = Instance.new("Part", Torso).CFrame * CFrame.new(-5, 0, 0)
                      Instance.new("Part", (Instance.new("Part", Torso))).Size = Vector3.new(1, 1, 1)
                      Instance.new("Part", (Instance.new("Part", Torso))).CanCollide = false
                      Instance.new("Part", (Instance.new("Part", Torso))).Anchored = true
                      Instance.new("Part", (Instance.new("Part", Torso))).Transparency = 1
                      Instance.new("Part", (Instance.new("Part", Torso))).CFrame = Instance.new("Part", Torso).CFrame * CFrame.new(-5, 0, 0)
                      for fh = 1, 175 do
                        Hit = damagealll(58, Instance.new("Part", Torso).Position)
                        for fm, fo in pairs(Hit) do
                          if whitetotem then
                          else
                            if avatarstate then
                            else
                            end
                          end
                          vel = Instance.new("BodyVelocity", fo:FindFirstChild("Torso") or fo:FindFirstChild("UpperTorso"))
                          vel.maxForce = Vector3.new(9999999999999, 9999999999999, 9999999999999)
                          torso = fo:FindFirstChild("Torso") or fo:FindFirstChild("UpperTorso")
                          vel.velocity = CFrame.new(Instance.new("Part", Torso).Position, torso.Position).lookVector * 100
                          removeuseless:AddItem(vel, 0.1)
                        end
                        coroutine.wrap(function()
                          Instance.new("Part", Torso).CanCollide = false
                          Instance.new("Part", Torso).Anchored = true
                          Instance.new("Part", Torso).BrickColor = BrickColor.new("White")
                          Instance.new("Part", Torso).Name = "sk"
                          Instance.new("Part", Torso).CFrame = va.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), 0, math.rad(math.random(-180, 180)))
                          Instance.new("SpecialMesh", (Instance.new("Part", Torso))).MeshId = "rbxassetid://662586858"
                          Instance.new("SpecialMesh", (Instance.new("Part", Torso))).Name = "windwave"
                          Instance.new("SpecialMesh", (Instance.new("Part", Torso))).Scale = Vector3.new(0.04, 0.01, 0.04)
                          removeuseless:AddItem(Instance.new("Part", Torso), 2)
                          Instance.new("Part", Torso).CanCollide = false
                          Instance.new("Part", Torso).Anchored = true
                          Instance.new("Part", Torso).BrickColor = BrickColor.new("White")
                          Instance.new("Part", Torso).Name = "sk2"
                          Instance.new("Part", Torso).CFrame = vb.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), 0, math.rad(math.random(-180, 180)))
                          Instance.new("SpecialMesh", (Instance.new("Part", Torso))).MeshId = "rbxassetid://662586858"
                          Instance.new("SpecialMesh", (Instance.new("Part", Torso))).Name = "windwave2"
                          Instance.new("SpecialMesh", (Instance.new("Part", Torso))).Scale = Vector3.new(0.04, 0.01, 0.04)
                          removeuseless:AddItem(Instance.new("Part", Torso), 2)
                          Instance.new("Part", Torso).CFrame = vc.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)))
                          Instance.new("Part", Torso).Material = "Neon"
                          Instance.new("Part", Torso).Transparency = 0.6
                          Instance.new("Part", Torso).Size = Vector3.new(42, 42, 42)
                          Instance.new("Part", Torso).Anchored = true
                          Instance.new("Part", Torso).CanCollide = false
                          for fk = 1, 25 do
                            Instance.new("SpecialMesh", (Instance.new("Part", Torso))).Scale = Instance.new("SpecialMesh", (Instance.new("Part", Torso))).Scale + Vector3.new(0.09, 0, 0.09)
                            Instance.new("SpecialMesh", (Instance.new("Part", Torso))).Scale = Instance.new("SpecialMesh", (Instance.new("Part", Torso))).Scale + Vector3.new(0.09, 0, 0.09)
                            Instance.new("SpecialMesh", (Instance.new("Part", Torso))).Parent.Transparency = Instance.new("SpecialMesh", (Instance.new("Part", Torso))).Parent.Transparency + 0.04
                            Instance.new("SpecialMesh", (Instance.new("Part", Torso))).Parent.Transparency = Instance.new("SpecialMesh", (Instance.new("Part", Torso))).Parent.Transparency + 0.04
                            Instance.new("Part", Torso).Transparency = Instance.new("Part", Torso).Transparency + 0.022
                            swait()
                          end
                          Instance.new("Part", Torso):Remove()
                          Instance.new("Part", Torso):Remove()
                          Instance.new("Part", Torso):Remove()
                        end)()
                        Instance.new("Part", Torso).CFrame = Instance.new("Part", Torso).CFrame * CFrame.new(0, 0, -4.5)
                        Instance.new("Part", (Instance.new("Part", Torso))).CFrame = Instance.new("Part", Torso).CFrame * CFrame.new(10, -8, 0)
                        Instance.new("Part", (Instance.new("Part", Torso))).CFrame = Instance.new("Part", Torso).CFrame * CFrame.new(-10, -8, 0)
                        Instance.new("Part", (Instance.new("Part", Torso))).Size = Vector3.new(1, 1, 1)
                        Instance.new("Part", (Instance.new("Part", Torso))).Size = Vector3.new(1, 1, 1)
                        swait()
                      end
                      Instance.new("Part", (Instance.new("Part", Torso))):Remove()
                      Instance.new("Part", Torso):Remove()
                      Instance.new("Part", (Instance.new("Part", Torso))):Remove()
                    end)()
                    for fe = 1, 35 do
                      va.C0 = va.C0:Lerp(CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(0), 0, 0), 0.3)
                      vb.C0 = vb.C0:lerp(CFrame.new(1.2, 0.8, 0.5) * CFrame.Angles(math.rad(-90), math.rad(25), math.rad(3)), 0.3)
                      vc.C0 = vc.C0:lerp(CFrame.new(-1.2, 0.8, 0.5) * CFrame.Angles(math.rad(-90), math.rad(-25), math.rad(-3)), 0.3)
                      swait()
                    end
                    ws = 90
                    allowlev = true
                    attacking = false
                    debounce = false
                  elseif a == "q" then
                    if debounce then
                      return
                    end
                    attacking = true
                    debounce = true
                    if spwt then
                      SOUND(Torso, 339027743, 8, false, 4)
                      coroutine.wrap(function()
                        for fd = 1, 10 do
                          sk = Instance.new("Part", Torso)
                          sk.CanCollide = false
                          sk.Anchored = true
                          sk.BrickColor = BrickColor.new(colors2)
                          sk.Name = "sk"
                          sk.CFrame = waterlocbrick2.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), 0, math.rad(math.random(-180, 180)))
                          skmesh = Instance.new("SpecialMesh", sk)
                          skmesh.MeshId = "rbxassetid://662586858"
                          skmesh.Name = "sklol3"
                          skmesh.Scale = Vector3.new(0.04, 0.01, 0.04)
                          removeuseless:AddItem(sk, 2)
                        end
                        for fd = 1, 25 do
                          for fj, fk in pairs(Torso:GetDescendants()) do
                            if fk.Name == "sklol3" then
                              fk.Scale = fk.Scale + Vector3.new(0.01, 0, 0.01)
                            end
                          end
                          swait()
                        end
                      end)()
                      coroutine.wrap(function()
                        for fd = 1, 10 do
                          sk = Instance.new("Part", Torso)
                          sk.CanCollide = false
                          sk.Anchored = true
                          sk.BrickColor = BrickColor.new(colors2)
                          sk.Name = "sk"
                          sk.CFrame = waterlocbrick.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), 0, math.rad(math.random(-180, 180)))
                          skmesh = Instance.new("SpecialMesh", sk)
                          skmesh.MeshId = "rbxassetid://662586858"
                          skmesh.Name = "sklol4"
                          skmesh.Scale = Vector3.new(0.04, 0.01, 0.04)
                          removeuseless:AddItem(sk, 2)
                        end
                        for fd = 1, 25 do
                          for fj, fk in pairs(Torso:GetDescendants()) do
                            if fk.Name == "sklol4" then
                              fk.Scale = fk.Scale + Vector3.new(0.02, 0, 0.02)
                            end
                          end
                          swait()
                        end
                      end)()
                      waterwaveb = Instance.new("Part", Torso)
                      waterwaveb.CFrame = waterlocbrick.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), 0, math.rad(math.random(-180, 180)))
                      waterwaveb.Size = Vector3.new(1, 1, 1)
                      waterwaveb.BrickColor = BrickColor.new(colors2)
                      waterwaveb.Transparency = 0.2
                      waterwaveb.CanCollide = false
                      waterwaveb.Anchored = true
                      waterwaveb.Material = "Neon"
                      waterwaveb2 = Instance.new("Part", Torso)
                      waterwaveb2.CFrame = waterlocbrick2.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), 0, math.rad(math.random(-180, 180)))
                      waterwaveb2.Size = Vector3.new(1, 1, 1)
                      waterwaveb2.BrickColor = BrickColor.new(colors2)
                      waterwaveb2.Transparency = 0.2
                      waterwaveb2.CanCollide = false
                      waterwaveb2.Anchored = true
                      waterwaveb2.Material = "Neon"
                      coroutine.wrap(function()
                        for fd = 1, 25 do
                          sow = sow - 0.25
                          waterwaveb.Size = waterwaveb.Size + Vector3.new(0.9, 0.9, 0.9)
                          waterwaveb2.Size = waterwaveb2.Size + Vector3.new(0.9, 0.9, 0.9)
                          waterwaveb.Transparency = waterwaveb.Transparency + 0.05
                          waterwaveb2.Transparency = waterwaveb2.Transparency + 0.05
                          swait()
                        end
                        spinwater = false
                        pxcbrick:Remove()
                        waterlocbrick:Remove()
                        waterlocbrick2:Remove()
                        waterwaveb:Remove()
                        waterwaveb2:Remove()
                        spwt = false
                        attacking = false
                        debounce = false
                      end)()
                    else
                      ws = 0
                      spinwater = true
                      spwt = true
                      coroutine.wrap(function()
                        Instance.new("Part", Torso).Shape = "Ball"
                        Instance.new("Part", Torso).Size = Vector3.new(1, 1, 1)
                        Instance.new("Part", Torso).Transparency = 0
                        Instance.new("Part", Torso).Anchored = true
                        Instance.new("Part", Torso).CanCollide = false
                        Instance.new("Part", Torso).BrickColor = BrickColor.new("Cyan")
                        Instance.new("Part", Torso).CFrame = Torso.CFrame
                        Instance.new("Part", Torso).Material = "Neon"
                        coroutine.wrap(function()
                          coroutine.wrap(function()
                            for fd = 1, 50 do
                              for fj, fk in pairs(Torso:GetDescendants()) do
                                if fk.Name == "sklol2" then
                                  fk.Scale = fk.Scale + Vector3.new(0.01, 0, 0.01)
                                  fk.Parent.Transparency = fk.Parent.Transparency + 0.05
                                end
                              end
                              swait()
                            end
                          end)()
                          for fd = 1, 15 do
                            swait()
                            sk = Instance.new("Part", Torso)
                            sk.CanCollide = false
                            sk.Anchored = true
                            sk.Material = "Neon"
                            sk.BrickColor = BrickColor.new(colors2)
                            sk.Name = "sk2"
                            sk.CFrame = Torso.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), 0, math.rad(math.random(-180, 180)))
                            skmesh = Instance.new("SpecialMesh", sk)
                            skmesh.MeshId = "rbxassetid://662586858"
                            skmesh.Name = "sklol2"
                            skmesh.Scale = Vector3.new(0.09, 0.01, 0.09)
                            removeuseless:AddItem(sk, 2)
                          end
                        end)()
                        for fe = 1, 30 do
                          Instance.new("Part", Torso).Size = Instance.new("Part", Torso).Size + Vector3.new(4, 4, 4)
                          Instance.new("Part", Torso).Transparency = Instance.new("Part", Torso).Transparency + 0.045
                          swait()
                        end
                      end)()
                      SOUND(Torso, 2136440257, 8, false, 8)
                      SOUND(Torso, 169486406, 10, false, 4)
                      coroutine.wrap(function()
                        pxcbrick = Instance.new("Part", Root)
                        pxcbrick.Size = Vector3.new(1, 1, 1)
                        pxcbrick.CanCollide = false
                        pxcbrick.Transparency = 1
                        pxcbrickweld = va(pxcbrick, Torso)
                        waterlocbrick = Instance.new("Part", Torso)
                        waterlocbrick.Size = Vector3.new(1, 1, 1)
                        waterlocbrick.Anchored = false
                        waterlocbrick.Transparency = 1
                        waterlocbrick.CanCollide = false
                        wazx = va(waterlocbrick, pxcbrick)
                        wazx.C0 = CFrame.new(0, 0, 0)
                        waterlocbrick2 = Instance.new("Part", Torso)
                        waterlocbrick2.Size = Vector3.new(1, 1, 1)
                        waterlocbrick2.Anchored = false
                        waterlocbrick2.Transparency = 1
                        waterlocbrick2.CanCollide = false
                        wazx2 = va(waterlocbrick2, pxcbrick)
                        wazx2.C0 = CFrame.new(0, 0, 0)
                        coroutine.wrap(function()
                          sow = 5
                          while spinwater do
                            colors2 = colortable2[math.random(1, #colortable2)]
                            waterwave = Instance.new("Part", waterlocbrick)
                            waterwave.BrickColor = BrickColor.new(colors2)
                            waterwave.Size = Vector3.new(sow, sow, sow)
                            waterwave.CFrame = waterlocbrick.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)))
                            waterwave.CanCollide = false
                            waterwave.Material = "Neon"
                            waterwave.Transparency = 0.4
                            waterwave.Name = "waterwave"
                            removeuseless:AddItem(waterwave, 1.3)
                            waterwave2 = Instance.new("Part", waterlocbrick2)
                            waterwave2.BrickColor = BrickColor.new(colors2)
                            waterwave2.Size = Vector3.new(sow, sow, sow)
                            waterwave2.Material = "Neon"
                            waterwave2.Transparency = 0.4
                            waterwave2.CFrame = waterlocbrick2.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)))
                            waterwave2.CanCollide = false
                            waterwave2.Name = "waterwave2"
                            removeuseless:AddItem(waterwave2, 1.3)
                            for fd, fe in pairs(waterlocbrick:GetDescendants()) do
                              if fe.Name == "waterwave" then
                                fe.Size = fe.Size - Vector3.new(0.3, 0.3, 0.3)
                              end
                            end
                            for fd, fe in pairs(waterlocbrick2:GetDescendants()) do
                              if fe.Name == "waterwave2" then
                                fe.Size = fe.Size - Vector3.new(0.3, 0.3, 0.3)
                              end
                            end
                            swait(0.1)
                          end
                        end)()
                        for fd = 1, 70 do
                          wazx.C0 = wazx.C0:lerp(CFrame.new(-15, 0, 0), 0.1)
                          wazx2.C0 = wazx2.C0:lerp(CFrame.new(15, 0, 0), 0.1)
                          swait()
                        end
                        mb = 25
                        for fd = 1, 40 do
                          pxcbrickweld.C0 = pxcbrickweld.C0:lerp(CFrame.new(0, 0, 0) * CFrame.Angles(0, math.rad(25), 0), 0.05)
                          swait()
                        end
                        coroutine.wrap(function()
                          coroutine.wrap(function()
                            if firsttimewtr then
                              return
                            end
                            firsttimewtr = true
                            while true do
                              for fd, fe in pairs(Torso:GetDescendants()) do
                                if fe.Name == "sklol4" then
                                  fe.Scale = fe.Scale + Vector3.new(0.01, 0, 0.01)
                                  fe.Parent.Transparency = fe.Parent.Transparency + 0.05
                                end
                              end
                              for fd, fe in pairs(Torso:GetDescendants()) do
                                if fe.Name == "sklol3" then
                                  fe.Scale = fe.Scale + Vector3.new(0.01, 0, 0.01)
                                  fe.Parent.Transparency = fe.Parent.Transparency + 0.05
                                end
                              end
                              swait()
                            end
                          end)()
                          while spinwater do
                            swait(15)
                            Hit = damagealll(14, waterlocbrick2.Position)
                            for fd, fe in pairs(Hit) do
                              coroutine.wrap(function()
                                for fd = 1, 10 do
                                  sk = Instance.new("Part", Torso)
                                  sk.CanCollide = false
                                  sk.Anchored = true
                                  sk.BrickColor = BrickColor.new(colors2)
                                  sk.Name = "sk"
                                  sk.CFrame = waterlocbrick2.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), 0, math.rad(math.random(-180, 180)))
                                  skmesh = Instance.new("SpecialMesh", sk)
                                  skmesh.MeshId = "rbxassetid://662586858"
                                  skmesh.Name = "sklol3"
                                  skmesh.Scale = Vector3.new(0.04, 0.01, 0.04)
                                  removeuseless:AddItem(sk, 2)
                                end
                              end)()
                              if bluetotem then
                              else
                                if avatarstate then
                                else
                                end
                              end
                              vel = Instance.new("BodyVelocity", fe:FindFirstChild("Torso") or fe:FindFirstChild("UpperTorso"))
                              vel.maxForce = Vector3.new(9999999999999, 9999999999999, 9999999999999)
                              torso = fe:FindFirstChild("Torso") or fe:FindFirstChild("UpperTorso")
                              vel.velocity = CFrame.new(Torso.Position, torso.Position).lookVector * 125
                              removeuseless:AddItem(vel, 0.1)
                              SOUND(waterlocbrick2, 169486406, 10, false, 4)
                            end
                            Hit = damagealll(14, waterlocbrick.Position)
                            for fd, fe in pairs(Hit) do
                              coroutine.wrap(function()
                                for fd = 1, 10 do
                                  sk = Instance.new("Part", Torso)
                                  sk.CanCollide = false
                                  sk.Anchored = true
                                  sk.BrickColor = BrickColor.new(colors2)
                                  sk.Name = "sk"
                                  sk.CFrame = waterlocbrick.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), 0, math.rad(math.random(-180, 180)))
                                  skmesh = Instance.new("SpecialMesh", sk)
                                  skmesh.MeshId = "rbxassetid://662586858"
                                  skmesh.Name = "sklol4"
                                  skmesh.Scale = Vector3.new(0.04, 0.01, 0.04)
                                  removeuseless:AddItem(sk, 2)
                                end
                              end)()
                              if bluetotem then
                              else
                              end
                              vel = Instance.new("BodyVelocity", fe:FindFirstChild("Torso") or fe:FindFirstChild("UpperTorso"))
                              vel.maxForce = Vector3.new(9999999999999, 9999999999999, 9999999999999)
                              torso = fe:FindFirstChild("Torso") or fe:FindFirstChild("UpperTorso")
                              vel.velocity = CFrame.new(Torso.Position, torso.Position).lookVector * 125
                              removeuseless:AddItem(vel, 0.1)
                              SOUND(waterlocbrick, 169486406, 10, false, 4)
                            end
                            swait()
                          end
                        end)()
                        while spinwater do
                          mb = mb - 3
                          pxcbrickweld.C0 = pxcbrickweld.C0:lerp(CFrame.new(0, 0, 0) * CFrame.Angles(0, math.rad(mb), 0), 0.1)
                          swait()
                        end
                      end)()
                      for fe = 1, 110 do
                        va.C0 = va.C0:Lerp(CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(25), 0, 0), 0.05)
                        vc.C0 = vc.C0:Lerp(CFrame.new(-1.65, 0.75, 0) * CFrame.Angles(math.rad(10), math.rad(5), math.rad(-35)), 0.05)
                        vb.C0 = vb.C0:Lerp(CFrame.new(1.65, 0.75, 0) * CFrame.Angles(math.rad(10), math.rad(-5), math.rad(35)), 0.05)
                        swait()
                      end
                      ws = 90
                      attacking = false
                      debounce = false
                    end
                  elseif a == "p" then
                    if debounce then
                      return
                    end
                    debounce = true
                    attacking = true
                    apocalypse = true
                    ws = 0
                    coroutine.wrap(function()
                      colors = colortable[math.random(1, #colortable)]
                      Instance.new("Part", Torso).Shape = "Ball"
                      Instance.new("Part", Torso).Size = Vector3.new(1, 1, 1)
                      Instance.new("Part", Torso).Transparency = 0
                      Instance.new("Part", Torso).Anchored = true
                      Instance.new("Part", Torso).CanCollide = false
                      Instance.new("Part", Torso).BrickColor = BrickColor.new(colors)
                      Instance.new("Part", Torso).CFrame = Torso.CFrame
                      Instance.new("Part", Torso).Material = "Neon"
                      for fe = 1, 30 do
                        Instance.new("Part", Torso).Size = Instance.new("Part", Torso).Size + Vector3.new(4, 4, 4)
                        Instance.new("Part", Torso).Transparency = Instance.new("Part", Torso).Transparency + 0.045
                        swait()
                      end
                    end)()
                    explosionsound = Instance.new("Sound", Torso)
                    explosionsound.Volume = 10
                    explosionsound.Pitch = 1
                    explosionsound:Play()
                    explosionsound.SoundId = "rbxassetid://1327085116"
                    coroutine.wrap(function()
                      while apocalypse do
                        swait(10)
                        if avatarstate then
                          Hit = damagealll(60, Torso.Position)
                        else
                          Hit = damagealll(32, Torso.Position)
                        end
                        for fd, fe in pairs(Hit) do
                          if redtotem then
                          else
                            if avatarstate then
                            else
                            end
                          end
                          vel = Instance.new("BodyVelocity", fe:FindFirstChild("Torso") or fe:FindFirstChild("UpperTorso"))
                          vel.maxForce = Vector3.new(9999999999999, 9999999999999, 9999999999999)
                          torso = fe:FindFirstChild("Torso") or fe:FindFirstChild("UpperTorso")
                          vel.velocity = CFrame.new(Torso.Position, torso.Position).lookVector * 60
                          removeuseless:AddItem(vel, 0.1)
                        end
                        explosionsound:Play()
                      end
                    end)()
                    coroutine.wrap(function()
                      while apocalypse do
                        swait(0.3)
                        wshockwave = Instance.new("Part", Torso)
                        wshockwave.Size = Vector3.new(1, 1, 1)
                        wshockwave.CanCollide = false
                        wshockwave.Anchored = true
                        wshockwave.Transparency = 0.45
                        wshockwave.BrickColor = BrickColor.new(colors)
                        wshockwave.CFrame = CFrame.new(Torso.Position) * CFrame.Angles(math.rad(math.random(-180, 180)), 0, math.rad(math.random(-180, 180)))
                        wshockwavemesh = Instance.new("SpecialMesh", wshockwave)
                        wshockwavemesh.Scale = Vector3.new(1, 0.05, 1)
                        wshockwavemesh.Name = "wswm"
                        wshockwavemesh.MeshId = "rbxassetid://20329976"
                        removeuseless:AddItem(wshockwave, 2)
                        fairebalz = Instance.new("Part", Torso)
                        fairebalz.Size = Vector3.new(0.1, 0.1, 0.1)
                        fairebalz.Transparency = 0
                        fairebalz.Name = "fairebalz"
                        fairebalz.BrickColor = BrickColor.new(colors)
                        fairebalz.Anchored = true
                        fairebalz.CanCollide = false
                        fairebalz.Material = "Neon"
                        fairebalz.CFrame = Root.CFrame * CFrame.new(math.random(-15, 15), math.random(-15, 15), math.random(-15, 15)) * CFrame.Angles(math.rad(math.random(-180, 180)), 0, math.rad(math.random(-180, 180)))
                        removeuseless:AddItem(fairebalz, 1)
                        sk = Instance.new("Part", Torso)
                        sk.CanCollide = false
                        sk.Anchored = true
                        sk.BrickColor = BrickColor.new(colors)
                        sk.Name = "sk"
                        sk.CFrame = Torso.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), 0, math.rad(math.random(-180, 180)))
                        skmesh = Instance.new("SpecialMesh", sk)
                        skmesh.MeshId = "rbxassetid://662586858"
                        skmesh.Name = "sklol"
                        skmesh.Scale = Vector3.new(0.09, 0.05, 0.09)
                        removeuseless:AddItem(sk, 2)
                        if not avatarstate then
                          for fd, fe in pairs(Torso:GetDescendants()) do
                            if fe.Name == "sklol" then
                              fe.Parent.Transparency = fe.Parent.Transparency + 0.06
                              fe.Scale = fe.Scale + Vector3.new(0.03, 0.001, 0.03)
                            end
                          end
                          for fd, fe in pairs(Torso:GetDescendants()) do
                            if fe.Name == "wswm" then
                              fe.Parent.Transparency = fe.Parent.Transparency + 0.05
                              fe.Scale = fe.Scale + Vector3.new(2, 0, 2)
                            end
                          end
                          for fd, fe in pairs(Torso:GetDescendants()) do
                            if fe.Name == "fairebalz" then
                              fe.Transparency = fe.Transparency + 0.05
                              fe.Size = fe.Size + Vector3.new(0.45, 0.45, 0.45)
                            end
                          end
                        else
                          for fd, fe in pairs(Torso:GetDescendants()) do
                            if fe.Name == "sklol" then
                              fe.Parent.Transparency = fe.Parent.Transparency + 0.06
                              fe.Scale = fe.Scale + Vector3.new(0.06, 0.002, 0.06)
                            end
                          end
                          for fd, fe in pairs(Torso:GetDescendants()) do
                            if fe.Name == "wswm" then
                              fe.Parent.Transparency = fe.Parent.Transparency + 0.05
                              fe.Scale = fe.Scale + Vector3.new(4, 0, 4)
                            end
                          end
                          for fd, fe in pairs(Torso:GetDescendants()) do
                            if fe.Name == "fairebalz" then
                              fe.Transparency = fe.Transparency + 0.05
                              fe.Size = fe.Size + Vector3.new(0.9, 0.9, 0.9)
                            end
                          end
                        end
                      end
                    end)()
                    for fe = 1, 135 do
                      va.C0 = va.C0:Lerp(CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(29 - 12 * math.sin(sine / 12)), 0, 0), 0.05)
                      vc.C0 = vc.C0:Lerp(CFrame.new(-1.65, 0.75, 0) * CFrame.Angles(math.rad(10), math.rad(5), math.rad(-35)), 0.05)
                      vb.C0 = vb.C0:Lerp(CFrame.new(1.65, 0.75, 0) * CFrame.Angles(math.rad(10), math.rad(-5), math.rad(35)), 0.05)
                      swait()
                    end
                    wait(0.1)
                    coroutine.wrap(function()
                      for fd = 1, 30 do
                        for fj, fk in pairs(Torso:GetDescendants()) do
                          if fk.Name == "sklol" then
                            fk.Parent.Transparency = fk.Parent.Transparency + 0.06
                            fk.Scale = fk.Scale + Vector3.new(0.03, 0.001, 0.03)
                          end
                        end
                        for fj, fk in pairs(Torso:GetDescendants()) do
                          if fk.Name == "fairebalz" then
                            fk.Transparency = fk.Transparency + 0.05
                            fk.Size = fk.Size + Vector3.new(0.25, 0.25, 0.25)
                          end
                        end
                        for fj, fk in pairs(Torso:GetDescendants()) do
                          if fk.Name == "wswm" then
                            fk.Parent.Transparency = fk.Parent.Transparency + 0.05
                            fk.Scale = fk.Scale + Vector3.new(2, 0, 2)
                          end
                        end
                        swait()
                      end
                    end)()
                    apocalypse = false
                    attacking = false
                    debounce = false
                    ws = 90
                    removeuseless:AddItem(explosionsound, 5)
                  elseif a == "u" then
                    if debounce then
                      return
                    end
                    debounce = true
                    attacking = true
                    ws = 16
                    g1 = Instance.new("BodyGyro", Root)
                    g1.D = 175
                    g1.P = 20000
                    g1.MaxTorque = Vector3.new(0, 9000, 0)
                    if avatarstate then
                      for fe = 1, 5 do
                        g1.CFrame = g1.CFrame:lerp(CFrame.new(Root.Position, mouse.Hit.p), 0.4)
                        va.C0 = va.C0:Lerp(CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(-30), 0, 0), 0.8)
                        vc.C0 = vc.C0:lerp(CFrame.new(-1.3, 0, 0.2) * CFrame.Angles(math.rad(30), math.rad(30), 0), 0.8)
                        vb.C0 = vb.C0:lerp(CFrame.new(1.3, 0, 0.2) * CFrame.Angles(math.rad(30), math.rad(-30), 0), 0.8)
                        swait()
                      end
                    else
                      for fe = 1, 15 do
                        g1.CFrame = g1.CFrame:lerp(CFrame.new(Root.Position, mouse.Hit.p), 0.2)
                        va.C0 = va.C0:Lerp(CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(-30), 0, 0), 0.4)
                        vc.C0 = vc.C0:lerp(CFrame.new(-1.3, 0, 0.2) * CFrame.Angles(math.rad(30), math.rad(30), 0), 0.4)
                        vb.C0 = vb.C0:lerp(CFrame.new(1.3, 0, 0.2) * CFrame.Angles(math.rad(30), math.rad(-30), 0), 0.4)
                        swait()
                      end
                    end
                    ws = 0
                    removeuseless:AddItem(g1, 0.001)
                    shieldlocbrick = Instance.new("Part", Torso)
                    shieldlocbrick.Size = Vector3.new(1, 1, 1)
                    shieldlocbrick.Anchored = true
                    shieldlocbrick.Transparency = 1
                    shieldlocbrick.CanCollide = false
                    shieldlocbrick.CFrame = Root.CFrame * CFrame.new(0, -6, -24)
                    Hit = damagealll(25, shieldlocbrick.Position)
                    for fe, fg in pairs(Hit) do
                      if browntotem then
                      else
                      end
                      vel = Instance.new("BodyVelocity", fg:FindFirstChild("Torso") or fg:FindFirstChild("UpperTorso"))
                      vel.maxForce = Vector3.new(9999999999999, 9999999999999, 9999999999999)
                      torso = fg:FindFirstChild("Torso") or fg:FindFirstChild("UpperTorso")
                      vel.velocity = CFrame.new(shieldlocbrick.Position, torso.Position).lookVector * 75
                      removeuseless:AddItem(vel, 0.1)
                    end
                    removeuseless:AddItem(shieldlocbrick, 5)
                    SOUND(shieldlocbrick, 1119859528, 8, false, 5)
                    coroutine.wrap(function()
                      Instance.new("Part", Torso).Material = "Grass"
                      Instance.new("Part", Torso).Anchored = true
                      Instance.new("Part", Torso).BrickColor = BrickColor.new("Bright green")
                      Instance.new("Part", Torso).Size = Vector3.new(4, math.random(42, 48), 12)
                      Instance.new("Part", Torso).CFrame = Root.CFrame * CFrame.new(0, -30, -18) * CFrame.Angles(math.rad(math.random(-8, -3)), math.rad(math.random(82, 98)), math.rad(math.random(-20, -15)))
                      Instance.new("Part", Torso).Material = "Grass"
                      Instance.new("Part", Torso).Anchored = true
                      Instance.new("Part", Torso).BrickColor = BrickColor.new("Bright green")
                      Instance.new("Part", Torso).Size = Vector3.new(4, math.random(42, 48), 12)
                      Instance.new("Part", Torso).CFrame = Root.CFrame * CFrame.new(8, -30, -18) * CFrame.Angles(math.rad(math.random(-8, -3)), math.rad(math.random(82, 98)), math.rad(math.random(-20, -15)))
                      Instance.new("Part", Torso).Material = "Grass"
                      Instance.new("Part", Torso).Anchored = true
                      Instance.new("Part", Torso).BrickColor = BrickColor.new("Bright green")
                      Instance.new("Part", Torso).Size = Vector3.new(4, math.random(42, 48), 12)
                      Instance.new("Part", Torso).CFrame = Root.CFrame * CFrame.new(-8, -30, -18) * CFrame.Angles(math.rad(math.random(-8, -3)), math.rad(math.random(82, 98)), math.rad(math.random(-20, -15)))
                      Instance.new("Part", Torso).Material = "Grass"
                      Instance.new("Part", Torso).Anchored = true
                      Instance.new("Part", Torso).BrickColor = BrickColor.new("Bright green")
                      Instance.new("Part", Torso).Size = Vector3.new(4, math.random(42, 48), 12)
                      Instance.new("Part", Torso).CFrame = Root.CFrame * CFrame.new(16, -30, -18) * CFrame.Angles(math.rad(math.random(-8, -3)), math.rad(math.random(82, 98)), math.rad(math.random(-20, -15)))
                      Instance.new("Part", Torso).Material = "Grass"
                      Instance.new("Part", Torso).Anchored = true
                      Instance.new("Part", Torso).BrickColor = BrickColor.new("Bright green")
                      Instance.new("Part", Torso).Size = Vector3.new(4, math.random(42, 48), 12)
                      Instance.new("Part", Torso).CFrame = Root.CFrame * CFrame.new(-16, -30, -18) * CFrame.Angles(math.rad(math.random(-8, -3)), math.rad(math.random(82, 98)), math.rad(math.random(-20, -15)))
                      for fk = 1, 15 do
                        Instance.new("Part", Torso).CFrame = Instance.new("Part", Torso).CFrame * CFrame.new(0, 2, 0)
                        Instance.new("Part", Torso).CFrame = Instance.new("Part", Torso).CFrame * CFrame.new(0, 2, 0)
                        Instance.new("Part", Torso).CFrame = Instance.new("Part", Torso).CFrame * CFrame.new(0, 2, 0)
                        Instance.new("Part", Torso).CFrame = Instance.new("Part", Torso).CFrame * CFrame.new(0, 2, 0)
                        Instance.new("Part", Torso).CFrame = Instance.new("Part", Torso).CFrame * CFrame.new(0, 2, 0)
                        swait()
                      end
                      for fk = 1, 5 do
                        Instance.new("Part", Torso).CFrame = Instance.new("Part", Torso).CFrame * CFrame.new(0, 0.2, 0)
                        Instance.new("Part", Torso).CFrame = Instance.new("Part", Torso).CFrame * CFrame.new(0, 0.2, 0)
                        Instance.new("Part", Torso).CFrame = Instance.new("Part", Torso).CFrame * CFrame.new(0, 0.2, 0)
                        Instance.new("Part", Torso).CFrame = Instance.new("Part", Torso).CFrame * CFrame.new(0, 0.2, 0)
                        Instance.new("Part", Torso).CFrame = Instance.new("Part", Torso).CFrame * CFrame.new(0, 0.2, 0)
                        swait()
                      end
                      for fk = 1, 5 do
                        Instance.new("Part", Torso).CFrame = Instance.new("Part", Torso).CFrame * CFrame.new(0, -0.2, 0)
                        Instance.new("Part", Torso).CFrame = Instance.new("Part", Torso).CFrame * CFrame.new(0, -0.2, 0)
                        Instance.new("Part", Torso).CFrame = Instance.new("Part", Torso).CFrame * CFrame.new(0, -0.2, 0)
                        Instance.new("Part", Torso).CFrame = Instance.new("Part", Torso).CFrame * CFrame.new(0, -0.2, 0)
                        Instance.new("Part", Torso).CFrame = Instance.new("Part", Torso).CFrame * CFrame.new(0, -0.2, 0)
                        swait()
                      end
                      wait(30)
                      for fk = 1, 6 do
                        Instance.new("Part", Torso).CFrame = Instance.new("Part", Torso).CFrame * CFrame.new(0, 0.4, 0)
                        Instance.new("Part", Torso).CFrame = Instance.new("Part", Torso).CFrame * CFrame.new(0, 0.4, 0)
                        Instance.new("Part", Torso).CFrame = Instance.new("Part", Torso).CFrame * CFrame.new(0, 0.4, 0)
                        Instance.new("Part", Torso).CFrame = Instance.new("Part", Torso).CFrame * CFrame.new(0, 0.4, 0)
                        Instance.new("Part", Torso).CFrame = Instance.new("Part", Torso).CFrame * CFrame.new(0, 0.4, 0)
                        swait()
                      end
                      for fk = 1, 30 do
                        Instance.new("Part", Torso).Transparency = Instance.new("Part", Torso).Transparency + 0.025
                        Instance.new("Part", Torso).Transparency = Instance.new("Part", Torso).Transparency + 0.025
                        Instance.new("Part", Torso).Transparency = Instance.new("Part", Torso).Transparency + 0.025
                        Instance.new("Part", Torso).Transparency = Instance.new("Part", Torso).Transparency + 0.025
                        Instance.new("Part", Torso).Transparency = Instance.new("Part", Torso).Transparency + 0.025
                        Instance.new("Part", Torso).CFrame = Instance.new("Part", Torso).CFrame * CFrame.new(0, -2, 0)
                        Instance.new("Part", Torso).CFrame = Instance.new("Part", Torso).CFrame * CFrame.new(0, -2, 0)
                        Instance.new("Part", Torso).CFrame = Instance.new("Part", Torso).CFrame * CFrame.new(0, -2, 0)
                        Instance.new("Part", Torso).CFrame = Instance.new("Part", Torso).CFrame * CFrame.new(0, -2, 0)
                        Instance.new("Part", Torso).CFrame = Instance.new("Part", Torso).CFrame * CFrame.new(0, -2, 0)
                        swait()
                      end
                      Instance.new("Part", Torso):Remove()
                      Instance.new("Part", Torso):Remove()
                      Instance.new("Part", Torso):Remove()
                      Instance.new("Part", Torso):Remove()
                      Instance.new("Part", Torso):Remove()
                    end)()
                    if avatarstate then
                      for fe = 1, 5 do
                        va.C0 = va.C0:Lerp(CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(30), 0, 0), 0.8)
                        vb.C0 = vb.C0:lerp(CFrame.new(1.3, 1, 0.35) * CFrame.Angles(math.rad(-110), math.rad(-12), math.rad(1)), 0.8)
                        vc.C0 = vc.C0:lerp(CFrame.new(-1.3, 1, 0.35) * CFrame.Angles(math.rad(-110), math.rad(12), math.rad(-1)), 0.8)
                        swait()
                      end
                    else
                      for fe = 1, 15 do
                        va.C0 = va.C0:Lerp(CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(30), 0, 0), 0.4)
                        vb.C0 = vb.C0:lerp(CFrame.new(1.3, 1, 0.35) * CFrame.Angles(math.rad(-110), math.rad(-12), math.rad(1)), 0.4)
                        vc.C0 = vc.C0:lerp(CFrame.new(-1.3, 1, 0.35) * CFrame.Angles(math.rad(-110), math.rad(12), math.rad(-1)), 0.4)
                        swait()
                      end
                    end
                    debounce = false
                    attacking = false
                    ws = 90
                  elseif a == "x" then
                    id = 2435339444
                    doomtheme.SoundId = "rbxassetid://" .. id
                    doomtheme:Play()
                  elseif a == "z" then
                    id = 2327920334
                    doomtheme.SoundId = "rbxassetid://" .. id
                    doomtheme:Play()
                  elseif a == "y" then
                    if debounce then
                      return
                    end
                    debounce = true
                    attacking = true
                    allowlev = false
                    zxm = {}
                    ws = 0
                    waterball = Instance.new("Part", Torso)
                    waterball.Size = Vector3.new(25, 25, 25)
                    waterball.Transparency = 0.9
                    waterball.Shape = "Ball"
                    waterball.BrickColor = BrickColor.new("Cyan")
                    waterball.Anchored = true
                    waterball.Material = "Neon"
                    waterball.CanCollide = false
                    waterball.CFrame = Root.CFrame
                    waterp = true
                    coroutine.wrap(function()
                      while 0 < waterball.Transparency do
                        waterball.CFrame = Root.CFrame
                        waterblockk = Instance.new("Part", Torso)
                        waterblockk.Material = waterblocks.Material
                        waterblockk.BrickColor = waterblocks.BrickColor
                        waterblockk.CanCollide = false
                        waterblockk.Anchored = true
                        waterblockk.Size = Vector3.new(2, 2, 2)
                        waterblockk.Name = "nd"
                        waterblockk.Transparency = 0.25
                        table.insert(zxm, waterblockk)
                        waterblockk.CFrame = Root.CFrame * CFrame.new(math.random(-18, 18), math.random(-18, 18), math.random(-18, 18)) * CFrame.Angles(math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)))
                        removeuseless:AddItem(waterblockk, 0.75)
                        swait(5)
                      end
                    end)()
                    coroutine.wrap(function()
                      while waterball.Transparency > 0 do
                        waterball.Transparency = waterball.Transparency - 0.005
                        for fd, fe in pairs(zxm) do
                          fe.Transparency = fe.Transparency + 0.05
                          fe.CFrame = fe.CFrame:lerp(CFrame.new(Root.Position) * CFrame.Angles(math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180))), 0.09)
                        end
                        swait()
                      end
                      waterp = false
                      for fd = 1, 25 do
                        for fj, fk in pairs(zxm) do
                          fk.Transparency = fk.Transparency + 0.05
                          fk.Size = fk.Size + Vector3.new(0.5, 0.5, 0.5)
                        end
                        swait()
                      end
                    end)()
                    for fe = 1, 20 do
                      waterball.Size = waterball.Size - Vector3.new(0.85, 0.85, 0.85)
                      waterball.CFrame = Root.CFrame
                      va.C0 = va.C0:lerp(CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(-15), math.rad(0), math.rad(0)), 0.5)
                      vb.C0 = vb.C0:lerp(CFrame.new(1, -0.2, 0.4) * CFrame.Angles(math.rad(-87), math.rad(80), math.rad(0)), 0.3)
                      vc.C0 = vc.C0:lerp(CFrame.new(-0.7, -0.2, 0.4) * CFrame.Angles(math.rad(-87), math.rad(-88), math.rad(0)), 0.3)
                      vd.C0 = vd.C0:lerp(CFrame.new(-0.5, 1, 0.9) * CFrame.Angles(math.rad(20), math.rad(-1), math.rad(-3)), 0.25)
                      ve.C0 = ve.C0:lerp(CFrame.new(0.5, 1, 0.9) * CFrame.Angles(math.rad(20), math.rad(1), math.rad(3)), 0.25)
                      swait()
                    end
                    while true do
                      if not wait() or not waterp then
                        break
                      end
                    end
                    wshockwave = Instance.new("Part", Torso)
                    wshockwave.Size = Vector3.new(1, 1, 1)
                    wshockwave.CanCollide = false
                    wshockwave.Anchored = true
                    wshockwave.Transparency = 1
                    wshockwave.BrickColor = BrickColor.new("Cyan")
                    wshockwave.CFrame = CFrame.new(waterball.Position) * CFrame.new(0, -9, 0)
                    wshockwavemesh = Instance.new("SpecialMesh", wshockwave)
                    wshockwavemesh.Scale = Vector3.new(1, 3, 1)
                    wshockwavemesh.MeshId = "rbxassetid://20329976"
                    wshockwave2 = Instance.new("Part", Torso)
                    wshockwave2.Size = Vector3.new(1, 1, 1)
                    wshockwave2.CanCollide = false
                    wshockwave2.Anchored = true
                    wshockwave2.Transparency = 1
                    wshockwave2.BrickColor = BrickColor.new("Cyan")
                    wshockwave2.CFrame = CFrame.new(waterball.Position) * CFrame.new(0, -9, 0)
                    wshockwavemesh2 = Instance.new("SpecialMesh", wshockwave2)
                    wshockwavemesh2.Scale = Vector3.new(2, 3, 2)
                    wshockwavemesh2.MeshId = "rbxassetid://20329976"
                    waterball2 = waterball:Clone()
                    waterball2.Parent = Torso
                    waterball2.Transparency = 0.25
                    waterball3 = waterball:Clone()
                    waterball3.Parent = Torso
                    waterball3.Transparency = 0.5
                    waterball4 = waterball:Clone()
                    waterball4.Parent = Torso
                    waterball4.Transparency = 0.75
                    fkd = Instance.new("Sound", Torso)
                    fkd.SoundId = "rbxassetid://2136442504"
                    fkd.Volume = 8
                    fkd:Play()
                    dbw = 25
                    for fe = 1, 6 do
                      wshockwave.CFrame = CFrame.new(waterball.Position) * CFrame.new(0, -9, 0)
                      wshockwave2.CFrame = CFrame.new(waterball.Position) * CFrame.new(0, -9, 0)
                      wshockwave.Transparency = 1
                      wshockwave2.Transparency = 1
                      wshockwavemesh2.Scale = Vector3.new(4, 3, 4)
                      wshockwavemesh.Scale = Vector3.new(2, 3, 2)
                      dbw = dbw + 25
                      swait()
                      if avatarstate then
                        Hit = damagealll(120, waterball.Position)
                      else
                        Hit = damagealll(65, waterball.Position)
                      end
                      for fk, fl in pairs(Hit) do
                        if bluetotem then
                        else
                          if avatarstate then
                          else
                          end
                        end
                        vel = Instance.new("BodyVelocity", fl:FindFirstChild("Torso") or fl:FindFirstChild("UpperTorso"))
                        vel.maxForce = Vector3.new(9999999999999, 9999999999999, 9999999999999)
                        torso = fl:FindFirstChild("Torso") or fl:FindFirstChild("UpperTorso")
                        vel.velocity = CFrame.new(waterball.Position, torso.Position).lookVector * dbw
                        removeuseless:AddItem(vel, 0.1)
                      end
                      if avatarstate then
                        for fk = 1, 35 do
                          waterball.CFrame = Root.CFrame
                          waterball2.CFrame = Root.CFrame
                          waterball3.CFrame = Root.CFrame
                          waterball4.CFrame = Root.CFrame
                          wshockwave.Transparency = wshockwave.Transparency - 0.015
                          wshockwave2.Transparency = wshockwave2.Transparency - 0.015
                          wshockwave.CFrame = wshockwave.CFrame * CFrame.Angles(0, math.rad(15), 0)
                          wshockwave2.CFrame = wshockwave2.CFrame * CFrame.Angles(0, math.rad(-15), 0)
                          wshockwavemesh.Scale = wshockwavemesh.Scale + Vector3.new(7, 0.89, 7)
                          wshockwavemesh2.Scale = wshockwavemesh2.Scale + Vector3.new(8, 2, 8)
                          waterball2.Size = waterball2.Size + Vector3.new(2, 2, 2)
                          waterball3.Size = waterball3.Size + Vector3.new(4, 4, 4)
                          waterball4.Size = waterball4.Size + Vector3.new(6, 6, 6)
                          swait()
                        end
                        for fk = 1, 25 do
                          waterball.CFrame = Root.CFrame
                          waterball2.CFrame = Root.CFrame
                          waterball3.CFrame = Root.CFrame
                          waterball4.CFrame = Root.CFrame
                          wshockwave.CFrame = wshockwave.CFrame * CFrame.Angles(0, math.rad(7), 0)
                          wshockwave2.CFrame = wshockwave2.CFrame * CFrame.Angles(0, math.rad(-7), 0)
                          wshockwavemesh.Scale = wshockwavemesh.Scale + Vector3.new(3.5, 0.87, 3.5)
                          wshockwavemesh2.Scale = wshockwavemesh2.Scale + Vector3.new(4, 1, 4)
                          waterball2.Size = waterball2.Size + Vector3.new(1, 1, 1)
                          waterball3.Size = waterball3.Size + Vector3.new(2, 2, 2)
                          waterball4.Size = waterball4.Size + Vector3.new(3, 3, 3)
                          swait()
                        end
                        for fk = 1, 40 do
                          waterball.CFrame = Root.CFrame
                          waterball2.CFrame = Root.CFrame
                          waterball3.CFrame = Root.CFrame
                          waterball4.CFrame = Root.CFrame
                          wshockwave.CFrame = wshockwave.CFrame * CFrame.Angles(0, math.rad(20), 0)
                          wshockwave2.CFrame = wshockwave2.CFrame * CFrame.Angles(0, math.rad(-20), 0)
                          wshockwave.Transparency = wshockwave.Transparency + 0.03
                          wshockwave2.Transparency = wshockwave2.Transparency + 0.03
                          wshockwavemesh.Scale = wshockwavemesh.Scale - Vector3.new(14, 4, 14)
                          wshockwavemesh2.Scale = wshockwavemesh2.Scale - Vector3.new(16, 6, 16)
                          waterball2.Size = waterball2.Size - Vector3.new(4, 4, 4)
                          waterball3.Size = waterball3.Size - Vector3.new(8, 8, 8)
                          waterball4.Size = waterball4.Size - Vector3.new(12, 12, 12)
                          swait()
                        end
                      else
                        for fk = 1, 35 do
                          waterball.CFrame = Root.CFrame
                          waterball2.CFrame = Root.CFrame
                          waterball3.CFrame = Root.CFrame
                          waterball4.CFrame = Root.CFrame
                          wshockwave.Transparency = wshockwave.Transparency - 0.015
                          wshockwave2.Transparency = wshockwave2.Transparency - 0.015
                          wshockwave.CFrame = wshockwave.CFrame * CFrame.Angles(0, math.rad(15), 0)
                          wshockwave2.CFrame = wshockwave2.CFrame * CFrame.Angles(0, math.rad(-15), 0)
                          wshockwavemesh.Scale = wshockwavemesh.Scale + Vector3.new(3.5, 0.4375, 3.5)
                          wshockwavemesh2.Scale = wshockwavemesh2.Scale + Vector3.new(4, 1, 4)
                          waterball2.Size = waterball2.Size + Vector3.new(1, 1, 1)
                          waterball3.Size = waterball3.Size + Vector3.new(2, 2, 2)
                          waterball4.Size = waterball4.Size + Vector3.new(3, 3, 3)
                          swait()
                        end
                        for fk = 1, 25 do
                          waterball.CFrame = Root.CFrame
                          waterball2.CFrame = Root.CFrame
                          waterball3.CFrame = Root.CFrame
                          waterball4.CFrame = Root.CFrame
                          wshockwave.CFrame = wshockwave.CFrame * CFrame.Angles(0, math.rad(7), 0)
                          wshockwave2.CFrame = wshockwave2.CFrame * CFrame.Angles(0, math.rad(-7), 0)
                          wshockwavemesh.Scale = wshockwavemesh.Scale + Vector3.new(1.75, 0.4375, 1.75)
                          wshockwavemesh2.Scale = wshockwavemesh2.Scale + Vector3.new(2, 0.5, 2)
                          waterball2.Size = waterball2.Size + Vector3.new(0.5, 0.5, 0.5)
                          waterball3.Size = waterball3.Size + Vector3.new(1, 1, 1)
                          waterball4.Size = waterball4.Size + Vector3.new(1.5, 1.5, 1.5)
                          swait()
                        end
                        for fk = 1, 40 do
                          waterball.CFrame = Root.CFrame
                          waterball2.CFrame = Root.CFrame
                          waterball3.CFrame = Root.CFrame
                          waterball4.CFrame = Root.CFrame
                          wshockwave.CFrame = wshockwave.CFrame * CFrame.Angles(0, math.rad(20), 0)
                          wshockwave2.CFrame = wshockwave2.CFrame * CFrame.Angles(0, math.rad(-20), 0)
                          wshockwave.Transparency = wshockwave.Transparency + 0.03
                          wshockwave2.Transparency = wshockwave2.Transparency + 0.03
                          wshockwavemesh.Scale = wshockwavemesh.Scale - Vector3.new(7, 2, 7)
                          wshockwavemesh2.Scale = wshockwavemesh2.Scale - Vector3.new(8, 3, 8)
                          waterball2.Size = waterball2.Size - Vector3.new(2, 2, 2)
                          waterball3.Size = waterball3.Size - Vector3.new(4, 4, 4)
                          waterball4.Size = waterball4.Size - Vector3.new(6, 6, 6)
                          swait()
                        end
                      end
                    end
                    for fe = 1, 50 do
                      waterball.CFrame = Root.CFrame
                      waterball2.CFrame = Root.CFrame
                      waterball3.CFrame = Root.CFrame
                      waterball4.CFrame = Root.CFrame
                      waterball.Transparency = waterball.Transparency + 0.025
                      waterball2.Transparency = waterball2.Transparency + 0.025
                      waterball3.Transparency = waterball3.Transparency + 0.035
                      waterball4.Transparency = waterball4.Transparency + 0.045
                      waterball.Size = waterball.Size + Vector3.new(0.5, 0.5, 0.5)
                      waterball2.Size = waterball2.Size + Vector3.new(1, 1, 1)
                      waterball3.Size = waterball3.Size + Vector3.new(2, 2, 2)
                      waterball4.Size = waterball4.Size + Vector3.new(3, 3, 3)
                      swait()
                    end
                    wshockwave:Remove()
                    wshockwave2:Remove()
                    waterball:Remove()
                    waterball2:Remove()
                    waterball3:Remove()
                    waterball4:Remove()
                    attacking = false
                    debounce = false
                    waterp = false
                    allowlev = true
                    fkd:Remove()
                    ws = 90
                  elseif a == "t" then
                    if tauntdebounce then
                      return
                    end
                    if debounce then
                      return
                    end
                    debounce = true
                    tauntdebounce = true
                    attacking = true
                    debounce = true
                    ws = 6
                    coroutine.wrap(function()
                      for fd = 1, 125 do
                        va.C0 = va.C0:Lerp(CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(22 - 12 * math.sin(sine / 12)), 0, 0), 0.4)
                        vb.C0 = vb.C0:lerp(CFrame.new(1, -0.2, 0.4) * CFrame.Angles(math.rad(-87 + 0.01 * math.sin(sine / 9)), math.rad(80 - 3 * math.sin(sine / 9)), math.rad(0)), 0.4)
                        vc.C0 = vc.C0:lerp(CFrame.new(-0.7, -0.2, 0.4) * CFrame.Angles(math.rad(-87 - 0.01 * math.sin(sine / 9)), math.rad(-88 + 0.7 * math.sin(sine / 9)), math.rad(0)), 0.4)
                        vd.C0 = vd.C0:lerp(CFrame.new(-0.54, 2 + 0.02 * math.sin(sine / 12), 0.2 + 0.1 * math.sin(sine / 12)) * CFrame.Angles(math.rad(25 + 5 * math.sin(sine / 12)), math.rad(-20), math.rad(0)), 0.4)
                        ve.C0 = ve.C0:lerp(CFrame.new(0.54, 2 + 0.02 * math.sin(sine / 12), 0.2 + 0.1 * math.sin(sine / 12)) * CFrame.Angles(math.rad(25 + 5 * math.sin(sine / 12)), math.rad(20), math.rad(0)), 0.4)
                        swait()
                      end
                      attacking = false
                      debounce = false
                      ws = 90
                    end)()
                    got2 = gottalktable2[math.random(1, #gottalktable2)]
                    tauntsound = Instance.new("Sound", Head)
                    tauntsound.Volume = 10
                    tauntsound.SoundId = "http://www.roblox.com/asset/?id=" .. got2
                    tauntsound.Looped = false
                    tauntsound:Play()
                    Instance.new("BillboardGui", Head).Size = UDim2.new(0, 4, 0, 1.6)
                    Instance.new("BillboardGui", Head).StudsOffset = Vector3.new(0, 0, 0)
                    Instance.new("BillboardGui", Head).Name = "ttau"
                    Instance.new("BillboardGui", Head).AlwaysOnTop = true
                    Instance.new("BillboardGui", Head).StudsOffset = Vector3.new(0, 4, 0)
                    Instance.new("BillboardGui", Head).Adornee = Head
                    removeuseless:AddItem(Instance.new("BillboardGui", Head), 8)
                    Instance.new("TextLabel", (Instance.new("BillboardGui", Head))).BackgroundTransparency = 1
                    if tauntsound.SoundId == "http://www.roblox.com/asset/?id=2492600258" then
                      Instance.new("TextLabel", (Instance.new("BillboardGui", Head))).Text = "On your knees."
                    elseif tauntsound.SoundId == "http://www.roblox.com/asset/?id=2492598999" then
                      Instance.new("TextLabel", (Instance.new("BillboardGui", Head))).Text = "I've survived many battles."
                    elseif tauntsound.SoundId == "http://www.roblox.com/asset/?id=2492599159" then
                      Instance.new("TextLabel", (Instance.new("BillboardGui", Head))).Text = "You do not impress."
                    elseif tauntsound.SoundId == "http://www.roblox.com/asset/?id=2492599303" then
                      Instance.new("TextLabel", (Instance.new("BillboardGui", Head))).Text = "You would test a god?"
                    elseif tauntsound.SoundId == "http://www.roblox.com/asset/?id=2492599503" then
                      Instance.new("TextLabel", (Instance.new("BillboardGui", Head))).Text = "You will respect my title!"
                    elseif tauntsound.SoundId == "http://www.roblox.com/asset/?id=2492599663" then
                      Instance.new("TextLabel", (Instance.new("BillboardGui", Head))).Text = "I shall honor you with combat!"
                    elseif tauntsound.SoundId == "http://www.roblox.com/asset/?id=2492599795" then
                      Instance.new("TextLabel", (Instance.new("BillboardGui", Head))).Text = "A lamb to the slaughter."
                    elseif tauntsound.SoundId == "http://www.roblox.com/asset/?id=2492599925" then
                      Instance.new("TextLabel", (Instance.new("BillboardGui", Head))).Text = "You're most worthy, to die by my hand."
                    elseif tauntsound.SoundId == "http://www.roblox.com/asset/?id=2492600097" then
                      Instance.new("TextLabel", (Instance.new("BillboardGui", Head))).Text = "Your soul burns!"
                    elseif tauntsound.SoundId == "http://www.roblox.com/asset/?id=2492600455" then
                      Instance.new("TextLabel", (Instance.new("BillboardGui", Head))).Text = "Pathetic."
                    end
                    Instance.new("TextLabel", (Instance.new("BillboardGui", Head))).Font = "Garamond"
                    Instance.new("TextLabel", (Instance.new("BillboardGui", Head))).TextSize = 50
                    Instance.new("TextLabel", (Instance.new("BillboardGui", Head))).Name = "lafftext"
                    Instance.new("TextLabel", (Instance.new("BillboardGui", Head))).TextStrokeTransparency = 1
                    Instance.new("TextLabel", (Instance.new("BillboardGui", Head))).Transparency = 1
                    Instance.new("TextLabel", (Instance.new("BillboardGui", Head))).TextColor3 = BrickColor.new("Cyan").Color
                    Instance.new("TextLabel", (Instance.new("BillboardGui", Head))).TextStrokeColor3 = Color3.new(0, 0, 0)
                    Instance.new("TextLabel", (Instance.new("BillboardGui", Head))).Size = UDim2.new(1, 0, 0.5, 0)
                    coroutine.wrap(function()
                      for fd = 1, 20 do
                        va.Transparency = va.Transparency - 0.05
                        va.TextStrokeTransparency = va.TextStrokeTransparency - 0.05
                        swait()
                      end
                    end)()
                    wait(tauntsound.TimeLength)
                    wait(3)
                    coroutine.wrap(function()
                      for fd = 1, 20 do
                        va.Transparency = va.Transparency + 0.05
                        va.TextStrokeTransparency = va.TextStrokeTransparency + 0.05
                        swait()
                      end
                    end)()
                    tauntsound:Remove()
                    wait(1)
                    tauntdebounce = false
                  elseif a == "r" then
                    if debounce then
                      return
                    end
                    if fireball1 then
                      SOUND(rightlocation, 842332424, 7, false, 4)
                      fireball1 = false
                      fireball2 = true
                      attacking = true
                      debounce = true
                      appi = true
                      coroutine.wrap(function()
                        while appi do
                          swait()
                          if Root.Velocity.Magnitude > 2 and attacking == true then
                            position = "Idle3"
                          end
                        end
                      end)()
                      coroutine.wrap(function()
                        while appi do
                          swait()
                          settime = 0.05
                          sine = sine + change
                          if position == "Idle3" and attacking == true and appi == true then
                            change = 0.5
                            va.C0 = va.C0:lerp(CFrame.new(-0.9, 0.65 + 0.4 * math.sin(sine / 12), 1.2) * CFrame.Angles(math.rad(-35 - 15 * math.sin(sine / 12)), math.rad(50 + 3 * math.sin(sine / 12)), math.rad(3 - 1 * math.sin(sine / 12))), 0.5)
                            vb.C0 = vb.C0:lerp(CFrame.new(-0.54, 2 + 0.02 * math.sin(sine / 12), 0.2 + 0.1 * math.sin(sine / 12)) * CFrame.Angles(math.rad(25 + 5 * math.sin(sine / 12)), math.rad(-20), math.rad(0)), 0.5)
                            vc.C0 = vc.C0:lerp(CFrame.new(0.54, 2 + 0.02 * math.sin(sine / 12), 0.2 + 0.1 * math.sin(sine / 12)) * CFrame.Angles(math.rad(25 + 5 * math.sin(sine / 12)), math.rad(20), math.rad(0)), 0.5)
                          end
                        end
                      end)()
                      ws = 65
                      g1 = Instance.new("BodyGyro", Root)
                      g1.D = 175
                      g1.P = 20000
                      g1.MaxTorque = Vector3.new(0, 9000, 0)
                      if avatarstate then
                        for fe = 1, 5 do
                          g1.CFrame = g1.CFrame:lerp(CFrame.new(Root.Position, mouse.Hit.p), 0.4)
                          va.C0 = va.C0:lerp(CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(-10), math.rad(-15), math.rad(0)), 0.7)
                          vc.C1 = CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0)
                          vc.C0 = vc.C0:lerp(CFrame.new(-0.5, 2, 0) * CFrame.Angles(math.rad(-14), math.rad(20), math.rad(-90)), 0.6)
                          swait()
                        end
                      else
                        for fe = 1, 15 do
                          g1.CFrame = g1.CFrame:lerp(CFrame.new(Root.Position, mouse.Hit.p), 0.2)
                          va.C0 = va.C0:lerp(CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(-10), math.rad(-15), math.rad(0)), 0.5)
                          vc.C1 = CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0)
                          vc.C0 = vc.C0:lerp(CFrame.new(-0.5, 2, 0) * CFrame.Angles(math.rad(-14), math.rad(20), math.rad(-90)), 0.3)
                          swait()
                        end
                      end
                      swoosh = Instance.new("Part", Head)
                      swoosh.Size = Vector3.new(1, 1, 1)
                      swoosh.CanCollide = false
                      swoosh.Anchored = false
                      swoosh.Name = "swoosh"
                      swoosh.Transparency = 1
                      swoosh.CFrame = rightlocation.CFrame
                      coroutine.wrap(function()
                        if bbv then
                          return
                        end
                        bbv = true
                        while wait(0.08) do
                          do return end
                          while true do
                            if Head:GetDescendants().Name == "swoosh" then
                              Hit = damagealll(13, Head:GetDescendants().Position)
                              for fk, fl in pairs(Hit) do
                                if redtotem then
                                else
                                  if avatarstate then
                                  else
                                  end
                                end
                                vel = Instance.new("BodyVelocity", fl:FindFirstChild("Torso") or fl:FindFirstChild("UpperTorso"))
                                vel.maxForce = Vector3.new(9999999999999, 9999999999999, 9999999999999)
                                torso = fl:FindFirstChild("Torso") or fl:FindFirstChild("UpperTorso")
                                vel.velocity = CFrame.new(swoosh.Position, torso.Position).lookVector * 100
                                removeuseless:AddItem(vel, 0.1)
                              end
                            end
                          end
                        end
                      end)()
                      coroutine.wrap(function()
                        if firsttime then
                          return
                        end
                        firsttime = true
                        while wait() do
                          for fd, fe in pairs(RightArm:GetChildren()) do
                            if fe.Name == "magiccc" then
                              fe.Transparency = fe.Transparency + 0.05
                            end
                          end
                          for fd, fe in pairs(Head:GetChildren()) do
                            if fe.Name == "swoosh" then
                              magiccc = Instance.new("Part", RightArm)
                              magiccc.Material = "Neon"
                              magiccc.CanCollide = false
                              magiccc.Anchored = true
                              magiccc.Name = "magiccc"
                              magiccc.BrickColor = BrickColor.new(colors)
                              magiccc.Size = Vector3.new(5, 5, 5)
                              magiccc.CFrame = fe.CFrame * CFrame.Angles(math.random(-180, 180), math.random(-180, 180), math.random(-180, 180))
                              removeuseless:AddItem(magiccc, 2)
                            end
                          end
                        end
                      end)()
                      bov = Instance.new("BodyVelocity", swoosh)
                      bov.maxForce = Vector3.new(99999, 99999, 99999)
                      swoosh.CFrame = CFrame.new(swoosh.Position, mouse.Hit.p)
                      bov.velocity = swoosh.CFrame.lookVector * 215
                      removeuseless:AddItem(swoosh, 5)
                      if avatarstate then
                        for fe = 1, 6 do
                          va.C0 = va.C0:lerp(CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(10), math.rad(15), math.rad(0)), 0.8)
                          vc.C1 = CFrame.new(0, 0, 0)
                          vc.C0 = vc.C0:lerp(CFrame.new(-1.2, 1, 0.5) * CFrame.Angles(math.rad(-90), math.rad(-25), math.rad(0)), 0.8)
                          swait()
                        end
                      else
                        for fe = 1, 12 do
                          va.C0 = va.C0:lerp(CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(10), math.rad(15), math.rad(0)), 0.5)
                          vc.C1 = CFrame.new(0, 0, 0)
                          vc.C0 = vc.C0:lerp(CFrame.new(-1.2, 1, 0.5) * CFrame.Angles(math.rad(-90), math.rad(-25), math.rad(0)), 0.5)
                          swait()
                        end
                      end
                      ws = 90
                      appi = false
                      attacking = false
                      debounce = false
                      removeuseless:AddItem(g1, 0.01)
                    elseif fireball2 then
                      SOUND(leftlocation, 842332424, 7, false, 4)
                      fireball1 = true
                      fireball2 = false
                      attacking = true
                      debounce = true
                      appi = true
                      coroutine.wrap(function()
                        while appi do
                          swait()
                          if Root.Velocity.Magnitude > 2 and attacking == true then
                            position = "Idle3"
                          end
                        end
                      end)()
                      coroutine.wrap(function()
                        while appi do
                          swait()
                          settime = 0.05
                          sine = sine + change
                          if position == "Idle3" and attacking == true and appi == true then
                            change = 0.5
                            va.C0 = va.C0:lerp(CFrame.new(0.9, 0.65 + 0.4 * math.sin(sine / 12), 1.2) * CFrame.Angles(math.rad(-35 - 15 * math.sin(sine / 12)), math.rad(-50 - 3 * math.sin(sine / 12)), math.rad(-3 + 1 * math.sin(sine / 12))), 0.5)
                            vb.C0 = vb.C0:lerp(CFrame.new(-0.54, 2 + 0.02 * math.sin(sine / 12), 0.2 + 0.1 * math.sin(sine / 12)) * CFrame.Angles(math.rad(25 + 5 * math.sin(sine / 12)), math.rad(-20), math.rad(0)), 0.5)
                            vc.C0 = vc.C0:lerp(CFrame.new(0.54, 2 + 0.02 * math.sin(sine / 12), 0.2 + 0.1 * math.sin(sine / 12)) * CFrame.Angles(math.rad(25 + 5 * math.sin(sine / 12)), math.rad(20), math.rad(0)), 0.5)
                          end
                        end
                      end)()
                      ws = 65
                      g1 = Instance.new("BodyGyro", Root)
                      g1.D = 175
                      g1.P = 20000
                      g1.MaxTorque = Vector3.new(0, 9000, 0)
                      if avatarstate then
                        for fe = 1, 5 do
                          g1.CFrame = g1.CFrame:lerp(CFrame.new(Root.Position, mouse.Hit.p), 0.4)
                          va.C0 = va.C0:lerp(CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(10), math.rad(15), math.rad(0)), 0.7)
                          vb.C1 = CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0)
                          vb.C0 = vb.C0:lerp(CFrame.new(0.5, 2, 0) * CFrame.Angles(math.rad(-14), math.rad(-20), math.rad(90)), 0.6)
                          swait()
                        end
                      else
                        for fe = 1, 15 do
                          g1.CFrame = g1.CFrame:lerp(CFrame.new(Root.Position, mouse.Hit.p), 0.2)
                          va.C0 = va.C0:lerp(CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(10), math.rad(15), math.rad(0)), 0.5)
                          vb.C1 = CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0)
                          vb.C0 = vb.C0:lerp(CFrame.new(0.5, 2, 0) * CFrame.Angles(math.rad(-14), math.rad(-20), math.rad(90)), 0.3)
                          swait()
                        end
                      end
                      swoosh = Instance.new("Part", Head)
                      swoosh.Size = Vector3.new(1, 1, 1)
                      swoosh.CanCollide = false
                      swoosh.Anchored = false
                      swoosh.Name = "swoosh"
                      swoosh.Transparency = 1
                      swoosh.CFrame = leftlocation.CFrame
                      coroutine.wrap(function()
                        if firsttime then
                          return
                        end
                        firsttime = true
                        while wait() do
                          for fd, fe in pairs(RightArm:GetChildren()) do
                            if fe.Name == "magiccc" then
                              fe.Transparency = fe.Transparency + 0.05
                            end
                          end
                          for fd, fe in pairs(Head:GetChildren()) do
                            if fe.Name == "swoosh" then
                              magiccc = Instance.new("Part", RightArm)
                              magiccc.Material = "Neon"
                              magiccc.CanCollide = false
                              magiccc.Anchored = true
                              magiccc.Name = "magiccc"
                              magiccc.BrickColor = BrickColor.new(colors)
                              magiccc.Size = Vector3.new(5, 5, 5)
                              magiccc.CFrame = fe.CFrame * CFrame.Angles(math.random(-180, 180), math.random(-180, 180), math.random(-180, 180))
                              removeuseless:AddItem(magiccc, 2)
                            end
                          end
                        end
                      end)()
                      bov = Instance.new("BodyVelocity", swoosh)
                      bov.maxForce = Vector3.new(99999, 99999, 99999)
                      swoosh.CFrame = CFrame.new(swoosh.Position, mouse.Hit.p)
                      bov.velocity = swoosh.CFrame.lookVector * 215
                      removeuseless:AddItem(swoosh, 5)
                      if avatarstate then
                        for fe = 1, 6 do
                          va.C0 = va.C0:lerp(CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(-10), math.rad(-15), math.rad(0)), 0.8)
                          vb.C1 = CFrame.new(0, 0, 0)
                          vb.C0 = vb.C0:lerp(CFrame.new(1.2, 1, 0.5) * CFrame.Angles(math.rad(-90), math.rad(25), math.rad(0)), 0.8)
                          swait()
                        end
                      else
                        for fe = 1, 12 do
                          va.C0 = va.C0:lerp(CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(-10), math.rad(-15), math.rad(0)), 0.5)
                          vb.C1 = CFrame.new(0, 0, 0)
                          vb.C0 = vb.C0:lerp(CFrame.new(1.2, 1, 0.5) * CFrame.Angles(math.rad(-90), math.rad(25), math.rad(0)), 0.5)
                          swait()
                        end
                      end
                      ws = 90
                      attacking = false
                      debounce = false
                      appi = false
                      removeuseless:AddItem(g1, 0.01)
                    end
                  elseif a == "e" then
                    if throw1 then
                      if debounce then
                        return
                      end
                      throw1 = false
                      throw2 = true
                      debounce = true
                      attacking = true
                      appi = true
                      ws = 12
                      g1 = Instance.new("BodyGyro", Root)
                      g1.D = 175
                      g1.P = 20000
                      g1.MaxTorque = Vector3.new(0, 9000, 0)
                      coroutine.wrap(function()
                        while appi do
                          swait()
                          if 2 < Root.Velocity.Magnitude and attacking == true then
                            position = "Idle3"
                          end
                        end
                      end)()
                      coroutine.wrap(function()
                        while appi do
                          swait()
                          settime = 0.05
                          sine = sine + change
                          if position == "Idle3" and attacking == true and appi == true then
                            change = 0.5
                            va.C0 = va.C0:lerp(CFrame.new(0.9, 0.65 + 0.4 * math.sin(sine / 12), 1.2) * CFrame.Angles(math.rad(-35 - 15 * math.sin(sine / 12)), math.rad(-50 - 3 * math.sin(sine / 12)), math.rad(-3 + 1 * math.sin(sine / 12))), 0.5)
                            vb.C0 = vb.C0:lerp(CFrame.new(-0.54, 2 + 0.02 * math.sin(sine / 12), 0.2 + 0.1 * math.sin(sine / 12)) * CFrame.Angles(math.rad(25 + 5 * math.sin(sine / 12)), math.rad(-20), math.rad(0)), 0.5)
                            vc.C0 = vc.C0:lerp(CFrame.new(0.54, 2 + 0.02 * math.sin(sine / 12), 0.2 + 0.1 * math.sin(sine / 12)) * CFrame.Angles(math.rad(25 + 5 * math.sin(sine / 12)), math.rad(20), math.rad(0)), 0.5)
                          end
                        end
                      end)()
                      if avatarstate then
                        for fe = 1, 5 do
                          g1.CFrame = g1.CFrame:lerp(CFrame.new(Root.Position, mouse.Hit.p), 0.4)
                          va.C0 = va.C0:lerp(CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(-20), math.rad(-20), math.rad(0)), 0.8)
                          vc.C0 = vc.C0:lerp(CFrame.new(-1.3, 0, 0.2) * CFrame.Angles(math.rad(30), math.rad(30), 0), 0.8)
                          swait()
                        end
                      else
                        for fe = 1, 15 do
                          g1.CFrame = g1.CFrame:lerp(CFrame.new(Root.Position, mouse.Hit.p), 0.1)
                          va.C0 = va.C0:lerp(CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(-20), math.rad(-20), math.rad(0)), 0.4)
                          vc.C0 = vc.C0:lerp(CFrame.new(-1.3, 0, 0.2) * CFrame.Angles(math.rad(30), math.rad(30), 0), 0.4)
                          swait()
                        end
                      end
                      if mouse.Target ~= nil then
                        biggrassblock = Instance.new("Part", Torso)
                        biggrassblock.Size = Vector3.new(math.random(15, 18), 50, math.random(15, 18))
                        biggrassblock.Anchored = true
                        biggrassblock.CFrame = CFrame.new(mouse.Hit.p) * CFrame.new(0, -10, 0) * CFrame.Angles(math.rad(math.random(-15, 15)), math.rad(math.random(-15, 15)), math.rad(math.random(-15, 15)))
                        biggrassblock.CanCollide = true
                        biggrassblock.Material = "Slate"
                        biggrassblock.BrickColor = BrickColor.new("Earth green")
                        removeuseless:AddItem(biggrassblock, 10)
                        coroutine.wrap(function()
                          Instance.new("Part", biggrassblock).Size = Vector3.new(1, 1, 1)
                          Instance.new("Part", biggrassblock).Transparency = 1
                          Instance.new("Part", biggrassblock).CFrame = CFrame.new(mouse.Hit.p)
                          Instance.new("Part", biggrassblock).CanCollide = false
                          Instance.new("Part", biggrassblock).Anchored = true
                          Instance.new("Part", biggrassblock).Size = Vector3.new(1, 1, 1)
                          Instance.new("Part", biggrassblock).Transparency = 1
                          Instance.new("Part", biggrassblock).CFrame = CFrame.new(mouse.Hit.p)
                          Instance.new("Part", biggrassblock).CanCollide = false
                          locbrick2weld = va(Instance.new("Part", biggrassblock), (Instance.new("Part", biggrassblock)))
                          Instance.new("Part", Torso).Size = Vector3.new(1, 1, 1)
                          Instance.new("Part", Torso).CanCollide = false
                          Instance.new("Part", Torso).Anchored = true
                          Instance.new("Part", Torso).Transparency = 0.5
                          Instance.new("Part", Torso).BrickColor = BrickColor.new("White")
                          Instance.new("Part", Torso).CFrame = CFrame.new(Instance.new("Part", biggrassblock).Position)
                          shockwavemesh = Instance.new("SpecialMesh", (Instance.new("Part", Torso)))
                          shockwavemesh.Scale = Vector3.new(7, 3, 7)
                          shockwavemesh.MeshId = "rbxassetid://20329976"
                          Instance.new("Part", Torso).Size = Vector3.new(1, 1, 1)
                          Instance.new("Part", Torso).CanCollide = false
                          Instance.new("Part", Torso).Anchored = true
                          Instance.new("Part", Torso).Transparency = 0.5
                          Instance.new("Part", Torso).BrickColor = BrickColor.new("White")
                          Instance.new("Part", Torso).CFrame = CFrame.new(Instance.new("Part", biggrassblock).Position)
                          shockwavemesh2 = Instance.new("SpecialMesh", (Instance.new("Part", Torso)))
                          shockwavemesh2.Scale = Vector3.new(5, 3, 5)
                          shockwavemesh2.MeshId = "rbxassetid://20329976"
                          zxp = 0
                          for fj = 1, 75 do
                            zxp = zxp + 5
                            crater = Instance.new("Part", Torso)
                            crater.BrickColor = biggrassblock.BrickColor
                            crater.Size = Vector3.new(5, 5, 5)
                            crater.Transparency = 1
                            craterweld = va(crater, (Instance.new("Part", biggrassblock)))
                            craterweld.C0 = craterweld.C0 * CFrame.new(15, 0, 0) * CFrame.Angles(math.rad(0), math.rad(zxp), math.rad(0))
                            removeuseless:AddItem(crater, 1)
                            crater2 = Instance.new("Part", Torso)
                            crater2.CFrame = crater.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)))
                            crater2.Size = Vector3.new(13, 13, 13)
                            crater2.Anchored = true
                            crater2.Material = "Grass"
                            crater2.BrickColor = BrickColor.new("Bright green")
                            removeuseless:AddItem(crater2, 15)
                          end
                          for fj = 1, 30 do
                            swait()
                            Instance.new("Part", Torso).CFrame = Instance.new("Part", Torso).CFrame * CFrame.Angles(math.rad(0), math.rad(15), 0)
                            Instance.new("Part", Torso).CFrame = Instance.new("Part", Torso).CFrame * CFrame.Angles(math.rad(0), math.rad(-8), 0)
                            Instance.new("Part", Torso).Transparency = Instance.new("Part", Torso).Transparency + 0.025
                            Instance.new("Part", Torso).Transparency = Instance.new("Part", Torso).Transparency + 0.025
                            shockwavemesh2.Scale = shockwavemesh2.Scale + Vector3.new(6, 1, 6)
                            shockwavemesh.Scale = shockwavemesh.Scale + Vector3.new(6, 1, 6)
                          end
                        end)()
                        coroutine.wrap(function()
                          for fd = 1, 10 do
                            swait()
                            biggrassblock.CFrame = biggrassblock.CFrame * CFrame.new(0, 2.7, 0)
                          end
                        end)()
                        groundrum = Instance.new("Sound", biggrassblock)
                        groundrum.SoundId = "rbxassetid://1265219916"
                        groundrum.Volume = 10
                        groundrum.Pitch = 1.5
                        groundrum:Play()
                        Hit = damagealll(30, biggrassblock.Position)
                        for fe, fg in pairs(Hit) do
                          if browntotem then
                          else
                            if avatarstate then
                            else
                            end
                          end
                          vel = Instance.new("BodyVelocity", fg:FindFirstChild("Torso") or fg:FindFirstChild("UpperTorso"))
                          vel.maxForce = Vector3.new(9999999999999, 9999999999999, 9999999999999)
                          torso = fg:FindFirstChild("Torso") or fg:FindFirstChild("UpperTorso")
                          vel.velocity = CFrame.new(biggrassblock.Position, torso.Position).lookVector * 180
                          removeuseless:AddItem(vel, 0.1)
                        end
                      end
                      if avatarstate then
                        for fe = 1, 7 do
                          g1.CFrame = g1.CFrame:lerp(CFrame.new(Root.Position, mouse.Hit.p), 0.2)
                          va.C0 = va.C0:lerp(CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(20), math.rad(20), math.rad(0)), 0.8)
                          vc.C0 = vc.C0:lerp(CFrame.new(-1.3, 1, 0.35) * CFrame.Angles(math.rad(-110), math.rad(12), math.rad(-1)), 0.8)
                          swait()
                        end
                      else
                        for fe = 1, 15 do
                          g1.CFrame = g1.CFrame:lerp(CFrame.new(Root.Position, mouse.Hit.p), 0.1)
                          va.C0 = va.C0:lerp(CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(20), math.rad(20), math.rad(0)), 0.4)
                          vc.C0 = vc.C0:lerp(CFrame.new(-1.3, 1, 0.35) * CFrame.Angles(math.rad(-110), math.rad(12), math.rad(-1)), 0.4)
                          swait()
                        end
                      end
                      ws = 90
                      attacking = false
                      debounce = false
                      appi = false
                      removeuseless:AddItem(g1, 0.001)
                    elseif throw2 then
                      if debounce then
                        return
                      end
                      throw1 = true
                      throw2 = false
                      debounce = true
                      attacking = true
                      appi = true
                      ws = 12
                      g1 = Instance.new("BodyGyro", Root)
                      g1.D = 175
                      g1.P = 20000
                      g1.MaxTorque = Vector3.new(0, 9000, 0)
                      coroutine.wrap(function()
                        while appi do
                          swait()
                          if 2 < Root.Velocity.Magnitude and attacking == true then
                            position = "Idle3"
                          end
                        end
                      end)()
                      coroutine.wrap(function()
                        while appi do
                          swait()
                          settime = 0.05
                          sine = sine + change
                          if position == "Idle3" and attacking == true and appi == true then
                            change = 0.5
                            va.C0 = va.C0:lerp(CFrame.new(-0.9, 0.65 + 0.4 * math.sin(sine / 12), 1.2) * CFrame.Angles(math.rad(-35 - 15 * math.sin(sine / 12)), math.rad(50 + 3 * math.sin(sine / 12)), math.rad(3 - 1 * math.sin(sine / 12))), 0.5)
                            vb.C0 = vb.C0:lerp(CFrame.new(-0.54, 2 + 0.02 * math.sin(sine / 12), 0.2 + 0.1 * math.sin(sine / 12)) * CFrame.Angles(math.rad(25 + 5 * math.sin(sine / 12)), math.rad(-20), math.rad(0)), 0.5)
                            vc.C0 = vc.C0:lerp(CFrame.new(0.54, 2 + 0.02 * math.sin(sine / 12), 0.2 + 0.1 * math.sin(sine / 12)) * CFrame.Angles(math.rad(25 + 5 * math.sin(sine / 12)), math.rad(20), math.rad(0)), 0.5)
                          end
                        end
                      end)()
                      if avatarstate then
                        for fe = 1, 5 do
                          g1.CFrame = g1.CFrame:lerp(CFrame.new(Root.Position, mouse.Hit.p), 0.4)
                          va.C0 = va.C0:lerp(CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(-20), math.rad(20), math.rad(0)), 0.8)
                          vb.C0 = vb.C0:lerp(CFrame.new(1.3, 0, 0.2) * CFrame.Angles(math.rad(30), math.rad(-30), 0), 0.8)
                          swait()
                        end
                      else
                        for fe = 1, 15 do
                          g1.CFrame = g1.CFrame:lerp(CFrame.new(Root.Position, mouse.Hit.p), 0.1)
                          va.C0 = va.C0:lerp(CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(-20), math.rad(20), math.rad(0)), 0.4)
                          vb.C0 = vb.C0:lerp(CFrame.new(1.3, 0, 0.2) * CFrame.Angles(math.rad(30), math.rad(-30), 0), 0.4)
                          swait()
                        end
                      end
                      if mouse.Target ~= nil then
                        biggrassblock = Instance.new("Part", Torso)
                        biggrassblock.Size = Vector3.new(math.random(15, 18), 50, math.random(15, 18))
                        biggrassblock.Anchored = true
                        biggrassblock.CFrame = CFrame.new(mouse.Hit.p) * CFrame.new(0, -10, 0) * CFrame.Angles(math.rad(math.random(-15, 15)), math.rad(math.random(-15, 15)), math.rad(math.random(-15, 15)))
                        biggrassblock.CanCollide = true
                        biggrassblock.Material = "Slate"
                        biggrassblock.BrickColor = BrickColor.new("Earth green")
                        removeuseless:AddItem(biggrassblock, 10)
                        locbrick = Instance.new("Part", biggrassblock)
                        locbrick.Size = Vector3.new(1, 1, 1)
                        locbrick.Transparency = 1
                        locbrick.CFrame = CFrame.new(mouse.Hit.p)
                        locbrick.CanCollide = false
                        locbrick.Anchored = true
                        shockwave = Instance.new("Part", Torso)
                        shockwave.Size = Vector3.new(1, 1, 1)
                        shockwave.CanCollide = false
                        shockwave.Anchored = true
                        shockwave.Transparency = 0.5
                        shockwave.BrickColor = BrickColor.new("White")
                        shockwave.CFrame = CFrame.new(locbrick.Position)
                        shockwavemesh = Instance.new("SpecialMesh", shockwave)
                        shockwavemesh.Scale = Vector3.new(7, 3, 7)
                        shockwavemesh.MeshId = "rbxassetid://20329976"
                        shockwave2 = Instance.new("Part", Torso)
                        shockwave2.Size = Vector3.new(1, 1, 1)
                        shockwave2.CanCollide = false
                        shockwave2.Anchored = true
                        shockwave2.Transparency = 0.5
                        shockwave2.BrickColor = BrickColor.new("White")
                        shockwave2.CFrame = CFrame.new(locbrick.Position)
                        shockwavemesh2 = Instance.new("SpecialMesh", shockwave2)
                        shockwavemesh2.Scale = Vector3.new(5, 3, 5)
                        shockwavemesh2.MeshId = "rbxassetid://20329976"
                        locbrick2 = Instance.new("Part", biggrassblock)
                        locbrick2.Size = Vector3.new(1, 1, 1)
                        locbrick2.Transparency = 1
                        locbrick2.CFrame = CFrame.new(mouse.Hit.p)
                        locbrick2.CanCollide = false
                        locbrick2weld = vg(locbrick2, locbrick)
                        zxp = 0
                        for fe = 1, 75 do
                          zxp = zxp + 5
                          crater = Instance.new("Part", Torso)
                          crater.BrickColor = biggrassblock.BrickColor
                          crater.Size = Vector3.new(5, 5, 5)
                          crater.Transparency = 1
                          craterweld = vg(crater, locbrick2)
                          craterweld.C0 = craterweld.C0 * CFrame.new(15, 0, 0) * CFrame.Angles(math.rad(0), math.rad(zxp), math.rad(0))
                          removeuseless:AddItem(crater, 1)
                          crater2 = Instance.new("Part", Torso)
                          crater2.CFrame = crater.CFrame * CFrame.Angles(math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)), math.rad(math.random(-180, 180)))
                          crater2.Size = Vector3.new(13, 13, 13)
                          crater2.Anchored = true
                          crater2.Material = "Grass"
                          crater2.BrickColor = BrickColor.new("Bright green")
                          removeuseless:AddItem(crater2, 15)
                        end
                        coroutine.wrap(function()
                          for fd = 1, 30 do
                            swait()
                            shockwave.CFrame = shockwave.CFrame * CFrame.Angles(math.rad(0), math.rad(15), 0)
                            shockwave2.CFrame = shockwave2.CFrame * CFrame.Angles(math.rad(0), math.rad(-8), 0)
                            shockwave.Transparency = shockwave.Transparency + 0.025
                            shockwave2.Transparency = shockwave2.Transparency + 0.025
                            shockwavemesh2.Scale = shockwavemesh2.Scale + Vector3.new(6, 1, 6)
                            shockwavemesh.Scale = shockwavemesh.Scale + Vector3.new(6, 1, 6)
                          end
                        end)()
                        coroutine.wrap(function()
                          for fd = 1, 10 do
                            swait()
                            biggrassblock.CFrame = biggrassblock.CFrame * CFrame.new(0, 2.7, 0)
                          end
                        end)()
                        groundrum = Instance.new("Sound", biggrassblock)
                        groundrum.SoundId = "rbxassetid://1265219916"
                        groundrum.Volume = 10
                        groundrum.Pitch = 1.5
                        groundrum:Play()
                        Hit = damagealll(30, biggrassblock.Position)
                        for fe, fg in pairs(Hit) do
                          if browntotem then
                          else
                            if avatarstate then
                            else
                            end
                          end
                          vel = Instance.new("BodyVelocity", fg:FindFirstChild("Torso") or fg:FindFirstChild("UpperTorso"))
                          vel.maxForce = Vector3.new(9999999999999, 9999999999999, 9999999999999)
                          torso = fg:FindFirstChild("Torso") or fg:FindFirstChild("UpperTorso")
                          vel.velocity = CFrame.new(biggrassblock.Position, torso.Position).lookVector * 150
                          removeuseless:AddItem(vel, 0.1)
                        end
                      end
                      if avatarstate then
                        for fe = 1, 7 do
                          g1.CFrame = g1.CFrame:lerp(CFrame.new(Root.Position, mouse.Hit.p), 0.2)
                          va.C0 = va.C0:lerp(CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(20), math.rad(-20), math.rad(0)), 0.8)
                          vb.C0 = vb.C0:lerp(CFrame.new(1.3, 1, 0.35) * CFrame.Angles(math.rad(-110), math.rad(-12), math.rad(1)), 0.8)
                          swait()
                        end
                      else
                        for fe = 1, 15 do
                          g1.CFrame = g1.CFrame:lerp(CFrame.new(Root.Position, mouse.Hit.p), 0.1)
                          va.C0 = va.C0:lerp(CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(20), math.rad(-20), math.rad(0)), 0.4)
                          vb.C0 = vb.C0:lerp(CFrame.new(1.3, 1, 0.35) * CFrame.Angles(math.rad(-110), math.rad(-12), math.rad(1)), 0.4)
                          swait()
                        end
                      end
                      ws = 90
                      attacking = false
                      debounce = false
                      appi = false
                      removeuseless:AddItem(g1, 0.001)
                    end
                  end
                end
              end
            end
          end
        end
      end
    end)
    particlecolor = ColorSequence.new(Color3.new(0, 5, 255))
    particlemiter1 = Instance.new("ParticleEmitter", LeftArm)
    particlemiter1.Enabled = false
    particlemiter1.Color = particlecolor
    particlemiter1.Texture = "rbxassetid://304437537"
    particlemiter1.Lifetime = NumberRange.new(2.5)
    particlemiter1.Size = NumberSequence.new(1, 0)
    particlemiter1.Rate = 25
    particlemiter1.RotSpeed = NumberRange.new(70)
    particlemiter1.Speed = NumberRange.new(0)
    particlemiter2 = Instance.new("ParticleEmitter", RightArm)
    particlemiter2.Enabled = false
    particlemiter2.Color = particlecolor
    particlemiter2.Texture = "rbxassetid://304437537"
    particlemiter2.Lifetime = NumberRange.new(2.5)
    particlemiter2.Size = NumberSequence.new(1, 0)
    particlemiter2.Rate = 25
    particlemiter2.RotSpeed = NumberRange.new(70)
    particlemiter2.Speed = NumberRange.new(0)
    particlemiter4 = Instance.new("ParticleEmitter", LeftLeg)
    particlemiter4.Enabled = false
    particlemiter4.Color = particlecolor
    particlemiter4.Texture = "rbxassetid://304437537"
    particlemiter4.Lifetime = NumberRange.new(2.5)
    particlemiter4.Size = NumberSequence.new(1, 0)
    particlemiter4.Rate = 25
    particlemiter4.RotSpeed = NumberRange.new(70)
    particlemiter4.Speed = NumberRange.new(0)
    particlemiter5 = Instance.new("ParticleEmitter", RightLeg)
    particlemiter5.Enabled = false
    particlemiter5.Color = particlecolor
    particlemiter5.Texture = "rbxassetid://304437537"
    particlemiter5.Lifetime = NumberRange.new(2.5)
    particlemiter5.Size = NumberSequence.new(1, 0)
    particlemiter5.Rate = 25
    particlemiter5.RotSpeed = NumberRange.new(70)
    particlemiter5.Speed = NumberRange.new(0)
    particlemiter6 = Instance.new("ParticleEmitter", Torso)
    particlemiter6.Enabled = false
    particlemiter6.Color = particlecolor
    particlemiter6.Texture = "rbxassetid://304437537"
    particlemiter6.Lifetime = NumberRange.new(2.5)
    particlemiter6.Size = NumberSequence.new(1, 0)
    particlemiter6.Rate = 25
    particlemiter6.RotSpeed = NumberRange.new(70)
    particlemiter6.Speed = NumberRange.new(0)
    particlemiter7 = Instance.new("ParticleEmitter", Head)
    particlemiter7.Enabled = false
    particlemiter7.Color = particlecolor
    particlemiter7.Texture = "rbxassetid://304437537"
    particlemiter7.Lifetime = NumberRange.new(2.5)
    particlemiter7.Size = NumberSequence.new(1, 0)
    particlemiter7.Rate = 25
    particlemiter7.RotSpeed = NumberRange.new(70)
    particlemiter7.Speed = NumberRange.new(0)
    coroutine.wrap(function()
      while wait() do
        pcall(function()
          particlemiter1.Color = particlecolor
          particlemiter2.Color = particlecolor
          particlemiter4.Color = particlecolor
          particlemiter5.Color = particlecolor
          particlemiter6.Color = particlecolor
          particlemiter7.Color = particlecolor
        end)
      end
    end)()
    checks1 = coroutine.wrap(function()
      while true do
        if 15 > Root.Velocity.Magnitude and running == false then
          position = "Idle"
        else
          if 15 < Root.Velocity.Magnitude and running == false then
            position = "Walking"
          else
          end
        end
        wait()
      end
    end)
    checks1()
    function ray(a, b, c, d)
      a = a
      return workspace:FindPartOnRay(Ray.new(a, b.unit * c), d)
    end
    function ray2(a, b, c, d)
      a = a
      return ray(a, CFrame.new(a, b).lookVector, c, d)
    end
    leftlocation = Instance.new("Part", LeftArm)
    leftlocation.Size = Vector3.new(1, 1, 1)
    leftlocation.Transparency = 1
    leftlocationweld = (function(a, b)
      a = a
      Instance.new("ManualWeld", a).Part0 = a
      Instance.new("ManualWeld", a).Part1 = b
      Instance.new("ManualWeld", a).C0 = a.CFrame:inverse() * b.CFrame
      return (Instance.new("ManualWeld", a))
    end)(leftlocation, LeftArm)
    leftlocationweld.C0 = CFrame.new(0, 1.2, 0)
    rightlocation = Instance.new("Part", RightArm)
    rightlocation.Size = Vector3.new(1, 1, 1)
    rightlocation.Transparency = 1
    rightlocationweld = (function(a, b)
      a = a
      Instance.new("ManualWeld", a).Part0 = a
      Instance.new("ManualWeld", a).Part1 = b
      Instance.new("ManualWeld", a).C0 = a.CFrame:inverse() * b.CFrame
      return (Instance.new("ManualWeld", a))
    end)(rightlocation, RightArm)
    rightlocationweld.C0 = CFrame.new(0, 1.2, 0)
    windblocks = Instance.new("Part", Torso)
    windblocks.Size = Vector3.new(1, 1, 1)
    windblocks.Transparency = 1
    windblocks.Anchored = false
    windblocks.CanCollide = false
    windblocksweld = (function(a, b)
      a = a
      Instance.new("ManualWeld", a).Part0 = a
      Instance.new("ManualWeld", a).Part1 = b
      Instance.new("ManualWeld", a).C0 = a.CFrame:inverse() * b.CFrame
      return (Instance.new("ManualWeld", a))
    end)(windblocks, Root)
    windblocks2 = Instance.new("Part", Torso)
    windblocks2.Size = Vector3.new(1, 1, 1)
    windblocks2.Transparency = 1
    windblocks2.Anchored = false
    windblocks2.CanCollide = false
    windblocks2weld = (function(a, b)
      a = a
      Instance.new("ManualWeld", a).Part0 = a
      Instance.new("ManualWeld", a).Part1 = b
      Instance.new("ManualWeld", a).C0 = a.CFrame:inverse() * b.CFrame
      return (Instance.new("ManualWeld", a))
    end)(windblocks2, Root)
    windring = Instance.new("Part", Torso)
    windring.Size = Vector3.new(1, 1, 1)
    windring.Transparency = 0.8
    windring.Anchored = false
    windring.BrickColor = BrickColor.new("Really white")
    windring.CanCollide = false
    ringh = Instance.new("SpecialMesh", windring)
    ringh.MeshId = "http://www.roblox.com/asset/?id=3270017"
    ringh.Scale = Vector3.new(19, 19, 4)
    windringweld = (function(a, b)
      a = a
      Instance.new("ManualWeld", a).Part0 = a
      Instance.new("ManualWeld", a).Part1 = b
      Instance.new("ManualWeld", a).C0 = a.CFrame:inverse() * b.CFrame
      return (Instance.new("ManualWeld", a))
    end)(windring, windblocks)
    windring2 = Instance.new("Part", Torso)
    windring2.Size = Vector3.new(1, 1, 1)
    windring2.Transparency = 0.8
    windring2.Anchored = false
    windring2.BrickColor = BrickColor.new("Really white")
    windring2.CanCollide = false
    ringh2 = Instance.new("SpecialMesh", windring2)
    ringh2.MeshId = "http://www.roblox.com/asset/?id=3270017"
    ringh2.Scale = Vector3.new(19, 19, 4)
    windring2weld = (function(a, b)
      a = a
      Instance.new("ManualWeld", a).Part0 = a
      Instance.new("ManualWeld", a).Part1 = b
      Instance.new("ManualWeld", a).C0 = a.CFrame:inverse() * b.CFrame
      return (Instance.new("ManualWeld", a))
    end)(windring2, windblocks2)
    wind = Instance.new("Part", Torso)
    wind.Size = Vector3.new(0.5, 0.5, 0.5)
    wind.Material = "Neon"
    wind.BrickColor = BrickColor.new("Really white")
    wind.Transparency = 0.76
    wind.CanCollide = false
    windMESH = Instance.new("SpecialMesh", wind)
    windMESH.Scale = Vector3.new(3.5, 3.5, 3.5)
    windMESH.MeshId = "rbxassetid://168892432"
    windWeld = (function(a, b)
      a = a
      Instance.new("ManualWeld", a).Part0 = a
      Instance.new("ManualWeld", a).Part1 = b
      Instance.new("ManualWeld", a).C0 = a.CFrame:inverse() * b.CFrame
      return (Instance.new("ManualWeld", a))
    end)(wind, Root)
    windWeld.C0 = CFrame.new(0, -10, 0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0))
    wind2 = Instance.new("Part", Torso)
    wind2.Size = Vector3.new(0.5, 0.5, 0.5)
    wind2.Material = "Neon"
    wind2.BrickColor = BrickColor.new("Really white")
    wind2.Transparency = 0.95
    wind2.CanCollide = false
    windMESH2 = Instance.new("SpecialMesh", wind2)
    windMESH2.Scale = Vector3.new(6, 6, 6)
    windMESH2.MeshId = "rbxassetid://168892432"
    windWeld2 = (function(a, b)
      a = a
      Instance.new("ManualWeld", a).Part0 = a
      Instance.new("ManualWeld", a).Part1 = b
      Instance.new("ManualWeld", a).C0 = a.CFrame:inverse() * b.CFrame
      return (Instance.new("ManualWeld", a))
    end)(wind2, Root)
    windWeld2.C0 = CFrame.new(0, -10, 0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0))
    grasslocation = Instance.new("Part", Torso)
    grasslocation.CFrame = Root.CFrame
    grasslocation.Size = Vector3.new(1, 1, 1)
    grasslocation.Transparency = 1
    grasslocation.CanCollide = false
    grasslocationweld = (function(a, b)
      a = a
      Instance.new("ManualWeld", a).Part0 = a
      Instance.new("ManualWeld", a).Part1 = b
      Instance.new("ManualWeld", a).C0 = a.CFrame:inverse() * b.CFrame
      return (Instance.new("ManualWeld", a))
    end)(grasslocation, Root)
    grasslocationweld.C0 = CFrame.Angles(math.rad(10), math.rad(10), 0)
    waterlocation = Instance.new("Part", Torso)
    waterlocation.CFrame = Root.CFrame
    waterlocation.Size = Vector3.new(1, 1, 1)
    waterlocation.Transparency = 1
    waterlocation.CanCollide = false
    waterlocationweld = (function(a, b)
      a = a
      Instance.new("ManualWeld", a).Part0 = a
      Instance.new("ManualWeld", a).Part1 = b
      Instance.new("ManualWeld", a).C0 = a.CFrame:inverse() * b.CFrame
      return (Instance.new("ManualWeld", a))
    end)(waterlocation, Root)
    waterlocationweld.C0 = CFrame.Angles(math.rad(10), math.rad(10), 0)
    zp = 0
    for fo = 1, 14 do
      zp = zp + 26
      grassblocks = Instance.new("Part", Torso)
      grassblocks.Size = Vector3.new(1.3, 1.3, 1.3)
      grassblocks.Material = "Slate"
      grassblocks.CanCollide = false
      grassblocks.BrickColor = BrickColor.new("Earth green")
      grassblocksweld = (function(a, b)
        a = a
        Instance.new("ManualWeld", a).Part0 = a
        Instance.new("ManualWeld", a).Part1 = b
        Instance.new("ManualWeld", a).C0 = a.CFrame:inverse() * b.CFrame
        return (Instance.new("ManualWeld", a))
      end)(grassblocks, grasslocation)
      grassblocksweld.C0 = CFrame.new(-7.5, 0, 0) * CFrame.Angles(math.rad(0), math.rad(zp), math.rad(0))
      table.insert(grasstable, grassblocksweld)
    end
    for fo = 1, 14 do
      zp = zp + 26.1
      waterblocks = Instance.new("Part", Torso)
      waterblocks.Size = Vector3.new(1.3, 1.3, 1.3)
      waterblocks.Material = "Neon"
      waterblocks.CanCollide = false
      waterblocks.Transparency = 0.5
      waterblocks.BrickColor = BrickColor.new("Cyan")
      waterblocksweld = (function(a, b)
        a = a
        Instance.new("ManualWeld", a).Part0 = a
        Instance.new("ManualWeld", a).Part1 = b
        Instance.new("ManualWeld", a).C0 = a.CFrame:inverse() * b.CFrame
        return (Instance.new("ManualWeld", a))
      end)(waterblocks, waterlocation)
      waterblocksweld.C0 = CFrame.new(-7.6, 0, 0) * CFrame.Angles(math.rad(0), math.rad(zp), math.rad(0))
      table.insert(watertable, waterwblocks)
    end
    locbrick1 = Instance.new("Part", Torso)
    locbrick1.Size = Vector3.new(1, 1, 1)
    locbrick1.CanCollide = false
    locbrick1.Transparency = 1
    locbrick1weld = (function(a, b)
      a = a
      Instance.new("ManualWeld", a).Part0 = a
      Instance.new("ManualWeld", a).Part1 = b
      Instance.new("ManualWeld", a).C0 = a.CFrame:inverse() * b.CFrame
      return (Instance.new("ManualWeld", a))
    end)(locbrick1, Root)
    locbrick1weld.C0 = CFrame.new(0, 9.5, 0)
    levitatewave = Instance.new("Part", Torso)
    levitatewave.Size = Vector3.new(1, 1, 1)
    levitatewave.CanCollide = false
    levitatewave.Anchored = false
    levitatewave.Transparency = 0.75
    levitatewave.BrickColor = BrickColor.new("White")
    levitatewave.CFrame = CFrame.new(Root.Position) * CFrame.new(0, -5, 0)
    levitatewavemesh = Instance.new("SpecialMesh", levitatewave)
    levitatewavemesh.Scale = Vector3.new(7, 1.25, 7)
    levitatewavemesh.MeshId = "rbxassetid://20329976"
    levitatewaveweld = (function(a, b)
      a = a
      Instance.new("ManualWeld", a).Part0 = a
      Instance.new("ManualWeld", a).Part1 = b
      Instance.new("ManualWeld", a).C0 = a.CFrame:inverse() * b.CFrame
      return (Instance.new("ManualWeld", a))
    end)(levitatewave, locbrick1)
    levitatewave2 = Instance.new("Part", Torso)
    levitatewave2.Size = Vector3.new(1, 1, 1)
    levitatewave2.CanCollide = false
    levitatewave2.Anchored = false
    levitatewave2.Transparency = 0.75
    levitatewave2.BrickColor = BrickColor.new("White")
    levitatewave2.CFrame = CFrame.new(Root.Position) * CFrame.new(0, -5, 0)
    levitatewavemesh2 = Instance.new("SpecialMesh", levitatewave2)
    levitatewavemesh2.Scale = Vector3.new(5.5, 1, 5.5)
    levitatewavemesh2.MeshId = "rbxassetid://20329976"
    levitatewaveweld2 = (function(a, b)
      a = a
      Instance.new("ManualWeld", a).Part0 = a
      Instance.new("ManualWeld", a).Part1 = b
      Instance.new("ManualWeld", a).C0 = a.CFrame:inverse() * b.CFrame
      return (Instance.new("ManualWeld", a))
    end)(levitatewave2, locbrick1)
    coroutine.wrap(function()
      po = 0
      xo = 0
      to = 0
      to2 = 0
      lo = 0
      mo = 0
      while true do
        swait()
        colors = colortable[math.random(1, #colortable)]
        to2 = to2 - 7
        to = to + 14
        po = po + 8
        lo = lo - 8
        xo = xo - 5
        mo = mo + 5
        hpheight = 6 + 1 * math.sin(sine / 12)
        windblocksweld.C0 = CFrame.Angles(math.rad(xo), math.rad(po), 0)
        windblocks2weld.C0 = CFrame.Angles(math.rad(lo), math.rad(mo), 0)
        if allowlev then
          locbrick1weld.C0 = CFrame.new(0, 8.7 + 0.7 * math.sin(sine / 12), 0)
        end
        levitatewaveweld2.C0 = CFrame.Angles(math.rad(0), math.rad(to), 0)
        levitatewaveweld.C0 = CFrame.Angles(math.rad(0), math.rad(-to), 0)
        if avatarstate then
          windWeld4.C0 = CFrame.Angles(math.rad(0), math.rad(to), math.rad(0))
          windWeld3.C0 = CFrame.Angles(math.rad(0), math.rad(to2), math.rad(0))
          windblocks3weld.C0 = CFrame.Angles(math.rad(xo), math.rad(po), 0)
          windblocks4weld.C0 = CFrame.Angles(math.rad(lo), math.rad(mo), 0)
          levitatewaveweld3.C0 = CFrame.Angles(math.rad(0), math.rad(to), 0)
          levitatewaveweld4.C0 = CFrame.Angles(math.rad(0), math.rad(-to), 0)
          levitatewaveweld5.C0 = CFrame.Angles(math.rad(0), math.rad(to), 0)
          levitatewaveweld6.C0 = CFrame.Angles(math.rad(0), math.rad(-to), 0)
        end
        waterlocationweld.C0 = CFrame.Angles(math.rad(0 * math.sin(sine / 12)), math.rad(-to / 6), math.rad(-40 * math.sin(sine / 12)))
        grasslocationweld.C0 = CFrame.Angles(math.rad(0 * math.sin(sine / 12)), math.rad(to / 6), math.rad(40 * math.sin(sine / 12)))
        windWeld.C0 = CFrame.Angles(math.rad(0), math.rad(to), math.rad(0))
        windWeld2.C0 = CFrame.Angles(math.rad(0), math.rad(to2), math.rad(0))
      end
    end)()
    OrgnC0 = Neck.C0
    coroutine.wrap(function()
      while RunSrv.RenderStepped:wait() do
        TrsoLV = Torso.CFrame.lookVector
        Dist = nil
        Diff = nil
        if not MseGuide then
          print("Failed to recognize")
        else
          Dist = Head.CFrame.p - Workspace:FindPartOnRay(Ray.new(Head.CFrame.p, mouse.Hit.lookVector), Workspace, false, true).magnitude
          Diff = Head.CFrame.Y - Workspace:FindPartOnRay(Ray.new(Head.CFrame.p, mouse.Hit.lookVector), Workspace, false, true).Y
          Dist2 = LeftArm.CFrame.p - Workspace:FindPartOnRay(Ray.new(Head.CFrame.p, mouse.Hit.lookVector), Workspace, false, true).magnitude
          Diff2 = LeftArm.CFrame.Y - Workspace:FindPartOnRay(Ray.new(Head.CFrame.p, mouse.Hit.lookVector), Workspace, false, true).Y
          va.C0 = CFrame.new(0, -1.5, 0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0))
          Neck.C0 = Neck.C0:lerp(OrgnC0 * CFrame.Angles(math.tan(Diff / Dist) * 1, 0, Head.CFrame.p - Workspace:FindPartOnRay(Ray.new(Head.CFrame.p, mouse.Hit.lookVector), Workspace, false, true).Unit:Cross(Torso.CFrame.lookVector).Y * 1), 0.1)
        end
      end
    end)()
    immortal = {}
    for fp, fn in pairs(Character:GetDescendants()) do
      if fn:IsA("BasePart") and fn.Name ~= "lmagic" and fn.Name ~= "rmagic" then
        if fn ~= Root and fn ~= Torso and fn ~= Head and fn ~= RightArm and fn ~= LeftArm and fn ~= RightLeg and fn.Name ~= "lmagic" and fn.Name ~= "rmagic" and fn ~= LeftLeg then
          fn.CustomPhysicalProperties = PhysicalProperties.new(0, 0, 0, 0, 0)
        end
        table.insert(immortal, {
          fn,
          fn.Parent,
          fn.Material,
          fn.Color,
          fn.Transparency
        })
      elseif fn:IsA("JointInstance") then
        table.insert(immortal, {
          fn,
          fn.Parent,
          nil,
          nil,
          nil
        })
      end
    end
    for fp = 1, #immortal do
      if immortal[fp] ~= nil then
        if levitate then
          if immortal[fp][1].ClassName == "Part" and immortal[fp][1] ~= Root and immortal[fp][1].Name ~= eyo1 and immortal[fp][1].Name ~= eyo2 and immortal[fp][1].Name ~= "lmagic" and immortal[fp][1].Name ~= "rmagic" then
            immortal[fp][1].Color, immortal[fp][1].Material = immortal[fp][4], immortal[fp][3]
            immortal[fp][1].Transparency = immortal[fp][5]
          end
          immortal[fp][1].AncestryChanged:connect(function()
            va.Parent = vb
          end)
        else
          if immortal[fp][1].ClassName == "Part" and immortal[fp][1] ~= Root and immortal[fp][1].Name ~= "lmagic" and immortal[fp][1].Name ~= "rmagic" then
            immortal[fp][1].Color, immortal[fp][1].Material = immortal[fp][4], immortal[fp][3]
            immortal[fp][1].Transparency = immortal[fp][5]
          end
          immortal[fp][1].AncestryChanged:connect(function()
            va.Parent = vb
          end)
        end
      end
    end
    function immortality()
      for fd = 1, #immortal do
        if immortal[fd] ~= nil then
          if immortal[fd][1].ClassName == "Part" and immortal[fd][1] == Root then
            immortal[fd][1].Transparency, immortal[fd][1].Color, immortal[fd][1].Material = immortal[fd][5], immortal[fd][4], immortal[fd][3]
          end
          if immortal[fd][1].Parent ~= immortal[fd][2] then
            hum:Remove()
            immortal[fd][1].Parent = immortal[fd][2]
            hum = Instance.new("Humanoid", Character)
            if levitate then
              eyo1:Remove()
              eyo2:Remove()
            end
            hum.Name = "noneofurbusiness"
          end
        end
      end
    end
    coroutine.wrap(function()
      while true do
        if hum.Health < 0.1 then
          deadsound = Instance.new("Sound", Torso)
          deadsound.Volume = 6
          deadsound.SoundId = "rbxassetid://1411352723"
          deadsound:Play()
          immortality()
        end
        wait()
      end
    end)()
    coroutine.wrap(function()
      while true do
        settime = 0.05
        sine = sine + change
        if position == "Walking" and attacking == false and running == false then
          change = 0.5
          walking = true
          va.C1 = va.C1:lerp(CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 0.25)
          vb.C1 = vb.C1:lerp(CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(0), 0, 0), 0.25)
          vc.C0 = vc.C0:lerp(CFrame.new(1.6, 0.5 - 0.1 * -math.sin(sine / 12), 0) * CFrame.Angles(math.rad(35 - 2 * math.sin(sine / 12)), math.rad(0), math.rad(25 + 5 * math.sin(sine / 12))), 0.25)
          vd.C0 = vd.C0:lerp(CFrame.new(-1.6, 0.5 - 0.1 * -math.sin(sine / 12), 0) * CFrame.Angles(math.rad(35 - 2 * math.sin(sine / 12)), math.rad(0), math.rad(-25 - 5 * math.sin(sine / 12))), 0.25)
          ve.C0 = ve.C0:lerp(CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(-41 - 1 * math.sin(sine / 9)), math.rad(0 + 0 * math.cos(sine / 8)), math.rad(0) + Root.RotVelocity.Y / 15, math.cos(10 * math.cos(sine / 10))), 0.25)
          vb.C0 = vb.C0:lerp(CFrame.new(-0.54, 2 + 0.02 * math.sin(sine / 12), 0.2 + 0.1 * math.sin(sine / 12)) * CFrame.Angles(math.rad(25 + 5 * math.sin(sine / 12)), math.rad(-20), math.rad(0)), 0.25)
          va.C0 = va.C0:lerp(CFrame.new(0.54, 2 + 0.02 * math.sin(sine / 12), 0.2 + 0.1 * math.sin(sine / 12)) * CFrame.Angles(math.rad(25 + 5 * math.sin(sine / 12)), math.rad(20), math.rad(0)), 0.25)
        elseif position == "Idle" and attacking == false and running == false then
          change = 0.5
          ve.C0 = ve.C0:lerp(CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(10 * math.sin(sine / 12)), math.rad(0), math.rad(0)), 0.2)
          vd.C0 = vd.C0:lerp(CFrame.new(-0.9, 0.65 + 0.4 * math.sin(sine / 12), 1.2) * CFrame.Angles(math.rad(-35 - 15 * math.sin(sine / 12)), math.rad(50 + 3 * math.sin(sine / 12)), math.rad(3 - 1 * math.sin(sine / 12))), 0.2)
          vc.C0 = vc.C0:lerp(CFrame.new(0.9, 0.65 + 0.4 * math.sin(sine / 12), 1.2) * CFrame.Angles(math.rad(-35 - 15 * math.sin(sine / 12)), math.rad(-50 - 3 * math.sin(sine / 12)), math.rad(-3 + 1 * math.sin(sine / 12))), 0.2)
          vb.C0 = vb.C0:lerp(CFrame.new(-0.54, 2 + 0.02 * math.sin(sine / 12), 0.2 + 0.1 * math.sin(sine / 12)) * CFrame.Angles(math.rad(25 + 5 * math.sin(sine / 12)), math.rad(-20), math.rad(0)), 0.2)
          va.C0 = va.C0:lerp(CFrame.new(0.54, 2 + 0.02 * math.sin(sine / 12), 0.2 + 0.1 * math.sin(sine / 12)) * CFrame.Angles(math.rad(25 + 5 * math.sin(sine / 12)), math.rad(20), math.rad(0)), 0.2)
        end
        swait()
      end
    end)()
    warn("Four elements combined to make one, powerful force. Made by Supr14")
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Free Scripts"):NewSection("Free Scripts"):NewButton("Eerin", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    wait(0.2)
    Player = game:GetService("Players").LocalPlayer
    PlayerGui = Player.PlayerGui
    Cam = workspace.CurrentCamera
    Backpack = Player.Backpack
    Character = Player.Character.Raw
    Humanoid = Character.Humanoid
    RootPart = Character.HumanoidRootPart
    Torso = Character.Torso
    Head = Character.Head
    RightArm = Character["Right Arm"]
    LeftArm = Character["Left Arm"]
    RightLeg = Character["Right Leg"]
    LeftLeg = Character["Left Leg"]
    RootJoint = RootPart.RootJoint
    Neck = Torso.Neck
    RightShoulder = Torso["Right Shoulder"]
    LeftShoulder = Torso["Left Shoulder"]
    RightHip = Torso["Right Hip"]
    LeftHip = Torso["Left Hip"]
    IT = Instance.new
    CF = CFrame.new
    VT = Vector3.new
    RAD = math.rad
    C3 = Color3.new
    UD2 = UDim2.new
    BRICKC = BrickColor.new
    ANGLES = CFrame.Angles
    EULER = CFrame.fromEulerAnglesXYZ
    COS = math.cos
    ACOS = math.acos
    SIN = math.sin
    ASIN = math.asin
    ABS = math.abs
    MRANDOM = math.random
    FLOOR = math.floor
    Animation_Speed = 3
    Frame_Speed = 0.0166666666666667
    IT("Animation").Name = "Roblox Idle Animation"
    IT("Animation").AnimationId = "http://www.roblox.com/asset/?id=180435571"
    IT("ScreenGui", PlayerGui).Name = "Weapon GUI"
    IT("Folder", Character).Name = "Effects"
    Humanoid.Animator:Destroy()
    ArtificialHB = Instance.new("BindableEvent", game:GetObjects("rbxassetid://6254124032")[1])
    ArtificialHB.Name = "ArtificialHB"
    game:GetObjects("rbxassetid://6254124032")[1]:WaitForChild("ArtificialHB")
    frame = Frame_Speed
    tf = 0
    allowframeloss = false
    tossremainder = false
    lastframe = tick()
    game:GetObjects("rbxassetid://6254124032")[1].ArtificialHB:Fire()
    game:GetService("RunService").Heartbeat:connect(function(a, b)
      a = a
      tf = tf + a
      if tf >= frame then
        if allowframeloss then
          ArtificialHB:Fire()
          lastframe = tick()
        else
          for fg = 1, math.floor(tf / frame) do
            ArtificialHB:Fire()
          end
          lastframe = tick()
        end
        if tossremainder then
          tf = 0
        else
          tf = tf - frame * math.floor(tf / frame)
        end
      end
    end)
    function Raycast(a, b, c, d)
      a = a
      return workspace:FindPartOnRay(Ray.new(a, b.unit * c), d)
    end
    function PositiveAngle(a)
      a = a
      if a >= 0 then
        a = 0
      end
      return a
    end
    function NegativeAngle(a)
      a = a
      if a <= 0 then
        a = 0
      end
      return a
    end
    function Swait(a)
      a = a
      if a ~= 0 then
      end
      if a == nil then
        ArtificialHB.Event:wait()
      else
        for fe = 1, a do
          ArtificialHB.Event:wait()
        end
      end
    end
    function CreateMesh(a, b, c, d, e, g, h)
      a = a
      if a == "SpecialMesh" then
        IT(a).MeshType = c
        if d ~= "nil" and d ~= "" then
          IT(a).MeshId = "http://www.roblox.com/asset/?id=" .. d
        end
        if e ~= "nil" and e ~= "" then
          IT(a).TextureId = "http://www.roblox.com/asset/?id=" .. e
        end
      end
      IT(a).Offset = h or VT(0, 0, 0)
      IT(a).Scale = g
      IT(a).Parent = b
      return (IT(a))
    end
    function CreatePart(a, b, c, d, e, g, h, j, k)
      a = a
      IT("Part").formFactor = a
      IT("Part").Reflectance = d
      IT("Part").Transparency = e
      IT("Part").CanCollide = false
      IT("Part").Locked = true
      IT("Part").Anchored = true
      if k == false then
        IT("Part").Anchored = false
      end
      IT("Part").BrickColor = BRICKC(tostring(g))
      IT("Part").Name = h
      IT("Part").Size = j
      IT("Part").Position = Torso.Position
      IT("Part").Material = c
      IT("Part"):BreakJoints()
      IT("Part").Parent = b
      return (IT("Part"))
    end
    function QuaternionFromCFrame(a)
      a = a
      if a:components() + a:components() + a:components() > 0 then
        return (a:components() - a:components()) * (0.5 / math.sqrt(1 + (a:components() + a:components() + a:components()))), (a:components() - a:components()) * (0.5 / math.sqrt(1 + (a:components() + a:components() + a:components())))
      else
        if 1 == 0 then
        end
        if 2 == 0 then
          return 0.5 * math.sqrt(a:components() - a:components() - a:components() + 1), (a:components() + a:components()) * (0.5 / math.sqrt(a:components() - a:components() - a:components() + 1))
        elseif 2 == 1 then
          return (a:components() + a:components()) * (0.5 / math.sqrt(a:components() - a:components() - a:components() + 1)), 0.5 * math.sqrt(a:components() - a:components() - a:components() + 1)
        elseif 2 == 2 then
          return (a:components() + a:components()) * (0.5 / math.sqrt(a:components() - a:components() - a:components() + 1)), (a:components() + a:components()) * (0.5 / math.sqrt(a:components() - a:components() - a:components() + 1))
        end
      end
    end
    function QuaternionToCFrame(a, b, c, d, e, g, h)
      a = a
      return CFrame.new(a, b, c, 1 - (e * (e + e) + g * (g + g)), d * (e + e) - h * (g + g), d * (g + g) + h * (e + e), d * (e + e) + h * (g + g), 1 - (d * (d + d) + g * (g + g)), e * (g + g) - h * (d + d), d * (g + g) - h * (e + e), e * (g + g) + h * (d + d), 1 - (d * (d + d) + e * (e + e)))
    end
    function QuaternionSlerp(a, b, c)
      a = a
      if 0.0001 <= a[1] * b[1] + a[2] * b[2] + a[3] * b[3] + a[4] * b[4] then
        if 0.0001 < 1 - (a[1] * b[1] + a[2] * b[2] + a[3] * b[3] + a[4] * b[4]) then
        else
        end
      elseif 0.0001 < 1 + (a[1] * b[1] + a[2] * b[2] + a[3] * b[3] + a[4] * b[4]) then
      else
      end
      return a[1] * (c - 1) + b[1] * c, a[2] * (c - 1) + b[2] * c
    end
    function Clerp(a, b, c)
      a = a
      return QuaternionToCFrame((1 - c) * a.x + c * b.x, (1 - c) * a.y + c * b.y, (1 - c) * a.z + c * b.z, QuaternionSlerp({
        QuaternionFromCFrame(a)
      }, {
        QuaternionFromCFrame(b)
      }, c))
    end
    function CreateFrame(a, b, c, d, e, g, h, j)
      a = a
      IT("Frame").BackgroundTransparency = b
      IT("Frame").BorderSizePixel = c
      IT("Frame").Position = d
      IT("Frame").Size = e
      IT("Frame").BackgroundColor3 = g
      IT("Frame").BorderColor3 = h
      IT("Frame").Name = j
      IT("Frame").Parent = a
      return (IT("Frame"))
    end
    function CreateLabel(a, b, c, d, e, g, h, j, k)
      a = a
      IT("TextLabel").BackgroundTransparency = 1
      IT("TextLabel").Size = UD2(1, 0, 1, 0)
      IT("TextLabel").Position = UD2(0, 0, 0, 0)
      IT("TextLabel").TextColor3 = c
      IT("TextLabel").TextStrokeTransparency = j
      IT("TextLabel").TextTransparency = g
      IT("TextLabel").FontSize = d
      IT("TextLabel").Font = e
      IT("TextLabel").BorderSizePixel = h
      IT("TextLabel").TextScaled = false
      IT("TextLabel").Text = b
      IT("TextLabel").Name = k
      IT("TextLabel").Parent = a
      return (IT("TextLabel"))
    end
    function NoOutlines(a)
      a = a
      a.TopSurface, a.BottomSurface, a.LeftSurface, a.RightSurface, a.FrontSurface, a.BackSurface = 10, 10, 10, 10, 10, 10
    end
    function CreateWeldOrSnapOrMotor(a, b, c, d, e, g)
      a = a
      IT(a).Part0 = c
      IT(a).Part1 = d
      IT(a).C0 = e
      IT(a).C1 = g
      IT(a).Parent = b
      return (IT(a))
    end
    function CreateSound(a, b, c, d, e)
      a = a
      coroutine.resume(coroutine.create(function()
        va = vb:Clone()
        va.Parent = vc
        va.Volume = vd
        va.Pitch = ve
        va.SoundId = "rbxassetid://" .. vg
        va:play()
        va.EmitterSize = vd * 3
        if vh == true then
          va.Looped = true
        else
          repeat
            wait(1)
          until va.Playing == false
          va:remove()
        end
      end))
      return nil
    end
    function CFrameFromTopBack(a, b, c)
      a = a
      return CF(a.x, a.y, a.z, b:Cross(c).x, b.x, c.x, b:Cross(c).y, b.y, c.y, b:Cross(c).z, b.z, c.z)
    end
    function WACKYEFFECT(a)
      a = a
      coroutine.resume(coroutine.create(function()
        if vd ~= nil and ve ~= nil and vg ~= nil then
        end
        CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true).Color = vh
        if vj == "Sphere" then
        elseif vj == "Box" then
          IT("BlockMesh", (CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true))).Scale = vk
        elseif vj == "Wave" then
        elseif vj == "Ring" then
        elseif vj == "Slash" then
        elseif vj == "Round Slash" then
        elseif vj == "Swirl" then
        elseif vj == "Skull" then
        elseif vj == "Crystal" then
        end
        if CreateMesh("SpecialMesh", CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true), "FileMesh", "9756362", "", vk, VT(0, 0, 0)) ~= nil then
          if vo ~= nil then
            if vp == true then
            else
            end
          end
          if vp == true then
          else
          end
          if vj == "Block" then
            CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true).CFrame = vn * ANGLES(RAD(MRANDOM(0, 360)), RAD(MRANDOM(0, 360)), RAD(MRANDOM(0, 360)))
          else
            CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true).CFrame = vn
          end
          if CreateSound(vd, nil, vg, ve, false) then
            CreateSound(vd, nil, vg, ve, false).Parent = CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true)
          end
          if vp == true then
            for fp = 1, vr + 1 do
              Swait()
              CreateMesh("SpecialMesh", CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true), "FileMesh", "9756362", "", vk, VT(0, 0, 0)).Scale = CreateMesh("SpecialMesh", CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true), "FileMesh", "9756362", "", vk, VT(0, 0, 0)).Scale - VT(vk - vs.X * (1 - fp / vr * (1 + vm / 50)), vk - vs.Y * (1 - fp / vr * (1 + vm / 50)), vk - vs.Z * (1 - fp / vr * (1 + vm / 50))) * (1 + vm / 50) / vr
              if vj == "Wave" then
                CreateMesh("SpecialMesh", CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true), "FileMesh", "9756362", "", vk, VT(0, 0, 0)).Offset = VT(0, 0, -CreateMesh("SpecialMesh", CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true), "FileMesh", "9756362", "", vk, VT(0, 0, 0)).Scale.Z / 8)
              end
              CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true).Transparency = CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true).Transparency - (vc - vt) / vr
              if vj == "Block" then
                CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true).CFrame = vn * ANGLES(RAD(MRANDOM(0, 360)), RAD(MRANDOM(0, 360)), RAD(MRANDOM(0, 360)))
              else
                CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true).CFrame = CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true).CFrame * ANGLES(RAD(vu), RAD(vy), RAD(vz))
              end
              if vo ~= nil then
                CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true).CFrame = CF(CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true).Position, vo) * CF(0, 0, -(vn.p - vo.Magnitude / vr) * (1 - fp / vr * (1 + vl / 50)))
                CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true).CFrame = CF(CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true).Position) * ANGLES(RAD(CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true).Orientation.X), RAD(CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true).Orientation.Y), RAD(CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true).Orientation.Z))
              end
            end
          else
            for fp = 1, vr + 1 do
              Swait()
              CreateMesh("SpecialMesh", CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true), "FileMesh", "9756362", "", vk, VT(0, 0, 0)).Scale = CreateMesh("SpecialMesh", CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true), "FileMesh", "9756362", "", vk, VT(0, 0, 0)).Scale - (vk - vs) / vr
              if vj == "Wave" then
                CreateMesh("SpecialMesh", CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true), "FileMesh", "9756362", "", vk, VT(0, 0, 0)).Offset = VT(0, 0, -CreateMesh("SpecialMesh", CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true), "FileMesh", "9756362", "", vk, VT(0, 0, 0)).Scale.Z / 8)
              end
              CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true).Transparency = CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true).Transparency - (vc - vt) / vr
              if vj == "Block" then
                CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true).CFrame = vn * ANGLES(RAD(MRANDOM(0, 360)), RAD(MRANDOM(0, 360)), RAD(MRANDOM(0, 360)))
              else
                CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true).CFrame = CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true).CFrame * ANGLES(RAD(vu), RAD(vy), RAD(vz))
              end
              if vo ~= nil then
                CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true).CFrame = CF(CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true).Position, vo) * CF(0, 0, -(vn.p - vo.Magnitude / vr))
                CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true).CFrame = CF(CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true).Position) * ANGLES(RAD(CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true).Orientation.X), RAD(CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true).Orientation.Y), RAD(CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true).Orientation.Z))
              end
            end
          end
          CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true).Transparency = 1
          if true == false then
            CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true):remove()
          else
            repeat
              Swait()
            until CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true):FindFirstChildOfClass("Sound") == nil
            CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true):remove()
          end
        elseif true == false then
          CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true):remove()
        else
          repeat
            Swait()
          until CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true):FindFirstChildOfClass("Sound") == nil
          CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true):remove()
        end
      end))
    end
    function MakeForm(a, b)
      a = a
      if b == "Cyl" then
      elseif b == "Ball" then
        IT("SpecialMesh", a).MeshType = "Sphere"
      elseif b == "Wedge" then
        IT("SpecialMesh", a).MeshType = "Wedge"
      end
    end
    Debris = game:GetService("Debris")
    function CastProperRay(a, b, c, d)
      a = a
      if type(d) == "table" then
      end
      return game:GetService("Workspace"):FindPartOnRayWithIgnoreList(Ray.new(a, CF(a, b).lookVector * c), {d})
    end
    IT("ParticleEmitter", nil).Enabled = false
    IT("ParticleEmitter", nil).LightEmission = 0.9
    IT("ParticleEmitter", nil).Rate = 150
    IT("ParticleEmitter", nil).ZOffset = 0.2
    IT("ParticleEmitter", nil).Rotation = NumberRange.new(-180, 180)
    function ParticleEmitter(a)
      a = a
      va:Clone().RotSpeed, va:Clone().Parent = a.RotSpeed or NumberRange.new(-15, 15), a.Parent or Torso
      va:Clone().Transparency = NumberSequence.new({
        NumberSequenceKeypoint.new(0, a.Transparency1 or 1),
        NumberSequenceKeypoint.new(1, a.Transparency2 or 0)
      })
      va:Clone().Texture = "http://www.roblox.com/asset/?id=" .. (a.Texture or "281983280")
      va:Clone().Color = ColorSequence.new(a.Color1 or C3(1, 1, 1), a.Color2 or C3(1, 1, 1))
      va:Clone().Size = NumberSequence.new(a.Size1 or 1, a.Size2 or 5)
      va:Clone().Lifetime = NumberRange.new(a.Lifetime1 or 1, a.Lifetime2 or 1.5)
      va:Clone().Acceleration, va:Clone().Drag, va:Clone().VelocitySpread, va:Clone().Speed = a.Acel or VT(0, 0, 0), a.Drag or 0, a.Offset or 360, NumberRange.new(a.Speed or 5)
      if (a.Enabled or false) == false then
        va:Clone():Emit(a.Emit or 100)
        Debris:AddItem(va:Clone(), a.Lifetime2 or 1.5)
      else
        va:Clone().Enabled = true
      end
      return (va:Clone())
    end
    function CamShake(a, b)
      a = a
      coroutine.resume(coroutine.create(function()
        for fe = 1, vb do
          wait()
          Humanoid.CameraOffset = VT(MRANDOM(-(va - va / vb * fe), va - va / vb * fe) / 10, MRANDOM(-(va - va / vb * fe), va - va / vb * fe) / 10, MRANDOM(-(va - va / vb * fe), va - va / vb * fe) / 10)
        end
        Humanoid.CameraOffset = VT(0, 0, 0)
      end))
    end
    function GetRoot(a, b)
      a = a
      if b == true then
        return a:FindFirstChild("Torso") or a:FindFirstChild("HumanoidRootPart") or a:FindFirstChild("UpperTorso")
      else
        return a:FindFirstChild("Torso") or a:FindFirstChild("UpperTorso")
      end
    end
    IT("Attachment", Torso).Position = VT(0, 1, 0)
    ParticleEmitter({
      Acel = VT(0, 3.5, 0),
      Speed = 1.5,
      RotSpeed = NumberRange.new(-15, 15),
      Drag = 0.1,
      Size1 = 0.6,
      Size2 = 0,
      Lifetime1 = 0,
      Lifetime2 = 0.45,
      Parent = IT("Attachment", Torso),
      Emit = 100,
      Offset = 360,
      Enabled = true,
      Color1 = BRICKC("Royal purple").Color,
      Color2 = BRICKC("Royal purple").Color,
      Texture = "296874871"
    }).LockedToPart = true
    ParticleEmitter({
      Acel = VT(0, 3.5, 0),
      Speed = 1.5,
      RotSpeed = NumberRange.new(-15, 15),
      Drag = 0.1,
      Size1 = 0.6,
      Size2 = 0,
      Lifetime1 = 0,
      Lifetime2 = 0.45,
      Parent = IT("Attachment", Torso),
      Emit = 100,
      Offset = 360,
      Enabled = true,
      Color1 = BRICKC("Royal purple").Color,
      Color2 = BRICKC("Royal purple").Color,
      Texture = "296874871"
    }).Rate = 999
    Instance.new("Shirt").ShirtTemplate = "rbxassetid://1533635803"
    Instance.new("Shirt").Parent = Character
    Instance.new("Shirt").Name = "Cloth"
    Instance.new("Pants").PantsTemplate = "rbxassetid://1460022985"
    Instance.new("Pants").Parent = Character
    Instance.new("Pants").Name = "Cloth"
    for fN = 1, #{
      "Leaping Pumpkin - Z",
      "Rollout - X",
      "Trashing - C",
      "Incinithrower - V",
      "Zoom - E",
      "Hothead - Q"
    } do
      CreateLabel(CreateFrame(IT("ScreenGui", PlayerGui), 1, 2, UD2(0.74, 0, 0.97 - 0.03 * fN, 0), UD2(0.26, 0, 0.07, 0), C3(0, 0, 0), C3(0, 0, 0), "Skill Frame"), "[" .. {
        "Leaping Pumpkin - Z",
        "Rollout - X",
        "Trashing - C",
        "Incinithrower - V",
        "Zoom - E",
        "Hothead - Q"
      }[fN] .. "]", BRICKC("Royal purple").Color, 6.5, "Bodoni", 0, 2, 0.5, "Skill text").TextXAlignment = "Right"
    end
    function ApplyDamage(a, b)
      a = a
      return
    end
    function ApplyAoE(a, b, c, d, e, g)
      a = a
      return
    end
    function LeapingPumpkin()
      va = true
      vb = true
      vc = false
      for fd = 0, 0.15, 0.1 / Animation_Speed do
        Swait()
        RootJoint.C0 = Clerp(RootJoint.C0, vd * CF(0, 0, -0.05) * ANGLES(RAD(-25), RAD(0), RAD(0)), 1 / Animation_Speed)
        Neck.C0 = Clerp(Neck.C0, ve * CF(0, 0, 0) * ANGLES(RAD(0), RAD(0), RAD(0)), 1 / Animation_Speed)
        RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(-45), RAD(-12), RAD(5)) * vg, 1 / Animation_Speed)
        LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(-45), RAD(12), RAD(-5)) * vh, 1 / Animation_Speed)
        RightHip.C0 = Clerp(RightHip.C0, CF(1, -1, 0) * ANGLES(RAD(-50), RAD(85), RAD(0)) * ANGLES(RAD(-1), RAD(0), RAD(0)), 1 / Animation_Speed)
        LeftHip.C0 = Clerp(LeftHip.C0, CF(-1, -1, 0) * ANGLES(RAD(-50), RAD(-85), RAD(0)) * ANGLES(RAD(-1), RAD(0), RAD(0)), 1 / Animation_Speed)
      end
      CreateSound(166423113, Torso, 5, 1.1, false)
      CreateSound(166423113, Torso, 5, 1.1, false)
      for fd = 0, 2, 0.1 / Animation_Speed do
        RootJoint.C0 = Clerp(RootJoint.C0, vd * CF(0, 0, 4) * ANGLES(RAD(45), RAD(0), RAD(0)), 1 / Animation_Speed)
      end
      CamShake(15, 17)
      for fe = 1, 65 do
        RootPart.CFrame = RootPart.CFrame * CF(0, 0, -((65 - fe) / 65))
        Swait()
        if -((65 - fe) / 65) < -0.65 then
          if vj == "Walk" then
            WACKYEFFECT({
              Time = 26,
              EffectType = "Wave",
              Size = VT(5, 0, 5),
              Size2 = VT(8, 5, 8),
              Transparency = 0.8,
              Transparency2 = 1,
              CFrame = RootPart.CFrame * CF(0, -3.5, -5) * ANGLES(RAD(45), RAD(MRANDOM(0, 360)), RAD(MRANDOM(-5, 5))),
              MoveToPos = nil,
              RotationX = 0.1,
              RotationY = 1,
              RotationZ = -0.1,
              Material = "Neon",
              Color = C3(1, 1, 1),
              SoundID = nil,
              SoundPitch = nil,
              SoundVolume = nil,
              UseBoomerangMath = false,
              Boomerang = 0,
              SizeBoomerang = 0
            })
            WACKYEFFECT({
              Time = 12,
              EffectType = "Wave",
              Size = VT(0, 0, 0),
              Size2 = VT(12, 2, 12),
              Transparency = 0.8,
              Transparency2 = 1,
              CFrame = RootPart.CFrame * CF(0, -3.5, -4) * ANGLES(RAD(45), RAD(MRANDOM(0, 360)), RAD(MRANDOM(-5, 5))),
              MoveToPos = nil,
              RotationX = 0.1,
              RotationY = 1,
              RotationZ = -0.1,
              Material = "Neon",
              Color = C3(1, 1, 1),
              SoundID = nil,
              SoundPitch = nil,
              SoundVolume = nil,
              UseBoomerangMath = true,
              Boomerang = 0,
              SizeBoomerang = 12
            })
            do return end
            while true do
              if workspace:GetDescendants().ClassName == "Model" and workspace:GetDescendants() ~= Character and workspace:GetDescendants().Name ~= "PurpleEerinFireball" and workspace:GetDescendants():FindFirstChildOfClass("Humanoid") then
                if (workspace:GetDescendants():FindFirstChild("Torso") or workspace:GetDescendants():FindFirstChild("UpperTorso")) and 6 >= workspace:GetDescendants():FindFirstChild("Torso") or workspace:GetDescendants():FindFirstChild("UpperTorso").Position - RootPart.Position.Magnitude then
                  for fu = 1, #{} do
                  end
                  if false == true then
                    ApplyDamage(workspace:GetDescendants():FindFirstChildOfClass("Humanoid"), (MRANDOM(25, 45)))
                    table.insert({}, workspace:GetDescendants())
                    for fy, fz in pairs(workspace:GetDescendants():GetChildren()) do
                      if fz:IsA("BasePart") then
                        Instance.new("BodyVelocity").maxForce = Vector3.new(1000000000, 1000000000, 1000000000)
                        Instance.new("BodyVelocity").velocity = CF(Torso.Position, workspace:GetDescendants():FindFirstChild("Torso") or workspace:GetDescendants():FindFirstChild("UpperTorso").Position).lookVector * 65
                        Instance.new("BodyVelocity").Parent = fz
                        Debris:AddItem(Instance.new("BodyVelocity"), 0.05)
                      end
                    end
                  end
                end
              end
            end
          end
        end
        RootJoint.C0 = Clerp(RootJoint.C0, vd * CF(0, 0, -3) * ANGLES(RAD(90), RAD(0), RAD(0)), 0.6 / Animation_Speed)
        Neck.C0 = Clerp(Neck.C0, ve * CF(0, 0, 0) * ANGLES(RAD(0), RAD(0), RAD(0)), 1 / Animation_Speed)
        RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5, 0.75, 0) * ANGLES(RAD(170), RAD(0), RAD(12)) * vg, 1 / Animation_Speed)
        LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.5, 0.75, 0) * ANGLES(RAD(170), RAD(0), RAD(-12)) * vh, 1 / Animation_Speed)
        RightHip.C0 = Clerp(RightHip.C0, CF(1, -1, -0.5) * ANGLES(RAD(-45), RAD(90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0)), 1 / Animation_Speed)
        LeftHip.C0 = Clerp(LeftHip.C0, CF(-1, -1, 0) * ANGLES(RAD(0), RAD(-90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0)), 1 / Animation_Speed)
      end
      for fe = 0, 0.7, 0.1 / Animation_Speed do
        Swait()
        RootJoint.C0 = Clerp(RootJoint.C0, vd * CF(0, 0, -3) * ANGLES(RAD(90), RAD(0), RAD(0)), 1 / Animation_Speed)
        Neck.C0 = Clerp(Neck.C0, ve * CF(0, 0, 0) * ANGLES(RAD(0), RAD(0), RAD(0)), 1 / Animation_Speed)
        RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5, 0.75, 0) * ANGLES(RAD(170), RAD(0), RAD(12)) * vg, 1 / Animation_Speed)
        LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.5, 0.75, 0) * ANGLES(RAD(170), RAD(0), RAD(-12)) * vh, 1 / Animation_Speed)
        RightHip.C0 = Clerp(RightHip.C0, CF(1, -1, -0.5) * ANGLES(RAD(-100), RAD(80), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0)), 1 / Animation_Speed)
        LeftHip.C0 = Clerp(LeftHip.C0, CF(-1, -1, 0) * ANGLES(RAD(0), RAD(-90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0)), 1 / Animation_Speed)
      end
      vc = true
      va = false
      vb = false
    end
    function Rollout()
      if va == true then
        RootPart.Velocity = VT(0, 0, 0)
      end
      vb = true
      vc = false
      va = false
      vd = false
      if ve == "Walk" then
        for fd = 1, 3 do
          WACKYEFFECT({
            Time = 15,
            EffectType = "Wave",
            Size = VT(2, 0, 2),
            Size2 = VT(12, 2.5, 12),
            Transparency = 0.6,
            Transparency2 = 1,
            CFrame = CF(RootPart.CFrame * CF(0, -4, 0).p) * ANGLES(RAD(0), RAD(MRANDOM(0, 360)), RAD(0)),
            MoveToPos = nil,
            RotationX = 1,
            RotationY = 0,
            RotationZ = 0,
            Material = "Neon",
            Color = C3(1, 1, 1),
            SoundID = nil,
            SoundPitch = MRANDOM(9, 11) / 10,
            SoundVolume = MRANDOM(9, 11) / 2,
            UseBoomerangMath = true,
            Boomerang = 0,
            SizeBoomerang = 22
          })
        end
      end
      coroutine.resume(coroutine.create(function()
        for fd = 1, 25 do
          Swait()
          RootPart.CFrame = RootPart.CFrame * CF(0, (25 - fd) / 7, 0)
        end
      end))
      CreateSound(1368583274, Torso, 5, 1.1, false)
      for fd = 1, 65 do
        Swait()
        WACKYEFFECT({
          Time = 15,
          EffectType = "Round Slash",
          Size = VT(0.1, 0, 0.1),
          Size2 = VT(0, 0, 0),
          Transparency = 1,
          Transparency2 = 0.5,
          CFrame = CF(RootPart.Position) * ANGLES(RAD(MRANDOM(0, 360)), RAD(MRANDOM(0, 360)), RAD(MRANDOM(0, 360))),
          MoveToPos = nil,
          RotationX = 0,
          RotationY = 0,
          RotationZ = 0,
          Material = "Neon",
          Color = C3(1, 1, 1),
          SoundID = nil,
          SoundPitch = nil,
          SoundVolume = nil,
          UseBoomerangMath = true,
          Boomerang = 0,
          SizeBoomerang = 35
        })
        RootJoint.C0 = Clerp(RootJoint.C0, vg * CF(0, 0, 0) * ANGLES(RAD(fd * 45), RAD(0), RAD(0)), 2.5 / Animation_Speed)
        Neck.C0 = Clerp(Neck.C0, vh * CF(0, 0, 0) * ANGLES(RAD(-20), RAD(0), RAD(0)), 0.2 / Animation_Speed)
        RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.25, 0.5, -1) * ANGLES(RAD(0), RAD(0), RAD(-90)) * vj, 0.2 / Animation_Speed)
        LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.25, 0.5, -1) * ANGLES(RAD(0), RAD(0), RAD(90)) * vk, 0.2 / Animation_Speed)
        RightHip.C0 = Clerp(RightHip.C0, CF(1, 0, -0.5) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(-5), RAD(0), RAD(-20)), 0.2 / Animation_Speed)
        LeftHip.C0 = Clerp(LeftHip.C0, CF(-1, 0, -0.5) * ANGLES(RAD(0), RAD(-90), RAD(0)) * ANGLES(RAD(-5), RAD(0), RAD(20)), 0.2 / Animation_Speed)
      end
      RootPart.CFrame = CF(RootPart.Position, vl.Hit.p)
      for fd = 1, 2 do
        for fj = 1, 4 do
          WACKYEFFECT({
            Time = 80,
            EffectType = "Round Slash",
            Size = VT(0, 0, 0),
            Size2 = VT(fd, 0, fd) / 4,
            Transparency = 0,
            Transparency2 = 1,
            CFrame = CF(RootPart.Position) * ANGLES(RAD(MRANDOM(0, 360)), RAD(MRANDOM(0, 360)), RAD(MRANDOM(0, 360))),
            MoveToPos = nil,
            RotationX = 0,
            RotationY = 0,
            RotationZ = 0,
            Material = "Neon",
            Color = C3(1, 1, 1),
            SoundID = nil,
            SoundPitch = nil,
            SoundVolume = nil,
            UseBoomerangMath = true,
            Boomerang = 0,
            SizeBoomerang = 35
          })
        end
      end
      for fd = 1, 12 do
        WACKYEFFECT({
          Time = 35 - fd,
          EffectType = "Wave",
          Size = VT(12, 0, 12),
          Size2 = VT(13 + fd * 5, 5 + fd * 3, 13 + fd * 5),
          Transparency = 0.3,
          Transparency2 = 1,
          CFrame = RootPart.CFrame * CF(0, 0, -4) * ANGLES(RAD(90), RAD(MRANDOM(0, 360)), RAD(MRANDOM(-5, 5))),
          MoveToPos = nil,
          RotationX = 0.1,
          RotationY = 1,
          RotationZ = -0.1,
          Material = "Neon",
          Color = C3(1, 1, 1),
          SoundID = nil,
          SoundPitch = nil,
          SoundVolume = nil,
          UseBoomerangMath = false,
          Boomerang = 0,
          SizeBoomerang = 15
        })
      end
      WACKYEFFECT({
        Time = 45,
        EffectType = "Sphere",
        Size = VT(15, 15, 15),
        Size2 = VT(35, 35, 35),
        Transparency = 0.7,
        Transparency2 = 1,
        CFrame = CF(RootPart.Position),
        MoveToPos = nil,
        RotationX = 0,
        RotationY = 0,
        RotationZ = 0,
        Material = "Neon",
        Color = vm,
        SoundID = 1368637781,
        SoundPitch = 1,
        SoundVolume = 5,
        UseBoomerangMath = true,
        Boomerang = 0,
        SizeBoomerang = 50
      })
      coroutine.resume(coroutine.create(function()
        CreateSound({257001341, 257001320}[MRANDOM(1, 2)], CreatePart(3, va, "Fabric", 0, 0, BRICKC("Pearl"), "ROLLERDAH", VT(13.02, 9.3, 12.09) / 1.5, true), 10, MRANDOM(8, 13) / 10, false).EmitterSize = 70
        CreateMesh("SpecialMesh", CreatePart(3, va, "Fabric", 0, 0, BRICKC("Pearl"), "ROLLERDAH", VT(13.02, 9.3, 12.09) / 1.5, true), "FileMesh", "16973748", "1090019344", VT(9.3, 9.3, 9.3), VT(0, 0, 0))
        MakeForm(CreatePart(3, va, "Neon", 0, 0, BRICKC("Royal purple"), "Fire", VT(1, 0.1, 1) * 13.02, true), "Ball")
        CreatePart(3, va, "Fabric", 0, 0, BRICKC("Pearl"), "ROLLERDAH", VT(13.02, 9.3, 12.09) / 1.5, true).CFrame = RootPart.CFrame
        ParticleEmitter({
          Acel = VT(0, 75, 0),
          Speed = 6,
          RotSpeed = NumberRange.new(-15, 15),
          Drag = 0.5,
          Size1 = 7,
          Size2 = 0,
          Lifetime1 = 0,
          Lifetime2 = 1.4,
          Parent = CreatePart(3, va, "Fabric", 0, 0, BRICKC("Pearl"), "ROLLERDAH", VT(13.02, 9.3, 12.09) / 1.5, true),
          Emit = 100,
          Offset = 360,
          Enabled = true,
          Color1 = BRICKC("Royal purple").Color,
          Color2 = BRICKC("Royal purple").Color,
          Texture = "296874871"
        }).Rate = 999
        CreatePart(3, va, "Fabric", 0, 0, BRICKC("Pearl"), "ROLLERDAH", VT(13.02, 9.3, 12.09) / 1.5, true).Touched:Connect(function(a)
          a = a
          if a.Parent ~= Character then
            va = true
          end
        end)
        for fp = 1, 15 do
          Swait()
          CreatePart(3, va, "Fabric", 0, 0, BRICKC("Pearl"), "ROLLERDAH", VT(13.02, 9.3, 12.09) / 1.5, true).CFrame = CreatePart(3, va, "Fabric", 0, 0, BRICKC("Pearl"), "ROLLERDAH", VT(13.02, 9.3, 12.09) / 1.5, true).CFrame * CF(0, -(fp / 15), -2)
          CreatePart(3, va, "Neon", 0, 0, BRICKC("Royal purple"), "Fire", VT(1, 0.1, 1) * 13.02, true).CFrame = CreatePart(3, va, "Fabric", 0, 0, BRICKC("Pearl"), "ROLLERDAH", VT(13.02, 9.3, 12.09) / 1.5, true).CFrame * CF(0, -4.278, 0)
          if false == true or Raycast(CreatePart(3, va, "Fabric", 0, 0, BRICKC("Pearl"), "ROLLERDAH", VT(13.02, 9.3, 12.09) / 1.5, true).Position, CreatePart(3, va, "Fabric", 0, 0, BRICKC("Pearl"), "ROLLERDAH", VT(13.02, 9.3, 12.09) / 1.5, true).CFrame.lookVector, 5.5, Character) then
            break
          end
        end
        for fn = 1, 200 do
          Swait()
          if Raycast(CreatePart(3, va, "Fabric", 0, 0, BRICKC("Pearl"), "ROLLERDAH", VT(13.02, 9.3, 12.09) / 1.5, true).Position, CF(RootPart.Position, RootPart.Position + VT(0, -1, 0)).lookVector, 5.5, Character) then
            if false == false then
              coroutine.resume(coroutine.create(function()
                for fd = 1, 15 do
                  Swait()
                  va = va + 0.1
                end
              end))
            end
            CreatePart(3, va, "Fabric", 0, 0, BRICKC("Pearl"), "ROLLERDAH", VT(13.02, 9.3, 12.09) / 1.5, true).CanCollide = true
            WACKYEFFECT({
              Time = 26,
              EffectType = "Wave",
              Size = VT(12, 0, 12),
              Size2 = VT(18, 5, 18),
              Transparency = 0.8,
              Transparency2 = 1,
              CFrame = CF(CreatePart(3, va, "Fabric", 0, 0, BRICKC("Pearl"), "ROLLERDAH", VT(13.02, 9.3, 12.09) / 1.5, true).Position) * ANGLES(RAD(0), RAD(CreatePart(3, va, "Fabric", 0, 0, BRICKC("Pearl"), "ROLLERDAH", VT(13.02, 9.3, 12.09) / 1.5, true).Orientation.Y), RAD(0)) * CF(0, 0, -0) * CF(0, -5, -7) * ANGLES(RAD(15), RAD(MRANDOM(0, 360)), RAD(MRANDOM(-5, 5))),
              MoveToPos = nil,
              RotationX = 0.1,
              RotationY = 1,
              RotationZ = -0.1,
              Material = "Neon",
              Color = Raycast(CreatePart(3, va, "Fabric", 0, 0, BRICKC("Pearl"), "ROLLERDAH", VT(13.02, 9.3, 12.09) / 1.5, true).Position, CF(RootPart.Position, RootPart.Position + VT(0, -1, 0)).lookVector, 5.5, Character).Color,
              SoundID = nil,
              SoundPitch = nil,
              SoundVolume = nil,
              UseBoomerangMath = false,
              Boomerang = 0,
              SizeBoomerang = 15
            })
          else
            CreatePart(3, va, "Fabric", 0, 0, BRICKC("Pearl"), "ROLLERDAH", VT(13.02, 9.3, 12.09) / 1.5, true).CanCollide = false
          end
          CreatePart(3, va, "Fabric", 0, 0, BRICKC("Pearl"), "ROLLERDAH", VT(13.02, 9.3, 12.09) / 1.5, true).CFrame = CF(CreatePart(3, va, "Fabric", 0, 0, BRICKC("Pearl"), "ROLLERDAH", VT(13.02, 9.3, 12.09) / 1.5, true).Position) * ANGLES(RAD(0), RAD(CreatePart(3, va, "Fabric", 0, 0, BRICKC("Pearl"), "ROLLERDAH", VT(13.02, 9.3, 12.09) / 1.5, true).Orientation.Y), RAD(0)) * CF(0, 0, -0) * CF(0, -1.5, -0.8) * ANGLES(RAD(-(0 + 0.8 * 6)), RAD(0), RAD(0))
          CreatePart(3, va, "Neon", 0, 0, BRICKC("Royal purple"), "Fire", VT(1, 0.1, 1) * 13.02, true).CFrame = CreatePart(3, va, "Fabric", 0, 0, BRICKC("Pearl"), "ROLLERDAH", VT(13.02, 9.3, 12.09) / 1.5, true).CFrame * CF(0, -4.278, 0)
          if Raycast(CreatePart(3, va, "Fabric", 0, 0, BRICKC("Pearl"), "ROLLERDAH", VT(13.02, 9.3, 12.09) / 1.5, true).Position, CF(RootPart.Position, RootPart.Position + VT(0, -1, 0)).lookVector, 6, Character) and Raycast(CreatePart(3, va, "Fabric", 0, 0, BRICKC("Pearl"), "ROLLERDAH", VT(13.02, 9.3, 12.09) / 1.5, true).Position, CF(RootPart.Position, RootPart.Position + VT(0, -1, 0)).lookVector, 6, Character).Parent:FindFirstChildOfClass("Humanoid") then
            break
          end
          if Raycast(CreatePart(3, va, "Fabric", 0, 0, BRICKC("Pearl"), "ROLLERDAH", VT(13.02, 9.3, 12.09) / 1.5, true).Position, CF(CreatePart(3, va, "Fabric", 0, 0, BRICKC("Pearl"), "ROLLERDAH", VT(13.02, 9.3, 12.09) / 1.5, true).Position) * ANGLES(RAD(0), RAD(CreatePart(3, va, "Fabric", 0, 0, BRICKC("Pearl"), "ROLLERDAH", VT(13.02, 9.3, 12.09) / 1.5, true).Orientation.Y), RAD(0)) * CF(0, 0, -0) * CF(0, -1.5, -0.8).lookVector, 6, Character) then
            break
          end
          if false == true then
            break
          end
        end
        CamShake(6, 12)
        ApplyAoE(CreatePart(3, va, "Fabric", 0, 0, BRICKC("Pearl"), "ROLLERDAH", VT(13.02, 9.3, 12.09) / 1.5, true).Position, 50, 25, 65, 150, true)
        ApplyAoE(CreatePart(3, va, "Fabric", 0, 0, BRICKC("Pearl"), "ROLLERDAH", VT(13.02, 9.3, 12.09) / 1.5, true).Position, 125, 25, 65, 150, false)
        WACKYEFFECT({
          Time = 25,
          EffectType = "Sphere",
          Size = VT(15, 15, 15),
          Size2 = VT(50, 50, 50),
          Transparency = 0.7,
          Transparency2 = 1,
          CFrame = CF(CreatePart(3, va, "Fabric", 0, 0, BRICKC("Pearl"), "ROLLERDAH", VT(13.02, 9.3, 12.09) / 1.5, true).Position),
          MoveToPos = nil,
          RotationX = 0,
          RotationY = 0,
          RotationZ = 0,
          Material = "Neon",
          Color = vb,
          SoundID = 1664711478,
          SoundPitch = 1,
          SoundVolume = 8,
          UseBoomerangMath = true,
          Boomerang = 0,
          SizeBoomerang = 50
        })
        WACKYEFFECT({
          Time = 25,
          EffectType = "Sphere",
          Size = VT(15, 15, 15),
          Size2 = VT(70, 70, 70),
          Transparency = 0.7,
          Transparency2 = 1,
          CFrame = CF(CreatePart(3, va, "Fabric", 0, 0, BRICKC("Pearl"), "ROLLERDAH", VT(13.02, 9.3, 12.09) / 1.5, true).Position),
          MoveToPos = nil,
          RotationX = 0,
          RotationY = 0,
          RotationZ = 0,
          Material = "Neon",
          Color = vb,
          SoundID = 201858144,
          SoundPitch = 1,
          SoundVolume = 5,
          UseBoomerangMath = true,
          Boomerang = 0,
          SizeBoomerang = 50
        })
        for fn = 1, 5 do
          WACKYEFFECT({
            Time = 65 - fn * 12,
            EffectType = "Sphere",
            Size = VT(0, 0, 0),
            Size2 = VT(45, 45, 45) + VT(fn, fn, fn) * 55,
            Transparency = 0,
            Transparency2 = 1,
            CFrame = CF(CreatePart(3, va, "Fabric", 0, 0, BRICKC("Pearl"), "ROLLERDAH", VT(13.02, 9.3, 12.09) / 1.5, true).Position),
            MoveToPos = nil,
            RotationX = 0,
            RotationY = 0,
            RotationZ = 0,
            Material = "Neon",
            Color = vb,
            SoundID = nil,
            SoundPitch = nil,
            SoundVolume = nil,
            UseBoomerangMath = false,
            Boomerang = 0,
            SizeBoomerang = 0
          })
        end
        for fn = 1, 3 do
          for fu = 1, 4 do
            WACKYEFFECT({
              Time = 50,
              EffectType = "Round Slash",
              Size = VT(0, 0, 0),
              Size2 = VT(fn, 0, fn) / 2,
              Transparency = 0,
              Transparency2 = 1,
              CFrame = CF(CreatePart(3, va, "Fabric", 0, 0, BRICKC("Pearl"), "ROLLERDAH", VT(13.02, 9.3, 12.09) / 1.5, true).Position) * ANGLES(RAD(MRANDOM(0, 360)), RAD(MRANDOM(0, 360)), RAD(MRANDOM(0, 360))),
              MoveToPos = nil,
              RotationX = 0,
              RotationY = 0,
              RotationZ = 0,
              Material = "Neon",
              Color = C3(1, 1, 1),
              SoundID = nil,
              SoundPitch = nil,
              SoundVolume = nil,
              UseBoomerangMath = true,
              Boomerang = 0,
              SizeBoomerang = 10
            })
          end
        end
        if Raycast(CreatePart(3, va, "Fabric", 0, 0, BRICKC("Pearl"), "ROLLERDAH", VT(13.02, 9.3, 12.09) / 1.5, true).Position, CF(RootPart.Position, RootPart.Position + VT(0, -1, 0)).lookVector, 12, Character) then
          for fs = 1, 5 do
            WACKYEFFECT({
              Time = 20 + fs * 15,
              EffectType = "Wave",
              Size = VT(15, 0, 15),
              Size2 = VT(120, 15, 120),
              Transparency = 0.6,
              Transparency2 = 1,
              CFrame = CF(Raycast(CreatePart(3, va, "Fabric", 0, 0, BRICKC("Pearl"), "ROLLERDAH", VT(13.02, 9.3, 12.09) / 1.5, true).Position, CF(RootPart.Position, RootPart.Position + VT(0, -1, 0)).lookVector, 12, Character)) * ANGLES(RAD(0), RAD(MRANDOM(0, 360)), RAD(0)) * ANGLES(RAD(MRANDOM(-15, 15)), RAD(MRANDOM(0, 360)), RAD(0)),
              MoveToPos = nil,
              RotationX = 0.2,
              RotationY = 0,
              RotationZ = 0,
              Material = "Neon",
              Color = C3(1, 1, 1),
              SoundID = nil,
              SoundPitch = MRANDOM(9, 11) / 10,
              SoundVolume = MRANDOM(9, 11) / 2,
              UseBoomerangMath = true,
              Boomerang = 0,
              SizeBoomerang = 22
            })
          end
        end
        CreatePart(3, va, "Fabric", 0, 0, BRICKC("Pearl"), "ROLLERDAH", VT(13.02, 9.3, 12.09) / 1.5, true).Transparency = 1
        Debris:AddItem(CreatePart(3, va, "Fabric", 0, 0, BRICKC("Pearl"), "ROLLERDAH", VT(13.02, 9.3, 12.09) / 1.5, true), 5)
        ParticleEmitter({
          Acel = VT(0, 75, 0),
          Speed = 6,
          RotSpeed = NumberRange.new(-15, 15),
          Drag = 0.5,
          Size1 = 7,
          Size2 = 0,
          Lifetime1 = 0,
          Lifetime2 = 1.4,
          Parent = CreatePart(3, va, "Fabric", 0, 0, BRICKC("Pearl"), "ROLLERDAH", VT(13.02, 9.3, 12.09) / 1.5, true),
          Emit = 100,
          Offset = 360,
          Enabled = true,
          Color1 = BRICKC("Royal purple").Color,
          Color2 = BRICKC("Royal purple").Color,
          Texture = "296874871"
        }).Enabled = false
        CreatePart(3, va, "Neon", 0, 0, BRICKC("Royal purple"), "Fire", VT(1, 0.1, 1) * 13.02, true):Remove()
        for fs = 1, 25 do
          CreatePart(3, workspace, "Pebble", 0, 0, BRICKC("Pearl"), "ROLLERDAH", VT(13.02 * (MRANDOM(8, 12) / 10), 9.3 * (MRANDOM(8, 12) / 10), 12.09 * (MRANDOM(8, 12) / 10)) / 1.5 / 2, false).CanCollide = true
          CreatePart(3, workspace, "Pebble", 0, 0, BRICKC("Pearl"), "ROLLERDAH", VT(13.02 * (MRANDOM(8, 12) / 10), 9.3 * (MRANDOM(8, 12) / 10), 12.09 * (MRANDOM(8, 12) / 10)) / 1.5 / 2, false).CFrame = CreatePart(3, va, "Fabric", 0, 0, BRICKC("Pearl"), "ROLLERDAH", VT(13.02, 9.3, 12.09) / 1.5, true).CFrame * ANGLES(RAD(MRANDOM(0, 360)), RAD(MRANDOM(0, 360)), RAD(MRANDOM(0, 360)))
          CreatePart(3, workspace, "Pebble", 0, 0, BRICKC("Pearl"), "ROLLERDAH", VT(13.02 * (MRANDOM(8, 12) / 10), 9.3 * (MRANDOM(8, 12) / 10), 12.09 * (MRANDOM(8, 12) / 10)) / 1.5 / 2, false).Velocity = CF(CreatePart(3, workspace, "Pebble", 0, 0, BRICKC("Pearl"), "ROLLERDAH", VT(13.02 * (MRANDOM(8, 12) / 10), 9.3 * (MRANDOM(8, 12) / 10), 12.09 * (MRANDOM(8, 12) / 10)) / 1.5 / 2, false).Position - VT(0, 6, 0), CreatePart(3, workspace, "Pebble", 0, 0, BRICKC("Pearl"), "ROLLERDAH", VT(13.02 * (MRANDOM(8, 12) / 10), 9.3 * (MRANDOM(8, 12) / 10), 12.09 * (MRANDOM(8, 12) / 10)) / 1.5 / 2, false).CFrame * ANGLES(RAD(MRANDOM(0, 360)), RAD(MRANDOM(0, 360)), RAD(MRANDOM(0, 360))) * CF(0, 5, 0).p).lookVector * MRANDOM(50, 320)
          Debris:AddItem(CreatePart(3, workspace, "Pebble", 0, 0, BRICKC("Pearl"), "ROLLERDAH", VT(13.02 * (MRANDOM(8, 12) / 10), 9.3 * (MRANDOM(8, 12) / 10), 12.09 * (MRANDOM(8, 12) / 10)) / 1.5 / 2, false), 8)
        end
      end))
      for fd = 0, 0.35, 0.1 / Animation_Speed do
        Swait()
        RootPart.CFrame = RootPart.CFrame * CF(0, 0, 1.2)
        RootJoint.C0 = Clerp(RootJoint.C0, vg * CF(0, 0, -0.05) * ANGLES(RAD(-25), RAD(0), RAD(0)), 1 / Animation_Speed)
        Neck.C0 = Clerp(Neck.C0, vh * CF(0, 0, 0) * ANGLES(RAD(0), RAD(0), RAD(0)), 1 / Animation_Speed)
        RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(90), RAD(-12), RAD(5)) * vj, 1 / Animation_Speed)
        LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(90), RAD(12), RAD(-5)) * vk, 1 / Animation_Speed)
        RightHip.C0 = Clerp(RightHip.C0, CF(1, -1, 0) * ANGLES(RAD(-50), RAD(85), RAD(0)) * ANGLES(RAD(-1), RAD(0), RAD(0)), 1 / Animation_Speed)
        LeftHip.C0 = Clerp(LeftHip.C0, CF(-1, -1, 0) * ANGLES(RAD(-50), RAD(-85), RAD(0)) * ANGLES(RAD(-1), RAD(0), RAD(0)), 1 / Animation_Speed)
      end
      vd = true
      va = true
      vb = false
      vc = false
    end
    function Trashing()
      if va.Target ~= nil and va.Target.Parent:FindFirstChildOfClass("Humanoid") then
        if GetRoot(va.Target.Parent:FindFirstChildOfClass("Humanoid").Parent, false) and 0 < va.Target.Parent:FindFirstChildOfClass("Humanoid").Health and 375 >= GetRoot(va.Target.Parent:FindFirstChildOfClass("Humanoid").Parent, false).Position - RootPart.Position.Magnitude then
          vb = true
          vc = true
          CreateSound(1368573150, RightArm, 5, MRANDOM(8, 13) / 10, false)
          CreateSound(1368573150, GetRoot(va.Target.Parent:FindFirstChildOfClass("Humanoid").Parent, false), 5, MRANDOM(8, 13) / 10, false);
          (function(a, b, c)
            a = a
            IT("BodyVelocity").maxForce = VT(1000000000, 1000000000, 1000000000)
            IT("BodyVelocity").Parent = a
            IT("BodyVelocity").velocity = CF(a.Position, b).lookVector * c
            Debris:AddItem(IT("BodyVelocity"), 0.35)
          end)(GetRoot(va.Target.Parent:FindFirstChildOfClass("Humanoid").Parent, false), GetRoot(va.Target.Parent:FindFirstChildOfClass("Humanoid").Parent, false).Position + VT(0, 35, 0), 80)
          ParticleEmitter({
            Transparency1 = 0,
            Transparency2 = 1,
            Acel = VT(0, 0, 0),
            Speed = 0.8,
            RotSpeed = NumberRange.new(-15, 15),
            Drag = 0.1,
            Size1 = 3,
            Size2 = 2,
            Lifetime1 = 0,
            Lifetime2 = 1,
            Parent = GetRoot(va.Target.Parent:FindFirstChildOfClass("Humanoid").Parent, false),
            Emit = 100,
            Offset = 360,
            Enabled = true,
            Color1 = BRICKC("Royal purple").Color,
            Color2 = BRICKC("Royal purple").Color,
            Texture = "242627777"
          }).Rate = 999
          ParticleEmitter({
            Transparency1 = 0,
            Transparency2 = 1,
            Acel = VT(0, 0, 0),
            Speed = 0.8,
            RotSpeed = NumberRange.new(-15, 15),
            Drag = 0.1,
            Size1 = 3,
            Size2 = 2,
            Lifetime1 = 0,
            Lifetime2 = 1,
            Parent = GetRoot(va.Target.Parent:FindFirstChildOfClass("Humanoid").Parent, false),
            Emit = 100,
            Offset = 360,
            Enabled = true,
            Color1 = BRICKC("Royal purple").Color,
            Color2 = BRICKC("Royal purple").Color,
            Texture = "242627777"
          }).LightEmission = 0.9
          for fk = 0, 1, 0.1 / Animation_Speed do
            Swait()
            WACKYEFFECT({
              Time = 12,
              EffectType = "Round Slash",
              Size = VT(0, 0, 0),
              Size2 = VT(0.03, 0, 0.03),
              Transparency = 0,
              Transparency2 = 1,
              CFrame = RightArm.CFrame * CF(0, -1, 0) * ANGLES(RAD(MRANDOM(0, 360)), RAD(MRANDOM(0, 360)), RAD(MRANDOM(0, 360))),
              MoveToPos = nil,
              RotationX = 0,
              RotationY = 0,
              RotationZ = 0,
              Material = "Neon",
              Color = C3(1, 1, 1),
              SoundID = nil,
              SoundPitch = nil,
              SoundVolume = nil,
              UseBoomerangMath = true,
              Boomerang = 0,
              SizeBoomerang = 10
            })
            RootJoint.C0 = Clerp(RootJoint.C0, vd * CF(0.04, 0, 0) * ANGLES(RAD(0), RAD(2.5), RAD(0)), 1 / Animation_Speed)
            Neck.C0 = Clerp(Neck.C0, ve * CF(0, 0, 0) * ANGLES(RAD(0), RAD(0), RAD(0)), 1 / Animation_Speed)
            RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(-25), RAD(-12), RAD(150)) * ANGLES(RAD(0), RAD(180), RAD(0)) * vg, 1 / Animation_Speed)
            LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(0), RAD(12), RAD(-55)) * vh, 1 / Animation_Speed)
            RightHip.C0 = Clerp(RightHip.C0, CF(1, -1.035, 0) * ANGLES(RAD(0), RAD(85), RAD(0)) * ANGLES(RAD(0.5), RAD(0), RAD(0)), 1 / Animation_Speed)
            LeftHip.C0 = Clerp(LeftHip.C0, CF(-1, -0.965, 0) * ANGLES(RAD(0), RAD(-85), RAD(0)) * ANGLES(RAD(-4.5), RAD(0), RAD(0)), 1 / Animation_Speed)
          end
          vj = false
          (function(a, b, c)
            a = a
            IT("BodyVelocity").maxForce = VT(1000000000, 1000000000, 1000000000)
            IT("BodyVelocity").Parent = a
            IT("BodyVelocity").velocity = CF(a.Position, b).lookVector * c
            Debris:AddItem(IT("BodyVelocity"), 0.35)
          end)(GetRoot(va.Target.Parent:FindFirstChildOfClass("Humanoid").Parent, false), va.Hit.p + VT(0, 5, 0), 170)
          va.Target.Parent:FindFirstChildOfClass("Humanoid").PlatformStand = true
          CreateSound(471882099, GetRoot(va.Target.Parent:FindFirstChildOfClass("Humanoid").Parent, false), 5, MRANDOM(8, 13) / 10, false)
          GetRoot(va.Target.Parent:FindFirstChildOfClass("Humanoid").Parent, false).RotVelocity = VT(MRANDOM(-15, 15), MRANDOM(-15, 15), MRANDOM(-15, 15))
          for fm, fo in pairs(GetRoot(va.Target.Parent:FindFirstChildOfClass("Humanoid").Parent, false).Parent:GetChildren()) do
            if fo:IsA("BasePart") then
              table.insert({}, (fo.Touched:Connect(function(a)
                a = a
                if a.Parent == va.Parent then
                end
                if a.Parent.Parent ~= va.Parent and a.Parent ~= vb then
                  CamShake(6, 25)
                  vc = true
                  for fe = 1, #vd do
                    vd[fe]:Disconnect()
                  end
                  ApplyAoE(va.Position - VT(0, -0.1, 0), 65, 25, 75, 250, false)
                  for fg = 1, 3 do
                    WACKYEFFECT({
                      Time = 45 - fg * 12,
                      EffectType = "Sphere",
                      Size = VT(0, 0, 0),
                      Size2 = VT(25, 25, 25) + VT(fg, fg, fg) * 55,
                      Transparency = 0,
                      Transparency2 = 1,
                      CFrame = CF(va.Position - VT(0, -0.1, 0)),
                      MoveToPos = nil,
                      RotationX = 0,
                      RotationY = 0,
                      RotationZ = 0,
                      Material = "Neon",
                      Color = ve,
                      SoundID = 1368637781,
                      SoundPitch = MRANDOM(8, 14) / 10,
                      SoundVolume = 5,
                      UseBoomerangMath = false,
                      Boomerang = 0,
                      SizeBoomerang = 0
                    })
                  end
                  for fg = 1, 2 do
                    for fl = 1, 2 do
                      WACKYEFFECT({
                        Time = 50,
                        EffectType = "Round Slash",
                        Size = VT(0, 0, 0),
                        Size2 = VT(fg, 0, fg) / 2,
                        Transparency = 0,
                        Transparency2 = 1,
                        CFrame = CF(va.Position - VT(0, -0.1, 0)) * ANGLES(RAD(MRANDOM(0, 360)), RAD(MRANDOM(0, 360)), RAD(MRANDOM(0, 360))),
                        MoveToPos = nil,
                        RotationX = 0,
                        RotationY = 0,
                        RotationZ = 0,
                        Material = "Neon",
                        Color = C3(1, 1, 1),
                        SoundID = nil,
                        SoundPitch = nil,
                        SoundVolume = nil,
                        UseBoomerangMath = true,
                        Boomerang = 0,
                        SizeBoomerang = 10
                      })
                    end
                  end
                  if Raycast(vg.Position, CF(RootPart.Position, RootPart.Position + VT(0, -1, 0)).lookVector, 15 * vg.Size.Z, vg.Parent) then
                    for fj = 1, 5 do
                      WACKYEFFECT({
                        Time = 20 + fj * 15,
                        EffectType = "Wave",
                        Size = VT(15, 0, 15),
                        Size2 = VT(80, 15, 80),
                        Transparency = 0.6,
                        Transparency2 = 1,
                        CFrame = CF(Raycast(vg.Position, CF(RootPart.Position, RootPart.Position + VT(0, -1, 0)).lookVector, 15 * vg.Size.Z, vg.Parent)) * ANGLES(RAD(0), RAD(MRANDOM(0, 360)), RAD(0)) * ANGLES(RAD(MRANDOM(-15, 15)), RAD(MRANDOM(0, 360)), RAD(0)),
                        MoveToPos = nil,
                        RotationX = 0.2,
                        RotationY = 0,
                        RotationZ = 0,
                        Material = "Neon",
                        Color = C3(1, 1, 1),
                        SoundID = nil,
                        SoundPitch = MRANDOM(9, 11) / 10,
                        SoundVolume = MRANDOM(9, 11) / 2,
                        UseBoomerangMath = true,
                        Boomerang = 0,
                        SizeBoomerang = 22
                      })
                    end
                  end
                end
              end)))
            end
          end
          coroutine.resume(coroutine.create(function()
            for fd = 1, 200 do
              Swait()
              if va == true then
                break
              end
            end
            vb.Enabled = false
            vb.Speed = NumberRange.new(0, 25)
            vb:Emit(160)
            Debris:AddItem(vb, 5)
            for fd = 1, #vc do
              vc[fd]:Disconnect()
            end
            vd.PlatformStand = false
          end))
          for fm = 1, 3 do
            WACKYEFFECT({
              Time = 45 - fm * 12,
              EffectType = "Sphere",
              Size = VT(0, 0, 0),
              Size2 = VT(5, 5, 5) + VT(fm, fm, fm) * 3,
              Transparency = 0,
              Transparency2 = 1,
              CFrame = CF(RightArm.CFrame * CF(0, -1, 0).p),
              MoveToPos = nil,
              RotationX = 0,
              RotationY = 0,
              RotationZ = 0,
              Material = "Neon",
              Color = vl,
              SoundID = 1368637781,
              SoundPitch = MRANDOM(8, 20) / 10,
              SoundVolume = 2,
              UseBoomerangMath = false,
              Boomerang = 0,
              SizeBoomerang = 0
            })
          end
          for fm = 0, 1, 0.1 / Animation_Speed do
            Swait()
            RootJoint.C0 = Clerp(RootJoint.C0, vd * CF(0, 0.2, 0) * ANGLES(RAD(0), RAD(0), RAD(45)), 1 / Animation_Speed)
            Neck.C0 = Clerp(Neck.C0, ve * CF(0, 0, 0) * ANGLES(RAD(45), RAD(0), RAD(15)), 1 / Animation_Speed)
            RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.15, 0.45, -0.5) * ANGLES(RAD(45), RAD(0), RAD(-45)) * vg, 1 / Animation_Speed)
            LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(0), RAD(12 - 2.5 * SIN(vm / 12)), RAD(-55 - 2.5 * SIN(vm / 12) - 2.5 * COS(vm / 6))) * vh, 1 / Animation_Speed)
            RightHip.C0 = Clerp(RightHip.C0, CF(1, -1, 0) * ANGLES(RAD(0), RAD(50), RAD(0)) * ANGLES(RAD(-3), RAD(0), RAD(0)), 1 / Animation_Speed)
            LeftHip.C0 = Clerp(LeftHip.C0, CF(-1, -1, 0) * ANGLES(RAD(0), RAD(-100), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0)), 1 / Animation_Speed)
          end
          vj = true
          vb = false
          vc = false
        end
      end
    end
    function Incinithrower()
      va = true
      vb = true
      function SPAWNFIREBALL(a, b, c)
        a = a
        coroutine.resume(coroutine.create(function()
          IT("BoolValue", (IT("Model", workspace))).Name = "AboutToEerin"
          IT("Model", workspace).Name = "PurpleEerinFireball"
          CreatePart(3, IT("Model", workspace), "Fabric", 0, 1, BRICKC("Pearl"), "Torso", va, false).CFrame = vb
          CreateSound(471882099, CreatePart(3, IT("Model", workspace), "Fabric", 0, 1, BRICKC("Pearl"), "Torso", va, false), 5, MRANDOM(8, 13) / 7, false)
          IT("Humanoid", (IT("Model", workspace))).MaxHealth = 25
          IT("Humanoid", (IT("Model", workspace))).Health = 25
          CreatePart(3, IT("Model", workspace), "Fabric", 0, 1, BRICKC("Pearl"), "Torso", va, false).CanCollide = true
          CreateWeldOrSnapOrMotor("Weld", CreatePart(3, IT("Model", workspace), "Fabric", 0, 1, BRICKC("Pearl"), "Torso", va, false), CreatePart(3, IT("Model", workspace), "Fabric", 0, 1, BRICKC("Pearl"), "Torso", va, false), CreatePart(3, IT("Model", workspace), "Fabric", 0, 1, BRICKC("Pearl"), "Right leg", va, false), CF(0, 0, 0), CF(0, 0, 0)).Parent, CreateWeldOrSnapOrMotor("Weld", CreatePart(3, IT("Model", workspace), "Fabric", 0, 1, BRICKC("Pearl"), "Torso", va, false), CreatePart(3, IT("Model", workspace), "Fabric", 0, 1, BRICKC("Pearl"), "Torso", va, false), CreatePart(3, IT("Model", workspace), "Fabric", 0, 1, BRICKC("Pearl"), "Head", VT(0, 0, 0), false), CF(0, 0, 0), CF(0, 0, 0)).Parent, CreatePart(3, IT("Model", workspace), "Fabric", 0, 1, BRICKC("Pearl"), "Torso", va, false).Shape = CreatePart(3, IT("Model", workspace), "Fabric", 0, 1, BRICKC("Pearl"), "Torso", va, false), CreatePart(3, IT("Model", workspace), "Fabric", 0, 1, BRICKC("Pearl"), "Torso", va, false), "Ball"
          vc(CreatePart(3, IT("Model", workspace), "Fabric", 0, 1, BRICKC("Pearl"), "Torso", va, false), vb * CF(0, 0, -1).p, MRANDOM(vd - math.ceil(vd / 1.5), vd + math.ceil(vd / 1.5)))
          ParticleEmitter({
            Acel = VT(0, 85, 0),
            Speed = 2,
            RotSpeed = NumberRange.new(-15, 15),
            Drag = 0.5,
            Size1 = va.X * 2,
            Size2 = 0,
            Lifetime1 = 0,
            Lifetime2 = 0.4,
            Parent = CreatePart(3, IT("Model", workspace), "Fabric", 0, 1, BRICKC("Pearl"), "Torso", va, false),
            Emit = 100,
            Offset = 360,
            Enabled = true,
            Color1 = BRICKC("Royal purple").Color,
            Color2 = BRICKC("Royal purple").Color,
            Texture = "296874871"
          }).Rate = 999
          wait(1)
          for fs = 1, math.ceil(200 * va.X) do
            Swait(4)
            if IT("Humanoid", (IT("Model", workspace))).Health == 0 then
              break
            end
            for fw, fx in pairs(workspace:GetDescendants()) do
              if fx.ClassName == "Model" and fx ~= Character and fx:FindFirstChild("AboutToEerin") == nil and fx:FindFirstChildOfClass("Humanoid") then
                if (fx:FindFirstChild("Torso") or fx:FindFirstChild("UpperTorso")) and 0 < fx:FindFirstChildOfClass("Humanoid").Health and 150 >= fx:FindFirstChild("Torso") or fx:FindFirstChild("UpperTorso").Position - CreatePart(3, IT("Model", workspace), "Fabric", 0, 1, BRICKC("Pearl"), "Torso", va, false).Position.Magnitude then
                end
              end
            end
            if fx:FindFirstChild("Torso") or fx:FindFirstChild("UpperTorso") then
              CreatePart(3, IT("Model", workspace), "Fabric", 0, 1, BRICKC("Pearl"), "Torso", va, false).CFrame = CF(CreatePart(3, IT("Model", workspace), "Fabric", 0, 1, BRICKC("Pearl"), "Torso", va, false).Position, VT(fx:FindFirstChild("Torso") or fx:FindFirstChild("UpperTorso").Position.X, CreatePart(3, IT("Model", workspace), "Fabric", 0, 1, BRICKC("Pearl"), "Torso", va, false).Position.Y, fx:FindFirstChild("Torso") or fx:FindFirstChild("UpperTorso").Position.Z))
              IT("Humanoid", (IT("Model", workspace))):MoveTo(fx:FindFirstChild("Torso") or fx:FindFirstChild("UpperTorso").Position)
              if 5 > fx:FindFirstChild("Torso") or fx:FindFirstChild("UpperTorso").Position - CreatePart(3, IT("Model", workspace), "Fabric", 0, 1, BRICKC("Pearl"), "Torso", va, false).Position.Magnitude then
                coroutine.resume(coroutine.create(function()
                  IT("BoolValue", va.Parent).Name = "AboutToEerin"
                  if va.Parent:FindFirstChildOfClass("Humanoid") then
                    for fj, fk in pairs(va.Parent:GetChildren()) do
                      if fk:IsA("BasePart") then
                        ParticleEmitter({
                          Acel = VT(0, 55, 0),
                          Speed = 2,
                          RotSpeed = NumberRange.new(-15, 15),
                          Drag = 0.5,
                          Size1 = 2,
                          Size2 = 0,
                          Lifetime1 = 0,
                          Lifetime2 = 0.7,
                          Parent = fk,
                          Emit = 100,
                          Offset = 360,
                          Enabled = true,
                          Color1 = BRICKC("Royal purple").Color,
                          Color2 = BRICKC("Royal purple").Color,
                          Texture = "296874871"
                        }).Rate = 999
                        table.insert({}, (ParticleEmitter({
                          Acel = VT(0, 55, 0),
                          Speed = 2,
                          RotSpeed = NumberRange.new(-15, 15),
                          Drag = 0.5,
                          Size1 = 2,
                          Size2 = 0,
                          Lifetime1 = 0,
                          Lifetime2 = 0.7,
                          Parent = fk,
                          Emit = 100,
                          Offset = 360,
                          Enabled = true,
                          Color1 = BRICKC("Royal purple").Color,
                          Color2 = BRICKC("Royal purple").Color,
                          Texture = "296874871"
                        })))
                      end
                    end
                    for fk = 1, 200 do
                      Swait()
                      ApplyDamage(va.Parent:FindFirstChildOfClass("Humanoid"), 0.3 * vb)
                      if 0.1 > va.Parent:FindFirstChildOfClass("Humanoid").Health then
                        break
                      end
                    end
                    IT("BoolValue", va.Parent):Remove()
                    for fk = 1, #{} do
                      {}[fk].Enabled = false
                      Debris:AddItem({}[fk], 1.5)
                    end
                    if true == true then
                      CamShake(15, 5)
                      va.Parent:BreakJoints()
                      for fl = 1, 2 do
                        for fn = 1, 4 do
                          WACKYEFFECT({
                            Time = 50,
                            EffectType = "Round Slash",
                            Size = VT(0, 0, 0),
                            Size2 = VT(fl, 0, fl) / 6,
                            Transparency = 0,
                            Transparency2 = 1,
                            CFrame = CF(va.CFrame.p) * ANGLES(RAD(MRANDOM(0, 360)), RAD(MRANDOM(0, 360)), RAD(MRANDOM(0, 360))),
                            MoveToPos = nil,
                            RotationX = 0,
                            RotationY = 0,
                            RotationZ = 0,
                            Material = "Neon",
                            Color = C3(1, 1, 1),
                            SoundID = nil,
                            SoundPitch = nil,
                            SoundVolume = nil,
                            UseBoomerangMath = true,
                            Boomerang = 0,
                            SizeBoomerang = 10
                          })
                        end
                      end
                      WACKYEFFECT({
                        Time = 15,
                        EffectType = "Sphere",
                        Size = VT(4, 4, 4) * va.Size.Z,
                        Size2 = VT(15, 15, 15) * va.Size.Z,
                        Transparency = 0.4,
                        Transparency2 = 1,
                        CFrame = CF(va.CFrame.p),
                        MoveToPos = nil,
                        RotationX = 0,
                        RotationY = 0,
                        RotationZ = 0,
                        Material = "Neon",
                        Color = vc,
                        SoundID = 952306739,
                        SoundPitch = MRANDOM(8, 14) / 15,
                        SoundVolume = 5,
                        UseBoomerangMath = false,
                        Boomerang = 0,
                        SizeBoomerang = 0
                      })
                      if vb > 0.4 then
                        for fl = 1, 5 do
                          SPAWNFIREBALL(va.CFrame * ANGLES(RAD(MRANDOM(0, 360)), RAD(MRANDOM(0, 360)), RAD(MRANDOM(0, 360))), 150, vd / 2)
                        end
                      end
                    end
                  end
                end))
              end
            end
            if true == true then
              break
            end
          end
          IT("Model", workspace).AncestryChanged:Connect(function(a, b)
            a = a
            Swait()
            if va.Parent ~= workspace then
              va.Parent = workspace
            end
          end):Disconnect()
          CreatePart(3, IT("Model", workspace), "Fabric", 0, 1, BRICKC("Pearl"), "Right leg", va, false):Remove()
          CreatePart(3, IT("Model", workspace), "Fabric", 0, 1, BRICKC("Pearl"), "Head", VT(0, 0, 0), false):Remove()
          IT("Humanoid", (IT("Model", workspace))):Remove()
          ParticleEmitter({
            Acel = VT(0, 85, 0),
            Speed = 2,
            RotSpeed = NumberRange.new(-15, 15),
            Drag = 0.5,
            Size1 = va.X * 2,
            Size2 = 0,
            Lifetime1 = 0,
            Lifetime2 = 0.4,
            Parent = CreatePart(3, IT("Model", workspace), "Fabric", 0, 1, BRICKC("Pearl"), "Torso", va, false),
            Emit = 100,
            Offset = 360,
            Enabled = true,
            Color1 = BRICKC("Royal purple").Color,
            Color2 = BRICKC("Royal purple").Color,
            Texture = "296874871"
          }).Enabled = false
          CreatePart(3, IT("Model", workspace), "Fabric", 0, 1, BRICKC("Pearl"), "Torso", va, false).CanCollide = false
          CreatePart(3, IT("Model", workspace), "Fabric", 0, 1, BRICKC("Pearl"), "Torso", va, false).Anchored = true
          Debris:AddItem(IT("Model", workspace), 1.5)
          if true == false then
            WACKYEFFECT({
              Time = 15,
              EffectType = "Sphere",
              Size = VT(0, 0, 0),
              Size2 = VT(6, 6, 6),
              Transparency = 0.6,
              Transparency2 = 1,
              CFrame = CF(CreatePart(3, IT("Model", workspace), "Fabric", 0, 1, BRICKC("Pearl"), "Torso", va, false).Position),
              MoveToPos = nil,
              RotationX = 0,
              RotationY = 0,
              RotationZ = 0,
              Material = "Neon",
              Color = ve,
              SoundID = 952306739,
              SoundPitch = MRANDOM(8, 14) / 10,
              SoundVolume = 5,
              UseBoomerangMath = false,
              Boomerang = 0,
              SizeBoomerang = 0
            })
          end
        end))
      end
      vd = false
      for fe = 0, 1, 0.1 / Animation_Speed do
        Swait()
        RootJoint.C0 = Clerp(RootJoint.C0, ve * CF(0 - 0.04 * SIN(vg / 24), 0, 0 + 0.05 * COS(vg / 12)) * ANGLES(RAD(0), RAD(0 - 2.5 * SIN(vg / 24)), RAD(0)), 1 / Animation_Speed)
        Neck.C0 = Clerp(Neck.C0, vh * CF(0, 0, 0) * ANGLES(RAD(0 - 5 * SIN(vg / 12)), RAD(0), RAD(0)), 1 / Animation_Speed)
        RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.25, 0.65, 0) * ANGLES(RAD(180), RAD(-12 + 2.5 * SIN(vg / 12)), RAD(-5 + 2.5 * SIN(vg / 12) - 2.5 * COS(vg / 6))) * vj, 1 / Animation_Speed)
        LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.25, 0.65, 0) * ANGLES(RAD(180), RAD(12 - 2.5 * SIN(vg / 12)), RAD(5 - 2.5 * SIN(vg / 12) - 2.5 * COS(vg / 6))) * vk, 1 / Animation_Speed)
        RightHip.C0 = Clerp(RightHip.C0, CF(1, -1 + 0.035 * SIN(vg / 24) - 0.05 * COS(vg / 12), 0) * ANGLES(RAD(0), RAD(85), RAD(0)) * ANGLES(RAD(-2 - 2.5 * SIN(vg / 24)), RAD(0), RAD(0)), 1 / Animation_Speed)
        LeftHip.C0 = Clerp(LeftHip.C0, CF(-1, -1 - 0.035 * SIN(vg / 24) - 0.05 * COS(vg / 12), 0) * ANGLES(RAD(0), RAD(-85), RAD(0)) * ANGLES(RAD(-2 + 2.5 * SIN(vg / 24)), RAD(0), RAD(0)), 1 / Animation_Speed)
      end
      for fe = 1, 15 do
        for fk = 1, 5 do
          Swait()
          RootJoint.C0 = Clerp(RootJoint.C0, ve * CF(0.04, 0, 0) * ANGLES(RAD(0), RAD(2.5), RAD(0)), 1 / Animation_Speed)
          Neck.C0 = Clerp(Neck.C0, vh * CF(0, 0, 0) * ANGLES(RAD(0), RAD(0), RAD(-fe * 155)), 1 / Animation_Speed)
          RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.25, 0.65, 0) * ANGLES(RAD(220), RAD(-12), RAD(5)) * vj, 1 / Animation_Speed)
          LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.25, 0.65, 0) * ANGLES(RAD(140), RAD(12), RAD(-5)) * vk, 1 / Animation_Speed)
          RightHip.C0 = Clerp(RightHip.C0, CF(1, -1.035, 0) * ANGLES(RAD(0), RAD(85), RAD(0)) * ANGLES(RAD(0.5), RAD(0), RAD(0)), 1 / Animation_Speed)
          LeftHip.C0 = Clerp(LeftHip.C0, CF(-1, -0.965, 0) * ANGLES(RAD(0), RAD(-85), RAD(0)) * ANGLES(RAD(-4.5), RAD(0), RAD(0)), 1 / Animation_Speed)
        end
        CamShake(15, 5)
        for fk = 1, 2 do
          WACKYEFFECT({
            Time = 25,
            EffectType = "Round Slash",
            Size = VT(0, 0, 0),
            Size2 = VT(0.3, 0, 0.3) / 2,
            Transparency = 0,
            Transparency2 = 1,
            CFrame = CF(Head.Position) * ANGLES(RAD(0), RAD(MRANDOM(0, 360)), RAD(0)) * ANGLES(RAD(MRANDOM(-15, 15)), RAD(MRANDOM(0, 360)), RAD(0)),
            MoveToPos = nil,
            RotationX = 0,
            RotationY = 0,
            RotationZ = 0,
            Material = "Neon",
            Color = C3(1, 1, 1),
            SoundID = nil,
            SoundPitch = nil,
            SoundVolume = nil,
            UseBoomerangMath = true,
            Boomerang = 0,
            SizeBoomerang = 10
          })
        end
        SPAWNFIREBALL(Head.CFrame * CF(0, 0.5, -0.7), 60, VT(1.3, 1.3, 1.3))
      end
      vd = true
      va = false
      vb = false
    end
    function Zoom()
      CreateSound(92597340, Torso, 10, 1, false)
      va = true
      vb = false
      vc = false
      vd = false
      if ve == "Walk" then
        for fe = 1, 3 do
          WACKYEFFECT({
            Time = 15,
            EffectType = "Wave",
            Size = VT(2, 0, 2),
            Size2 = VT(12, 2.5, 12),
            Transparency = 0.6,
            Transparency2 = 1,
            CFrame = CF(RootPart.CFrame * CF(0, -4, 0).p) * ANGLES(RAD(0), RAD(MRANDOM(0, 360)), RAD(0)),
            MoveToPos = nil,
            RotationX = 1,
            RotationY = 0,
            RotationZ = 0,
            Material = "Neon",
            Color = C3(1, 1, 1),
            SoundID = nil,
            SoundPitch = MRANDOM(9, 11) / 10,
            SoundVolume = MRANDOM(9, 11) / 2,
            UseBoomerangMath = true,
            Boomerang = 0,
            SizeBoomerang = 22
          })
        end
        coroutine.resume(coroutine.create(function()
          for fd = 1, 25 do
            Swait()
            RootPart.CFrame = RootPart.CFrame * CF(0, (25 - fd) / 7, 0)
          end
        end))
        for fe = 1, 35 do
          Swait()
          for fk = 1, 3 do
            WACKYEFFECT({
              Time = 12 - fk,
              EffectType = "Wave",
              Size = VT(12, 0, 12),
              Size2 = VT(11 + fk * 6, 5 + fk * 2, 11 + fk * 6),
              Transparency = 0.8,
              Transparency2 = 1,
              CFrame = CF(RootPart.Position, vg.Hit.p) * CF(0, 0, 4) * ANGLES(RAD(-90), RAD(MRANDOM(0, 360)), RAD(MRANDOM(-5, 5))),
              MoveToPos = nil,
              RotationX = 0.1,
              RotationY = 1,
              RotationZ = -0.1,
              Material = "Neon",
              Color = C3(1, 1, 1),
              SoundID = nil,
              SoundPitch = nil,
              SoundVolume = nil,
              UseBoomerangMath = false,
              Boomerang = 0,
              SizeBoomerang = 15
            })
          end
          RootJoint.C0 = Clerp(RootJoint.C0, vh * CF(0, 0, 0) * ANGLES(RAD(fe * 45), RAD(0), RAD(0)), 2.5 / Animation_Speed)
          Neck.C0 = Clerp(Neck.C0, vj * CF(0, 0, 0) * ANGLES(RAD(-20), RAD(0), RAD(0)), 0.2 / Animation_Speed)
          RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.25, 0.5, -1) * ANGLES(RAD(0), RAD(0), RAD(-90)) * vk, 0.2 / Animation_Speed)
          LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.25, 0.5, -1) * ANGLES(RAD(0), RAD(0), RAD(90)) * vl, 0.2 / Animation_Speed)
          RightHip.C0 = Clerp(RightHip.C0, CF(1, 0, -0.5) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(-5), RAD(0), RAD(-20)), 0.2 / Animation_Speed)
          LeftHip.C0 = Clerp(LeftHip.C0, CF(-1, 0, -0.5) * ANGLES(RAD(0), RAD(-90), RAD(0)) * ANGLES(RAD(-5), RAD(0), RAD(20)), 0.2 / Animation_Speed)
        end
      end
      vc = true
      Humanoid.PlatformStand = true
      RootPart.CFrame = CF(RootPart.Position, vg.Hit.p)
      for fg = 1, 3 do
        for fl = 1, 4 do
          WACKYEFFECT({
            Time = 50,
            EffectType = "Round Slash",
            Size = VT(0, 0, 0),
            Size2 = VT(fg, 0, fg) / 4,
            Transparency = 0,
            Transparency2 = 1,
            CFrame = CF(RootPart.Position) * ANGLES(RAD(MRANDOM(0, 360)), RAD(MRANDOM(0, 360)), RAD(MRANDOM(0, 360))),
            MoveToPos = nil,
            RotationX = 0,
            RotationY = 0,
            RotationZ = 0,
            Material = "Neon",
            Color = C3(1, 1, 1),
            SoundID = nil,
            SoundPitch = nil,
            SoundVolume = nil,
            UseBoomerangMath = true,
            Boomerang = 0,
            SizeBoomerang = 10
          })
        end
      end
      for fg = 1, 7 do
        WACKYEFFECT({
          Time = 45 - fg * 4,
          EffectType = "Sphere",
          Size = VT(0, 0, 0),
          Size2 = VT(5, 5, 5) + VT(fg, fg, fg) * 25,
          Transparency = 0,
          Transparency2 = 1,
          CFrame = CF(RootPart.Position),
          MoveToPos = nil,
          RotationX = 0,
          RotationY = 0,
          RotationZ = 0,
          Material = "Neon",
          Color = vm,
          SoundID = 1368637781,
          SoundPitch = MRANDOM(8, 20) / 10,
          SoundVolume = 6,
          UseBoomerangMath = false,
          Boomerang = 0,
          SizeBoomerang = 0
        })
      end
      for fg = 1, 12 do
        WACKYEFFECT({
          Time = 35 - fg,
          EffectType = "Wave",
          Size = VT(12, 0, 12),
          Size2 = VT(11 + fg * 6, 5 + fg * 2, 11 + fg * 6),
          Transparency = 0.3,
          Transparency2 = 1,
          CFrame = RootPart.CFrame * CF(0, 0, 12) * ANGLES(RAD(-90), RAD(MRANDOM(0, 360)), RAD(MRANDOM(-5, 5))),
          MoveToPos = nil,
          RotationX = 0.1,
          RotationY = 1,
          RotationZ = -0.1,
          Material = "Neon",
          Color = C3(1, 1, 1),
          SoundID = nil,
          SoundPitch = nil,
          SoundVolume = nil,
          UseBoomerangMath = false,
          Boomerang = 0,
          SizeBoomerang = 15
        })
      end
      ApplyAoE(RootPart.Position, 85, 25, 65, 150, false)
      CamShake(12, 12)
      CreateMesh("SpecialMesh", CreatePart(3, vo, "Neon", 0, 1, BRICKC("Royal purple"), "Yes, fly!", VT(0, 0, 0), false), "FileMesh", "1963497039", "", VT(2.5, 1.3, 1), VT(0, 1.4, 1.2))
      CreateWeldOrSnapOrMotor("Weld", Torso, Torso, CreatePart(3, vo, "Neon", 0, 1, BRICKC("Royal purple"), "Yes, fly!", VT(0, 0, 0), false), CF(0, 0, 0), CF(0, 0, 0))
      coroutine.resume(coroutine.create(function()
        for fd = 1, 5 do
          Swait()
          va.Transparency = va.Transparency - 0.1
        end
      end))
      for fj = 0, 1.35, 0.1 / Animation_Speed do
        Swait()
        RootPart.CFrame = Clerp(RootPart.CFrame, CF(RootPart.Position, vg.Hit.p), 0.3)
        (function(a, b, c)
          a = a
          IT("BodyVelocity").maxForce = VT(1000000000, 1000000000, 1000000000)
          IT("BodyVelocity").Parent = a
          IT("BodyVelocity").velocity = CF(a.Position, b).lookVector * c
          Debris:AddItem(IT("BodyVelocity"), 0.5)
          return (IT("BodyVelocity"))
        end)(RootPart, RootPart.CFrame * CF(0, 0, -3).p, 350).velocity = CF(RootPart.Position, RootPart.CFrame * CF(0, 0, -3).p).lookVector * 350
        do return end
        while true do
          if workspace:GetDescendants().ClassName == "Model" and workspace:GetDescendants() ~= Character and workspace:GetDescendants().Name ~= "PurpleEerinFireball" and workspace:GetDescendants():FindFirstChildOfClass("Humanoid") then
            if (workspace:GetDescendants():FindFirstChild("Torso") or workspace:GetDescendants():FindFirstChild("UpperTorso")) and 25 >= workspace:GetDescendants():FindFirstChild("Torso") or workspace:GetDescendants():FindFirstChild("UpperTorso").Position - RootPart.Position.Magnitude then
              for fz = 1, #{} do
              end
              if false == true then
                ApplyDamage(workspace:GetDescendants():FindFirstChildOfClass("Humanoid"), (MRANDOM(35, 75)))
                table.insert({}, workspace:GetDescendants())
                for fq, fw in pairs(workspace:GetDescendants():GetChildren()) do
                  if fw:IsA("BasePart") then
                    Instance.new("BodyVelocity").maxForce = Vector3.new(1000000000, 1000000000, 1000000000)
                    Instance.new("BodyVelocity").velocity = CF(Torso.Position, workspace:GetDescendants():FindFirstChild("Torso") or workspace:GetDescendants():FindFirstChild("UpperTorso").Position).lookVector * 350
                    Instance.new("BodyVelocity").Parent = fw
                    Debris:AddItem(Instance.new("BodyVelocity"), 0.05)
                  end
                end
              end
            end
          end
        end
        RootJoint.C0 = Clerp(RootJoint.C0, vh * CF(0, 0, 0) * ANGLES(RAD(80), RAD(0), RAD(0)), 1 / Animation_Speed)
        Neck.C0 = Clerp(Neck.C0, vj * CF(0, 0, 0) * ANGLES(RAD(-45), RAD(0), RAD(0)), 1 / Animation_Speed)
        RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.45, 0.45, 0.05) * ANGLES(RAD(-10), RAD(-10), RAD(-2)) * vk, 1 / Animation_Speed)
        LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.45, 0.45, 0.05) * ANGLES(RAD(-10), RAD(10), RAD(2)) * vl, 1 / Animation_Speed)
        RightHip.C0 = Clerp(RightHip.C0, CF(1, -1, 0) * ANGLES(RAD(0), RAD(70), RAD(0)) * ANGLES(RAD(-2), RAD(0), RAD(0)), 1 / Animation_Speed)
        LeftHip.C0 = Clerp(LeftHip.C0, CF(-1, -1, 0) * ANGLES(RAD(0), RAD(-70), RAD(0)) * ANGLES(RAD(-2), RAD(0), RAD(0)), 1 / Animation_Speed)
        for fo = 1, 2 do
          WACKYEFFECT({
            Time = 15,
            EffectType = "Round Slash",
            Size = VT(0.25, 0, 0.25),
            Size2 = VT(0.4, 0, 0.4),
            Transparency = 0.6,
            Transparency2 = 1,
            CFrame = RootPart.CFrame * CF(0, 0, -5) * ANGLES(RAD(90), RAD(MRANDOM(0, 360)), RAD(0)) * ANGLES(RAD(MRANDOM(-15, 15)), RAD(MRANDOM(0, 360)), RAD(0)),
            MoveToPos = nil,
            RotationX = 0,
            RotationY = 0,
            RotationZ = 0,
            Material = "Neon",
            Color = C3(1, 1, 1),
            SoundID = nil,
            SoundPitch = nil,
            SoundVolume = nil,
            UseBoomerangMath = true,
            Boomerang = 0,
            SizeBoomerang = 10
          })
        end
      end
      Humanoid.PlatformStand = false
      RootPart.CFrame = CF(RootPart.Position) * ANGLES(RAD(0), RAD(RootPart.Orientation.Y), RAD(0))
      coroutine.resume(coroutine.create(function()
        for fd = 1, 25 do
          Swait()
          va.Transparency = va.Transparency + 0.02
        end
        va:Remove()
      end))
      vd = true
      va = false
      vb = false
    end
    function Hothead()
      va = true
      vb = true
      vc = false
      vd = false
      coroutine.resume(coroutine.create(function()
        for fd = 1, 25 do
          Swait()
          RootPart.CFrame = RootPart.CFrame * CF(0, (25 - fd) / 2, 0)
        end
      end))
      CreateSound(1664710821, ve, 7, 0.8, false)
      for fd = 1, 165 do
        Swait()
        WACKYEFFECT({
          Time = 12,
          EffectType = "Sphere",
          Size = VT(3, 3, 3),
          Size2 = VT(0, 0, 150),
          Transparency = 0.3,
          Transparency2 = 1,
          CFrame = CF(RootPart.Position) * ANGLES(RAD(MRANDOM(0, 360)), RAD(MRANDOM(0, 360)), RAD(MRANDOM(0, 360))),
          MoveToPos = nil,
          RotationX = 0,
          RotationY = 0,
          RotationZ = 0,
          Material = "Neon",
          Color = vg,
          SoundID = nil,
          SoundPitch = 1,
          SoundVolume = 6,
          UseBoomerangMath = true,
          Boomerang = 0,
          SizeBoomerang = 0
        })
        WACKYEFFECT({
          Time = 15,
          EffectType = "Round Slash",
          Size = VT(0.3, 0, 0.3),
          Size2 = VT(0, 0, 0),
          Transparency = 1,
          Transparency2 = 0.5,
          CFrame = CF(RootPart.Position) * ANGLES(RAD(MRANDOM(0, 360)), RAD(MRANDOM(0, 360)), RAD(MRANDOM(0, 360))),
          MoveToPos = nil,
          RotationX = 0,
          RotationY = 0,
          RotationZ = 0,
          Material = "Neon",
          Color = C3(1, 1, 1),
          SoundID = nil,
          SoundPitch = nil,
          SoundVolume = nil,
          UseBoomerangMath = true,
          Boomerang = 0,
          SizeBoomerang = 35
        })
        RootJoint.C0 = Clerp(RootJoint.C0, vh * CF(0, 0, 0 + 0.1 * COS(vj / 12)) * ANGLES(RAD(-5), RAD(0), RAD(0)), 1 / Animation_Speed)
        Neck.C0 = Clerp(Neck.C0, vk * CF(0, 0, 0) * ANGLES(RAD(-35), RAD(MRANDOM(-5, 5)), RAD(MRANDOM(-5, 5))), 1 / Animation_Speed)
        RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(-25 + MRANDOM(-5, 5)), RAD(-15 + MRANDOM(-5, 5)), RAD(35)) * vl, 1 / Animation_Speed)
        LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(-25 + MRANDOM(-5, 5)), RAD(15 + MRANDOM(-5, 5)), RAD(-35)) * vm, 1 / Animation_Speed)
        RightHip.C0 = Clerp(RightHip.C0, CF(1, -0.6 - 0.05 * SIN(vj / 12), -0.5) * ANGLES(RAD(0), RAD(70), RAD(0)) * ANGLES(RAD(-1), RAD(0), RAD(-25)), 1 / Animation_Speed)
        LeftHip.C0 = Clerp(LeftHip.C0, CF(-1, -1 - 0.05 * SIN(vj / 12), 0) * ANGLES(RAD(-5), RAD(-70), RAD(0)) * ANGLES(RAD(1), RAD(0), RAD(0)), 1 / Animation_Speed)
      end
      RootPart.CFrame = CF(RootPart.Position, vo.Hit.p)
      coroutine.resume(coroutine.create(function()
        CreateMesh("SpecialMesh", CreatePart(3, va, "Fabric", 0, 0, BRICKC("Pearl"), "ROLLERDAH", VT(13.02, 9.3, 12.09), true), "FileMesh", "16973748", "1090019344", VT(9.3, 9.3, 9.3), VT(0, 0, 0))
        MakeForm(CreatePart(3, va, "Neon", 0, 0, BRICKC("Royal purple"), "Fire", VT(1, 0.1, 1) * 13.02, true), "Ball")
        ParticleEmitter({
          Acel = VT(0, 85, 0),
          Speed = 6,
          RotSpeed = NumberRange.new(-15, 15),
          Drag = 0.5,
          Size1 = 8,
          Size2 = 0,
          Lifetime1 = 0,
          Lifetime2 = 1.4,
          Parent = CreatePart(3, va, "Fabric", 0, 0, BRICKC("Pearl"), "ROLLERDAH", VT(13.02, 9.3, 12.09), true),
          Emit = 100,
          Offset = 360,
          Enabled = true,
          Color1 = BRICKC("Royal purple").Color,
          Color2 = BRICKC("Royal purple").Color,
          Texture = "296874871"
        }).Rate = 999
        CreatePart(3, va, "Fabric", 0, 0, BRICKC("Pearl"), "ROLLERDAH", VT(13.02, 9.3, 12.09), true).CFrame = RootPart.CFrame
        CreatePart(3, va, "Neon", 0, 0, BRICKC("Royal purple"), "Fire", VT(1, 0.1, 1) * 13.02, true).CFrame = CreatePart(3, va, "Fabric", 0, 0, BRICKC("Pearl"), "ROLLERDAH", VT(13.02, 9.3, 12.09), true).CFrame * CF(0, -4.278, 0)
        for fr = 1, 45 do
          Swait()
          CreatePart(3, va, "Fabric", 0, 0, BRICKC("Pearl"), "ROLLERDAH", VT(13.02, 9.3, 12.09), true).CFrame = CreatePart(3, va, "Fabric", 0, 0, BRICKC("Pearl"), "ROLLERDAH", VT(13.02, 9.3, 12.09), true).CFrame * CF(0, 0, -(45 - fr) / 35)
          CreatePart(3, va, "Neon", 0, 0, BRICKC("Royal purple"), "Fire", VT(1, 0.1, 1) * 13.02, true).CFrame = CreatePart(3, va, "Fabric", 0, 0, BRICKC("Pearl"), "ROLLERDAH", VT(13.02, 9.3, 12.09), true).CFrame * CF(0, -4.278, 0)
        end
        coroutine.resume(coroutine.create(function()
          repeat
            Swait()
            va = va + 1
            if vb == "Idle" then
              vc.CFrame = Clerp(vc.CFrame, vd, 0.1)
            elseif vb == "Circle" then
              if ve then
                if ve.Parent then
                  if ve.Parent:FindFirstChildOfClass("Humanoid") then
                    if 0 < ve.Parent:FindFirstChildOfClass("Humanoid").Health then
                      vc.CFrame = Clerp(vc.CFrame, CF(CF(ve.Position + VT(0, 65 * (ve.Size.Z / 2))) * ANGLES(RAD(0), RAD(va), RAD(0)) * CF(0, 0, 45 * (ve.Size.Z / 2)).p, ve.Position), 0.1)
                      vg = vg + 1
                      if vg >= 250 then
                        vb = "Attack"
                      end
                    else
                      vb = "Idle"
                    end
                  else
                    vb = "Idle"
                  end
                else
                  vb = "Idle"
                end
              end
            elseif vb == "Attack" then
              vg = 0
              CreateSound(257002167, vc, 10, MRANDOM(8, 13) / 10, false)
              for fe = 1, 25 do
                Swait()
                vc.CFrame = CF(vc.CFrame * CF(0, 0, 1).p, ve.Position)
                vh.CFrame = vc.CFrame * CF(0, -4.278, 0)
              end
              for fe = 1, 70 do
                vc.CFrame = vc.CFrame * CF(0, 0, -5)
                vh.CFrame = vc.CFrame * CF(0, -4.278, 0)
                if Raycast(vc.Position, vc.CFrame.lookVector, 6, Character) then
                  ApplyAoE(vc.Position, 135, 45, 50, 120, false)
                  ApplyAoE(vc.Position, 25, 45, 50, 1200, true)
                  CamShake(12, 25)
                  for fm = 1, 7 do
                    for fr = 1, 4 do
                      WACKYEFFECT({
                        Time = 50,
                        EffectType = "Round Slash",
                        Size = VT(0, 0, 0),
                        Size2 = VT(fm, 0, fm) / 4,
                        Transparency = 0,
                        Transparency2 = 1,
                        CFrame = CF(vc.Position) * ANGLES(RAD(MRANDOM(0, 360)), RAD(MRANDOM(0, 360)), RAD(MRANDOM(0, 360))),
                        MoveToPos = nil,
                        RotationX = 0,
                        RotationY = 0,
                        RotationZ = 0,
                        Material = "Neon",
                        Color = C3(1, 1, 1),
                        SoundID = nil,
                        SoundPitch = nil,
                        SoundVolume = nil,
                        UseBoomerangMath = true,
                        Boomerang = 0,
                        SizeBoomerang = 10
                      })
                    end
                  end
                  for fm = 1, 12 do
                    WACKYEFFECT({
                      Time = 75 - fm * 4,
                      EffectType = "Sphere",
                      Size = VT(0, 0, 0),
                      Size2 = VT(5, 5, 5) + VT(fm, fm, fm) * 25,
                      Transparency = 0,
                      Transparency2 = 1,
                      CFrame = CF(vc.Position),
                      MoveToPos = nil,
                      RotationX = 0,
                      RotationY = 0,
                      RotationZ = 0,
                      Material = "Neon",
                      Color = vj,
                      SoundID = 1368637781,
                      SoundPitch = MRANDOM(8, 20) / 10,
                      SoundVolume = 10,
                      UseBoomerangMath = false,
                      Boomerang = 0,
                      SizeBoomerang = 0
                    })
                  end
                  if Raycast(vc.Position, CF(RootPart.Position, RootPart.Position + VT(0, -1, 0)).lookVector, 12, Character) then
                    for fp = 1, 12 do
                      WACKYEFFECT({
                        Time = 20 + fp * 15,
                        EffectType = "Wave",
                        Size = VT(15, 0, 15),
                        Size2 = VT(160, 15, 160),
                        Transparency = 0.6,
                        Transparency2 = 1,
                        CFrame = CF(Raycast(vc.Position, CF(RootPart.Position, RootPart.Position + VT(0, -1, 0)).lookVector, 12, Character)) * ANGLES(RAD(0), RAD(MRANDOM(0, 360)), RAD(0)) * ANGLES(RAD(MRANDOM(-15, 15)), RAD(MRANDOM(0, 360)), RAD(0)),
                        MoveToPos = nil,
                        RotationX = 0.2,
                        RotationY = 0,
                        RotationZ = 0,
                        Material = "Neon",
                        Color = C3(1, 1, 1),
                        SoundID = nil,
                        SoundPitch = MRANDOM(9, 11) / 10,
                        SoundVolume = MRANDOM(9, 11) / 2,
                        UseBoomerangMath = true,
                        Boomerang = 0,
                        SizeBoomerang = 22
                      })
                    end
                  end
                  if vk == true then
                    vl = true
                    vh:Remove()
                    vc.Transparency = 1
                    vm.Enabled = false
                    Debris:AddItem(vc, 5)
                    for fp = 1, 25 do
                      CreatePart(3, workspace, "Pebble", 0, 0, BRICKC("Pearl"), "ROLLERDAH", VT(13.02 * (MRANDOM(8, 12) / 10), 9.3 * (MRANDOM(8, 12) / 10), 12.09 * (MRANDOM(8, 12) / 10)) / 1.5 / 2, false).CanCollide = true
                      CreatePart(3, workspace, "Pebble", 0, 0, BRICKC("Pearl"), "ROLLERDAH", VT(13.02 * (MRANDOM(8, 12) / 10), 9.3 * (MRANDOM(8, 12) / 10), 12.09 * (MRANDOM(8, 12) / 10)) / 1.5 / 2, false).CFrame = vc.CFrame * ANGLES(RAD(MRANDOM(0, 360)), RAD(MRANDOM(0, 360)), RAD(MRANDOM(0, 360)))
                      CreatePart(3, workspace, "Pebble", 0, 0, BRICKC("Pearl"), "ROLLERDAH", VT(13.02 * (MRANDOM(8, 12) / 10), 9.3 * (MRANDOM(8, 12) / 10), 12.09 * (MRANDOM(8, 12) / 10)) / 1.5 / 2, false).Velocity = CF(CreatePart(3, workspace, "Pebble", 0, 0, BRICKC("Pearl"), "ROLLERDAH", VT(13.02 * (MRANDOM(8, 12) / 10), 9.3 * (MRANDOM(8, 12) / 10), 12.09 * (MRANDOM(8, 12) / 10)) / 1.5 / 2, false).Position - VT(0, 6, 0), CreatePart(3, workspace, "Pebble", 0, 0, BRICKC("Pearl"), "ROLLERDAH", VT(13.02 * (MRANDOM(8, 12) / 10), 9.3 * (MRANDOM(8, 12) / 10), 12.09 * (MRANDOM(8, 12) / 10)) / 1.5 / 2, false).CFrame * ANGLES(RAD(MRANDOM(0, 360)), RAD(MRANDOM(0, 360)), RAD(MRANDOM(0, 360))) * CF(0, 5, 0).p).lookVector * MRANDOM(50, 320)
                      Debris:AddItem(CreatePart(3, workspace, "Pebble", 0, 0, BRICKC("Pearl"), "ROLLERDAH", VT(13.02 * (MRANDOM(8, 12) / 10), 9.3 * (MRANDOM(8, 12) / 10), 12.09 * (MRANDOM(8, 12) / 10)) / 1.5 / 2, false), 8)
                    end
                  end
                  break
                else
                  WACKYEFFECT({
                    Time = 15 + fe,
                    EffectType = "Wave",
                    Size = VT(15, 0, 15),
                    Size2 = VT(25, 5, 25),
                    Transparency = 0.8,
                    Transparency2 = 1,
                    CFrame = vc.CFrame * CF(0, 0, -7) * ANGLES(RAD(90), RAD(MRANDOM(0, 360)), RAD(MRANDOM(-5, 5))),
                    MoveToPos = nil,
                    RotationX = 0.1,
                    RotationY = 1,
                    RotationZ = -0.1,
                    Material = "Neon",
                    Color = C3(1, 1, 1),
                    SoundID = nil,
                    SoundPitch = nil,
                    SoundVolume = nil,
                    UseBoomerangMath = false,
                    Boomerang = 0,
                    SizeBoomerang = 15
                  })
                end
              end
              wait(1)
              vb = "Idle"
            end
            if vb ~= "Idle" then
              vd = CF(vc.Position) * ANGLES(RAD(0), RAD(vc.Orientation.Y), RAD(0))
            end
            vh.CFrame = vc.CFrame * CF(0, -4.278, 0)
          until vl == true
        end))
        for fr = 1, 12 do
          repeat
            if "Idle" == "Attack" then
              wait()
            end
          until "Idle" ~= "Attack"
          for fz, fq in pairs(workspace:GetDescendants()) do
            if fq.ClassName == "Model" and fq ~= Character and fq:FindFirstChild("AboutToEerin") == nil and fq:FindFirstChildOfClass("Humanoid") then
              if (fq:FindFirstChild("Torso") or fq:FindFirstChild("UpperTorso")) and fq:FindFirstChildOfClass("Humanoid").Health > 0 and 6000 >= fq:FindFirstChild("Torso") or fq:FindFirstChild("UpperTorso").Position - CreatePart(3, va, "Fabric", 0, 0, BRICKC("Pearl"), "ROLLERDAH", VT(13.02, 9.3, 12.09), true).Position.Magnitude then
              end
            end
          end
          if fq:FindFirstChild("Torso") or fq:FindFirstChild("UpperTorso") then
          else
          end
          wait(1)
        end
        repeat
          repeat
            if "Idle" == "Attack" then
              wait()
            end
          until "Idle" ~= "Attack"
          for fs, ft in pairs(workspace:GetDescendants()) do
            if ft.ClassName == "Model" and ft ~= Character and ft:FindFirstChild("AboutToEerin") == nil and ft:FindFirstChildOfClass("Humanoid") then
              if (ft:FindFirstChild("Torso") or ft:FindFirstChild("UpperTorso")) and ft:FindFirstChildOfClass("Humanoid").Health > 0 and -9223372036854775808 >= ft:FindFirstChild("Torso") or ft:FindFirstChild("UpperTorso").Position - CreatePart(3, va, "Fabric", 0, 0, BRICKC("Pearl"), "ROLLERDAH", VT(13.02, 9.3, 12.09), true).Position.Magnitude then
              end
            end
          end
          if ft:FindFirstChild("Torso") or ft:FindFirstChild("UpperTorso") then
          else
          end
          wait(1)
        until false == true
      end))
      for fd = 1, 3 do
        for fj = 1, 4 do
          WACKYEFFECT({
            Time = 50,
            EffectType = "Round Slash",
            Size = VT(0, 0, 0),
            Size2 = VT(fd, 0, fd) / 4,
            Transparency = 0,
            Transparency2 = 1,
            CFrame = CF(RootPart.Position) * ANGLES(RAD(MRANDOM(0, 360)), RAD(MRANDOM(0, 360)), RAD(MRANDOM(0, 360))),
            MoveToPos = nil,
            RotationX = 0,
            RotationY = 0,
            RotationZ = 0,
            Material = "Neon",
            Color = C3(1, 1, 1),
            SoundID = nil,
            SoundPitch = nil,
            SoundVolume = nil,
            UseBoomerangMath = true,
            Boomerang = 0,
            SizeBoomerang = 10
          })
        end
      end
      CreateSound(401056199, ve, 7, 0.8, false)
      CreateSound(1664711478, ve, 7, 0.8, false)
      for fd = 1, 7 do
        WACKYEFFECT({
          Time = 45 - fd * 4,
          EffectType = "Sphere",
          Size = VT(0, 0, 0),
          Size2 = VT(5, 5, 5) + VT(fd, fd, fd) * 25,
          Transparency = 0,
          Transparency2 = 1,
          CFrame = CF(RootPart.Position),
          MoveToPos = nil,
          RotationX = 0,
          RotationY = 0,
          RotationZ = 0,
          Material = "Neon",
          Color = vg,
          SoundID = nil,
          SoundPitch = MRANDOM(8, 20) / 10,
          SoundVolume = 6,
          UseBoomerangMath = false,
          Boomerang = 0,
          SizeBoomerang = 0
        })
      end
      for fd = 1, 15 do
        WACKYEFFECT({
          Time = 35 - fd,
          EffectType = "Wave",
          Size = VT(12, 0, 12),
          Size2 = VT(13 + fd * 7, 5 + fd * 3, 13 + fd * 7),
          Transparency = 0.3,
          Transparency2 = 1,
          CFrame = RootPart.CFrame * CF(0, 0, -4) * ANGLES(RAD(90), RAD(MRANDOM(0, 360)), RAD(MRANDOM(-5, 5))),
          MoveToPos = nil,
          RotationX = 0.1,
          RotationY = 1,
          RotationZ = -0.1,
          Material = "Neon",
          Color = C3(1, 1, 1),
          SoundID = nil,
          SoundPitch = nil,
          SoundVolume = nil,
          UseBoomerangMath = false,
          Boomerang = 0,
          SizeBoomerang = 15
        })
      end
      for fd = 0, 0.5, 0.1 / Animation_Speed do
        Swait()
        RootPart.CFrame = RootPart.CFrame * CF(0, 0, 1.2)
        RootJoint.C0 = Clerp(RootJoint.C0, vh * CF(0, 0, -0.05) * ANGLES(RAD(-25), RAD(0), RAD(0)), 1 / Animation_Speed)
        Neck.C0 = Clerp(Neck.C0, vk * CF(0, 0, 0) * ANGLES(RAD(0), RAD(0), RAD(0)), 1 / Animation_Speed)
        RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(90), RAD(-12), RAD(5)) * vl, 1 / Animation_Speed)
        LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(90), RAD(12), RAD(-5)) * vm, 1 / Animation_Speed)
        RightHip.C0 = Clerp(RightHip.C0, CF(1, -1, 0) * ANGLES(RAD(-50), RAD(85), RAD(0)) * ANGLES(RAD(-1), RAD(0), RAD(0)), 1 / Animation_Speed)
        LeftHip.C0 = Clerp(LeftHip.C0, CF(-1, -1, 0) * ANGLES(RAD(-50), RAD(-85), RAD(0)) * ANGLES(RAD(-1), RAD(0), RAD(0)), 1 / Animation_Speed)
      end
      vd = true
      vc = true
      va = false
      vb = false
    end
    function Wave()
      va = true
      vb = true
      vc = false
      for fd = 1, 100 do
        Swait()
        RootJoint.C0 = Clerp(RootJoint.C0, vd * CF(0 - 0.04 * SIN(ve / 24), -0.15, -0.1 + 0.05 * COS(ve / 12)) * ANGLES(RAD(15), RAD(0 - 2.5 * SIN(ve / 24)), RAD(0)), 1 / Animation_Speed)
        Neck.C0 = Clerp(Neck.C0, vg * CF(0, 0, 0) * ANGLES(RAD(-10 - 5 * SIN(ve / 12)), RAD(0), RAD(0)), 1 / Animation_Speed)
        RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(0), RAD(-12 + 2.5 * SIN(ve / 12)), RAD(55 + 2.5 * SIN(ve / 12) - 2.5 * COS(ve / 6))) * vh, 1 / Animation_Speed)
        LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.5, 0.8, 0.4) * ANGLES(RAD(170), RAD(0), RAD(-25 - 25 * SIN(fd / 3))) * ANGLES(RAD(0), RAD(-45), RAD(0)) * vj, 1 / Animation_Speed)
        RightHip.C0 = Clerp(RightHip.C0, CF(1, -1 + 0.035 * SIN(ve / 24) - 0.05 * COS(ve / 12), 0) * ANGLES(RAD(20), RAD(85), RAD(0)) * ANGLES(RAD(-2 - 2.5 * SIN(ve / 24)), RAD(0), RAD(0)), 1 / Animation_Speed)
        LeftHip.C0 = Clerp(LeftHip.C0, CF(-1, -1 - 0.035 * SIN(ve / 24) - 0.05 * COS(ve / 12), 0) * ANGLES(RAD(20), RAD(-85), RAD(0)) * ANGLES(RAD(-2 + 2.5 * SIN(ve / 24)), RAD(0), RAD(0)), 1 / Animation_Speed)
      end
      vc = true
      va = false
      vb = false
    end
    function Taunt()
      va = true
      vb = true
      vc = false
      repeat
        (function()
          for fd = 0, 0.45, 0.1 / Animation_Speed do
            Swait()
            RootJoint.C0 = Clerp(RootJoint.C0, va * CF(0, 0, -0.035) * ANGLES(RAD(25), RAD(0), RAD(0)), 1 / Animation_Speed)
            Neck.C0 = Clerp(Neck.C0, vb * CF(0, 0, 0) * ANGLES(RAD(15), RAD(0), RAD(0)), 1 / Animation_Speed)
            RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(45), RAD(-12), RAD(5)) * vc, 1 / Animation_Speed)
            LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(45), RAD(12), RAD(-5)) * vd, 1 / Animation_Speed)
            RightHip.C0 = Clerp(RightHip.C0, CF(1, -1, 0) * ANGLES(RAD(35), RAD(85), RAD(0)) * ANGLES(RAD(-2), RAD(0), RAD(0)), 1 / Animation_Speed)
            LeftHip.C0 = Clerp(LeftHip.C0, CF(-1, -1, 0) * ANGLES(RAD(35), RAD(-85), RAD(0)) * ANGLES(RAD(-2), RAD(0), RAD(0)), 1 / Animation_Speed)
          end
        end)()
        for fe = 0, 0.45, 0.1 / Animation_Speed do
          Swait()
          RootJoint.C0 = Clerp(RootJoint.C0, vd * CF(0.08, 0, 0) * ANGLES(RAD(0), RAD(5), RAD(0)), 1 / Animation_Speed)
          Neck.C0 = Clerp(Neck.C0, ve * CF(0, 0, 0) * ANGLES(RAD(-35), RAD(0), RAD(0)), 1 / Animation_Speed)
          RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5, 0.65, 0) * ANGLES(RAD(160), RAD(-12), RAD(35)) * vg, 1 / Animation_Speed)
          LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.5, 0.65, 0) * ANGLES(RAD(160), RAD(12), RAD(-35)) * vh, 1 / Animation_Speed)
          RightHip.C0 = Clerp(RightHip.C0, CF(1, -1.07, 0) * ANGLES(RAD(0), RAD(85), RAD(0)) * ANGLES(RAD(3), RAD(0), RAD(0)), 1 / Animation_Speed)
          LeftHip.C0 = Clerp(LeftHip.C0, CF(-1, -0.93, 0) * ANGLES(RAD(0), RAD(-85), RAD(0)) * ANGLES(RAD(-7), RAD(0), RAD(0)), 1 / Animation_Speed)
        end
        (function()
          for fd = 0, 0.45, 0.1 / Animation_Speed do
            Swait()
            RootJoint.C0 = Clerp(RootJoint.C0, va * CF(0, 0, -0.035) * ANGLES(RAD(25), RAD(0), RAD(0)), 1 / Animation_Speed)
            Neck.C0 = Clerp(Neck.C0, vb * CF(0, 0, 0) * ANGLES(RAD(15), RAD(0), RAD(0)), 1 / Animation_Speed)
            RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(45), RAD(-12), RAD(5)) * vc, 1 / Animation_Speed)
            LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(45), RAD(12), RAD(-5)) * vd, 1 / Animation_Speed)
            RightHip.C0 = Clerp(RightHip.C0, CF(1, -1, 0) * ANGLES(RAD(35), RAD(85), RAD(0)) * ANGLES(RAD(-2), RAD(0), RAD(0)), 1 / Animation_Speed)
            LeftHip.C0 = Clerp(LeftHip.C0, CF(-1, -1, 0) * ANGLES(RAD(35), RAD(-85), RAD(0)) * ANGLES(RAD(-2), RAD(0), RAD(0)), 1 / Animation_Speed)
          end
        end)()
        for fe = 0, 0.45, 0.1 / Animation_Speed do
          Swait()
          RootJoint.C0 = Clerp(RootJoint.C0, vd * CF(-0.08, 0, 0) * ANGLES(RAD(0), RAD(-5), RAD(0)), 1 / Animation_Speed)
          Neck.C0 = Clerp(Neck.C0, ve * CF(0, 0, 0) * ANGLES(RAD(-35), RAD(0), RAD(0)), 1 / Animation_Speed)
          RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5, 0.65, 0) * ANGLES(RAD(160), RAD(-12), RAD(35)) * vg, 1 / Animation_Speed)
          LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.5, 0.65, 0) * ANGLES(RAD(160), RAD(12), RAD(-35)) * vh, 1 / Animation_Speed)
          RightHip.C0 = Clerp(RightHip.C0, CF(1, -0.93, 0) * ANGLES(RAD(0), RAD(85), RAD(0)) * ANGLES(RAD(-7), RAD(0), RAD(0)), 1 / Animation_Speed)
          LeftHip.C0 = Clerp(LeftHip.C0, CF(-1, -1.07, 0) * ANGLES(RAD(0), RAD(-85), RAD(0)) * ANGLES(RAD(3), RAD(0), RAD(0)), 1 / Animation_Speed)
        end
      until vj == false
      vc = true
      va = false
      vb = false
    end
    function MouseDown(a)
      a = a
      repeat
      until va == false
    end
    function MouseUp(a)
      a = a
      va = false
    end
    function KeyDown(a)
      a = a
      va = true
      if a == "z" and vb == false then
        LeapingPumpkin()
      end
      if a == "x" and vb == false then
        Rollout()
      end
      if a == "c" and vb == false then
        Trashing()
      end
      if a == "v" and vb == false then
        Incinithrower()
      end
      if a == "e" and vb == false then
        Zoom()
      end
      if a == "q" and vb == false then
        Hothead()
      end
      if a == "t" and vb == false then
        Taunt()
      end
      if a == "m" and vb == false then
        if vc == 16 then
          vc = 50
        elseif vc == 50 then
          vc = 16
        end
      end
      if a == "p" and vb == false then
        Wave()
      end
      if a == "n" and vb == false then
        if vd == true then
          vd = false
        elseif vd == false then
          vd = true
        end
      end
    end
    function KeyUp(a)
      a = a
      va = false
    end
    Player:GetMouse().NewButton1Down:connect(function(a)
      a = a
      MouseDown(a)
    end)
    Player:GetMouse().NewButton1Up:connect(function(a)
      a = a
      MouseUp(a)
    end)
    Player:GetMouse().KeyDown:connect(function(a)
      a = a
      KeyDown(a)
    end)
    Player:GetMouse().KeyUp:connect(function(a)
      a = a
      KeyUp(a)
    end)
    function unanchor()
      for fd, fe in pairs(Character:GetChildren()) do
      end
      if va == true then
        RootPart.Anchored = false
      else
        RootPart.Anchored = true
      end
    end
    Humanoid.Changed:connect(function(a)
      a = a
      if a == "Jump" and Disable_Jump == true then
        Humanoid.Jump = false
      end
    end)
    while true do
      Swait()
      for faa, fab in pairs(Character:GetChildren()) do
        if fab.ClassName == "Part" and fab:FindFirstChildOfClass("BodyPosition") then
          fab:FindFirstChildOfClass("BodyPosition"):remove()
        end
      end
      game:GetObjects("rbxassetid://6254124032")[1].Parent = IT("ScreenGui", PlayerGui)
      Character.Animate.Parent = nil
      for faa, fab in next, Humanoid:GetPlayingAnimationTracks() do
        fab:Stop()
      end
      if 2 < 8 / (Humanoid.WalkSpeed / 16) then
      end
      if "Idle" == "Walk" and 1 < RootPart.Velocity * VT(1, 0, 1).magnitude then
        RootJoint.C1 = Clerp(RootJoint.C1, CF(0, 0, 0) * ANGLES(RAD(-90), RAD(0), RAD(180)) * CF(0, 0, 0.1 * COS((0 + 2 / Animation_Speed) / (8 / (Humanoid.WalkSpeed / 16) / 2))) * ANGLES(RAD(0), RAD(0), RAD(0)), 2 / Animation_Speed)
        Neck.C1 = Clerp(Neck.C1, CF(0, -0.5, 0) * ANGLES(RAD(-90), RAD(0), RAD(180)) * ANGLES(RAD(0), RAD(0), RAD(0) - Head.RotVelocity.Y / 30), 0.6 / Animation_Speed)
        RightHip.C1 = Clerp(RightHip.C1, CF(0.5, 0.875 - 0.125 * SIN((0 + 2 / Animation_Speed) / (8 / (Humanoid.WalkSpeed / 16))) - 0.15 * COS((0 + 2 / Animation_Speed) / (8 / (Humanoid.WalkSpeed / 16)) * 2), 0.25 * SIN((0 + 2 / Animation_Speed) / (8 / (Humanoid.WalkSpeed / 16)))) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(10 + 50 * COS((0 + 2 / Animation_Speed) / (8 / (Humanoid.WalkSpeed / 16))))), 0.6 * 2 / Animation_Speed)
        LeftHip.C1 = Clerp(LeftHip.C1, CF(-0.5, 0.875 + 0.125 * SIN((0 + 2 / Animation_Speed) / (8 / (Humanoid.WalkSpeed / 16))) - 0.15 * COS((0 + 2 / Animation_Speed) / (8 / (Humanoid.WalkSpeed / 16)) * 2), -0.25 * SIN((0 + 2 / Animation_Speed) / (8 / (Humanoid.WalkSpeed / 16)))) * ANGLES(RAD(0), RAD(-90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(-10 + 50 * COS((0 + 2 / Animation_Speed) / (8 / (Humanoid.WalkSpeed / 16))))), 0.6 * 2 / Animation_Speed)
        break
      end
      if RootPart.Velocity * VT(1, 0, 1).magnitude < 1 then
        RootJoint.C1 = Clerp(RootJoint.C1, CF(0, 0, 0) * ANGLES(RAD(-90), RAD(0), RAD(180)) * CF(0, 0, 0) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.2 / Animation_Speed)
        Neck.C1 = Clerp(Neck.C1, CF(0, -0.5, 0) * ANGLES(RAD(-90), RAD(0), RAD(180)) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.2 / Animation_Speed)
        RightHip.C1 = Clerp(RightHip.C1, CF(0.5, 1, 0) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.7 / Animation_Speed)
        LeftHip.C1 = Clerp(LeftHip.C1, CF(-0.5, 1, 0) * ANGLES(RAD(0), RAD(-90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.7 / Animation_Speed)
      end
      if RootPart.Velocity.y > 1 and Raycast(RootPart.Position, CF(RootPart.Position, RootPart.Position + VT(0, -1, 0)).lookVector, 4, Character) == nil then
        if false == false then
          RootJoint.C0 = Clerp(RootJoint.C0, CF(0, 0, 0) * ANGLES(RAD(-90), RAD(0), RAD(180)) * CF(0, 0, 0) * ANGLES(RAD(-5), RAD(0), RAD(0)), 1 / Animation_Speed)
          Neck.C0 = Clerp(Neck.C0, CF(0, 1, 0) * ANGLES(RAD(-90), RAD(0), RAD(180)) * CF(0, 0, 0) * ANGLES(RAD(-25), RAD(0), RAD(0)), 1 / Animation_Speed)
          RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(-35), RAD(0), RAD(25 + 10 * COS((0 + 2 / Animation_Speed) / 12))) * (CF(-0.5, 0, 0) * ANGLES(RAD(0), RAD(90), RAD(0))), 1 / Animation_Speed)
          LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(-35), RAD(0), RAD(-25 - 10 * COS((0 + 2 / Animation_Speed) / 12))) * (CF(0.5, 0, 0) * ANGLES(RAD(0), RAD(-90), RAD(0))), 1 / Animation_Speed)
          RightHip.C0 = Clerp(RightHip.C0, CF(1, -0.4, -0.6) * ANGLES(RAD(1), RAD(90), RAD(0)) * ANGLES(RAD(-1 * SIN((0 + 2 / Animation_Speed) / 6)), RAD(0), RAD(0)), 1 / Animation_Speed)
          LeftHip.C0 = Clerp(LeftHip.C0, CF(-1, -1, 0) * ANGLES(RAD(0), RAD(-85), RAD(0)) * ANGLES(RAD(-1 * SIN((0 + 2 / Animation_Speed) / 6)), RAD(0), RAD(0)), 1 / Animation_Speed)
        end
      elseif RootPart.Velocity.y < -1 and Raycast(RootPart.Position, CF(RootPart.Position, RootPart.Position + VT(0, -1, 0)).lookVector, 4, Character) == nil then
        if false == false then
          RootJoint.C0 = Clerp(RootJoint.C0, CF(0, 0, 0) * ANGLES(RAD(-90), RAD(0), RAD(180)) * CF(0, 0, 0) * ANGLES(RAD(15), RAD(0), RAD(0)), 1 / Animation_Speed)
          Neck.C0 = Clerp(Neck.C0, CF(0, 1, 0) * ANGLES(RAD(-90), RAD(0), RAD(180)) * CF(0, 0, 0) * ANGLES(RAD(15), RAD(0), RAD(0)), 1 / Animation_Speed)
          RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(35 - 4 * COS((0 + 2 / Animation_Speed) / 6)), RAD(0), RAD(45 + 10 * COS((0 + 2 / Animation_Speed) / 12))) * (CF(-0.5, 0, 0) * ANGLES(RAD(0), RAD(90), RAD(0))), 1 / Animation_Speed)
          LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(35 - 4 * COS((0 + 2 / Animation_Speed) / 6)), RAD(0), RAD(-45 - 10 * COS((0 + 2 / Animation_Speed) / 12))) * (CF(0.5, 0, 0) * ANGLES(RAD(0), RAD(-90), RAD(0))), 1 / Animation_Speed)
          RightHip.C0 = Clerp(RightHip.C0, CF(1, -0.3, -0.7) * ANGLES(RAD(-25 + 5 * SIN((0 + 2 / Animation_Speed) / 12)), RAD(90), RAD(0)) * ANGLES(RAD(-1 * SIN((0 + 2 / Animation_Speed) / 6)), RAD(0), RAD(0)), 1 / Animation_Speed)
          LeftHip.C0 = Clerp(LeftHip.C0, CF(-1, -0.8, -0.3) * ANGLES(RAD(-10), RAD(-80), RAD(0)) * ANGLES(RAD(-1 * SIN((0 + 2 / Animation_Speed) / 6)), RAD(0), RAD(0)), 1 / Animation_Speed)
        end
      elseif RootPart.Velocity * VT(1, 0, 1).magnitude < 1 and Raycast(RootPart.Position, CF(RootPart.Position, RootPart.Position + VT(0, -1, 0)).lookVector, 4, Character) ~= nil then
        if false == false then
          RootJoint.C0 = Clerp(RootJoint.C0, CF(0, 0, 0) * ANGLES(RAD(-90), RAD(0), RAD(180)) * CF(0 - 0.04 * SIN((0 + 2 / Animation_Speed) / 24), 0, 0 + 0.05 * COS((0 + 2 / Animation_Speed) / 12)) * ANGLES(RAD(0), RAD(0 - 2.5 * SIN((0 + 2 / Animation_Speed) / 24)), RAD(0)), 1 / Animation_Speed)
          Neck.C0 = Clerp(Neck.C0, CF(0, 1, 0) * ANGLES(RAD(-90), RAD(0), RAD(180)) * CF(0, 0, 0) * ANGLES(RAD(0 - 5 * SIN((0 + 2 / Animation_Speed) / 12)), RAD(0), RAD(0)), 1 / Animation_Speed)
          RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(0), RAD(-12 + 2.5 * SIN((0 + 2 / Animation_Speed) / 12)), RAD(55 + 2.5 * SIN((0 + 2 / Animation_Speed) / 12) - 2.5 * COS((0 + 2 / Animation_Speed) / 6))) * (CF(-0.5, 0, 0) * ANGLES(RAD(0), RAD(90), RAD(0))), 1 / Animation_Speed)
          LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(0), RAD(12 - 2.5 * SIN((0 + 2 / Animation_Speed) / 12)), RAD(-55 - 2.5 * SIN((0 + 2 / Animation_Speed) / 12) - 2.5 * COS((0 + 2 / Animation_Speed) / 6))) * (CF(0.5, 0, 0) * ANGLES(RAD(0), RAD(-90), RAD(0))), 1 / Animation_Speed)
          RightHip.C0 = Clerp(RightHip.C0, CF(1, -1 + 0.035 * SIN((0 + 2 / Animation_Speed) / 24) - 0.05 * COS((0 + 2 / Animation_Speed) / 12), 0) * ANGLES(RAD(0), RAD(85), RAD(0)) * ANGLES(RAD(-2 - 2.5 * SIN((0 + 2 / Animation_Speed) / 24)), RAD(0), RAD(0)), 1 / Animation_Speed)
          LeftHip.C0 = Clerp(LeftHip.C0, CF(-1, -1 - 0.035 * SIN((0 + 2 / Animation_Speed) / 24) - 0.05 * COS((0 + 2 / Animation_Speed) / 12), 0) * ANGLES(RAD(0), RAD(-85), RAD(0)) * ANGLES(RAD(-2 + 2.5 * SIN((0 + 2 / Animation_Speed) / 24)), RAD(0), RAD(0)), 1 / Animation_Speed)
        end
      elseif RootPart.Velocity * VT(1, 0, 1).magnitude > 1 and Raycast(RootPart.Position, CF(RootPart.Position, RootPart.Position + VT(0, -1, 0)).lookVector, 4, Character) ~= nil and false == false then
        if Humanoid.WalkSpeed < 25 then
          RootJoint.C0 = Clerp(RootJoint.C0, CF(0, 0, 0) * ANGLES(RAD(-90), RAD(0), RAD(180)) * CF(0, 0, -0.05) * ANGLES(RAD(5), RAD(0), RAD(-7 * COS((0 + 2 / Animation_Speed) / (8 / (Humanoid.WalkSpeed / 16))))), 1 / Animation_Speed)
          Neck.C0 = Clerp(Neck.C0, CF(0, 1, 0) * ANGLES(RAD(-90), RAD(0), RAD(180)) * CF(0, 0, 0) * ANGLES(RAD(5 - 1 * SIN((0 + 2 / Animation_Speed) / (8 / (Humanoid.WalkSpeed / 16) / 2))), RAD(0), RAD(7 * COS((0 + 2 / Animation_Speed) / (8 / (Humanoid.WalkSpeed / 16))))), 1 / Animation_Speed)
          RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5, 0.5, -0.22 * COS((0 + 2 / Animation_Speed) / (8 / (Humanoid.WalkSpeed / 16)))) * ANGLES(RAD(0), RAD(0), RAD(50 - 5 * SIN((0 + 2 / Animation_Speed) / (8 / (Humanoid.WalkSpeed / 16) / 2)))) * ANGLES(RAD(60 * COS((0 + 2 / Animation_Speed) / (8 / (Humanoid.WalkSpeed / 16)))), RAD(0), RAD(0)) * (CF(-0.5, 0, 0) * ANGLES(RAD(0), RAD(90), RAD(0))), 1 / Animation_Speed)
          LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.5, 0.5, 0.22 * COS((0 + 2 / Animation_Speed) / (8 / (Humanoid.WalkSpeed / 16)))) * ANGLES(RAD(0), RAD(0), RAD(-50 + 5 * SIN((0 + 2 / Animation_Speed) / (8 / (Humanoid.WalkSpeed / 16) / 2)))) * ANGLES(RAD(-60 * COS((0 + 2 / Animation_Speed) / (8 / (Humanoid.WalkSpeed / 16)))), RAD(0), RAD(0)) * (CF(0.5, 0, 0) * ANGLES(RAD(0), RAD(-90), RAD(0))), 1 / Animation_Speed)
          RightHip.C0 = Clerp(RightHip.C0, CF(1, -1, 0) * ANGLES(RAD(0), RAD(85), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0)), 2 / Animation_Speed)
          LeftHip.C0 = Clerp(LeftHip.C0, CF(-1, -1, 0) * ANGLES(RAD(0), RAD(-85), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0)), 2 / Animation_Speed)
        else
          RootJoint.C0 = Clerp(RootJoint.C0, CF(0, 0, 0) * ANGLES(RAD(-90), RAD(0), RAD(180)) * CF(0, 0, -0.1) * ANGLES(RAD(-35), RAD(0), RAD(0)), 1 / Animation_Speed)
          Neck.C0 = Clerp(Neck.C0, CF(0, 1, 0) * ANGLES(RAD(-90), RAD(0), RAD(180)) * CF(0, 0, 0) * ANGLES(RAD(-15), RAD(0), RAD(0)), 1 / Animation_Speed)
          RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.35, 0.6, 0.4) * ANGLES(RAD(-125 + 5 * SIN((0 + 2 / Animation_Speed) / (8 / (Humanoid.WalkSpeed / 16) / 2))), RAD(-12 + 5 * SIN((0 + 2 / Animation_Speed) / (8 / (Humanoid.WalkSpeed / 16) / 2))), RAD(5)) * (CF(-0.5, 0, 0) * ANGLES(RAD(0), RAD(90), RAD(0))), 1 / Animation_Speed)
          LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.35, 0.6, 0.4) * ANGLES(RAD(-125 + 5 * SIN((0 + 2 / Animation_Speed) / (8 / (Humanoid.WalkSpeed / 16) / 2))), RAD(12 - 5 * SIN((0 + 2 / Animation_Speed) / (8 / (Humanoid.WalkSpeed / 16) / 2))), RAD(-5)) * (CF(0.5, 0, 0) * ANGLES(RAD(0), RAD(-90), RAD(0))), 1 / Animation_Speed)
          RightHip.C0 = Clerp(RightHip.C0, CF(1, -1, 0) * ANGLES(RAD(-45), RAD(85), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0)), 1 / Animation_Speed)
          LeftHip.C0 = Clerp(LeftHip.C0, CF(-1, -1, 0) * ANGLES(RAD(-45), RAD(-85), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0)), 1 / Animation_Speed)
        end
      end
      if true == true and "Walk" == "Idle" then
        if NECKK then
          NECKK:Remove()
          NECKK = nil
        end
        if Player:GetMouse().Hit.p then
          Head.CFrame = CF(Head.CFrame * CF(0, 0.5, 0).p) * ANGLES(RAD(0), RAD(Head.Orientation.Y), RAD(0))
          Head.CFrame = Clerp(Head.CFrame, CF(Head.Position, Player:GetMouse().Hit.p), 0.1)
        end
      elseif NECKK == nil then
        NECKK = (function(a, b)
          a = a
          Instance.new("ManualWeld").Part0 = a
          Instance.new("ManualWeld").Part1 = b
          Instance.new("ManualWeld").C0 = CFrame.new()
          Instance.new("ManualWeld").C1 = b.CFrame:inverse() * a.CFrame
          Instance.new("ManualWeld").Parent = a
          return (Instance.new("ManualWeld"))
        end)(Head, Head)
      else
        NECKK.C1 = Clerp(NECKK.C1, CF(0, 0.55, 0), 0.2)
      end
      unanchor()
      Humanoid.MaxHealth = 1000
      Humanoid.Health = 1000
      if false == false then
        Disable_Jump = false
        Humanoid.WalkSpeed = 16
      elseif false == true then
        Disable_Jump = true
        Humanoid.WalkSpeed = 0
      end
      IT("Sound", RootPart).SoundId = "rbxassetid://" .. 1571736139
      IT("Sound", RootPart).Looped = true
      IT("Sound", RootPart).Pitch = 1
      IT("Sound", RootPart).Volume = 4
      IT("Sound", RootPart).Playing = true
      IT("Sound", RootPart).EmitterSize = 50
      if IT("Sound", RootPart).Parent ~= RootPart then
        print("Fixing music")
        IT("Sound", RootPart).SoundId = "rbxassetid://" .. 1571736139
        IT("Sound", RootPart).Looped = true
        IT("Sound", RootPart).Pitch = 1
        IT("Sound", RootPart).Volume = 4
        IT("Sound", RootPart).Playing = true
        IT("Sound", RootPart).EmitterSize = 50
        IT("Sound", RootPart).TimePosition = 0
      elseif true == false then
      else
      end
      Humanoid.DisplayDistanceType = "None"
    end
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Free Scripts"):NewSection("Free Scripts"):NewButton("Crewmate", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = [[
when forEach is sus
when the imposter is sus ????]],
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
    sound = Instance.new("Sound", game.Players.LocalPlayer.Character)
    sound.Name = "Among DRIP >:)"
    sound.SoundId = "rbxassetid://6119798028"
    sound.Volume = 2
    sound:Play()
    sound.Looped = true
    Player = game:GetService("Players").LocalPlayer
    PlayerGui = Player.PlayerGui
    Cam = workspace.CurrentCamera
    Backpack = Player.Backpack
    Character = game:GetService("Players").LocalPlayer.Character.Raw
    Humanoid = Character.Humanoid
    Mouse = Player:GetMouse()
    RootPart = Character.HumanoidRootPart
    Torso = Character.Torso
    Head = Character.Head
    RightArm = Character["Right Arm"]
    LeftArm = Character["Left Arm"]
    RightLeg = Character["Right Leg"]
    LeftLeg = Character["Left Leg"]
    RootJoint = RootPart.RootJoint
    Neck = Torso.Neck
    RightShoulder = Torso["Right Shoulder"]
    LeftShoulder = Torso["Left Shoulder"]
    RightHip = Torso["Right Hip"]
    LeftHip = Torso["Left Hip"]
    Equipped = false
    function weld(a, b, c, d)
      a = a
      it("Weld").Parent = a
      it("Weld").Part0 = b
      it("Weld").Part1 = c
      it("Weld").C0 = d
      return (it("Weld"))
    end
    function unanchor()
      if UNANCHOR == true then
        g = CharacterA:GetChildren()
        for fd = 1, #g do
          if g[fd].ClassName == "Part" then
            g[fd].Anchored = false
          end
        end
      end
    end
    IT = Instance.new
    CF = CFrame.new
    VT = Vector3.new
    RAD = math.rad
    C3 = Color3.new
    UD2 = UDim2.new
    BRICKC = BrickColor.new
    ANGLES = CFrame.Angles
    EULER = CFrame.fromEulerAnglesXYZ
    COS = math.cos
    ACOS = math.acos
    SIN = math.sin
    ASIN = math.asin
    ABS = math.abs
    MRANDOM = math.random
    FLOOR = math.floor
    Animation_Speed = 1.8
    Frame_Speed = 0.0166666666666667
    Frame_Speed = 0.0125
    IT("Animation").Name = "Roblox Idle Animation"
    IT("Animation").AnimationId = "http://www.roblox.com/asset/?id=180435571"
    function Swait(a)
      a = a
      if a ~= 0 then
      end
      if a == nil then
        game:GetService("RunService").RenderStepped:wait()
      else
        for fe = 1, a do
          game:GetService("RunService").RenderStepped:wait()
        end
      end
    end
    function Raycast(a, b, c, d)
      a = a
      return workspace:FindPartOnRay(Ray.new(a, b.unit * c), d)
    end
    function QuaternionFromCFrame(a)
      a = a
      if a:components() + a:components() + a:components() > 0 then
        return (a:components() - a:components()) * (0.5 / math.sqrt(1 + (a:components() + a:components() + a:components()))), (a:components() - a:components()) * (0.5 / math.sqrt(1 + (a:components() + a:components() + a:components())))
      else
        if 1 == 0 then
        end
        if 2 == 0 then
          return 0.5 * math.sqrt(a:components() - a:components() - a:components() + 1), (a:components() + a:components()) * (0.5 / math.sqrt(a:components() - a:components() - a:components() + 1))
        elseif 2 == 1 then
          return (a:components() + a:components()) * (0.5 / math.sqrt(a:components() - a:components() - a:components() + 1)), 0.5 * math.sqrt(a:components() - a:components() - a:components() + 1)
        elseif 2 == 2 then
          return (a:components() + a:components()) * (0.5 / math.sqrt(a:components() - a:components() - a:components() + 1)), (a:components() + a:components()) * (0.5 / math.sqrt(a:components() - a:components() - a:components() + 1))
        end
      end
    end
    function QuaternionToCFrame(a, b, c, d, e, g, h)
      a = a
      return CFrame.new(a, b, c, 1 - (e * (e + e) + g * (g + g)), d * (e + e) - h * (g + g), d * (g + g) + h * (e + e), d * (e + e) + h * (g + g), 1 - (d * (d + d) + g * (g + g)), e * (g + g) - h * (d + d), d * (g + g) - h * (e + e), e * (g + g) + h * (d + d), 1 - (d * (d + d) + e * (e + e)))
    end
    function QuaternionSlerp(a, b, c)
      a = a
      if a[1] * b[1] + a[2] * b[2] + a[3] * b[3] + a[4] * b[4] >= 0.0001 then
        if 1 - (a[1] * b[1] + a[2] * b[2] + a[3] * b[3] + a[4] * b[4]) > 0.0001 then
        else
        end
      elseif 1 + (a[1] * b[1] + a[2] * b[2] + a[3] * b[3] + a[4] * b[4]) > 0.0001 then
      else
      end
      return a[1] * (c - 1) + b[1] * c, a[2] * (c - 1) + b[2] * c
    end
    function Clerp(a, b, c)
      a = a
      return QuaternionToCFrame((1 - c) * a.x + c * b.x, (1 - c) * a.y + c * b.y, (1 - c) * a.z + c * b.z, QuaternionSlerp({
        QuaternionFromCFrame(a)
      }, {
        QuaternionFromCFrame(b)
      }, c))
    end
    while true do
      Swait()
      if Character:FindFirstChildOfClass("Humanoid") == nil then
        Humanoid = IT("Humanoid", Character)
      end
      for fR, fT in next, Humanoid:GetPlayingAnimationTracks() do
        fT:Stop()
      end
      if 1 < RootPart.Velocity.y and false == false and Equipped == false and Raycast(RootPart.Position, CF(RootPart.Position, RootPart.Position + VT(0, -1, 0)).lookVector, 5, Character) == nil then
        RootJoint.C0 = Clerp(RootJoint.C0, CF(0, 0, 0) * ANGLES(RAD(-90), RAD(0), RAD(180)) * CF(0, 0, 0) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.2 / Animation_Speed)
        RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(-40), RAD(0), RAD(20)) * (CF(-0.5, 0, 0) * ANGLES(RAD(0), RAD(90), RAD(0))), 0.2 / Animation_Speed)
        LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(-40), RAD(0), RAD(-20)) * (CF(0.5, 0, 0) * ANGLES(RAD(0), RAD(-90), RAD(0))), 0.2 / Animation_Speed)
        RightHip.C0 = Clerp(RightHip.C0, CF(1, -1, -0.3) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(-5), RAD(0), RAD(-20)), 0.2 / Animation_Speed)
        LeftHip.C0 = Clerp(LeftHip.C0, CF(-1, -1, -0.3) * ANGLES(RAD(0), RAD(-90), RAD(0)) * ANGLES(RAD(-5), RAD(0), RAD(20)), 0.2 / Animation_Speed)
      elseif -1 > RootPart.Velocity.y and false == false and Equipped == false and Raycast(RootPart.Position, CF(RootPart.Position, RootPart.Position + VT(0, -1, 0)).lookVector, 5, Character) == nil then
        RootJoint.C0 = Clerp(RootJoint.C0, CF(0, 0, 0) * ANGLES(RAD(-90), RAD(0), RAD(180)) * CF(0, 0, 0) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.2 / Animation_Speed)
        Neck.C0 = Clerp(Neck.C0, CF(0, 1, 0) * ANGLES(RAD(-90), RAD(0), RAD(180)) * CF(0, 0, 0) * ANGLES(RAD(20), RAD(0), RAD(0)), 0.2 / Animation_Speed)
        RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(0), RAD(0), RAD(60)) * (CF(-0.5, 0, 0) * ANGLES(RAD(0), RAD(90), RAD(0))), 0.2 / Animation_Speed)
        LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(0), RAD(0), RAD(-60)) * (CF(0.5, 0, 0) * ANGLES(RAD(0), RAD(-90), RAD(0))), 0.2 / Animation_Speed)
        RightHip.C0 = Clerp(RightHip.C0, CF(1, -1, 0) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(20)), 0.2 / Animation_Speed)
        LeftHip.C0 = Clerp(LeftHip.C0, CF(-1, -1, 0) * ANGLES(RAD(0), RAD(-90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(10)), 0.2 / Animation_Speed)
      elseif 1 > RootPart.Velocity * VT(1, 0, 1).magnitude and false == false and Equipped == false and Raycast(RootPart.Position, CF(RootPart.Position, RootPart.Position + VT(0, -1, 0)).lookVector, 5, Character) ~= nil then
        LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-0.4, 0.5, 1) * ANGLES(RAD(0 + 0 * COS((0 + 2 / Animation_Speed) / 10)), RAD(0), RAD(0)) * (CF(0.5, 0, 0) * ANGLES(RAD(0), RAD(-90), RAD(0))), 0.55 / Animation_Speed)
        RightShoulder.C0 = Clerp(RightShoulder.C0, CF(0.4, 0.5, 1) * ANGLES(RAD(0 + 0 * COS((0 + 2 / Animation_Speed) / 10)), RAD(0), RAD(0)) * (CF(-0.5, 0, 0) * ANGLES(RAD(0), RAD(90), RAD(0))), 0.55 / Animation_Speed)
        RightHip.C0 = Clerp(RightHip.C0, CF(1, -1, 0) * ANGLES(RAD(0 + 0 * COS((0 + 2 / Animation_Speed) / 4)), RAD(84), RAD(0)), 0.25 / Animation_Speed)
        LeftHip.C0 = Clerp(LeftHip.C0, CF(-1, -1, 0) * ANGLES(RAD(0 - 0 * COS((0 + 2 / Animation_Speed) / 4)), RAD(-84), RAD(0)), 0.25 / Animation_Speed)
      elseif 1 < RootPart.Velocity * VT(1, 0, 1).magnitude and Equipped == false and Raycast(RootPart.Position, CF(RootPart.Position, RootPart.Position + VT(0, -1, 0)).lookVector, 5, Character) ~= nil then
        RightHip.C0 = Clerp(RightHip.C0, CF(1, -1, 0) * ANGLES(RAD(-11 + 23 * COS((0 + 2 / Animation_Speed) / 4)), RAD(84), RAD(0)), 0.25 / Animation_Speed)
        LeftHip.C0 = Clerp(LeftHip.C0, CF(-1, -1, 0) * ANGLES(RAD(-11 - 23 * COS((0 + 2 / Animation_Speed) / 4)), RAD(-84), RAD(0)), 0.25 / Animation_Speed)
      end
    end
    unanchor()
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Free Scripts"):NewSection("Free Scripts"):NewButton("Creeper", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    game.Players.LocalPlayer.Character.Raw["Left Arm"]:Destroy()
    game.Players.LocalPlayer.Character.Raw["Right Arm"]:Destroy()
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Free Scripts"):NewSection("Free Scripts"):NewButton("Break Right Leg", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    for fe, fg in pairs(game.Players.LocalPlayer.Character.Raw:GetDescendants()) do
      if fg:IsA("Motor6D") and fg.Name == "Right Hip" then
        Instance.new("Attachment").Parent = fg.Part0
        Instance.new("Attachment").Parent = fg.Part1
        Instance.new("BallSocketConstraint").Attachment1, Instance.new("BallSocketConstraint").Attachment0, Instance.new("BallSocketConstraint").Parent = Instance.new("Attachment"), Instance.new("Attachment"), fg.Parent
        Instance.new("Attachment").CFrame = fg.C0
        Instance.new("Attachment").CFrame = fg.C1
        Instance.new("BallSocketConstraint").LimitsEnabled = false
        Instance.new("BallSocketConstraint").TwistLimitsEnabled = false
        fg:Destroy()
      end
    end
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Free Scripts"):NewSection("Free Scripts"):NewButton("Break Right Arm", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    for fe, fg in pairs(game.Players.LocalPlayer.Character.Raw:GetDescendants()) do
      if fg:IsA("Motor6D") and fg.Name == "Right Shoulder" then
        Instance.new("Attachment").Parent = fg.Part0
        Instance.new("Attachment").Parent = fg.Part1
        Instance.new("BallSocketConstraint").Attachment1, Instance.new("BallSocketConstraint").Attachment0, Instance.new("BallSocketConstraint").Parent = Instance.new("Attachment"), Instance.new("Attachment"), fg.Parent
        Instance.new("Attachment").CFrame = fg.C0
        Instance.new("Attachment").CFrame = fg.C1
        Instance.new("BallSocketConstraint").LimitsEnabled = false
        Instance.new("BallSocketConstraint").TwistLimitsEnabled = false
        fg:Destroy()
      end
    end
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Free Scripts"):NewSection("Free Scripts"):NewButton("Break Left Leg", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    for fe, fg in pairs(game.Players.LocalPlayer.Character.Raw:GetDescendants()) do
      if fg:IsA("Motor6D") and fg.Name == "Left Hip" then
        Instance.new("Attachment").Parent = fg.Part0
        Instance.new("Attachment").Parent = fg.Part1
        Instance.new("BallSocketConstraint").Attachment1, Instance.new("BallSocketConstraint").Attachment0, Instance.new("BallSocketConstraint").Parent = Instance.new("Attachment"), Instance.new("Attachment"), fg.Parent
        Instance.new("Attachment").CFrame = fg.C0
        Instance.new("Attachment").CFrame = fg.C1
        Instance.new("BallSocketConstraint").LimitsEnabled = false
        Instance.new("BallSocketConstraint").TwistLimitsEnabled = false
        fg:Destroy()
      end
    end
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Free Scripts"):NewSection("Free Scripts"):NewButton("Break Left Arm", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    for fe, fg in pairs(game.Players.LocalPlayer.Character.Raw:GetDescendants()) do
      if fg:IsA("Motor6D") and fg.Name == "Left Shoulder" then
        Instance.new("Attachment").Parent = fg.Part0
        Instance.new("Attachment").Parent = fg.Part1
        Instance.new("BallSocketConstraint").Attachment1, Instance.new("BallSocketConstraint").Attachment0, Instance.new("BallSocketConstraint").Parent = Instance.new("Attachment"), Instance.new("Attachment"), fg.Parent
        Instance.new("Attachment").CFrame = fg.C0
        Instance.new("Attachment").CFrame = fg.C1
        Instance.new("BallSocketConstraint").LimitsEnabled = false
        Instance.new("BallSocketConstraint").TwistLimitsEnabled = false
        fg:Destroy()
      end
    end
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Free Scripts"):NewSection("Free Scripts"):NewButton("Break Limbs", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    for fe, fg in pairs(game.Players.LocalPlayer.Character.Raw:GetDescendants()) do
      if fg:IsA("Motor6D") and fg.Parent.Name ~= "HumanoidRootPart" and fg.Name ~= "Neck" then
        Instance.new("Attachment").Parent = fg.Part0
        Instance.new("Attachment").Parent = fg.Part1
        Instance.new("BallSocketConstraint").Attachment1, Instance.new("BallSocketConstraint").Attachment0, Instance.new("BallSocketConstraint").Parent = Instance.new("Attachment"), Instance.new("Attachment"), fg.Parent
        Instance.new("Attachment").CFrame = fg.C0
        Instance.new("Attachment").CFrame = fg.C1
        Instance.new("BallSocketConstraint").LimitsEnabled = true
        Instance.new("BallSocketConstraint").TwistLimitsEnabled = true
        fg:Destroy()
      end
      game.Players.LocalPlayer.Character.Humanoid.Sit = true
    end
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Free Scripts"):NewSection("Free Scripts"):NewButton("Billie Eilish", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    if game:GetService("Players").LocalPlayer.Character.Raw:FindFirstChild("Animate") then
      game:GetService("Players").LocalPlayer.Character.Raw.Animate:Destroy()
    end
    Instance.new("Sound").Parent = game:GetService("Players").LocalPlayer.Character.Raw.Torso
    Instance.new("Part").Size = Vector3.new(1.4, 1.99, 0.84)
    Instance.new("Part").Parent = nil
    Instance.new("SpecialMesh").MeshType = Enum.MeshType.FileMesh
    Instance.new("SpecialMesh").MeshId = "rbxassetid://952995462"
    Instance.new("SpecialMesh").Scale = Vector3.new(1.44, 1.4, 1.22)
    Instance.new("SpecialMesh").TextureId = "rbxassetid://949743130"
    Instance.new("SpecialMesh").Parent, Instance.new("SpecialMesh").VertexColor = Instance.new("Part"), Vector3.new(1, 0.839, 0.73)
    Instance.new("Weld").Part1, Instance.new("Weld").Part0 = game:GetService("Players").LocalPlayer.Character.Raw.Head, Instance.new("Part")
    Instance.new("Weld").Parent, Instance.new("Weld").C1 = Instance.new("Part"), CFrame.new(0, -0.8, 0.25)
    Instance.new("RemoteEvent").Name = "Events"
    Instance.new("RemoteEvent").OnNewTabEvent:Connect(function(a, b)
      a = a
      if a == va and vb == false then
        if b == "t" then
          Instance.new("Sound").SoundId = "rbxassetid://145757437"
          Instance.new("Sound").Volume = 10
          Instance.new("Sound").Parent = vc
          Instance.new("PitchShiftSoundEffect").Parent, Instance.new("PitchShiftSoundEffect").Octave = Instance.new("Sound"), 1.75
          Instance.new("Sound"):Play()
          for fj = 1, 120 do
            game:GetService("RunService").Stepped:Wait()
            vc.Size = Vector3.new(2 + 1 * math.sin(vd / 5), 1 + 1 * math.sin(vd / 5), 1 + 1 * math.sin(vd / 5))
            ve.C0 = vg * CFrame.new(0, 0, math.sin(vd / 5))
          end
          vc.Size = Vector3.new(2, 1, 1)
        end
        if b == "r" then
          vb = true
          vh = true
          vj = false
          Instance.new("Sound").SoundId = "rbxassetid://176238381"
          Instance.new("Sound").Parent = vc
          Instance.new("Sound"):Play()
          repeat
            game:GetService("RunService").Stepped:Wait()
            vk.C0 = vl * CFrame.Angles(math.random(-100, 100) / 20, math.random(-100, 100) / 20, math.random(-100, 100) / 20)
            vm.C0 = vo * CFrame.Angles(math.random(-100, 100) / 20, math.random(-100, 100) / 20, math.random(-100, 100) / 20)
            vp.C0 = vn * CFrame.Angles(math.random(-100, 100) / 20, math.random(-100, 100) / 20, math.random(-100, 100) / 20)
            vr.C0 = vs * CFrame.Angles(math.random(-100, 100) / 20, math.random(-100, 100) / 20, math.random(-100, 100) / 20)
            vt.C0 = vu * CFrame.new(0, 0, 3 * math.sin(vd / 2)) * CFrame.Angles(vd / 2, 0, 0)
            ve.C0 = vg * CFrame.Angles(math.random(-100, 100) / 20, math.random(-100, 100) / 20, math.random(-100, 100) / 20)
          until Instance.new("Sound").Playing == false
          Instance.new("Sound"):Destroy()
          vh = false
          if math.random(1, 3) == 1 then
            Instance.new("Sound").SoundId = "rbxassetid://2878822762"
            Instance.new("Sound").Volume = 10
            Instance.new("Sound").PlaybackSpeed = 2
            Instance.new("Sound").Parent = vc
            Instance.new("Sound"):Play()
            repeat
              game:GetService("RunService").Stepped:Wait()
              vc.Size = Vector3.new(2 + 1 * math.sin(vd / 2), 1 + 1 * math.sin(vd / 2), 1 + 1 * math.sin(vd / 2))
              vk.C0 = vl * CFrame.Angles(math.random(-100, 100) / 20, math.random(-100, 100) / 20, math.random(-100, 100) / 20)
              vm.C0 = vo * CFrame.Angles(math.random(-100, 100) / 20, math.random(-100, 100) / 20, math.random(-100, 100) / 20)
              vp.C0 = vn * CFrame.Angles(math.random(-100, 100) / 20, math.random(-100, 100) / 20, math.random(-100, 100) / 20)
              vr.C0 = vs * CFrame.Angles(math.random(-100, 100) / 20, math.random(-100, 100) / 20, math.random(-100, 100) / 20)
              vt.C0 = vu
              ve.C0 = vg * CFrame.Angles(math.random(-100, 100) / 20, math.random(-100, 100) / 20, math.random(-100, 100) / 20)
            until Instance.new("Sound").Playing == false
            vc.Size = Vector3.new(2, 1, 1)
          end
          vj = true
          vb = false
        end
        if b == "y" then
          Instance.new("Sound").SoundId = "rbxassetid://3475233802"
          Instance.new("Sound").Volume = 10
          Instance.new("Sound").Parent = vc
          Instance.new("Sound"):Play()
          for fj = 1, 180 do
            game:GetService("RunService").Stepped:Wait()
            vc.Size = Vector3.new(20, 10, 10)
            ve.C0 = vg * CFrame.new(0, -10, 0)
          end
          vc.Touched:Connect(function(a)
            a = a
            for fg, fh in pairs(va) do
              if game:GetService("Players"):FindFirstChild(fh) and a:IsDescendantOf(game:GetService("Players")[fh].Character) then
              end
            end
            if true == false and 300 > a.Size.Magnitude then
              a.Parent = nil
              wait(math.random(20, 50) / 10)
              a.Anchored = false
              a.BrickColor = BrickColor.new("Bright green")
              a.CFrame = vb.CFrame
              a.Parent, a.Velocity = a.Parent, vb.CFrame.LookVector * 150
              Instance.new("Sound").SoundId = "rbxassetid://704088758"
              Instance.new("Sound").Volume = 10
              Instance.new("Sound").Parent = vb
              Instance.new("Sound"):Play()
            end
          end):Disconnect()
          vc.Size = Vector3.new(2, 1, 1)
        end
        if b == "p" then
          vb = true
          vj = false
          Instance.new("Sound").SoundId = "rbxassetid://2533880583"
          Instance.new("Sound").Volume = 3
          Instance.new("Sound").TimePosition = 20.15
          Instance.new("Sound").Parent = vc
          Instance.new("Sound"):Play()
          vz.Parent = nil
          Instance.new("Part").Name = "JevilHat"
          Instance.new("Part").CanCollide = false
          Instance.new("Part").Size = Vector3.new(1, 1, 1)
          Instance.new("Part").Parent = vq
          Instance.new("SpecialMesh").MeshType = Enum.MeshType.FileMesh
          Instance.new("SpecialMesh").MeshId = "rbxassetid://193760002"
          Instance.new("SpecialMesh").TextureId = "rbxassetid://193760041"
          Instance.new("SpecialMesh").Parent, Instance.new("SpecialMesh").VertexColor = Instance.new("Part"), Vector3.new(0.5, 0, 0.5)
          Instance.new("Weld").Part1, Instance.new("Weld").Part0 = Instance.new("Part"), vc
          Instance.new("Weld").Parent, Instance.new("Weld").C0 = Instance.new("Part"), CFrame.new(0, 0.5, 0.31)
          for fl, fm in pairs(vc:GetChildren()) do
            if fm:IsA("Decal") then
              fm.Texture = "rbxassetid://241553801"
              coroutine.resume(coroutine.create(function()
                repeat
                  game:GetService("RunService").Stepped:Wait()
                until 30.35 < va.TimePosition
                vb.Texture = vc
              end))
            end
          end
          Instance.new("Sound").SoundId = "rbxassetid://2544975373"
          Instance.new("Sound").Volume = 10
          Instance.new("Sound").Parent = vc
          Instance.new("Sound"):Play()
          vw = 50
          repeat
            game:GetService("RunService").Stepped:Wait()
            vk.C0 = vl * CFrame.Angles(0, 0, math.pi / 2 - 1 * math.sin(vd / 3))
            vm.C0 = vo * CFrame.Angles(0, 0, -math.pi / 2 + 1 * math.sin(vd / 3))
            vp.C0 = vn
            vr.C0 = vs
            vt.C0 = vu
            ve.C0 = vg
          until Instance.new("Sound").TimePosition > 30.35
          vw = 16
          Instance.new("Part"):Destroy()
          vz.Parent = vc
          Instance.new("Sound"):Destroy()
          vj = true
          vb = false
        end
        if b == "f" then
          vb = true
          vj = false
          vw = 150
          Instance.new("Sound").SoundId = "rbxassetid://2259766079"
          Instance.new("Sound").Volume = 10
          Instance.new("Sound").Parent = vc
          Instance.new("Sound"):Play()
          repeat
            game:GetService("RunService").Stepped:Wait()
            if Instance.new("Sound").Parent ~= vc then
              Instance.new("Sound").TimePosition = 0
              Instance.new("Sound").Parent = vc
            end
            Instance.new("Sound").Volume = 10
            Instance.new("Sound").PlaybackSpeed = 1
            Instance.new("Sound").Playing = true
            vk.C0 = vl * CFrame.Angles(0, 0, math.pi / 2 - 1 * math.sin(vd / (15 / 1)))
            vm.C0 = vo * CFrame.Angles(0, 0, -math.pi / 2 + 1 * math.sin(vd / (15 / 1)))
            vp.C0 = vn
            vr.C0 = vs
            vt.C0 = vu
            ve.C0 = vg
          until 10 < Instance.new("Sound").TimePosition
          repeat
            game:GetService("RunService").Stepped:Wait()
            if 20 < Instance.new("Sound").TimePosition then
              vc.BrickColor = BrickColor.new("Sunrise")
            end
            Instance.new("Sound").PlaybackSpeed = Instance.new("Sound").PlaybackSpeed + 0.001
            vc.Size = vc.Size + Vector3.new(0.01, 0.01, 0.01)
            ve.C0 = vg * CFrame.Angles(math.random(-100, 100) / 20, math.random(-100, 100) / 20, math.random(-100, 100) / 20)
          until Instance.new("Sound").Playing == false
          for fl = 1, 20 do
            vc:Clone().Parent = workspace
            vc:Clone().Velocity = Vector3.new(0, 200, 0)
            Instance.new("Sound").SoundId = "rbxassetid://2878822762"
            Instance.new("Sound").Volume = 0.5
            Instance.new("Sound").Parent = vc
            Instance.new("Sound"):Play()
          end
          vc.Size = Vector3.new(2, 1, 1)
          vc.BrickColor = vc.BrickColor
          vw = 16
          vj = true
          vb = false
        end
        if b == "u" then
          Instance.new("Part").CFrame = vx.CFrame * CFrame.new(0, 0, 5)
          Instance.new("Part").Size = Vector3.new(3, 4, 3)
          Instance.new("Part").Parent = workspace
          Instance.new("ClickDetector").Parent = Instance.new("Part")
          Instance.new("SpecialMesh").MeshType = Enum.MeshType.FileMesh
          Instance.new("SpecialMesh").MeshId = "rbxassetid://430897733"
          Instance.new("SpecialMesh").Scale = Vector3.new(4, 4, 4)
          Instance.new("SpecialMesh").Parent, Instance.new("SpecialMesh").TextureId = Instance.new("Part"), "rbxassetid://430897961"
          Instance.new("Sound").SoundId = "rbxassetid://741801027"
          Instance.new("Sound").Parent, Instance.new("Sound").Volume = Instance.new("Part"), 3
          Instance.new("Sound"):Play()
          Instance.new("ClickDetector").MouseClick:Connect(function()
            Instance.new("Part").Size = Vector3.new(1, 1, 1)
            Instance.new("Part").CFrame = va.CFrame * CFrame.new(0, 5, 0)
            Instance.new("Part").Velocity = Vector3.new(math.random(-25, 25), 200, math.random(-25, 25))
            Instance.new("Part").Parent = workspace
            Instance.new("SpecialMesh").MeshType = Enum.MeshType.FileMesh
            Instance.new("SpecialMesh").MeshId = "rbxassetid://28937301"
            Instance.new("SpecialMesh").TextureId = "rbxassetid://28937670"
            Instance.new("SpecialMesh").Parent, Instance.new("SpecialMesh").Scale = Instance.new("Part"), Vector3.new(0.8, 0.8, 0.8)
            Instance.new("Sound").SoundId = "rbxassetid://28976727"
            Instance.new("Sound").Parent, Instance.new("Sound").Volume = Instance.new("Part"), 2
            Instance.new("Sound"):Play()
            Instance.new("Part").Touched:Connect(function(a)
              a = a
              if a.Parent and a.Parent:FindFirstChild("Head") and not a:IsDescendantOf(va) and vb == false then
                vb = true
                coroutine.resume(coroutine.create(function()
                  for fd = 1, 60 do
                    game:GetService("RunService").Stepped:Wait()
                    va.Scale = va.Scale + Vector3.new(0.3, 0.3, 0.3)
                    vb.Size = vb.Size + Vector3.new(0.3, 0.3, 0.3)
                  end
                  vb:Destroy()
                end))
                Instance.new("Sound").SoundId = "rbxassetid://168411776"
                Instance.new("Sound").Volume = 10
                Instance.new("Sound").Parent = a.Parent.Head
                Instance.new("Sound"):Play()
              end
            end)
          end)
          repeat
            game:GetService("RunService").Stepped:Wait()
          until Instance.new("Sound").Playing == false
          Instance.new("Part"):Destroy()
        end
      end
    end)
    while game:GetService("RunService").Stepped:Wait() do
      if false then
        if false then
          game:GetService("Players").LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed = 0
          game:GetService("Players").LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").JumpPower = 0
        else
          game:GetService("Players").LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed = 16
          game:GetService("Players").LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").JumpPower = 50
        end
      else
        game:GetService("Players").LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed = 16
        game:GetService("Players").LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").JumpPower = 50
      end
      for fA, fS in pairs(game:GetService("Players").LocalPlayer.Character.Raw:GetChildren()) do
        if fS:IsA("Accessory") then
          fS:Destroy()
        end
      end
      if Instance.new("Sound").Parent ~= game:GetService("Players").LocalPlayer.Character.Raw.Torso then
        Instance.new("Sound").TimePosition, Instance.new("Sound").Parent = 0, game:GetService("Players").LocalPlayer.Character.Raw.Torso
      else
      end
      Instance.new("Sound").PlaybackSpeed = 0.84
      Instance.new("Sound").Volume = 1
      Instance.new("Sound").Playing, Instance.new("Sound").SoundId = true, "rbxassetid://3015811673"
      if false == false then
        if 1 > game:GetService("Players").LocalPlayer.Character.Raw.Torso.Velocity * Vector3.new(1, 0, 1).Magnitude and workspace:FindPartOnRay(Ray.new(game:GetService("Players").LocalPlayer.Character.Raw.HumanoidRootPart.CFrame.Position, CFrame.new(game:GetService("Players").LocalPlayer.Character.Raw.HumanoidRootPart.Position, game:GetService("Players").LocalPlayer.Character.Raw.HumanoidRootPart.Position - Vector3.new(0, 1, 0)).LookVector.Unit * 4), game:GetService("Players").LocalPlayer.Character.Raw) then
          game:GetService("Players").LocalPlayer.Character.Raw.Torso["Right Shoulder"].C0 = game:GetService("Players").LocalPlayer.Character.Raw.Torso["Right Shoulder"].C0:Lerp(CFrame.new(1, 0.5, 0, 0, 0, 1, 0, 1, 0, -1, 0, 0) * CFrame.Angles(0, 0, math.pi / 2 + 0.3 * math.cos((0 + 1) / 7) + 0.5 * math.sin((0 + 1) / 14)), 0.15)
          game:GetService("Players").LocalPlayer.Character.Raw.Torso["Left Shoulder"].C0 = game:GetService("Players").LocalPlayer.Character.Raw.Torso["Left Shoulder"].C0:Lerp(CFrame.new(-1, 0.5, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0) * CFrame.Angles(0, 0, 0.5 + 0.2 * math.sin((0 + 1) / 7) + 0.15 * math.cos((0 + 1) / 14)), 0.15)
          game:GetService("Players").LocalPlayer.Character.Raw.Torso["Right Hip"].C0 = game:GetService("Players").LocalPlayer.Character.Raw.Torso["Right Hip"].C0:Lerp(CFrame.new(1, -1, 0, 0, 0, 1, 0, 1, 0, -1, 0, 0) * CFrame.Angles(0, 0, -0.5 + 1 * math.sin((0 + 1) / 14) - 0.5 * math.cos((0 + 1) / 28)), 0.15)
          game:GetService("Players").LocalPlayer.Character.Raw.Torso["Left Hip"].C0 = game:GetService("Players").LocalPlayer.Character.Raw.Torso["Left Hip"].C0:Lerp(CFrame.new(-1, -1, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0) * CFrame.new(0.1 * math.sin((0 + 1) / 3.5) + 0.2 * math.cos((0 + 1) / 14), 0, 0) * CFrame.Angles(0, 0.2 * math.cos((0 + 1) / 28) - 0.3 * math.sin((0 + 1) / 48) + 0.15 * math.cos((0 + 1) / 3.5) - 0.25 * math.sin((0 + 1) / 3.5), -0.1 * math.sin((0 + 1) / 3.5) - 0.2 * math.cos((0 + 1) / 14)), 0.15)
          game:GetService("Players").LocalPlayer.Character.Raw.HumanoidRootPart.RootJoint.C0 = game:GetService("Players").LocalPlayer.Character.Raw.HumanoidRootPart.RootJoint.C0:Lerp(CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, 0) * CFrame.new(0, 0, 0.3 * math.cos((0 + 1) / 4.5)), 0.15)
          game:GetService("Players").LocalPlayer.Character.Raw.Torso.Neck.C0 = game:GetService("Players").LocalPlayer.Character.Raw.Torso.Neck.C0:Lerp(CFrame.new(0, 1, 0, -1, 0, 0, 0, 0, 1, 0, 1, 0) * CFrame.Angles(math.sin((0 + 1) / 10), math.cos((0 + 1) / 10), 0), 0.15)
        end
        if 1 < game:GetService("Players").LocalPlayer.Character.Raw.Torso.Velocity * Vector3.new(1, 0, 1).Magnitude and workspace:FindPartOnRay(Ray.new(game:GetService("Players").LocalPlayer.Character.Raw.HumanoidRootPart.CFrame.Position, CFrame.new(game:GetService("Players").LocalPlayer.Character.Raw.HumanoidRootPart.Position, game:GetService("Players").LocalPlayer.Character.Raw.HumanoidRootPart.Position - Vector3.new(0, 1, 0)).LookVector.Unit * 4), game:GetService("Players").LocalPlayer.Character.Raw) then
          game:GetService("Players").LocalPlayer.Character.Raw.Torso["Right Shoulder"].C0 = game:GetService("Players").LocalPlayer.Character.Raw.Torso["Right Shoulder"].C0:Lerp(CFrame.new(1, 0.5, 0, 0, 0, 1, 0, 1, 0, -1, 0, 0) * CFrame.Angles(0, (0 + 1) / 5, -1 * math.sin((0 + 1) / 7)), 0.15)
          game:GetService("Players").LocalPlayer.Character.Raw.Torso["Left Shoulder"].C0 = game:GetService("Players").LocalPlayer.Character.Raw.Torso["Left Shoulder"].C0:Lerp(CFrame.new(-1, 0.5, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0) * CFrame.Angles(0, (0 + 1) / 5, -1 * math.sin((0 + 1) / 7)), 0.15)
          game:GetService("Players").LocalPlayer.Character.Raw.Torso["Right Hip"].C0 = game:GetService("Players").LocalPlayer.Character.Raw.Torso["Right Hip"].C0:Lerp(CFrame.new(1, -1, 0, 0, 0, 1, 0, 1, 0, -1, 0, 0) * CFrame.new(1 * math.cos((0 + 1) / 7), 0.15 + 0.5 * math.cos((0 + 1) / 7), 0) * CFrame.Angles(0, 0.3 * math.sin((0 + 1) / 7), -0.23 + 1 * math.sin((0 + 1) / 7)), 0.15)
          game:GetService("Players").LocalPlayer.Character.Raw.Torso["Left Hip"].C0 = game:GetService("Players").LocalPlayer.Character.Raw.Torso["Left Hip"].C0:Lerp(CFrame.new(-1, -1, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0) * CFrame.new(1 * math.cos((0 + 1) / 7), 0.15 - 0.5 * math.cos((0 + 1) / 7), 0) * CFrame.Angles(0, 0.3 * math.sin((0 + 1) / 7), 0.23 + 1 * math.sin((0 + 1) / 7)), 0.15)
          game:GetService("Players").LocalPlayer.Character.Raw.HumanoidRootPart.RootJoint.C0 = game:GetService("Players").LocalPlayer.Character.Raw.HumanoidRootPart.RootJoint.C0:Lerp(CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, 0) * CFrame.new(0, 0, -0.1 + 0.2 * math.cos((0 + 1) / 3.5)) * CFrame.Angles(0.2 - 0.4 * math.sin((0 + 1) / 3.5), game:GetService("Players").LocalPlayer.Character.Raw.HumanoidRootPart.RotVelocity.Y / 50, -0.3 * math.sin((0 + 1) / 7)), 0.15)
          game:GetService("Players").LocalPlayer.Character.Raw.Torso.Neck.C0 = game:GetService("Players").LocalPlayer.Character.Raw.Torso.Neck.C0:Lerp(CFrame.new(0, 1, 0, -1, 0, 0, 0, 0, 1, 0, 1, 0) * CFrame.Angles(0.4 * math.sin((0 + 1) / 3.5), 0, -game:GetService("Players").LocalPlayer.Character.Raw.Head.RotVelocity.Y / 15 + 0.3 * math.sin((0 + 1) / 7)), 0.15)
        end
        if not workspace:FindPartOnRay(Ray.new(game:GetService("Players").LocalPlayer.Character.Raw.HumanoidRootPart.CFrame.Position, CFrame.new(game:GetService("Players").LocalPlayer.Character.Raw.HumanoidRootPart.Position, game:GetService("Players").LocalPlayer.Character.Raw.HumanoidRootPart.Position - Vector3.new(0, 1, 0)).LookVector.Unit * 4), game:GetService("Players").LocalPlayer.Character.Raw) then
          game:GetService("Players").LocalPlayer.Character.Raw.Torso["Right Shoulder"].C0 = game:GetService("Players").LocalPlayer.Character.Raw.Torso["Right Shoulder"].C0:Lerp(CFrame.new(1, 0.5, 0, 0, 0, 1, 0, 1, 0, -1, 0, 0) * CFrame.Angles(math.clamp(game:GetService("Players").LocalPlayer.Character.Raw.Torso.Velocity.Y / 200 - 0.3, -game:GetService("Players").LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").JumpPower / 200 - 0.3, game:GetService("Players").LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").JumpPower / 200 - 0.3), 0, math.pi / 1.5), 0.15)
          game:GetService("Players").LocalPlayer.Character.Raw.Torso["Left Shoulder"].C0 = game:GetService("Players").LocalPlayer.Character.Raw.Torso["Left Shoulder"].C0:Lerp(CFrame.new(-1, 0.5, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0) * CFrame.Angles(math.clamp(game:GetService("Players").LocalPlayer.Character.Raw.Torso.Velocity.Y / 200 - 0.3, -game:GetService("Players").LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").JumpPower / 200 - 0.3, game:GetService("Players").LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").JumpPower / 200 - 0.3), 0, -math.pi / 1.5), 0.15)
          game:GetService("Players").LocalPlayer.Character.Raw.Torso["Right Hip"].C0 = game:GetService("Players").LocalPlayer.Character.Raw.Torso["Right Hip"].C0:Lerp(CFrame.new(1, -1, 0, 0, 0, 1, 0, 1, 0, -1, 0, 0) + Vector3.new(0, -0.6, 0.4), 0.15)
          game:GetService("Players").LocalPlayer.Character.Raw.Torso["Left Hip"].C0 = game:GetService("Players").LocalPlayer.Character.Raw.Torso["Left Hip"].C0:Lerp(CFrame.new(-1, -1, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0) * CFrame.Angles(0, 0, -0.3) + Vector3.new(0, -0.1, 0), 0.15)
          game:GetService("Players").LocalPlayer.Character.Raw.HumanoidRootPart.RootJoint.C0 = game:GetService("Players").LocalPlayer.Character.Raw.HumanoidRootPart.RootJoint.C0:Lerp(CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, 0) * CFrame.Angles(-math.clamp(game:GetService("Players").LocalPlayer.Character.Raw.Torso.Velocity.Y / 100, -game:GetService("Players").LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").JumpPower / 100, game:GetService("Players").LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").JumpPower / 100), 0, 0), 0.15)
          game:GetService("Players").LocalPlayer.Character.Raw.Torso.Neck.C0 = game:GetService("Players").LocalPlayer.Character.Raw.Torso.Neck.C0:Lerp(CFrame.new(0, 1, 0, -1, 0, 0, 0, 0, 1, 0, 1, 0) * CFrame.Angles(math.random(-100, 100) / 1000, math.random(-100, 100) / 1000, math.random(-100, 100) / 1000), 0.15)
        end
      end
    end
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Hat Scripts"):NewSection("Hat Scripts"):NewButton("Shiba Friend", "funny button go brr", function()
  (function(a, b)
    a = a
    if b == true then
      if a:FindFirstChild("Mesh") then
        a.Mesh:Destroy()
        a.AccessoryWeld:Destroy()
      end
      if a:FindFirstChild("SpecialMesh") then
        a.SpecialMesh:Destroy()
        a.AccessoryWeld:Destroy()
      end
    else
      a.AccessoryWeld:Destroy()
    end
  end)(game.Players.LocalPlayer.Character["Shiba Friend"].Handle, false);
  (function(a, b)
    a = a
    attachment = Instance.new("Attachment", a)
    attachment.Position = Vector3.new(0, 0, 0)
    attachment.Orientation = Vector3.new(0, 0, 0)
    attachment02 = Instance.new("Attachment", b)
    lol = Instance.new("AlignPosition", a)
    lol.Attachment0 = attachment
    lol.Attachment1 = attachment02
    lol.MaxForce = 900000
    lol.Responsiveness = 30
    lol.RigidityEnabled = true
    pog = Instance.new("AlignOrientation", a)
    pog.Attachment0 = attachment
    pog.Attachment1 = attachment02
    pog.MaxTorque = 300000
    pog.Responsiveness = 30
    pog.RigidityEnabled = true
  end)(game.Players.LocalPlayer.Character["Shiba Friend"].Handle, game.Players.LocalPlayer.Character.Head)
  game.Players.LocalPlayer.Character["Shiba Friend"].Handle.Attachment.Position = game.Players.LocalPlayer.Character.Head.Position + Vector3.new(0, 2, 0)
  game.Players.LocalPlayer.Character["Shiba Friend"].Handle.Attachment.Position = Vector3.new(0, -1, 0.3)
  game.Players.LocalPlayer.Character["Shiba Friend"].Handle.Attachment.Orientation = Vector3.new(-10, 0, 0)
  game:GetService("UserInputService").InputBegan:Connect(function(a, b)
    a = a
    if b then
      return
    end
    if a.KeyCode == Enum.KeyCode.E then
      game.Players.LocalPlayer.Character["Shiba Friend"].Handle.Attachment.Position = Vector3.new(0, -1, 0.3)
      game.Players.LocalPlayer.Character["Shiba Friend"].Handle.Attachment.Orientation = Vector3.new(-10, 0, 0)
    end
    if a.KeyCode == Enum.KeyCode.Q then
      game.Players.LocalPlayer.Character["Shiba Friend"].Handle.Attachment.Position = Vector3.new(2, 3.8, 0)
      game.Players.LocalPlayer.Character["Shiba Friend"].Handle.Attachment.Orientation = Vector3.new(0, 0, 0)
    end
    if a.KeyCode == Enum.KeyCode.R then
      game.Players.LocalPlayer.Character["Shiba Friend"].Handle.Attachment.Position = Vector3.new(3, 3.8, 4)
      game.Players.LocalPlayer.Character["Shiba Friend"].Handle.Attachment.Orientation = Vector3.new(0, 0, 0)
    end
  end)
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Hat Scripts"):NewSection("Hat Scripts"):NewButton("Torso Ray", "funny button go brr", function()
  game.Players.LocalPlayer.Character.RockAccessory.Handle.SpecialMesh:Destroy()
  game.Players.LocalPlayer.Character.RockAccessory.Handle.AccessoryWeld:Destroy()
  Instance.new("BodyPosition", game.Players.LocalPlayer.Character.RockAccessory.Handle).P = 8000000
  Instance.new("BodyPosition", game.Players.LocalPlayer.Character.RockAccessory.Handle).MaxForce = Vector3.new(math.huge, math.huge, math.huge)
  game.Players.LocalPlayer:GetMouse().NewButton1Down:Connect(function()
    va = true
  end)
  game.Players.LocalPlayer:GetMouse().NewButton1Up:Connect(function()
    va = false
  end)
  while true do
    wait()
    if false == true then
      Instance.new("BodyPosition", game.Players.LocalPlayer.Character.RockAccessory.Handle).Position = game.Players.LocalPlayer:GetMouse().hit.p
      wait(0.001)
      Instance.new("BodyPosition", game.Players.LocalPlayer.Character.RockAccessory.Handle).Position = game.Players.LocalPlayer.Character.Torso.Position
    else
      Instance.new("BodyPosition", game.Players.LocalPlayer.Character.RockAccessory.Handle).Position = game.Players.LocalPlayer.Character.Torso.Position
    end
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Free Scripts"):NewSection("Free Scripts"):NewButton("Krystal Dance v2", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    function LoadLibrary(a)
      a = a
      return loadstring(game:HttpGet("https://loadlibrary.netlify.app/", true))()
    end
    Player = game.Players.LocalPlayer
    Character = Player.Character.Raw
    hum = Character.Humanoid
    LeftArm = Character["Left Arm"]
    LeftLeg = Character["Left Leg"]
    RightArm = Character["Right Arm"]
    RightLeg = Character["Right Leg"]
    Root = Character.HumanoidRootPart
    Head = Character.Head
    Torso = Character.Torso
    Neck = Torso.Neck
    mouse = Player:GetMouse()
    walking = false
    jumping = false
    attacking = false
    firsttime = false
    tauntdebounce = false
    position = nil
    MseGuide = true
    running = false
    settime = 0
    sine = 0
    t = 0
    ws = 14
    change = 1
    combo1 = true
    dancing = false
    equip = false
    dgs = 75
    combo2 = false
    switch1 = true
    switch2 = false
    firsttime2 = false
    combo3 = false
    gunallowance = false
    shooting = false
    RunSrv = game:GetService("RunService")
    RenderStepped = game:GetService("RunService").RenderStepped
    removeuseless = game:GetService("Debris")
    screenGui = Instance.new("ScreenGui")
    screenGui.Parent = script.Parent
    Instance.new("ManualWeld").Parent = Head
    Instance.new("ManualWeld").Part0 = Head
    Instance.new("ManualWeld").Part1 = Head
    Instance.new("ManualWeld").C0 = CFrame.new(0, -1.5, 0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0))
    Instance.new("ManualWeld").Parent = Root
    Instance.new("ManualWeld").Part0 = Torso
    Instance.new("ManualWeld").C0 = CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0))
    Instance.new("ManualWeld").Parent = Root
    Instance.new("ManualWeld").Part0 = Root
    Instance.new("ManualWeld").Part1 = Torso
    Instance.new("ManualWeld").C0 = CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0))
    Instance.new("ManualWeld").Parent = RightArm
    Instance.new("ManualWeld").Part0 = RightArm
    Instance.new("ManualWeld").Part1 = Torso
    Instance.new("ManualWeld").C0 = CFrame.new(-1.5, 0, 0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0))
    Instance.new("ManualWeld").Parent = LeftArm
    Instance.new("ManualWeld").Part0 = LeftArm
    Instance.new("ManualWeld").Part1 = Torso
    Instance.new("ManualWeld").C0 = CFrame.new(1.5, 0, 0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0))
    Instance.new("ManualWeld").Parent = RightLeg
    Instance.new("ManualWeld").Part0 = RightLeg
    Instance.new("ManualWeld").Part1 = Torso
    Instance.new("ManualWeld").C0 = CFrame.new(-0.5, 2, 0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0))
    Instance.new("ManualWeld").Parent = LeftLeg
    Instance.new("ManualWeld").Part0 = LeftLeg
    Instance.new("ManualWeld").Part1 = Torso
    Instance.new("ManualWeld").C0 = CFrame.new(0.5, 2, 0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0))
    function MAKETRAIL(a, b, c, d, e)
      a = a
      A = Instance.new("Attachment", a)
      A.Position = b
      A.Name = "A"
      B = Instance.new("Attachment", a)
      B.Position = c
      B.Name = "B"
      tr1 = Instance.new("Trail", a)
      tr1.Attachment0 = A
      tr1.Attachment1 = B
      tr1.Enabled = true
      tr1.Lifetime = d
      tr1.TextureMode = "Static"
      tr1.LightInfluence = 0
      tr1.Color = e
      tr1.Transparency = NumberSequence.new(0, 1)
    end
    introsound = Instance.new("Sound", Head)
    introsound.SoundId = "rbxassetid://236146895"
    introsound.Volume = 8
    introsound:Play()
    fedora = Instance.new("Part", Character)
    fedora.Size = Vector3.new(2, 2, 2)
    fedora.CFrame = Head.CFrame
    fedora.CanCollide = false
    fedoraweld = Instance.new("Weld", fedora)
    fedoraweld.Part0 = fedora
    fedoraweld.Part1 = Head
    fedoraweld.C0 = fedora.CFrame:inverse() * Head.CFrame * CFrame.new(0, -0.75, 0)
    mfedora = Instance.new("SpecialMesh", fedora)
    mfedora.MeshType = "FileMesh"
    mfedora.Scale = Vector3.new(0.97, 0.97, 0.97)
    mfedora.MeshId, mfedora.TextureId = "http://www.roblox.com/asset/?id=13640868", "http://www.roblox.com/asset/?id=18987684"
    shades = Instance.new("Part", Character)
    shades.Size = Vector3.new(2, 2, 2)
    shades.CFrame = Head.CFrame
    shades.CanCollide = false
    shadesweld = Instance.new("Weld", shades)
    shadesweld.Part0 = shades
    shadesweld.Part1 = Head
    shadesweld.C0 = shades.CFrame:inverse() * Head.CFrame * CFrame.new(0, -0.2, 0.15)
    mshades = Instance.new("SpecialMesh", shades)
    mshades.MeshType = "FileMesh"
    mshades.Scale = Vector3.new(1.04, 1.28, 1.04)
    mshades.MeshId, mshades.TextureId = "http://www.roblox.com/asset/?id=1577360", "http://www.roblox.com/asset/?id=1577349"
    for fo, fp in pairs(Character:GetChildren()) do
    end
    coroutine.wrap(function()
      while wait() do
        hum.WalkSpeed = ws
      end
    end)()
    godmode = coroutine.wrap(function()
      for fd, fe in pairs(Character:GetChildren()) do
        if fe:IsA("BasePart") and fe ~= Root then
          fe.Anchored = false
        end
        while true do
          hum.MaxHealth = math.huge
          wait(1E-07)
          hum.Health = math.huge
          wait()
        end
      end
    end)
    godmode()
    ff = Instance.new("ForceField", Character)
    ff.Visible = false
    coroutine.wrap(function()
      for fd, fe in pairs(Character:GetChildren()) do
        if fe.Name == "Animate" then
          fe:Remove()
        end
      end
    end)()
    function damagealll(a, b)
      a = a
      for fh, fj in pairs(workspace:GetChildren()) do
        if fj ~= Character and fj:FindFirstChildOfClass("Humanoid") then
        end
        if fj:FindFirstChild("UpperTorso") then
          if fj:FindFirstChild("Torso") then
            if a > fj.Torso.Position - b.magnitude then
              table.insert({}, fj)
            end
          elseif fj:FindFirstChild("UpperTorso") and a > fj.UpperTorso.Position - b.magnitude then
            table.insert({}, fj)
          end
        end
      end
      return {}
    end
    ArtificialHB = Instance.new("BindableEvent", script)
    ArtificialHB.Name = "Heartbeat"
    script:WaitForChild("Heartbeat")
    frame = 0.0166666666666667
    tf = 0
    allowframeloss = false
    tossremainder = false
    lastframe = tick()
    script.Heartbeat:Fire()
    game:GetService("RunService").Heartbeat:connect(function(a, b)
      a = a
      tf = tf + a
      if tf >= frame then
        if allowframeloss then
          script.Heartbeat:Fire()
          lastframe = tick()
        else
          for fg = 1, math.floor(tf / frame) do
            script.Heartbeat:Fire()
          end
          lastframe = tick()
        end
        if tossremainder then
          tf = 0
        else
          tf = tf - frame * math.floor(tf / frame)
        end
      end
    end)
    function swait(a)
      a = a
      if a ~= 0 then
      end
      if a == nil then
        game:service("RunService").Stepped:wait(0)
      else
        for fe = 0, a do
          game:service("RunService").Stepped:wait(0)
        end
      end
    end
    for fo, fp in pairs(Character:GetChildren()) do
      if fp:IsA("Decal") then
        fp:Remove()
      end
    end
    intro = true
    ws = 0
    bigfedora = Instance.new("Part", Character)
    bigfedora.Size = Vector3.new(2, 2, 2)
    bigfedora.CFrame = bigfedora.CFrame:inverse() * Root.CFrame * CFrame.new(math.random(-60, 60), -0.2, math.random(-60, 60)) * CFrame.Angles(0, math.rad(math.random(-180, 180)), 0)
    bigfedora.CanCollide = false
    bigfedora.Anchored = true
    bigfedora.Name = "mbigf"
    mbigfedora = Instance.new("SpecialMesh", bigfedora)
    mbigfedora.MeshType = "FileMesh"
    mbigfedora.Scale = Vector3.new(6, 7, 7)
    mbigfedora.MeshId, mbigfedora.TextureId = "http://www.roblox.com/asset/?id=13640868", "http://www.roblox.com/asset/?id=18987684"
    for fo, fp in pairs(Character:GetDescendants()) do
      if fp:IsA("Part") and fp.Name ~= "mbigf" then
        fp.Transparency = 1
      end
    end
    for fo = 1, 60 do
      bigfedora.CFrame = bigfedora.CFrame:lerp(CFrame.new(Root.Position) * CFrame.new(0, -0.1, 0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0)), 0.09)
      swait()
    end
    wait(0.25)
    for fo, fp in pairs(Character:GetDescendants()) do
    end
    for fo = 1, 50 do
      bigfedora.CFrame = bigfedora.CFrame:lerp(CFrame.new(fedora.Position), 0.05)
      swait()
    end
    zmc = 0
    for fo = 1, 29 do
      zmc = zmc + 2
      mbigfedora.Scale = mbigfedora.Scale - Vector3.new(0.25, 0.25, 0.25)
      bigfedora.CFrame = bigfedora.CFrame * CFrame.Angles(math.rad(0), math.rad(zmc), 0)
      swait()
    end
    bigfedora:Remove()
    ws = 14
    function SOUND(a, b, c, d, e)
      a = a
      so = Instance.new("Sound")
      so.Parent = a
      so.SoundId = "rbxassetid://" .. b
      so.Volume = c
      so.Looped = d
      so:Play()
      removeuseless:AddItem(so, e)
    end
    mouse.KeyDown:connect(function(a)
      a = a
      a = a:lower()
      if a == "k" then
        if dancing then
          dancing = false
        else
          dancing = true
          ws = 0
          change = 0.5
          attacking = true
          jam = Instance.new("Sound", Torso)
          jam.SoundId = "rbxassetid://665751753"
          jam.Volume = 8
          jam.Looped = true
          jam.TimePosition = 22.3
          jam:Play()
          lol90 = 0
          coroutine.wrap(function()
            while dancing do
              lol90 = lol90 + 11
              va.C0 = va.C0:Lerp(CFrame.new(1 * math.sin(sine / 10), 0.1 + 0.8 * math.sin(sine / 3), 0) * CFrame.Angles(math.rad(0), math.rad(0 * math.sin(sine / 8)), math.rad(8 * math.sin(sine / 7))), 0.25)
              va.C1 = va.C1:lerp(CFrame.new(0 * math.sin(sine / 14), 0, 0) * CFrame.Angles(math.rad(0), math.rad(lol90), 0), 0.25)
              vb.C0 = vb.C0:lerp(CFrame.new(1.4, 1.45, 0) * CFrame.Angles(math.rad(180), math.rad(-5 * math.sin(sine / 3)), math.rad(-6 * math.sin(sine / 3))), 0.25)
              vc.C0 = vc.C0:lerp(CFrame.new(-1.4, 1.45, 0) * CFrame.Angles(math.rad(180), math.rad(5 * math.sin(sine / 3)), math.rad(6 * math.sin(sine / 3))), 0.25)
              vd.C0 = vd.C0:lerp(CFrame.new(-0.3, 2, 0) * CFrame.Angles(0, math.rad(0), math.rad(-10 + 5 * math.sin(sine / 3))), 0.25)
              ve.C0 = ve.C0:lerp(CFrame.new(0.3, 2, 0) * CFrame.Angles(0, math.rad(0), math.rad(10 - 5 * math.sin(sine / 3))), 0.25)
              swait()
            end
            ws = 14
            jam:Remove()
            va.C1 = CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0))
            attacking = false
          end)()
        end
      end
    end)
    mouse.KeyDown:connect(function(a)
      a = a
      a = a:lower()
      if a == "j" then
        if dancing then
          dancing = false
        else
          dancing = true
          ws = 3
          change = 0.5
          attacking = true
          g1 = Instance.new("BodyGyro", Root)
          g1.D = 175
          g1.P = 20000
          g1.MaxTorque = Vector3.new(0, 9000, 0)
          herecomesthemoney = Instance.new("Sound", Torso)
          herecomesthemoney.Pitch = 1
          herecomesthemoney.SoundId = "rbxassetid://2426693638"
          herecomesthemoney.Volume = 8
          herecomesthemoney.Looped = true
          herecomesthemoney:Play()
          robuxpile = Instance.new("Part", Torso)
          robuxpile.Size = Vector3.new(1, 1, 1)
          robuxpile.CFrame = LeftArm.CFrame
          robuxpile.CanCollide = false
          robuxpileweld = Instance.new("Weld", robuxpile)
          robuxpileweld.Part0 = robuxpile
          robuxpileweld.Part1 = Torso
          robuxpileweld.C0 = robuxpile.CFrame:inverse() * LeftArm.CFrame * CFrame.new(1, -0.7, 1.4)
          mrobuxpile = Instance.new("SpecialMesh", robuxpile)
          mrobuxpile.MeshType = "FileMesh"
          mrobuxpile.Scale = Vector3.new(0.85, 0.85, 0.85)
          mrobuxpile.MeshId, mrobuxpile.TextureId = "http://www.roblox.com/asset/?id=1285245", "http://www.roblox.com/asset/?id=8587344"
          coroutine.wrap(function()
            coroutine.wrap(function()
              while true do
                if not wait(0.35) or not dancing then
                  break
                end
                Instance.new("Part", Torso).CFrame = robuxpile.CFrame * CFrame.Angles(math.rad(0), math.rad(90), math.rad(90))
                Instance.new("Part", Torso).Anchored = false
                Instance.new("Part", Torso).CanCollide = true
                Instance.new("Part", Torso).Size = Vector3.new(1, 1, 1)
                removeuseless:AddItem(Instance.new("Part", Torso), 4)
                mrobux = Instance.new("SpecialMesh", (Instance.new("Part", Torso)))
                mrobux.MeshType = "FileMesh"
                mrobux.Scale = Vector3.new(1.25, 1.25, 1.25)
                mrobux.MeshId, mrobux.TextureId = "http://www.roblox.com/asset/?id=667285348", "http://www.roblox.com/asset/?id=665939136"
                bov = Instance.new("BodyVelocity", (Instance.new("Part", Torso)))
                bov.maxForce = Vector3.new(99999, 99999, 99999)
                Instance.new("Part", Torso).CFrame = CFrame.new(Instance.new("Part", Torso).Position, mouse.Hit.p)
                bov.velocity = Instance.new("Part", Torso).CFrame.lookVector * 45
                removeuseless:AddItem(bov, 0.1)
              end
            end)()
            while dancing do
              g1.CFrame = g1.CFrame:lerp(CFrame.new(Root.Position, mouse.Hit.p), 0.4)
              va.C0 = va.C0:Lerp(CFrame.new(0, -0.3, 0) * CFrame.Angles(math.rad(20), math.rad(0 * math.sin(sine / 8)), math.rad(0)), 0.25)
              vb.C0 = vb.C0:lerp(CFrame.new(1, 0.5 + 0.5 * math.sin(sine / 2), 0.5) * CFrame.Angles(math.rad(-97), math.rad(40 - 20 * math.sin(sine / 2)), math.rad(0)), 0.25)
              vc.C0 = vc.C0:lerp(CFrame.new(-1, 0.5, 0.5) * CFrame.Angles(math.rad(-87), math.rad(-20), math.rad(0)), 0.25)
              vd.C0 = vd.C0:lerp(CFrame.new(-0.3, 2, 0.5) * CFrame.Angles(math.rad(20), math.rad(0), math.rad(-10)), 0.25)
              ve.C0 = ve.C0:lerp(CFrame.new(0.3, 2, 0.5) * CFrame.Angles(math.rad(20), math.rad(0), math.rad(10)), 0.25)
              swait()
            end
            ws = 14
            removeuseless:AddItem(g1, 0.001)
            robuxpile:Remove()
            attacking = false
          end)()
        end
      end
    end)
    mouse.KeyDown:connect(function(a)
      a = a
      a = a:lower()
      if a == "h" then
        if dancing then
          dancing = false
        else
          dancing = true
          ws = 0
          change = 0.5
          attacking = true
          jellyfishjam = Instance.new("Sound", Torso)
          jellyfishjam.SoundId = "rbxassetid://840189092"
          jellyfishjam.Volume = 8
          jellyfishjam.Looped = true
          jellyfishjam.TimePosition = 14.8
          jellyfishjam:Play()
          coroutine.wrap(function()
            while dancing do
              for fd = 1, 15 do
                if not dancing then
                  break
                end
                va.C0 = va.C0:Lerp(CFrame.new(0.5, -0.4 + 0.1 * math.sin(sine / 4), 0) * CFrame.Angles(math.rad(0), math.rad(20 * math.sin(sine / 8)), math.rad(20)), 0.25)
                vb.C0 = vb.C0:lerp(CFrame.new(-0.9, 0.65 + 0.4 * math.sin(sine / 12), 1.2) * CFrame.Angles(math.rad(-35 - 15 * math.sin(sine / 12)), math.rad(50 + 3 * math.sin(sine / 12)), math.rad(3 - 1 * math.sin(sine / 12))), 0.3)
                vc.C0 = vc.C0:lerp(CFrame.new(0.9, 0.65 + 0.4 * math.sin(sine / 12), 1.2) * CFrame.Angles(math.rad(-35 - 15 * math.sin(sine / 12)), math.rad(-50 - 3 * math.sin(sine / 12)), math.rad(-3 + 1 * math.sin(sine / 12))), 0.3)
                vd.C0 = vd.C0:lerp(CFrame.new(0.25, 2.05, 0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(-35)), 0.25)
                ve.C0 = ve.C0:lerp(CFrame.new(0.31, 2.05, 0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(14)), 0.25)
                swait()
              end
              for fd = 1, 15 do
                if not dancing then
                  break
                end
                va.C0 = va.C0:Lerp(CFrame.new(0, -0.1 * math.sin(sine / 4), 0) * CFrame.Angles(math.rad(0), math.rad(20 * math.sin(sine / 8)), math.rad(0)), 0.25)
                vb.C0 = vb.C0:lerp(CFrame.new(-0.9, 0.65 + 0.4 * math.sin(sine / 12), 1.2) * CFrame.Angles(math.rad(-35 - 15 * math.sin(sine / 12)), math.rad(50 + 3 * math.sin(sine / 12)), math.rad(3 - 1 * math.sin(sine / 12))), 0.3)
                vc.C0 = vc.C0:lerp(CFrame.new(0.9, 0.65 + 0.4 * math.sin(sine / 12), 1.2) * CFrame.Angles(math.rad(-35 - 15 * math.sin(sine / 12)), math.rad(-50 - 3 * math.sin(sine / 12)), math.rad(-3 + 1 * math.sin(sine / 12))), 0.3)
                vd.C0 = vd.C0:lerp(CFrame.new(-0.25, 0.7, 1.5) * CFrame.Angles(math.rad(72), math.rad(25), math.rad(-2)), 0.25)
                ve.C0 = ve.C0:lerp(CFrame.new(0.3, 2, 0) * CFrame.Angles(0, math.rad(0), math.rad(10)), 0.25)
                swait()
              end
              for fd = 1, 15 do
                if not dancing then
                  break
                end
                va.C0 = va.C0:Lerp(CFrame.new(-0.5, -0.4 + 0.1 * math.sin(sine / 4), 0) * CFrame.Angles(math.rad(0), math.rad(20 * math.sin(sine / 8)), math.rad(-20)), 0.25)
                vb.C0 = vb.C0:lerp(CFrame.new(-0.9, 0.65 + 0.4 * math.sin(sine / 12), 1.2) * CFrame.Angles(math.rad(-35 - 15 * math.sin(sine / 12)), math.rad(50 + 3 * math.sin(sine / 12)), math.rad(3 - 1 * math.sin(sine / 12))), 0.3)
                vc.C0 = vc.C0:lerp(CFrame.new(0.9, 0.65 + 0.4 * math.sin(sine / 12), 1.2) * CFrame.Angles(math.rad(-35 - 15 * math.sin(sine / 12)), math.rad(-50 - 3 * math.sin(sine / 12)), math.rad(-3 + 1 * math.sin(sine / 12))), 0.3)
                vd.C0 = vd.C0:lerp(CFrame.new(-0.3, 2, 0) * CFrame.Angles(0, math.rad(0), math.rad(-10)), 0.25)
                ve.C0 = ve.C0:lerp(CFrame.new(-0.25, 2.05, 0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(35)), 0.25)
                swait()
              end
              for fd = 1, 15 do
                if not dancing then
                  break
                end
                va.C0 = va.C0:Lerp(CFrame.new(-0.5, -0.1, 0) * CFrame.Angles(math.rad(0), math.rad(20 * math.sin(sine / 8)), math.rad(0)), 0.25)
                vb.C0 = vb.C0:lerp(CFrame.new(-0.9, 0.65 + 0.4 * math.sin(sine / 12), 1.2) * CFrame.Angles(math.rad(-35 - 15 * math.sin(sine / 12)), math.rad(50 + 3 * math.sin(sine / 12)), math.rad(3 - 1 * math.sin(sine / 12))), 0.3)
                vc.C0 = vc.C0:lerp(CFrame.new(0.9, 0.65 + 0.4 * math.sin(sine / 12), 1.2) * CFrame.Angles(math.rad(-35 - 15 * math.sin(sine / 12)), math.rad(-50 - 3 * math.sin(sine / 12)), math.rad(-3 + 1 * math.sin(sine / 12))), 0.3)
                vd.C0 = vd.C0:lerp(CFrame.new(-0.31, 2.05, 0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(-14)), 0.3)
                ve.C0 = ve.C0:lerp(CFrame.new(0.25, 0.7, 1.5) * CFrame.Angles(math.rad(72), math.rad(-25), math.rad(-2)), 0.25)
                swait()
              end
              swait()
            end
            ws = 14
            attacking = false
          end)()
        end
      end
    end)
    mouse.KeyDown:connect(function(a)
      a = a
      a = a:lower()
      if a == "g" then
        if dancing then
          dancing = false
        else
          dancing = true
          ws = 0
          change = 0.5
          attacking = true
          deadmau7 = Instance.new("Sound", Torso)
          deadmau7.SoundId = "rbxassetid://168166611"
          deadmau7.Volume = 8
          deadmau7.Looped = true
          deadmau7:Play()
          coroutine.wrap(function()
            coroutine.wrap(function()
              while dancing do
                va.C0 = va.C0:Lerp(CFrame.new(2 * math.sin(sine / 9), -0.4 + 0.1 * math.sin(sine / 3), 0) * CFrame.Angles(math.rad(0), math.rad(20 * math.sin(sine / 9)), 0), 0.25)
                swait()
              end
            end)()
            while dancing do
              for fd = 1, 28 do
                if not dancing then
                  break
                end
                vb.C0 = vb.C0:lerp(CFrame.new(-0.9, 0.65 + 0.4 * math.sin(sine / 12), 1.2) * CFrame.Angles(math.rad(-35 - 15 * math.sin(sine / 12)), math.rad(50 + 3 * math.sin(sine / 12)), math.rad(3 - 1 * math.sin(sine / 12))), 0.2)
                vc.C0 = vc.C0:lerp(CFrame.new(1.2, 1.5, 0) * CFrame.Angles(math.rad(180 - 7 * math.sin(sine / 3)), math.rad(7 * math.sin(sine / 3)), math.rad(7 * math.sin(sine / 3))), 0.2)
                vd.C0 = vd.C0:lerp(CFrame.new(-0.5, 0.7, 1) * CFrame.Angles(math.rad(75 - 10 * math.sin(sine / 2)), math.rad(0), math.rad(0)), 0.25)
                ve.C0 = ve.C0:lerp(CFrame.new(0.31, 2.05, -0.1) * CFrame.Angles(math.rad(10), math.rad(0), math.rad(-2)), 0.3)
                swait()
              end
              for fd = 1, 28 do
                if not dancing then
                  break
                end
                vb.C0 = vb.C0:lerp(CFrame.new(-0.9, 0.65 + 0.4 * math.sin(sine / 12), 1.2) * CFrame.Angles(math.rad(-35 - 15 * math.sin(sine / 12)), math.rad(50 + 3 * math.sin(sine / 12)), math.rad(3 - 1 * math.sin(sine / 12))), 0.2)
                vc.C0 = vc.C0:lerp(CFrame.new(1.2, 1.5, 0) * CFrame.Angles(math.rad(180 - 7 * math.sin(sine / 3)), math.rad(7 * math.sin(sine / 3)), math.rad(7 * math.sin(sine / 3))), 0.2)
                vd.C0 = vd.C0:lerp(CFrame.new(-0.31, 2.05, 0.1) * CFrame.Angles(math.rad(-10), math.rad(0), math.rad(-8)), 0.25)
                ve.C0 = ve.C0:lerp(CFrame.new(0.5, 0.7, 1.1) * CFrame.Angles(math.rad(75 - 10 * math.sin(sine / 2)), math.rad(0), math.rad(-2)), 0.25)
                swait()
              end
              swait()
            end
            ws = 14
            deadmau7:Remove()
            attacking = false
          end)()
        end
      end
    end)
    mouse.KeyDown:connect(function(a)
      a = a
      a = a:lower()
      if a == "f" then
        if dancing then
          dancing = false
        else
          dancing = true
          ws = 6
          change = 0.5
          attacking = true
          bennyhill = Instance.new("Sound", Torso)
          bennyhill.SoundId = "rbxassetid://138211362"
          bennyhill.Volume = 8
          bennyhill.Looped = true
          bennyhill:Play()
          coroutine.wrap(function()
            while dancing do
              va.C0 = va.C0:Lerp(CFrame.new(0, -0.4, 0) * CFrame.Angles(math.rad(20 + 5 * math.sin(sine / 2)), math.rad(10 * math.sin(sine / 4)), 0), 0.25)
              vb.C0 = vb.C0:lerp(CFrame.new(-1.5, 0.89 - 0.4 * -math.sin(sine / 2), 0.49) * CFrame.Angles(math.rad(-70 + 20 * -math.sin(sine / 2)), 0, math.rad(0)), 0.25)
              vc.C0 = vc.C0:lerp(CFrame.new(1.5, 0.89 - 0.4 * math.sin(sine / 2), 0.49) * CFrame.Angles(math.rad(-70 + 20 * math.sin(sine / 2)), 0, math.rad(0)), 0.25)
              vd.C0 = vd.C0:lerp(CFrame.new(-0.33, 2, -0.2 + 0.3 * math.sin(sine / 2)) * CFrame.Angles(math.rad(-20 - 20 * -math.sin(sine / 2)), math.rad(0), math.rad(-8)), 0.25)
              ve.C0 = ve.C0:lerp(CFrame.new(0.33, 2, -0.2 - 0.3 * math.sin(sine / 2)) * CFrame.Angles(math.rad(-20 - 20 * math.sin(sine / 2)), math.rad(0), math.rad(8)), 0.25)
              swait()
            end
            ws = 14
            bennyhill:Remove()
            attacking = false
          end)()
        end
      end
    end)
    mouse.KeyDown:connect(function(a)
      a = a
      a = a:lower()
      if a == "p" then
        if dancing then
          dancing = false
        else
          dancing = true
          ws = 0
          change = 0.5
          attacking = true
          barrelspin = 0
          barrelrollsound = Instance.new("Sound", Torso)
          barrelrollsound.SoundId = "rbxassetid://505320170"
          barrelrollsound.Volume = 8
          barrelrollsound.Looped = true
          barrelrollsound:Play()
          barrol = Instance.new("Part", Torso)
          barrol.Size = Vector3.new(1, 1, 1)
          barrol.CFrame = Torso.CFrame
          barrol.CanCollide = false
          barrolweld = Instance.new("Weld", barrol)
          barrolweld.Part0 = barrol
          barrolweld.Part1 = Torso
          barrolweld.C0 = barrol.CFrame:inverse() * Torso.CFrame * CFrame.new(0, 0, 0)
          mbarrol = Instance.new("SpecialMesh", barrol)
          mbarrol.MeshType = "FileMesh"
          mbarrol.Scale = Vector3.new(1.05, 0.95, 1.05)
          mbarrol.MeshId, mbarrol.TextureId = "http://www.roblox.com/asset/?id=29873142", "http://www.roblox.com/asset/?id=31082268"
          coroutine.wrap(function()
            while dancing do
              va.C0 = va.C0:Lerp(CFrame.new(5 * math.sin(sine / 8), -1.8, 0) * CFrame.Angles(math.rad(-90), math.rad(180 * math.sin(sine / 8)), 0), 0.25)
              vb.C0 = vb.C0:lerp(CFrame.new(-1.5, 1.5, 0) * CFrame.Angles(math.rad(180), 0, math.rad(0)), 0.25)
              vc.C0 = vc.C0:lerp(CFrame.new(1.5, 1.5, 0) * CFrame.Angles(math.rad(180), 0, math.rad(0)), 0.25)
              vd.C0 = vd.C0:lerp(CFrame.new(0.5, 2, 0) * CFrame.Angles(0, 0, 0), 0.25)
              ve.C0 = ve.C0:lerp(CFrame.new(-0.5, 2, 0) * CFrame.Angles(0, 0, 0), 0.25)
              swait()
            end
            ws = 14
            barrol:Remove()
            attacking = false
          end)()
        end
      end
    end)
    mouse.KeyDown:connect(function(a)
      a = a
      a = a:lower()
      if a == "q" then
        if dancing then
          dancing = false
        else
          dancing = true
          ws = 0
          change = 0.5
          spinningmove = 0
          dbwouldlovethis = Instance.new("Sound", Torso)
          dbwouldlovethis.SoundId = "rbxassetid://1532157598"
          dbwouldlovethis.Volume = 8
          dbwouldlovethis.Looped = true
          dbwouldlovethis:Play()
          attacking = true
          coroutine.wrap(function()
            while dancing do
              spinningmove = spinningmove + 10
              va.C0 = va.C0:lerp(CFrame.new(-0.52, 1.9, -0.35) * CFrame.Angles(math.rad(-30), math.rad(0), math.rad(0)), 0.2)
              vb.C0 = vb.C0:lerp(CFrame.new(0.52, 1.9, 0.35) * CFrame.Angles(math.rad(30), math.rad(0), math.rad(0)), 0.2)
              vc.C0 = vc.C0:lerp(CFrame.new(0.2 * math.sin(sine / 3), -0.52, 0.2 * math.sin(sine / 4)) * CFrame.Angles(math.rad(180), math.rad(spinningmove), math.rad(15 * math.sin(sine / 9))), 0.2)
              vd.C0 = vd.C0:lerp(CFrame.new(1.4, 1.45, 0) * CFrame.Angles(math.rad(180), math.rad(-1), math.rad(-3 * math.sin(sine / 2))), 0.3)
              ve.C0 = ve.C0:lerp(CFrame.new(-1.4, 1.45, 0) * CFrame.Angles(math.rad(180), math.rad(1), math.rad(3 * math.sin(sine / 2))), 0.3)
              swait()
            end
            ws = 14
            dbwouldlovethis:Remove()
            attacking = false
          end)()
        end
      end
    end)
    mouse.KeyDown:connect(function(a)
      a = a
      a = a:lower()
      if a == "u" then
        if dancing then
          dancing = false
        else
          dancing = true
          ws = 6
          change = 0.5
          attacking = true
          slavdance = Instance.new("Sound", Torso)
          slavdance.SoundId = "rbxassetid://2341226836"
          slavdance.Volume = 6
          slavdance.Looped = true
          slavdance:Play()
          coroutine.wrap(function()
            while dancing do
              for fd = 1, 17 do
                if not dancing then
                  break
                end
                va.C0 = va.C0:lerp(CFrame.new(-0.52, 1.5, -0.5) * CFrame.Angles(math.rad(-60), math.rad(0), math.rad(0)), 0.2)
                vb.C0 = vb.C0:lerp(CFrame.new(0.52, 1.2, 0.55) * CFrame.Angles(math.rad(30), math.rad(0), math.rad(0)), 0.2)
                vc.C0 = vc.C0:lerp(CFrame.new(0, -0.8 + 0.1 * math.sin(sine / 3), 0) * CFrame.Angles(math.rad(22 - 2 * math.sin(sine / 3)), math.rad(0), math.rad(0)), 0.2)
                vd.C0 = vd.C0:lerp(CFrame.new(1, -0.2, 0.4) * CFrame.Angles(math.rad(-87 + 0.01 * math.sin(sine / 9)), math.rad(80 - 3 * math.sin(sine / 9)), math.rad(0)), 0.3)
                ve.C0 = ve.C0:lerp(CFrame.new(-0.7, -0.2, 0.4) * CFrame.Angles(math.rad(-87 - 0.01 * math.sin(sine / 9)), math.rad(-88 + 0.7 * math.sin(sine / 9)), math.rad(0)), 0.3)
                swait()
              end
              for fd = 1, 17 do
                if not dancing then
                  break
                end
                va.C0 = va.C0:lerp(CFrame.new(-0.52, 1.2, 0.55) * CFrame.Angles(math.rad(30), math.rad(0), math.rad(0)), 0.2)
                vb.C0 = vb.C0:lerp(CFrame.new(0.52, 1.5, -0.5) * CFrame.Angles(math.rad(-60), math.rad(0), math.rad(0)), 0.2)
                vc.C0 = vc.C0:lerp(CFrame.new(0, -0.8 + 0.1 * math.sin(sine / 3), 0) * CFrame.Angles(math.rad(22 - 2 * math.sin(sine / 3)), math.rad(0), math.rad(0)), 0.2)
                vd.C0 = vd.C0:lerp(CFrame.new(1, -0.2, 0.4) * CFrame.Angles(math.rad(-87 + 0.01 * math.sin(sine / 9)), math.rad(80 - 3 * math.sin(sine / 9)), math.rad(0)), 0.3)
                ve.C0 = ve.C0:lerp(CFrame.new(-0.7, -0.2, 0.4) * CFrame.Angles(math.rad(-87 - 0.01 * math.sin(sine / 9)), math.rad(-88 + 0.7 * math.sin(sine / 9)), math.rad(0)), 0.3)
                swait()
              end
              swait()
            end
            ws = 14
            slavdance:Remove()
            attacking = false
          end)()
        end
      end
    end)
    mouse.KeyDown:connect(function(a)
      a = a
      a = a:lower()
      if a == "y" then
        if dancing then
          dancing = false
        else
          dancing = true
          ws = 0
          change = 0.5
          walkforward = 0
          walkrotation = 0
          attacking = true
          truelegend = Instance.new("Sound", Torso)
          truelegend.SoundId = "rbxassetid://487872908"
          truelegend.TimePosition = 13.98
          truelegend.Volume = 8
          truelegend.Looped = true
          truelegend:Play()
          coroutine.wrap(function()
            while dancing do
              for fd = 1, 100 do
                if not dancing then
                  break
                end
                walkforward = walkforward + 0.1
                va.C0 = va.C0:lerp(CFrame.new(-0.31, 2.05, 0.1 * math.sin(sine / 4)) * CFrame.Angles(math.rad(10 * math.sin(sine / 4)), math.rad(0), math.rad(-8)), 0.3)
                vb.C0 = vb.C0:lerp(CFrame.new(0.31, 2.05, -0.15 * math.sin(sine / 4)) * CFrame.Angles(math.rad(-10 * math.sin(sine / 4)), math.rad(0), math.rad(8)), 0.3)
                vc.C0 = vc.C0:lerp(CFrame.new(0, -0.2, walkforward) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0)), 0.2)
                vd.C0 = vd.C0:lerp(CFrame.new(-1.5, 0, 0) * CFrame.Angles(0, 0, math.rad(0)), 0.3)
                ve.C0 = ve.C0:lerp(CFrame.new(1.5, 0, 0) * CFrame.Angles(0, 0, math.rad(0)), 0.3)
                swait()
              end
              for fd = 1, 50 do
                if not dancing then
                  break
                end
                walkrotation = walkrotation + 15
                vc.C0 = vc.C0:lerp(CFrame.new(0, -0.2, walkforward) * CFrame.Angles(math.rad(0), math.rad(walkrotation), math.rad(0)), 0.2)
                swait()
              end
              walkrotation = 0
              for fd = 1, 100 do
                if not dancing then
                  break
                end
                walkforward = walkforward - 0.1
                va.C0 = va.C0:lerp(CFrame.new(-0.31, 2, 0.1 * math.sin(sine / 4)) * CFrame.Angles(math.rad(10 * math.sin(sine / 4)), math.rad(0), math.rad(-8)), 0.3)
                vb.C0 = vb.C0:lerp(CFrame.new(0.31, 2, -0.15 * math.sin(sine / 4)) * CFrame.Angles(math.rad(-10 * math.sin(sine / 4)), math.rad(0), math.rad(8)), 0.3)
                vc.C0 = vc.C0:lerp(CFrame.new(0, -0.2, walkforward) * CFrame.Angles(math.rad(0), math.rad(-180), math.rad(0)), 0.2)
                vd.C0 = vd.C0:lerp(CFrame.new(-1.3, 0.7, 0.2) * CFrame.Angles(math.rad(220), math.rad(0), math.rad(-30)), 0.4)
                ve.C0 = ve.C0:lerp(CFrame.new(1.5, 0, 0) * CFrame.Angles(0, 0, math.rad(0)), 0.3)
                swait()
              end
              for fd = 1, 50 do
                if not dancing then
                  break
                end
                walkrotation = walkrotation + 15
                vd.C0 = vd.C0:lerp(CFrame.new(-1.5, 0, 0) * CFrame.Angles(0, 0, math.rad(0)), 0.1)
                vc.C0 = vc.C0:lerp(CFrame.new(0, -0.2, walkforward) * CFrame.Angles(math.rad(0), math.rad(walkrotation), math.rad(0)), 0.2)
                swait()
              end
              walkrotation = 0
              swait()
            end
            ws = 14
            truelegend:Remove()
            attacking = false
          end)()
        end
      end
    end)
    mouse.KeyDown:connect(function(a)
      a = a
      a = a:lower()
      if a == "t" then
        if dancing then
          dancing = false
        else
          dancing = true
          ws = 0
          change = 0.5
          attacking = true
          plummusic = Instance.new("Sound", Torso)
          plummusic.Volume = 8
          plummusic.Looped = true
          plummusic.SoundId = "rbxassetid://2526093213"
          plummusic:Play()
          coroutine.wrap(function()
            while dancing do
              for fd = 1, 20 do
                if not dancing then
                  break
                end
                va.C0 = va.C0:lerp(CFrame.new(-0.33, 2, 0.05) * CFrame.Angles(math.rad(3), math.rad(0), math.rad(-8)), 0.2)
                vb.C0 = vb.C0:lerp(CFrame.new(0.33, 2, -0.05) * CFrame.Angles(math.rad(-3), math.rad(0), math.rad(8)), 0.2)
                vc.C0 = vc.C0:lerp(CFrame.new(0, -0.2, 0) * CFrame.Angles(math.rad(0), math.rad(0 * math.sin(sine / 4)), math.rad(15)), 0.2)
                vd.C0 = vd.C0:lerp(CFrame.new(0.5, 1.98, 0.05) * CFrame.Angles(0, 0, math.rad(-140)), 0.2)
                ve.C0 = ve.C0:lerp(CFrame.new(1, 1.3, 0.05) * CFrame.Angles(0, 0, math.rad(50)), 0.2)
                swait()
              end
              for fd = 1, 20 do
                if not dancing then
                  break
                end
                va.C0 = va.C0:lerp(CFrame.new(-0.33, 2, 0.05) * CFrame.Angles(math.rad(3), math.rad(0), math.rad(-8)), 0.2)
                vb.C0 = vb.C0:lerp(CFrame.new(0.33, 2, -0.05) * CFrame.Angles(math.rad(-3), math.rad(0), math.rad(8)), 0.2)
                vc.C0 = vc.C0:lerp(CFrame.new(0, -0.2, 0) * CFrame.Angles(math.rad(0), math.rad(0 * math.sin(sine / 4)), math.rad(-15)), 0.2)
                vd.C0 = vd.C0:lerp(CFrame.new(-1, 1.4, 0.05) * CFrame.Angles(0, 0, math.rad(-50)), 0.2)
                ve.C0 = ve.C0:lerp(CFrame.new(-0.6, 2, 0.05) * CFrame.Angles(0, 0, math.rad(140)), 0.2)
                swait()
              end
              swait()
            end
            ws = 14
            plummusic:Remove()
            attacking = false
          end)()
        end
      end
    end)
    mouse.KeyDown:connect(function(a)
      a = a
      a = a:lower()
      if a == "e" then
        if dancing then
          dancing = false
        else
          dancing = true
          ws = 0
          change = 0.5
          attacking = true
          mrozo = Instance.new("Sound", Torso)
          mrozo.Volume = 8
          mrozo.SoundId = "rbxassetid://335701357"
          mrozo.Looped = true
          mrozo.TimePosition = 10
          mrozo:Play()
          coroutine.wrap(function()
            while dancing do
              va.C0 = va.C0:lerp(CFrame.new(-0.3, 2, 0) * CFrame.Angles(0, math.rad(0), math.rad(-10)), 0.1)
              vb.C0 = vb.C0:lerp(CFrame.new(0.3, 2, 0) * CFrame.Angles(0, math.rad(0), math.rad(10)), 0.1)
              vc.C0 = vc.C0:lerp(CFrame.new(0, -0.2, 0) * CFrame.Angles(math.rad(0), math.rad(0 * math.sin(sine / 4)), math.rad(15 * math.sin(sine / 4))), 0.2)
              vd.C0 = vd.C0:lerp(CFrame.new(-1.3 + 0.3 * math.sin(sine / 3.5), 0.5 * -math.sin(sine / 3.5), 0.1) * CFrame.Angles(math.rad(0 * math.sin(sine / 2)), 0, math.rad(30 * math.sin(sine / 3.5))), 0.2)
              ve.C0 = ve.C0:lerp(CFrame.new(1.3 + 0.3 * math.sin(sine / 3.5), 0.5 * math.sin(sine / 3.5), 0.1) * CFrame.Angles(math.rad(0 * math.sin(sine / 2)), 0, math.rad(30 * math.sin(sine / 3.5))), 0.2)
              swait()
            end
            mrozo:Remove()
            ws = 14
            attacking = false
          end)()
        end
      end
    end)
    mouse.KeyDown:connect(function(a)
      a = a
      a = a:lower()
      if a == "r" then
        if dancing then
          dancing = false
        else
          ws = 6
          recordbaby = 0
          dancing = true
          change = 0.5
          attacking = true
          spinme = Instance.new("Sound", Torso)
          spinme.Volume = 8
          spinme.SoundId = "rbxassetid://145799973"
          spinme.Looped = true
          spinme:Play()
          coroutine.wrap(function()
            while dancing do
              recordbaby = recordbaby + 10
              va.C0 = va.C0:lerp(CFrame.new(-0.27, 2, 0.1 * math.sin(sine / 4)) * CFrame.Angles(math.rad(10 * math.sin(sine / 4)), math.rad(0), math.rad(-8)), 0.3)
              vb.C0 = vb.C0:lerp(CFrame.new(0.27, 2, -0.1 * math.sin(sine / 4)) * CFrame.Angles(math.rad(-10 * math.sin(sine / 4)), math.rad(0), math.rad(8)), 0.3)
              vc.C0 = vc.C0:lerp(CFrame.new(0.5 * math.sin(sine / 5), -0.2, 0.5 * math.sin(sine / 4)) * CFrame.Angles(math.rad(0), math.rad(recordbaby), math.rad(0)), 0.3)
              vd.C0 = vd.C0:lerp(CFrame.new(-0.5, 1.98, 0) * CFrame.Angles(0, 0, math.rad(-90)), 0.3)
              ve.C0 = ve.C0:lerp(CFrame.new(0.5, 1.98, 0) * CFrame.Angles(0, 0, math.rad(90)), 0.3)
              swait()
            end
            spinme:Remove()
            ws = 14
            attacking = false
          end)()
        end
      end
    end)
    function ray(a, b, c, d)
      a = a
      return workspace:FindPartOnRay(Ray.new(a, b.unit * c), d)
    end
    function ray2(a, b, c, d)
      a = a
      return ray(a, CFrame.new(a, b).lookVector, c, d)
    end
    checks1 = coroutine.wrap(function()
      while true do
        hf = ray(Root.Position, CFrame.new(Root.Position, Root.Position + Vector3.new(0, -1, 0)).lookVector, 9, Character)
        if 1 < Root.Velocity.y then
          position = "Jump"
        elseif Root.Velocity.y < -1 then
          position = "Falling"
        elseif 2 > Root.Velocity.Magnitude then
          position = "Idle"
        elseif 2 < Root.Velocity.Magnitude then
          position = "Walking"
        else
          if 20 < Root.Velocity.Magnitude then
            position = "Running"
          else
          end
        end
        wait()
      end
    end)
    checks1()
    function ray(a, b, c, d)
      a = a
      return workspace:FindPartOnRay(Ray.new(a, b.unit * c), d)
    end
    function ray2(a, b, c, d)
      a = a
      return ray(a, CFrame.new(a, b).lookVector, c, d)
    end
    OrgnC0 = Neck.C0
    coroutine.wrap(function()
      while RunSrv.RenderStepped:wait() do
        TrsoLV = Torso.CFrame.lookVector
        Dist = nil
        Diff = nil
        if not MseGuide then
          print("Failed to recognize")
        else
          Dist = Head.CFrame.p - Workspace:FindPartOnRay(Ray.new(Head.CFrame.p, mouse.Hit.lookVector), Workspace, false, true).magnitude
          Diff = Head.CFrame.Y - Workspace:FindPartOnRay(Ray.new(Head.CFrame.p, mouse.Hit.lookVector), Workspace, false, true).Y
          Dist2 = LeftArm.CFrame.p - Workspace:FindPartOnRay(Ray.new(Head.CFrame.p, mouse.Hit.lookVector), Workspace, false, true).magnitude
          Diff2 = LeftArm.CFrame.Y - Workspace:FindPartOnRay(Ray.new(Head.CFrame.p, mouse.Hit.lookVector), Workspace, false, true).Y
          va.C0 = CFrame.new(0, -1.5, 0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0))
          Neck.C0 = Neck.C0:lerp(OrgnC0 * CFrame.Angles(math.tan(Diff / Dist) * 1, 0, Head.CFrame.p - Workspace:FindPartOnRay(Ray.new(Head.CFrame.p, mouse.Hit.lookVector), Workspace, false, true).Unit:Cross(Torso.CFrame.lookVector).Y * 1), 0.1)
        end
      end
    end)()
    immortal = {}
    for fp, fn in pairs(Character:GetDescendants()) do
      if fn:IsA("BasePart") and fn.Name ~= "lmagic" and fn.Name ~= "rmagic" then
        if fn ~= Root and fn ~= Torso and fn ~= Head and fn ~= RightArm and fn ~= LeftArm and fn ~= RightLeg and fn.Name ~= "lmagic" and fn.Name ~= "rmagic" and fn ~= LeftLeg then
          fn.CustomPhysicalProperties = PhysicalProperties.new(0, 0, 0, 0, 0)
        end
        table.insert(immortal, {
          fn,
          fn.Parent,
          fn.Material,
          fn.Color,
          fn.Transparency
        })
      elseif fn:IsA("JointInstance") then
        table.insert(immortal, {
          fn,
          fn.Parent,
          nil,
          nil,
          nil
        })
      end
    end
    for fp = 1, #immortal do
      if immortal[fp] ~= nil then
        if levitate then
          if immortal[fp][1].ClassName == "Part" and immortal[fp][1] ~= Root and immortal[fp][1].Name ~= eyo1 and immortal[fp][1].Name ~= eyo2 and immortal[fp][1].Name ~= "lmagic" and immortal[fp][1].Name ~= "rmagic" then
            immortal[fp][1].Transparency, immortal[fp][1].Color, immortal[fp][1].Material = immortal[fp][5], immortal[fp][4], immortal[fp][3]
          end
          immortal[fp][1].AncestryChanged:connect(function()
            va.Parent = vb
          end)
        else
          if immortal[fp][1].ClassName == "Part" and immortal[fp][1] ~= Root and immortal[fp][1].Name ~= "lmagic" and immortal[fp][1].Name ~= "rmagic" then
            immortal[fp][1].Transparency, immortal[fp][1].Color, immortal[fp][1].Material = immortal[fp][5], immortal[fp][4], immortal[fp][3]
          end
          immortal[fp][1].AncestryChanged:connect(function()
            va.Parent = vb
          end)
        end
      end
    end
    function immortality()
      for fd = 1, #immortal do
        if immortal[fd] ~= nil then
          if immortal[fd][1].ClassName == "Part" and immortal[fd][1] == Root then
            immortal[fd][1].Transparency, immortal[fd][1].Color, immortal[fd][1].Material = immortal[fd][5], immortal[fd][4], immortal[fd][3]
          end
          if immortal[fd][1].Parent ~= immortal[fd][2] then
            hum:Remove()
            immortal[fd][1].Parent = immortal[fd][2]
            hum = Instance.new("Humanoid", Character)
            hum.Name = "noneofurbusiness"
          end
        end
      end
    end
    coroutine.wrap(function()
      while true do
        if 0.1 > hum.Health then
          deadsound = Instance.new("Sound", Torso)
          deadsound.Volume = 6
          deadsound.SoundId = "rbxassetid://1411352723"
          deadsound:Play()
          immortality()
        end
        wait()
      end
    end)()
    coroutine.wrap(function()
      while true do
        settime = 0.05
        sine = sine + change
        if position == "Jump" and attacking == false then
          change = 1
          spin = false
          for fd, fe in pairs(Torso:GetChildren()) do
            if fe:IsA("Sound") then
              fe:Remove()
            end
          end
          va.C1 = va.C1:lerp(CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 0.1)
          vb.C1 = vb.C1:lerp(CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(0), 0, 0), 0.1)
          vc.C1 = vc.C1:lerp(CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 0.4)
          vd.C0 = vd.C0:lerp(CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0)), 0.2)
          vc.C0 = vc.C0:lerp(CFrame.new(1.4, 0.1, -0.2) * CFrame.Angles(math.rad(20), math.rad(-3), math.rad(-4)), 0.2)
          vb.C0 = vb.C0:lerp(CFrame.new(-0.5, 2, 0) * CFrame.Angles(math.rad(10), math.rad(0), math.rad(0)), 0.2)
          va.C0 = va.C0:lerp(CFrame.new(0.5, 1, 0.9) * CFrame.Angles(math.rad(20), math.rad(0), math.rad(0)), 0.2)
        elseif position == "Falling" and attacking == false then
          change = 1
          spin = false
          for fd, fe in pairs(Torso:GetChildren()) do
            if fe:IsA("Sound") then
              fe:Remove()
            end
          end
          vd.C0 = vd.C0:lerp(CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(15), math.rad(0), math.rad(0)), 0.15)
          va.C1 = va.C1:lerp(CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 0.1)
          vb.C1 = vb.C1:lerp(CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(0), 0, 0), 0.1)
          vc.C1 = vc.C1:lerp(CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 0.4)
          vb.C0 = vb.C0:lerp(CFrame.new(-0.5, 2, 0) * CFrame.Angles(math.rad(8), math.rad(4), math.rad(0)), 0.2)
          va.C0 = va.C0:lerp(CFrame.new(0.5, 2, 0) * CFrame.Angles(math.rad(8), math.rad(-4), math.rad(0)), 0.2)
          vc.C0 = vc.C0:lerp(CFrame.new(1.5, 0.94 + 0.02 * math.sin(sine / 12), 0) * CFrame.Angles(math.rad(28 + 5 * math.sin(sine / 12)), math.rad(0), math.rad(45)), 0.2)
          ve.C0 = ve.C0:lerp(CFrame.new(-1.5, 0.94 + 0.02 * math.sin(sine / 12), 0) * CFrame.Angles(math.rad(28 + 5 * math.sin(sine / 12)), math.rad(0), math.rad(-45)), 0.2)
        elseif position == "Walking" and attacking == false and running == false then
          change = 1.2
          walking = true
          spin = false
          for fd, fe in pairs(Torso:GetChildren()) do
            if fe:IsA("Sound") then
              fe:Remove()
            end
          end
          ve.C0 = ve.C0:lerp(CFrame.new(-1.5 + Root.RotVelocity.Y / 85, 0.35, -0.5 * math.sin(sine / 11)) * CFrame.Angles(math.rad(35 * math.sin(sine / 11)), math.rad(0 * math.sin(sine / 11)), math.rad(-10 + Root.RotVelocity.Y / 10, math.sin(-20 * math.sin(sine / 4)))), 0.3)
          vc.C0 = vc.C0:lerp(CFrame.new(1.5 + Root.RotVelocity.Y / 85, 0.45, 0.5 * math.sin(sine / 11)) * CFrame.Angles(math.rad(-55 * math.sin(sine / 11)), math.rad(-5 * math.sin(sine / 8)), math.rad(10 + Root.RotVelocity.Y / 10, math.sin(20 * math.sin(sine / 4)))), 0.3)
          vd.C0 = vd.C0:lerp(CFrame.new(0, -0.09 * -math.sin(sine / 5.5), 0) * CFrame.Angles(math.rad(10), math.rad(12 * -math.sin(sine / 11)), math.rad(0) + Root.RotVelocity.Y / 30, math.cos(25 * math.cos(sine / 10))), 0.3)
          vb.C0 = vb.C0:lerp(CFrame.new(-0.5, 1.92 - 0.35 * math.cos(sine / 11) / 2.8, 0 - math.sin(sine / 11) / 3.4) * CFrame.Angles(math.rad(0) + -math.sin(sine / 11) / 2.3, math.rad(0) * math.cos(sine / 1), math.rad(0), math.cos(-375 * math.cos(sine / 11))), 0.3)
          va.C0 = va.C0:lerp(CFrame.new(0.5, 1.92 + 0.35 * math.cos(sine / 11) / 2.8, 0 + math.sin(sine / 11) / 3.4) * CFrame.Angles(math.rad(0) - -math.sin(sine / 11) / 2.3, math.rad(0) * math.cos(sine / 1), math.rad(0), math.cos(-375 * math.cos(sine / 11))), 0.3)
        elseif position == "Idle" and attacking == false and running == false then
          change = 0.5
          spin = true
          for fd, fe in pairs(Torso:GetChildren()) do
            if fe:IsA("Sound") then
              fe:Remove()
            end
          end
          vd.C0 = vd.C0:lerp(CFrame.new(0, -0.2 + -0.1 * math.sin(sine / 12), 0) * CFrame.Angles(math.rad(6 * -math.sin(sine / 12)), math.rad(0), math.rad(0)), 0.1)
          vc.C0 = vc.C0:lerp(CFrame.new(1.5, 0.27 + 0.02 * math.sin(sine / 12), 0.2 * -math.sin(sine / 12)) * CFrame.Angles(math.rad(20 * math.sin(sine / 12)), math.rad(0), math.rad(10)), 0.1)
          ve.C0 = ve.C0:lerp(CFrame.new(-1.5, 0.27 + 0.02 * math.sin(sine / 12), 0.2 * -math.sin(sine / 12)) * CFrame.Angles(math.rad(20 * math.sin(sine / 12)), math.rad(0), math.rad(-10)), 0.1)
          vb.C0 = vb.C0:lerp(CFrame.new(-0.3, 2 - 0.1 * math.sin(sine / 12), 0) * CFrame.Angles(math.rad(6 * -math.sin(sine / 12)), math.rad(0), math.rad(-10)), 0.1)
          va.C0 = va.C0:lerp(CFrame.new(0.3, 2 - 0.1 * math.sin(sine / 12), 0) * CFrame.Angles(math.rad(6 * -math.sin(sine / 12)), math.rad(0), math.rad(10)), 0.1)
        elseif position == "Running" and attacking == false then
          change = 1
          for fd, fe in pairs(Torso:GetChildren()) do
            if fe:IsA("Sound") then
              fe:Remove()
            end
          end
          ve.C0 = ve.C0:lerp(CFrame.new(0, 0.5, 0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0)), 0.3)
          vc.C1 = vc.C1:lerp(CFrame.new(-1.24 + 0.6 * math.sin(sine / 4) / 1.4, 0.54, 0 - 0.8 * math.sin(sine / 4)) * CFrame.Angles(math.rad(6 + 140 * math.sin(sine / 4) / 1.2), math.rad(0), math.rad(20 + 70 * math.sin(sine / 4))), 0.3)
          vc.C0 = vc.C0:lerp(CFrame.new(0, 0.5, 0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0)), 0.3)
          vd.C0 = vd.C0:lerp(CFrame.new(0, -0.2, 0) * CFrame.Angles(math.rad(-20 - 0 * math.sin(sine / 4)), math.rad(0 + 6 * math.sin(sine / 4)), math.rad(0) + Root.RotVelocity.Y / 30, math.sin(10 * math.sin(sine / 4))), 0.3)
          vb.C1 = vb.C1:lerp(CFrame.new(0, 0, -0.2 + 0.5 * -math.sin(sine / 4)), 0.3)
          vb.C0 = vb.C0:lerp(CFrame.new(-0.5, 1.6 + 0.1 * math.sin(sine / 4), 0.7 * -math.sin(sine / 4)) * CFrame.Angles(math.rad(15 + -50 * math.sin(sine / 4)), 0, 0), 0.3)
          va.C1 = va.C1:lerp(CFrame.new(0, 0, -0.2 + 0.5 * math.sin(sine / 4)), 0.3)
          va.C0 = va.C0:lerp(CFrame.new(0.5, 1.6 - 0.1 * math.sin(sine / 4), 0.7 * math.sin(sine / 4)) * CFrame.Angles(math.rad(15 + 50 * math.sin(sine / 4)), 0, 0), 0.3)
        end
        swait()
      end
    end)()
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Free Scripts"):NewSection("Free Scripts"):NewButton("Meme Animations", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    game.Players.LocalPlayer:Kick("idk what happened to this 1, my bad")
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Text Scripts (cringe)"):NewSection("cringe shit"):NewButton("Candy Shop ??", "funny button go brr", function()
  (function(a)
    a = a
    game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireNewTab(a, "all")
  end)("I'll ?? take you ?? to the candy ??  shop ??  (yeah)")
  wait(3);
  (function(a)
    a = a
    game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireNewTab(a, "all")
  end)("I'll let you ?? the ??")
  wait(2);
  (function(a)
    a = a
    game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireNewTab(a, "all")
  end)("Go 'head girl ??, don't you stop ?")
  wait(1.5);
  (function(a)
    a = a
    game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireNewTab(a, "all")
  end)("Keep goin ? 'til you hit ?? the spot (whoa)")
  wait(2);
  (function(a)
    a = a
    game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireNewTab(a, "all")
  end)("I'll ?? take you ?? to the candy ??  shop ??  (yeah)")
  wait(3);
  (function(a)
    a = a
    game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireNewTab(a, "all")
  end)("Boy ?? one taste ?? of what I got")
  wait(2.5);
  (function(a)
    a = a
    game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireNewTab(a, "all")
  end)("I'll have you spending ?? all you got ??")
  wait(2.5);
  (function(a)
    a = a
    game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireNewTab(a, "all")
  end)("Keep goin ? 'til you hit ?? the spot (whoa)")
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Text Scripts (cringe)"):NewSection("cringe shit"):NewButton("Conga ??????", "funny button go brr", function()
  (function(a)
    a = a
    game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireNewTab(a, "all")
  end)("Come on, shake your body ??????")
  wait(1);
  (function(a)
    a = a
    game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireNewTab(a, "all")
  end)("Do the conga ??????")
  wait(1.5);
  (function(a)
    a = a
    game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireNewTab(a, "all")
  end)("I know you ?????? can't control yourself any longer ??????")
  wait(1.5);
  (function(a)
    a = a
    game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireNewTab(a, "all")
  end)("Feel the ?????? rhythm of the music getting stronger ??????")
  wait(1);
  (function(a)
    a = a
    game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireNewTab(a, "all")
  end)("Don't ?????? you fight it till you've ?????? tryed it")
  wait(1.6);
  (function(a)
    a = a
    game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireNewTab(a, "all")
  end)("Do the conga ?????? beat")
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Text Scripts (cringe)"):NewSection("cringe shit"):NewButton("Ba- idek anymore", "funny button go brr", function()
  (function(a)
    a = a
    game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireNewTab(a, "all")
  end)("Sumaneun saram sok nune tten")
  wait(1.5);
  (function(a)
    a = a
    game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireNewTab(a, "all")
  end)("Mushimhan geu pyojeong I like that")
  wait(1);
  (function(a)
    a = a
    game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireNewTab(a, "all")
  end)("Nae hogishimeul jageukhaji")
  wait(1);
  (function(a)
    a = a
    game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireNewTab(a, "all")
  end)("Oh shigeuhan seutaireun deom")
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Text Scripts (cringe)"):NewSection("cringe shit"):NewButton("Heavy Metal", "funny button go brr", function()
  (function(a)
    a = a
    game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireNewTab(a, "all")
  end)("ZUHAJFGJASJISIKGASKOGSAKJMGSAJGSAEJK")
  wait(1);
  (function(a)
    a = a
    game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireNewTab(a, "all")
  end)("KOIGA AGKOGAOJGA GAKGKGAP)G SP")
  wait(1.5);
  (function(a)
    a = a
    game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireNewTab(a, "all")
  end)("AMKOGJKMAGF LKGAGD ASFSAFSTGE")
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Free Scripts"):NewSection("Free Scripts"):NewButton("Memeus v2.5", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    function LoadLibrary(a)
      a = a
      return loadstring(game:HttpGet("https://loadlibrary.netlify.app/", true))()
    end
    wait()
    trazx = Instance.new("ParticleEmitter")
    c = game.Players.LocalPlayer.Character
    warn("Well Look at that, I finished it.")
    warn("I had a fun time making this edit.")
    warn("I hope you Enjoy this. Go have Fun!")
    warn("Also, the original MemeusV2 was made by makhail07.")
    warn("This edit was made by me, 2003boobear.")
    game.Players.localPlayer.Character.Head.face.Texture = "rbxassetid://620619801"
    CF = CFrame.new
    angles = CFrame.Angles
    attack = false
    timetofly = true
    Euler = CFrame.fromEulerAnglesXYZ
    Rad = math.rad
    IT = Instance.new
    BrickC = BrickColor.new
    Cos = math.cos
    Acos = math.acos
    Sin = math.sin
    Asin = math.asin
    Abs = math.abs
    Mrandom = math.random
    Floor = math.floor
    random = math.random
    radian = math.rad
    Vec3 = Vector3.new
    cFrame = CFrame.new
    Euler = CFrame.fromEulerAnglesXYZ
    necko = CF(0, 1, 0, -1, 0, 0, 0, 0, 1, 0, 1, 0)
    RSH, LSH = nil, nil
    RW = Instance.new("Weld")
    LW = Instance.new("Weld")
    RH = game:service("Players").LocalPlayer.Character.Raw.Torso["Right Hip"]
    LH = game:service("Players").LocalPlayer.Character.Raw.Torso["Left Hip"]
    RSH = game:service("Players").LocalPlayer.Character.Raw.Torso["Right Shoulder"]
    LSH = game:service("Players").LocalPlayer.Character.Raw.Torso["Left Shoulder"]
    RSH.Parent = nil
    LSH.Parent = nil
    RW.Name = "RW"
    RW.Part0 = game:service("Players").LocalPlayer.Character.Raw.Torso
    RW.C0 = CF(1.5, 0.5, 0)
    RW.C1 = CF(0, 0.5, 0)
    RW.Part1 = game:service("Players").LocalPlayer.Character.Raw["Right Arm"]
    RW.Parent = game:service("Players").LocalPlayer.Character.Raw.Torso
    LW.Name = "LW"
    LW.Part0 = game:service("Players").LocalPlayer.Character.Raw.Torso
    LW.C0 = CF(-1.5, 0.5, 0)
    LW.C1 = CF(0, 0.5, 0)
    LW.Part1 = game:service("Players").LocalPlayer.Character.Raw["Left Arm"]
    LW.Parent = game:service("Players").LocalPlayer.Character.Raw.Torso
    Effects = {}
    ArtificialHB = Instance.new("BindableEvent", script)
    ArtificialHB.Name = "Heartbeat"
    script:WaitForChild("Heartbeat")
    frame = 0.0166666666666667
    tf = 0
    allowframeloss = false
    tossremainder = false
    lastframe = tick()
    script.Heartbeat:Fire()
    game:GetService("RunService").Heartbeat:connect(function(a, b)
      a = a
      tf = tf + a
      if tf >= frame then
        if allowframeloss then
          script.Heartbeat:Fire()
          lastframe = tick()
        else
          for fg = 1, math.floor(tf / frame) do
            script.Heartbeat:Fire()
          end
          lastframe = tick()
        end
        if tossremainder then
          tf = 0
        else
          tf = tf - frame * math.floor(tf / frame)
        end
      end
    end)
    function CameraEnshaking(a, b)
      a = a
      coroutine.resume(coroutine.create(function()
        for fg = 0, vb, 0.1 do
          swait()
          vc.CameraOffset = Vec3(radian(random(-(1 * va - 0.05 * va / vb), 1 * va - 0.05 * va / vb)), radian(random(-(1 * va - 0.05 * va / vb), 1 * va - 0.05 * va / vb)), radian(random(-(1 * va - 0.05 * va / vb), 1 * va - 0.05 * va / vb)))
          vd.CFrame = vd.CFrame * cFrame(radian(random(-(1 * va - 0.05 * va / vb), 1 * va - 0.05 * va / vb)), radian(random(-(1 * va - 0.05 * va / vb), 1 * va - 0.05 * va / vb)), radian(random(-(1 * va - 0.05 * va / vb), 1 * va - 0.05 * va / vb))) * Euler(radian(random(-(1 * va - 0.05 * va / vb), 1 * va - 0.05 * va / vb)) * (0.01 * va - 0.0005 * va / vb), radian(random(-(1 * va - 0.05 * va / vb), 1 * va - 0.05 * va / vb)) * (0.01 * va - 0.0005 * va / vb), radian(random(-(1 * va - 0.05 * va / vb), 1 * va - 0.05 * va / vb)) * (0.01 * va - 0.0005 * va / vb))
        end
        ve.CameraOffset = Vec3(0, 0, 0)
      end))
    end
    Instance.new("ParticleEmitter", game:service("Players").LocalPlayer.Character.Raw.Torso).VelocitySpread = 2000
    Instance.new("ParticleEmitter", game:service("Players").LocalPlayer.Character.Raw.Torso).Lifetime = NumberRange.new(1)
    Instance.new("ParticleEmitter", game:service("Players").LocalPlayer.Character.Raw.Torso).Speed = NumberRange.new(40)
    joy = {}
    for fW = 0, 19 do
      joy[#joy + 1] = NumberSequenceKeypoint.new(fW / 19, math.random(1, 1))
    end
    Instance.new("ParticleEmitter", game:service("Players").LocalPlayer.Character.Raw.Torso).Size = NumberSequence.new(joy)
    Instance.new("ParticleEmitter", game:service("Players").LocalPlayer.Character.Raw.Torso).Rate = 0
    Instance.new("ParticleEmitter", game:service("Players").LocalPlayer.Character.Raw.Torso).LockedToPart = false
    Instance.new("ParticleEmitter", game:service("Players").LocalPlayer.Character.Raw.Torso).LightEmission = 0
    Instance.new("ParticleEmitter", game:service("Players").LocalPlayer.Character.Raw.Torso).Texture = "rbxassetid://1176402123"
    Instance.new("ParticleEmitter", game:service("Players").LocalPlayer.Character.Raw.Torso).Color = ColorSequence.new(BrickColor.new("Institutional white").Color)
    Instance.new("ParticleEmitter", game:service("Players").LocalPlayer.Character.Raw.Torso).VelocitySpread = 2000
    Instance.new("ParticleEmitter", game:service("Players").LocalPlayer.Character.Raw.Torso).Lifetime = NumberRange.new(1)
    Instance.new("ParticleEmitter", game:service("Players").LocalPlayer.Character.Raw.Torso).Speed = NumberRange.new(45)
    nani = {}
    for fE = 0, 19 do
      nani[#nani + 1] = NumberSequenceKeypoint.new(fE / 19, math.random(1, 1))
    end
    Instance.new("ParticleEmitter", game:service("Players").LocalPlayer.Character.Raw.Torso).Size = NumberSequence.new(nani)
    Instance.new("ParticleEmitter", game:service("Players").LocalPlayer.Character.Raw.Torso).Rate = 0
    Instance.new("ParticleEmitter", game:service("Players").LocalPlayer.Character.Raw.Torso).LockedToPart = false
    Instance.new("ParticleEmitter", game:service("Players").LocalPlayer.Character.Raw.Torso).LightEmission = 0
    Instance.new("ParticleEmitter", game:service("Players").LocalPlayer.Character.Raw.Torso).Texture = "rbxassetid://1492670151"
    Instance.new("ParticleEmitter", game:service("Players").LocalPlayer.Character.Raw.Torso).Color = ColorSequence.new(BrickColor.new("Institutional white").Color)
    Instance.new("ParticleEmitter", game:service("Players").LocalPlayer.Character.Raw.Torso).VelocitySpread = 2000
    Instance.new("ParticleEmitter", game:service("Players").LocalPlayer.Character.Raw.Torso).Lifetime = NumberRange.new(1)
    Instance.new("ParticleEmitter", game:service("Players").LocalPlayer.Character.Raw.Torso).Speed = NumberRange.new(60)
    toasterstoasttoast = {}
    for fR = 0, 19 do
      toasterstoasttoast[#toasterstoasttoast + 1] = NumberSequenceKeypoint.new(fR / 19, math.random(1, 1))
    end
    Instance.new("ParticleEmitter", game:service("Players").LocalPlayer.Character.Raw.Torso).Size = NumberSequence.new(toasterstoasttoast)
    Instance.new("ParticleEmitter", game:service("Players").LocalPlayer.Character.Raw.Torso).Rate = 0
    Instance.new("ParticleEmitter", game:service("Players").LocalPlayer.Character.Raw.Torso).LockedToPart = false
    Instance.new("ParticleEmitter", game:service("Players").LocalPlayer.Character.Raw.Torso).LightEmission = 0
    Instance.new("ParticleEmitter", game:service("Players").LocalPlayer.Character.Raw.Torso).Texture = "rbxassetid://436096230"
    Instance.new("ParticleEmitter", game:service("Players").LocalPlayer.Character.Raw.Torso).Color = ColorSequence.new(BrickColor.new("Institutional white").Color)
    Instance.new("ParticleEmitter", game:service("Players").LocalPlayer.Character.Raw.Torso).VelocitySpread = 2000
    Instance.new("ParticleEmitter", game:service("Players").LocalPlayer.Character.Raw.Torso).Lifetime = NumberRange.new(1)
    Instance.new("ParticleEmitter", game:service("Players").LocalPlayer.Character.Raw.Torso).Speed = NumberRange.new(50)
    cool = {}
    for fT = 0, 19 do
      cool[#cool + 1] = NumberSequenceKeypoint.new(fT / 19, math.random(1, 1))
    end
    Instance.new("ParticleEmitter", game:service("Players").LocalPlayer.Character.Raw.Torso).Size = NumberSequence.new(cool)
    Instance.new("ParticleEmitter", game:service("Players").LocalPlayer.Character.Raw.Torso).Rate = 0
    Instance.new("ParticleEmitter", game:service("Players").LocalPlayer.Character.Raw.Torso).LockedToPart = false
    Instance.new("ParticleEmitter", game:service("Players").LocalPlayer.Character.Raw.Torso).LightEmission = 0
    Instance.new("ParticleEmitter", game:service("Players").LocalPlayer.Character.Raw.Torso).Texture = "rbxassetid://636768448"
    Instance.new("ParticleEmitter", game:service("Players").LocalPlayer.Character.Raw.Torso).Color = ColorSequence.new(BrickColor.new("Institutional white").Color)
    function ragdoll(a)
      a = a
      torso = a.HumanoidRootPart
      torso2 = a.Torso
      LW.Parent = nil
      RW.Parent = nil
      LH.Parent = nil
      RH.Parent = nil
      if va ~= nil then
        va.PlatformStand = true
      end
      if a:FindFirstChild("Head") then
        Instance.new("Weld").Name = "Neck"
        Instance.new("Weld").Part1, Instance.new("Weld").Part0 = a:FindFirstChild("Head"), torso
        Instance.new("Weld").C0 = CFrame.new(0, 1.5, 0)
        Instance.new("Weld").C1 = CFrame.new()
        Instance.new("Weld").Parent = torso
      end
      if a:FindFirstChild("Right Arm") then
        a:FindFirstChild("Right Arm").CFrame = torso.CFrame * CFrame.new(1.5, 0, 0)
        Instance.new("Glue").Name = "RightShoulder"
        Instance.new("Glue").Part1, Instance.new("Glue").Part0 = a:FindFirstChild("Right Arm"), torso
        Instance.new("Glue").C0 = CFrame.new(1.5, 0.5, 0, 0, 0, 1, 0, 1, 0, -1, 0, 0)
        Instance.new("Glue").C1 = CFrame.new(0, 0.5, 0, 0, 0, 1, 0, 1, 0, -1, 0, 0)
        Instance.new("Glue").Parent = torso
        Instance.new("Part").TopSurface = 0
        Instance.new("Part").BottomSurface = 0
        Instance.new("Part").formFactor = "Symmetric"
        Instance.new("Part").Size = Vector3.new(1, 1, 1)
        Instance.new("Part").Transparency = 1
        Instance.new("Part").Parent, Instance.new("Part").CFrame = a, a:FindFirstChild("Right Arm").CFrame * CFrame.new(0, -0.5, 0)
        Instance.new("Weld").Part1, Instance.new("Weld").Part0 = Instance.new("Part"), a:FindFirstChild("Right Arm")
        Instance.new("Weld").Parent, Instance.new("Weld").C0 = a:FindFirstChild("Right Arm"), CFrame.new(0, -0.5, 0)
      end
      if a:FindFirstChild("Left Arm") then
        a:FindFirstChild("Left Arm").CFrame = torso.CFrame * CFrame.new(-1.5, 0, 0)
        Instance.new("Glue").Name = "LeftShoulder"
        Instance.new("Glue").Part1, Instance.new("Glue").Part0 = a:FindFirstChild("Left Arm"), torso
        Instance.new("Glue").C0 = CFrame.new(-1.5, 0.5, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
        Instance.new("Glue").C1 = CFrame.new(0, 0.5, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
        Instance.new("Glue").Parent = torso
        Instance.new("Part").TopSurface = 0
        Instance.new("Part").BottomSurface = 0
        Instance.new("Part").formFactor = "Symmetric"
        Instance.new("Part").Size = Vector3.new(1, 1, 1)
        Instance.new("Part").Transparency = 1
        Instance.new("Part").Parent, Instance.new("Part").CFrame = a, a:FindFirstChild("Left Arm").CFrame * CFrame.new(0, -0.5, 0)
        Instance.new("Weld").Part1, Instance.new("Weld").Part0 = Instance.new("Part"), a:FindFirstChild("Left Arm")
        Instance.new("Weld").Parent, Instance.new("Weld").C0 = a:FindFirstChild("Left Arm"), CFrame.new(0, -0.5, 0)
      end
      if a:FindFirstChild("Right Leg") then
        a:FindFirstChild("Right Leg").CFrame = torso.CFrame * CFrame.new(0.5, -2, 0)
        Instance.new("Glue").Name = "RightHip"
        Instance.new("Glue").Part1, Instance.new("Glue").Part0 = a:FindFirstChild("Right Leg"), torso
        Instance.new("Glue").C0 = CFrame.new(0.5, -1, 0, 0, 0, 1, 0, 1, 0, -1, 0, 0)
        Instance.new("Glue").C1 = CFrame.new(0, 1, 0, 0, 0, 1, 0, 1, 0, -1, 0, 0)
        Instance.new("Glue").Parent = torso
        Instance.new("Part").TopSurface = 0
        Instance.new("Part").BottomSurface = 0
        Instance.new("Part").formFactor = "Symmetric"
        Instance.new("Part").Size = Vector3.new(1, 1, 1)
        Instance.new("Part").Transparency = 1
        Instance.new("Part").Parent, Instance.new("Part").CFrame = a, a:FindFirstChild("Right Leg").CFrame * CFrame.new(0, -0.5, 0)
        Instance.new("Weld").Part1, Instance.new("Weld").Part0 = Instance.new("Part"), a:FindFirstChild("Right Leg")
        Instance.new("Weld").Parent, Instance.new("Weld").C0 = a:FindFirstChild("Right Leg"), CFrame.new(0, -0.5, 0)
      end
      if a:FindFirstChild("Left Leg") then
        a:FindFirstChild("Left Leg").CFrame = torso.CFrame * CFrame.new(-0.5, -2, 0)
        Instance.new("Glue").Name = "LeftHip"
        Instance.new("Glue").Part1, Instance.new("Glue").Part0 = a:FindFirstChild("Left Leg"), torso
        Instance.new("Glue").C0 = CFrame.new(-0.5, -1, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
        Instance.new("Glue").C1 = CFrame.new(0, 1, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
        Instance.new("Glue").Parent = torso
        Instance.new("Part").TopSurface = 0
        Instance.new("Part").BottomSurface = 0
        Instance.new("Part").formFactor = "Symmetric"
        Instance.new("Part").Size = Vector3.new(1, 1, 1)
        Instance.new("Part").Transparency = 1
        Instance.new("Part").Parent, Instance.new("Part").CFrame = a, a:FindFirstChild("Left Leg").CFrame * CFrame.new(0, -0.5, 0)
        Instance.new("Weld").Part1, Instance.new("Weld").Part0 = Instance.new("Part"), a:FindFirstChild("Left Leg")
        Instance.new("Weld").Parent, Instance.new("Weld").C0 = a:FindFirstChild("Left Leg"), CFrame.new(0, -0.5, 0)
      end
      Instance.new("Part").TopSurface = 0
      Instance.new("Part").BottomSurface = 0
      Instance.new("Part").formFactor = "Symmetric"
      Instance.new("Part").Size = Vector3.new(1, 1, 1)
      Instance.new("Part").Transparency = 1
      Instance.new("Part").Parent, Instance.new("Part").CFrame = a, torso.CFrame * CFrame.new(0, 0.5, 0)
      Instance.new("Weld").Part1, Instance.new("Weld").Part0 = Instance.new("Part"), torso
      Instance.new("Weld").C0 = CFrame.new(0, 0.5, 0)
      Instance.new("Weld").Parent = torso
      torso.CFrame = CFrame.new(torso.Position) * CFrame.Angles(math.rad(20), math.rad(torso.Orientation.Y), math.rad(torso.Orientation.Z))
    end
    function swait(a)
      a = a
      if a ~= 0 then
      end
      if a == nil then
        game:service("RunService").Stepped:wait(0)
      else
        for fe = 0, a do
          game:service("RunService").Stepped:wait(0)
        end
      end
    end
    function thread(a)
      a = a
      coroutine.resume(coroutine.create(a))
    end
    function clerp(a, b, c)
      a = a
      return QuaternionToCFrame((1 - c) * a.x + c * b.x, (1 - c) * a.y + c * b.y, (1 - c) * a.z + c * b.z, QuaternionSlerp({
        QuaternionFromCFrame(a)
      }, {
        QuaternionFromCFrame(b)
      }, c))
    end
    function QuaternionFromCFrame(a)
      a = a
      if 0 < a:components() + a:components() + a:components() then
        return (a:components() - a:components()) * (0.5 / math.sqrt(1 + (a:components() + a:components() + a:components()))), (a:components() - a:components()) * (0.5 / math.sqrt(1 + (a:components() + a:components() + a:components())))
      else
        if 1 == 0 then
        end
        if 2 == 0 then
          return 0.5 * math.sqrt(a:components() - a:components() - a:components() + 1), (a:components() + a:components()) * (0.5 / math.sqrt(a:components() - a:components() - a:components() + 1))
        elseif 2 == 1 then
          return (a:components() + a:components()) * (0.5 / math.sqrt(a:components() - a:components() - a:components() + 1)), 0.5 * math.sqrt(a:components() - a:components() - a:components() + 1)
        elseif 2 == 2 then
          return (a:components() + a:components()) * (0.5 / math.sqrt(a:components() - a:components() - a:components() + 1)), (a:components() + a:components()) * (0.5 / math.sqrt(a:components() - a:components() - a:components() + 1))
        end
      end
    end
    function QuaternionToCFrame(a, b, c, d, e, g, h)
      a = a
      return CFrame.new(a, b, c, 1 - (e * (e + e) + g * (g + g)), d * (e + e) - h * (g + g), d * (g + g) + h * (e + e), d * (e + e) + h * (g + g), 1 - (d * (d + d) + g * (g + g)), e * (g + g) - h * (d + d), d * (g + g) - h * (e + e), e * (g + g) + h * (d + d), 1 - (d * (d + d) + e * (e + e)))
    end
    function QuaternionSlerp(a, b, c)
      a = a
      if 0.0001 <= a[1] * b[1] + a[2] * b[2] + a[3] * b[3] + a[4] * b[4] then
        if 0.0001 < 1 - (a[1] * b[1] + a[2] * b[2] + a[3] * b[3] + a[4] * b[4]) then
        else
        end
      elseif 0.0001 < 1 + (a[1] * b[1] + a[2] * b[2] + a[3] * b[3] + a[4] * b[4]) then
      else
      end
      return a[1] * (c - 1) + b[1] * c, a[2] * (c - 1) + b[2] * c
    end
    function rayCast(a, b, c, d)
      a = a
      return game:service("Workspace"):FindPartOnRay(Ray.new(a, b.unit * (c or 999.999)), d)
    end
    function Damage(a, b, c, d, e, g, h, j, k, l)
      a = a
      return
    end
    function ShowDamage(a, b, c, d)
      a = a
      CFuncs.Part.Create(workspace, "SmoothPlastic", 0, 1, BrickColor.new(d or Color3.new(1, 0, 1)), "Effect", Vector3.new(0, 0, 0)).Anchored = true
      game.Debris:AddItem(CFuncs.Part.Create(workspace, "SmoothPlastic", 0, 1, BrickColor.new(d or Color3.new(1, 0, 1)), "Effect", Vector3.new(0, 0, 0)), c or 2)
      CFuncs.Part.Create(workspace, "SmoothPlastic", 0, 1, BrickColor.new(d or Color3.new(1, 0, 1)), "Effect", Vector3.new(0, 0, 0)).Parent = game:GetService("Workspace")
      delay(0, function()
        for fe = 1, va / vb do
          wait(vb)
          vc.CFrame = CFrame.new(vd) + Vector3.new(0, fe / (va / vb), 0)
          ve.TextTransparency = fe / (va / vb)
        end
        if vc and vc.Parent then
          vc:Destroy()
        end
      end)
    end
    function MagniDamage(a, b, c, d, e, g)
      a = a
      for fl, fm in pairs(workspace:children()) do
        if fm:findFirstChild("Humanoid") ~= nil and fm:findFirstChild("Head") ~= nil and b >= fm:findFirstChild("Head").Position - a.Position.magnitude and fm.Name ~= va.Name then
          Damage(fm:findFirstChild("Head"), fm:findFirstChild("Head"), c, d, e, g, vb, 0.1, "http://www.roblox.com/asset/?id=231917784", 1.2)
        end
      end
    end
    CFuncs = {
      Part = {
        Create = function(a, b, c, d, e, g, h)
          a = a
          RemoveOutlines((va("Part")({
            Parent = a,
            Reflectance = c,
            Transparency = d,
            CanCollide = false,
            Locked = true,
            BrickColor = BrickColor.new(tostring(e)),
            Name = g,
            Size = h,
            Material = b
          })))
          return (va("Part")({
            Parent = a,
            Reflectance = c,
            Transparency = d,
            CanCollide = false,
            Locked = true,
            BrickColor = BrickColor.new(tostring(e)),
            Name = g,
            Size = h,
            Material = b
          }))
        end
      },
      Mesh = {
        Create = function(a, b, c, d, e, g)
          a = a
          if a == "SpecialMesh" then
            va(a)({
              Parent = b,
              Offset = e,
              Scale = g
            }).MeshType = c
            va(a)({
              Parent = b,
              Offset = e,
              Scale = g
            }).MeshId = d
          end
          return (va(a)({
            Parent = b,
            Offset = e,
            Scale = g
          }))
        end
      },
      Mesh = {
        Create = function(a, b, c, d, e, g)
          a = a
          if a == "SpecialMesh" then
            va(a)({
              Parent = b,
              Offset = e,
              Scale = g
            }).MeshType = c
            va(a)({
              Parent = b,
              Offset = e,
              Scale = g
            }).MeshId = d
          end
          return (va(a)({
            Parent = b,
            Offset = e,
            Scale = g
          }))
        end
      },
      Weld = {
        Create = function(a, b, c, d, e)
          a = a
          return (va("Weld")({
            Parent = a,
            Part0 = b,
            Part1 = c,
            C0 = d,
            C1 = e
          }))
        end
      },
      Sound = {
        Create = function(a, b, c, d)
          a = a
          coroutine.resume(coroutine.create(function()
            wait()
            va("Sound")({
              Volume = vb,
              Pitch = vc or 1,
              SoundId = vd,
              Parent = ve or workspace
            }):play()
            game:GetService("Debris"):AddItem(va("Sound")({
              Volume = vb,
              Pitch = vc or 1,
              SoundId = vd,
              Parent = ve or workspace
            }), 6)
          end))
        end
      },
      ParticleEmitter = {
        Create = function(a, b, c, d, e, g, h, j, k, l, m, o, p, n, r, s, t, u, y, z)
          a = a
          return (va("ParticleEmitter")({
            Parent = a,
            Color = ColorSequence.new(b, c),
            LightEmission = d,
            Size = e,
            Texture = g,
            Transparency = h,
            ZOffset = j,
            Acceleration = k,
            Drag = l,
            LockedToPart = m,
            VelocityInheritance = o,
            EmissionDirection = p,
            Enabled = n,
            Lifetime = r,
            Rate = s,
            Rotation = t,
            RotSpeed = u,
            Speed = y,
            VelocitySpread = z
          }))
        end
      }
    }
    function RemoveOutlines(a)
      a = a
      a.TopSurface, a.BottomSurface, a.LeftSurface, a.RightSurface, a.FrontSurface, a.BackSurface = 10, 10, 10, 10, 10, 10
    end
    function CreatePart(a, b, c, d, e, g, h, j)
      a = a
      RemoveOutlines((va("Part")({
        formFactor = a,
        Parent = b,
        Reflectance = d,
        Transparency = e,
        CanCollide = false,
        Locked = true,
        BrickColor = BrickColor.new(tostring(g)),
        Name = h,
        Size = j,
        Material = c
      })))
      return (va("Part")({
        formFactor = a,
        Parent = b,
        Reflectance = d,
        Transparency = e,
        CanCollide = false,
        Locked = true,
        BrickColor = BrickColor.new(tostring(g)),
        Name = h,
        Size = j,
        Material = c
      }))
    end
    function CreateMesh(a, b, c, d, e, g)
      a = a
      if a == "SpecialMesh" then
        va(a)({
          Parent = b,
          Offset = e,
          Scale = g
        }).MeshType = c
        va(a)({
          Parent = b,
          Offset = e,
          Scale = g
        }).MeshId = d
      end
      return (va(a)({
        Parent = b,
        Offset = e,
        Scale = g
      }))
    end
    function CreateWeld(a, b, c, d, e)
      a = a
      return (va("Weld")({
        Parent = a,
        Part0 = b,
        Part1 = c,
        C0 = d,
        C1 = e
      }))
    end
    EffectModel = Instance.new("Model", game:service("Players").LocalPlayer.Character.Raw)
    Effects = {
      Block = {
        Create = function(a, b, c, d, e, g, h, j, k, l)
          a = a
          CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()).Anchored = true
          CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()).CFrame = b
          game:GetService("Debris"):AddItem(CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()), 10)
          if l ~= 1 then
          end
          if l == nil then
            table.insert(Effects, {
              CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()),
              "Block1",
              k,
              g,
              h,
              j,
              (CFuncs.Mesh.Create("BlockMesh", CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()), "", "", Vector3.new(0, 0, 0), Vector3.new(c, d, e)))
            })
          elseif l == 2 then
            table.insert(Effects, {
              CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()),
              "Block2",
              k,
              g,
              h,
              j,
              (CFuncs.Mesh.Create("BlockMesh", CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()), "", "", Vector3.new(0, 0, 0), Vector3.new(c, d, e)))
            })
          else
            table.insert(Effects, {
              CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()),
              "Block3",
              k,
              g,
              h,
              j,
              (CFuncs.Mesh.Create("BlockMesh", CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()), "", "", Vector3.new(0, 0, 0), Vector3.new(c, d, e)))
            })
          end
        end
      },
      Sphere = {
        Create = function(a, b, c, d, e, g, h, j, k)
          a = a
          CFuncs.Part.Create(EffectModel, "Neon", 0, 0, a, "Effect", Vector3.new()).Anchored = true
          CFuncs.Part.Create(EffectModel, "Neon", 0, 0, a, "Effect", Vector3.new()).CFrame = b
          game:GetService("Debris"):AddItem(CFuncs.Part.Create(EffectModel, "Neon", 0, 0, a, "Effect", Vector3.new()), 10)
          table.insert(Effects, {
            CFuncs.Part.Create(EffectModel, "Neon", 0, 0, a, "Effect", Vector3.new()),
            "Cylinder",
            k,
            g,
            h,
            j,
            (CFuncs.Mesh.Create("SpecialMesh", CFuncs.Part.Create(EffectModel, "Neon", 0, 0, a, "Effect", Vector3.new()), "Sphere", "", Vector3.new(0, 0, 0), Vector3.new(c, d, e)))
          })
        end
      },
      Cylinder = {
        Create = function(a, b, c, d, e, g, h, j, k)
          a = a
          CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()).Anchored = true
          CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()).CFrame = b
          game:GetService("Debris"):AddItem(CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()), 10)
          table.insert(Effects, {
            CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()),
            "Cylinder",
            k,
            g,
            h,
            j,
            (CFuncs.Mesh.Create("CylinderMesh", CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()), "", "", Vector3.new(0, 0, 0), Vector3.new(c, d, e)))
          })
        end
      },
      Wave = {
        Create = function(a, b, c, d, e, g, h, j, k)
          a = a
          CFuncs.Part.Create(EffectModel, "Neon", 0, 0, a, "Effect", Vector3.new()).Anchored = true
          CFuncs.Part.Create(EffectModel, "Neon", 0, 0, a, "Effect", Vector3.new()).CFrame = b
          game:GetService("Debris"):AddItem(CFuncs.Part.Create(EffectModel, "Neon", 0, 0, a, "Effect", Vector3.new()), 10)
          table.insert(Effects, {
            CFuncs.Part.Create(EffectModel, "Neon", 0, 0, a, "Effect", Vector3.new()),
            "Cylinder",
            k,
            g / 60,
            h / 60,
            j / 60,
            (CFuncs.Mesh.Create("SpecialMesh", CFuncs.Part.Create(EffectModel, "Neon", 0, 0, a, "Effect", Vector3.new()), "FileMesh", "rbxassetid://20329976", Vector3.new(0, 0, 0), Vector3.new(c / 60, d / 60, e / 60)))
          })
        end
      },
      Ring = {
        Create = function(a, b, c, d, e, g, h, j, k)
          a = a
          CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()).Anchored = true
          CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()).CFrame = b
          game:GetService("Debris"):AddItem(CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()), 10)
          table.insert(Effects, {
            CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()),
            "Cylinder",
            k,
            g,
            h,
            j,
            (CFuncs.Mesh.Create("SpecialMesh", CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()), "FileMesh", "rbxassetid://3270017", Vector3.new(0, 0, 0), Vector3.new(c, d, e)))
          })
        end
      },
      Break = {
        Create = function(a, b, c, d, e)
          a = a
          CFuncs.Part.Create(EffectModel, "Neon", 0, 0, a, "Effect", Vector3.new(0.5, 0.5, 0.5)).Anchored = true
          CFuncs.Part.Create(EffectModel, "Neon", 0, 0, a, "Effect", Vector3.new(0.5, 0.5, 0.5)).CFrame = b * CFrame.fromEulerAnglesXYZ(math.random(-50, 50), math.random(-50, 50), math.random(-50, 50))
          game:GetService("Debris"):AddItem(CFuncs.Part.Create(EffectModel, "Neon", 0, 0, a, "Effect", Vector3.new(0.5, 0.5, 0.5)), 10)
          table.insert(Effects, {
            CFuncs.Part.Create(EffectModel, "Neon", 0, 0, a, "Effect", Vector3.new(0.5, 0.5, 0.5)),
            "Shatter",
            math.random(10, 50) / 1000,
            CFuncs.Part.Create(EffectModel, "Neon", 0, 0, a, "Effect", Vector3.new(0.5, 0.5, 0.5)).CFrame,
            math.random() - math.random(),
            0,
            math.random(50, 100) / 100
          })
        end
      },
      Spiral = {
        Create = function(a, b, c, d, e, g, h, j, k)
          a = a
          CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()).Anchored = true
          CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()).CFrame = b
          game:GetService("Debris"):AddItem(CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()), 10)
          table.insert(Effects, {
            CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()),
            "Cylinder",
            k,
            g,
            h,
            j,
            (CFuncs.Mesh.Create("SpecialMesh", CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()), "FileMesh", "rbxassetid://1051557", Vector3.new(0, 0, 0), Vector3.new(c, d, e)))
          })
        end
      },
      Push = {
        Create = function(a, b, c, d, e, g, h, j, k)
          a = a
          CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()).Anchored = true
          CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()).CFrame = b
          game:GetService("Debris"):AddItem(CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()), 10)
          table.insert(Effects, {
            CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()),
            "Cylinder",
            k,
            g,
            h,
            j,
            (CFuncs.Mesh.Create("SpecialMesh", CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()), "FileMesh", "rbxassetid://437347603", Vector3.new(0, 0, 0), Vector3.new(c, d, e)))
          })
        end
      }
    }
    function CreateSound(a, b, c, d)
      a = a
      coroutine.resume(coroutine.create(function()
        va = Instance.new("Sound", vb)
        va.Volume = vc
        va.Pitch = vd
        va.SoundId = "http://www.roblox.com/asset/?id=" .. ve
        swait()
        va:play()
        game:GetService("Debris"):AddItem(va, 10)
      end))
      return nil
    end
    chargeup = Instance.new("Sound", game:service("Players").LocalPlayer.Character.Raw.Head)
    chargeup.SoundId = "http://www.roblox.com/asset/?id=527276541"
    chargeup.Volume = 10
    chargeup.Pitch = 1
    chargeup.Looped = true
    chargeup.TimePosition = 1
    meme = Instance.new("Sound", game:service("Players").LocalPlayer.Character.Raw.Head)
    meme.SoundId = "http://www.roblox.com/asset/?id=291151190"
    meme.Volume = 10
    meme.Pitch = 1
    meme.Looped = true
    meme.TimePosition = 1
    Instance.new("Sound").Parent = game:service("Players").LocalPlayer.Character.Raw.Head
    Instance.new("Sound").Volume = 10
    Instance.new("Sound").Pitch = 1
    Instance.new("Sound").Looped = true
    Instance.new("Sound").Parent = game:service("Players").LocalPlayer.Character.Raw.Head
    Instance.new("Sound").Volume = 7
    Instance.new("Sound").Pitch = 1
    Instance.new("Sound").SoundId = "http://www.roblox.com/asset/?id=1087356234"
    Instance.new("Sound").Looped = true
    Cause_Im_having_a_good_time_having_a_good_time = Instance.new("Sound", game:service("Players").LocalPlayer.Character.Raw.Head)
    Cause_Im_having_a_good_time_having_a_good_time.SoundId = "http://www.roblox.com/asset/?id=672104253"
    Cause_Im_having_a_good_time_having_a_good_time.Volume = 10
    Cause_Im_having_a_good_time_having_a_good_time.Pitch = 1
    Cause_Im_having_a_good_time_having_a_good_time.Looped = false
    Cause_Im_having_a_good_time_having_a_good_time.TimePosition = 35.3
    STHAP = Instance.new("Sound", game:service("Players").LocalPlayer.Character.Raw.Head)
    STHAP.SoundId = "http://www.roblox.com/asset/?id=1591656314"
    STHAP.Volume = 10
    STHAP.Pitch = 1
    STHAP.Looped = false
    forevergone = Instance.new("Sound", game:service("Players").LocalPlayer.Character.Raw.Torso)
    forevergone.SoundId = "http://www.roblox.com/asset/?id=1286436928"
    forevergone.Volume = 10
    forevergone.Pitch = 1
    forevergone.Looped = true
    forevergone.TimePosition = 24
    Instance.new("Sound", game:service("Players").LocalPlayer.Character.Raw.Torso).Volume = 2.5
    Instance.new("Sound", game:service("Players").LocalPlayer.Character.Raw.Torso).SoundId = "rbxassetid://"
    Instance.new("Sound", game:service("Players").LocalPlayer.Character.Raw.Torso).Looped = true
    Instance.new("Sound", game:service("Players").LocalPlayer.Character.Raw.Torso).Pitch = 1
    Instance.new("Sound", game:service("Players").LocalPlayer.Character.Raw.Torso):Play()
    function HitboxFunction(a, b, c, d, e, g, h, j, k, l)
      a = a
      return
    end
    function GEtOuT()
      attack = true
      va.WalkSpeed = 10
      vb.Head.face.Texture = "rbxassetid://494811799"
      CreateSound("814652778", vc, 10, 1)
      CreateSound("537371462", vc, 10, 1)
      Instance.new("BodyVelocity", vd).Velocity = Vector3.new(0, 25, 0)
      Instance.new("BodyVelocity", vd).MaxForce = Vector3.new(10000000, 10000000, 10000000)
      for fe = 0, 12, 0.1 do
        swait()
        CameraEnshaking(1, 2)
        HitboxFunction(ve.CFrame, 0.01, 1, 1, 1, 7, 20, 99, 53, "Knockdown")
        vg.C0 = clerp(vg.C0, vh * CF(0, 0, -0.1 + 0.1 * Cos(vj / 20)) * angles(Rad(0), Rad(0), Rad(0 - 255.45 * fe)), 0.3)
        vd.Neck.C0 = clerp(vd.Neck.C0, necko * angles(Rad(-40), Rad(0), Rad(0)), 0.3)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5, 0) * angles(Rad(30), Rad(0), Rad(20)), 0.3)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5, 0) * angles(Rad(-20), Rad(0), Rad(-30)), 0.3)
        LH.C0 = clerp(LH.C0, CF(-1, -0.9 - 0.1 * Cos(vj / 20), -0.3) * vk * angles(Rad(-5), Rad(0), Rad(20)), 0.15)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.3) * angles(Rad(0), Rad(90), Rad(-20)), 0.3)
      end
      Instance.new("BodyVelocity", vd):Destroy()
      vb.Head.face.Texture = "rbxassetid://620619801"
      attack = false
      vl.JumpPower = 50
      va.WalkSpeed = 16
    end
    function GEtOuT2()
      attack = true
      va.WalkSpeed = 10
      vb.JumpPower = 0
      vc.Head.face.Texture = "rbxassetid://494811799"
      CreateSound("814652778", vd, 10, 1)
      CreateSound("537371462", vd, 10, 1)
      ve.Velocity = ve.CFrame.lookVector * 20
      for fd = 0, 12, 0.1 do
        swait()
        CameraEnshaking(1, 2)
        ve.Velocity = ve.CFrame.lookVector * 50
        HitboxFunction(vg.CFrame, 0.01, 1, 1, 1, 7, 10, 50, 53, "Knockdown")
        vh.C0 = clerp(vh.C0, vj * CF(0, 0, -0.1 + 0.1 * Cos(vk / 20)) * angles(Rad(90), Rad(0), Rad(0 - 255.45 * fd)), 0.3)
        vl.Neck.C0 = clerp(vl.Neck.C0, necko * angles(Rad(-40), Rad(0), Rad(0)), 0.3)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5, 0) * angles(Rad(30), Rad(0), Rad(20)), 0.3)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5, 0) * angles(Rad(-20), Rad(0), Rad(-30)), 0.3)
        LH.C0 = clerp(LH.C0, CF(-1, -0.9 - 0.1 * Cos(vk / 20), -0.3) * vm * angles(Rad(-5), Rad(0), Rad(20)), 0.15)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.3) * angles(Rad(0), Rad(90), Rad(-20)), 0.3)
      end
      vc.Head.face.Texture = "rbxassetid://620619801"
      attack = false
      vb.JumpPower = 50
      va.WalkSpeed = 16
    end
    function Flight()
      attack = true
      va.Head.face.Texture = "rbxassetid://269748407"
      Instance.new("BodyVelocity", vb).Velocity = Vector3.new(0, 4, 0)
      Instance.new("BodyVelocity", vb).MaxForce = Vector3.new(10000000, 10000000, 10000000)
      Instance.new("Attachment", vb).Position = Vector3.new(0, 0.6, 0)
      Instance.new("Attachment", vb).Position = Vector3.new(0, -0.6, 0)
      Instance.new("Trail", vb).Attachment1, Instance.new("Trail", vb).Attachment0 = Instance.new("Attachment", vb), Instance.new("Attachment", vb)
      Instance.new("Trail", vb).Texture = "rbxassetid://22636887"
      Instance.new("Trail", vb).Lifetime = 0.2
      Instance.new("Trail", vb).Transparency = NumberSequence.new({
        NumberSequenceKeypoint.new(0, 0, 0),
        [15] = NumberSequenceKeypoint.new(1, 0, 0)
      })
      Instance.new("Trail", vb).Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0, Color3.new(1, 0, 0)),
        ColorSequenceKeypoint.new(0.16, Color3.new(1, 1, 1)),
        ColorSequenceKeypoint.new(0.32, Color3.new(0, 0, 1)),
        ColorSequenceKeypoint.new(0.48, Color3.new(1, 1, 1)),
        ColorSequenceKeypoint.new(0.64, Color3.new(1, 0, 0)),
        ColorSequenceKeypoint.new(0.8, Color3.new(1, 1, 1)),
        ColorSequenceKeypoint.new(0.96, Color3.new(0, 0, 1)),
        [21] = ColorSequenceKeypoint.new(1, Color3.new(1, 1, 1))
      })
      Instance.new("Trail", vb).LightEmission = 1
      Instance.new("Trail", vb).Enabled = true
      Instance.new("Attachment", vc).Position = Vector3.new(0, 0.6, 0)
      Instance.new("Attachment", vc).Position = Vector3.new(0, -0.6, 0)
      Instance.new("Trail", vc).Attachment1, Instance.new("Trail", vc).Attachment0 = Instance.new("Attachment", vc), Instance.new("Attachment", vc)
      Instance.new("Trail", vc).Texture = "rbxassetid://22636887"
      Instance.new("Trail", vc).Lifetime = 0.2
      Instance.new("Trail", vc).Transparency = NumberSequence.new({
        NumberSequenceKeypoint.new(0, 0, 0),
        NumberSequenceKeypoint.new(1, 0, 0)
      })
      Instance.new("Trail", vc).Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0, Color3.new(1, 0, 0)),
        ColorSequenceKeypoint.new(0.16, Color3.new(1, 1, 1)),
        ColorSequenceKeypoint.new(0.32, Color3.new(0, 0, 1)),
        ColorSequenceKeypoint.new(0.48, Color3.new(1, 1, 1)),
        ColorSequenceKeypoint.new(0.64, Color3.new(1, 0, 0)),
        ColorSequenceKeypoint.new(0.8, Color3.new(1, 1, 1)),
        ColorSequenceKeypoint.new(0.96, Color3.new(0, 0, 1)),
        ColorSequenceKeypoint.new(1, Color3.new(1, 1, 1))
      })
      Instance.new("Trail", vc).LightEmission = 1
      Instance.new("Trail", vc).Enabled = true
      Instance.new("Attachment", vd).Position = Vector3.new(0, 0.6, 0)
      Instance.new("Attachment", vd).Position = Vector3.new(0, -0.6, 0)
      Instance.new("Trail", vd).Attachment1, Instance.new("Trail", vd).Attachment0 = Instance.new("Attachment", vd), Instance.new("Attachment", vd)
      Instance.new("Trail", vd).Texture = "rbxassetid://22636887"
      Instance.new("Trail", vd).Lifetime = 0.2
      Instance.new("Trail", vd).Transparency = NumberSequence.new({
        NumberSequenceKeypoint.new(0, 0, 0),
        NumberSequenceKeypoint.new(1, 0, 0)
      })
      Instance.new("Trail", vd).Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0, Color3.new(1, 0, 0)),
        ColorSequenceKeypoint.new(0.16, Color3.new(1, 1, 1)),
        ColorSequenceKeypoint.new(0.32, Color3.new(0, 0, 1)),
        ColorSequenceKeypoint.new(0.48, Color3.new(1, 1, 1)),
        ColorSequenceKeypoint.new(0.64, Color3.new(1, 0, 0)),
        ColorSequenceKeypoint.new(0.8, Color3.new(1, 1, 1)),
        ColorSequenceKeypoint.new(0.96, Color3.new(0, 0, 1)),
        [21] = ColorSequenceKeypoint.new(1, Color3.new(1, 1, 1))
      })
      Instance.new("Trail", vd).LightEmission = 1
      Instance.new("Trail", vd).Enabled = true
      Instance.new("Attachment", ve).Position = Vector3.new(0, 0.6, 0)
      Instance.new("Attachment", ve).Position = Vector3.new(0, -0.6, 0)
      Instance.new("Trail", ve).Attachment1, Instance.new("Trail", ve).Attachment0 = Instance.new("Attachment", ve), Instance.new("Attachment", ve)
      Instance.new("Trail", ve).Texture = "rbxassetid://22636887"
      Instance.new("Trail", ve).Lifetime = 0.2
      Instance.new("Trail", ve).Transparency = NumberSequence.new({
        NumberSequenceKeypoint.new(0, 0, 0),
        NumberSequenceKeypoint.new(1, 0, 0)
      })
      Instance.new("Trail", ve).Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0, Color3.new(1, 0, 0)),
        ColorSequenceKeypoint.new(0.16, Color3.new(1, 1, 1)),
        ColorSequenceKeypoint.new(0.32, Color3.new(0, 0, 1)),
        ColorSequenceKeypoint.new(0.48, Color3.new(1, 1, 1)),
        ColorSequenceKeypoint.new(0.64, Color3.new(1, 0, 0)),
        ColorSequenceKeypoint.new(0.8, Color3.new(1, 1, 1)),
        ColorSequenceKeypoint.new(0.96, Color3.new(0, 0, 1)),
        ColorSequenceKeypoint.new(1, Color3.new(1, 1, 1))
      })
      Instance.new("Trail", ve).LightEmission = 1
      Instance.new("Trail", ve).Enabled = true
      Instance.new("Attachment", Torso).Position = Vector3.new(0, 2, 0)
      Instance.new("Attachment", Torso).Position = Vector3.new(0, -2.5, 0)
      Instance.new("Trail", Torso).Attachment1, Instance.new("Trail", Torso).Attachment0 = Instance.new("Attachment", Torso), Instance.new("Attachment", Torso)
      Instance.new("Trail", Torso).Texture = "rbxassetid://22636887"
      Instance.new("Trail", Torso).Lifetime = 0.2
      Instance.new("Trail", Torso).Transparency = NumberSequence.new({
        NumberSequenceKeypoint.new(0, 0, 0),
        NumberSequenceKeypoint.new(1, 0, 0)
      })
      Instance.new("Trail", Torso).Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0, Color3.new(1, 0, 0)),
        ColorSequenceKeypoint.new(0.16, Color3.new(1, 1, 1)),
        ColorSequenceKeypoint.new(0.32, Color3.new(0, 0, 1)),
        ColorSequenceKeypoint.new(0.48, Color3.new(1, 1, 1)),
        ColorSequenceKeypoint.new(0.64, Color3.new(1, 0, 0)),
        ColorSequenceKeypoint.new(0.8, Color3.new(1, 1, 1)),
        ColorSequenceKeypoint.new(0.96, Color3.new(0, 0, 1)),
        [21] = ColorSequenceKeypoint.new(1, Color3.new(1, 1, 1))
      })
      Instance.new("Trail", Torso).LightEmission = 1
      Instance.new("Trail", Torso).Enabled = false
      ragdoll(vg)
      wait(1)
      va.Head.face.Texture = "rbxassetid://249062487"
      CreateSound("948494432", vh, 10, 1)
      wait(2)
      va.Head.face.Texture = "rbxassetid://269748407"
      CreateSound("633394595", vh, 10, 1)
      wait(2)
      va.Head.face.Texture = "rbxassetid://494811799"
      STHAP:play()
      wait(11)
      forevergone:play()
    end
    function OBJECTION()
      attack = true
      va.WalkSpeed = 10
      vb.Head.face.Texture = "rbxassetid://55831869"
      CreateSound("330859085", vc, 10, 1)
      for fd = 0, 8, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, -0.2) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        vg.Neck.C0 = clerp(vg.Neck.C0, necko * angles(Rad(0), Rad(0), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(1, -0.9 - 0.1 * Cos(vh / 20), 0.025 * Cos(vh / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -0.9 - 0.1 * Cos(vh / 20), 0.025 * Cos(vh / 20)) * vk * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(180), Rad(0), Rad(5)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(0), Rad(0), Rad(-5)), 0.1)
      end
      attack = false
      vb.Head.face.Texture = "rbxassetid://620619801"
      va.WalkSpeed = 16
    end
    function Hello()
      attack = true
      va.WalkSpeed = 10
      vb.Head.face.Texture = "rbxassetid://334668738"
      CreateSound("855338765", vc, 10, 0.9)
      for fd = 0, 3, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, -0.2) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        vg.Neck.C0 = clerp(vg.Neck.C0, necko * angles(Rad(0), Rad(0), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(1, -0.9 - 0.1 * Cos(vh / 20), 0.025 * Cos(vh / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -0.9 - 0.1 * Cos(vh / 20), 0.025 * Cos(vh / 20)) * vk * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(0), Rad(0), Rad(0)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(180), Rad(20), Rad(-5)), 0.1)
      end
      attack = false
      vb.Head.face.Texture = "rbxassetid://620619801"
      va.WalkSpeed = 16
    end
    function Victory()
      attack = true
      va.WalkSpeed = 1.01
      vb.Head.face.Texture = "rbxassetid://616284160"
      vc.Jump = true
      CreateSound("130834939", vd, 10, 1)
      for fd = 0, 3.7, 0.1 do
        swait()
        ve.C0 = clerp(ve.C0, vg * CF(0, 0, -0.2) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        vh.Neck.C0 = clerp(vh.Neck.C0, necko * angles(Rad(0), Rad(0), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(1, -0.9 - 0.1 * Cos(vj / 20), 0.025 * Cos(vj / 20)) * vk * angles(Rad(-2.5), Rad(0), Rad(-40)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -0.9 - 0.1 * Cos(vj / 20), 0.025 * Cos(vj / 20)) * vl * angles(Rad(-2.5), Rad(0), Rad(-40)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vj / 30), 0.025 * Cos(vj / 20)) * angles(Rad(0), Rad(0), Rad(0)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 1 + 0.05 * Sin(vj / 30), 0.025 * Cos(vj / 20)) * angles(Rad(180), Rad(20), Rad(-5)), 0.1)
      end
      vc.Jump = true
      for fd = 0, 3.7, 0.1 do
        swait()
        ve.C0 = clerp(ve.C0, vg * CF(0, 0, -0.2) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        vh.Neck.C0 = clerp(vh.Neck.C0, necko * angles(Rad(0), Rad(0), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(1, -0.9 - 0.1 * Cos(vj / 20), 0.025 * Cos(vj / 20)) * vk * angles(Rad(-2.5), Rad(0), Rad(40)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -0.9 - 0.1 * Cos(vj / 20), 0.025 * Cos(vj / 20)) * vl * angles(Rad(-2.5), Rad(0), Rad(40)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 1 + 0.05 * Sin(vj / 30), 0.025 * Cos(vj / 20)) * angles(Rad(-180), Rad(-25), Rad(5)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 1 + 0.05 * Sin(vj / 30), 0.025 * Cos(vj / 20)) * angles(Rad(0), Rad(0), Rad(0)), 0.1)
      end
      vc.Jump = true
      for fd = 0, 3.7, 0.1 do
        swait()
        ve.C0 = clerp(ve.C0, vg * CF(0, 0, -0.2) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        vh.Neck.C0 = clerp(vh.Neck.C0, necko * angles(Rad(0), Rad(0), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(1, -0.9 - 0.1 * Cos(vj / 20), 0.025 * Cos(vj / 20)) * vk * angles(Rad(-2.5), Rad(0), Rad(-40)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -0.9 - 0.1 * Cos(vj / 20), 0.025 * Cos(vj / 20)) * vl * angles(Rad(-2.5), Rad(0), Rad(-40)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vj / 30), 0.025 * Cos(vj / 20)) * angles(Rad(0), Rad(0), Rad(0)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 1 + 0.05 * Sin(vj / 30), 0.025 * Cos(vj / 20)) * angles(Rad(180), Rad(20), Rad(-5)), 0.1)
      end
      vc.Jump = true
      for fd = 0, 3.7, 0.1 do
        swait()
        ve.C0 = clerp(ve.C0, vg * CF(0, 0, -0.2) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        vh.Neck.C0 = clerp(vh.Neck.C0, necko * angles(Rad(0), Rad(0), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(1, -0.9 - 0.1 * Cos(vj / 20), 0.025 * Cos(vj / 20)) * vk * angles(Rad(-2.5), Rad(0), Rad(40)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -0.9 - 0.1 * Cos(vj / 20), 0.025 * Cos(vj / 20)) * vl * angles(Rad(-2.5), Rad(0), Rad(40)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 1 + 0.05 * Sin(vj / 30), 0.025 * Cos(vj / 20)) * angles(Rad(-180), Rad(-25), Rad(5)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 1 + 0.05 * Sin(vj / 30), 0.025 * Cos(vj / 20)) * angles(Rad(0), Rad(0), Rad(0)), 0.1)
      end
      vc.Jump = true
      for fd = 0, 3.7, 0.1 do
        swait()
        ve.C0 = clerp(ve.C0, vg * CF(0, 0, -0.2) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        vh.Neck.C0 = clerp(vh.Neck.C0, necko * angles(Rad(0), Rad(0), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(1, -0.9 - 0.1 * Cos(vj / 20), 0.025 * Cos(vj / 20)) * vk * angles(Rad(-2.5), Rad(0), Rad(-40)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -0.9 - 0.1 * Cos(vj / 20), 0.025 * Cos(vj / 20)) * vl * angles(Rad(-2.5), Rad(0), Rad(-40)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vj / 30), 0.025 * Cos(vj / 20)) * angles(Rad(0), Rad(0), Rad(0)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 1 + 0.05 * Sin(vj / 30), 0.025 * Cos(vj / 20)) * angles(Rad(180), Rad(20), Rad(-5)), 0.1)
      end
      attack = false
      vb.Head.face.Texture = "rbxassetid://620619801"
      va.WalkSpeed = 16
    end
    function ShutTheHellUp()
      attack = true
      va.WalkSpeed = 2.01
      vb.Head.face.Texture = "rbxassetid://963148419"
      CreateSound("336377340", vc, 10, 1)
      for fd = 0, 3, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        vg.Neck.C0 = clerp(vg.Neck.C0, necko * angles(Rad(0), Rad(0), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(1, -0.9 - 0.1 * Cos(vh / 20), 0.025 * Cos(vh / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -0.9 - 0.1 * Cos(vh / 20), 0.025 * Cos(vh / 20)) * vk * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(90), Rad(0), Rad(5)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(0), Rad(0), Rad(-5)), 0.1)
      end
      for fd = 0, 1.2, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        vg.Neck.C0 = clerp(vg.Neck.C0, necko * angles(Rad(20), Rad(0), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(1, -0.9 - 0.1 * Cos(vh / 20), 0.025 * Cos(vh / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -0.9 - 0.1 * Cos(vh / 20), 0.025 * Cos(vh / 20)) * vk * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(90), Rad(0), Rad(5)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(0), Rad(0), Rad(-5)), 0.1)
      end
      for fd = 0, 1.2, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        vg.Neck.C0 = clerp(vg.Neck.C0, necko * angles(Rad(-5), Rad(0), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(1, -0.9 - 0.1 * Cos(vh / 20), 0.025 * Cos(vh / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -0.9 - 0.1 * Cos(vh / 20), 0.025 * Cos(vh / 20)) * vk * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(90), Rad(0), Rad(5)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(0), Rad(0), Rad(-5)), 0.1)
      end
      for fd = 0, 1.2, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, -0.2) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        vg.Neck.C0 = clerp(vg.Neck.C0, necko * angles(Rad(20), Rad(0), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(1, -0.9 - 0.1 * Cos(vh / 20), 0.025 * Cos(vh / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -0.9 - 0.1 * Cos(vh / 20), 0.025 * Cos(vh / 20)) * vk * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(90), Rad(0), Rad(5)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(0), Rad(0), Rad(-5)), 0.1)
      end
      for fd = 0, 1.2, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, -0.2) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        vg.Neck.C0 = clerp(vg.Neck.C0, necko * angles(Rad(-5), Rad(0), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(1, -0.9 - 0.1 * Cos(vh / 20), 0.025 * Cos(vh / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -0.9 - 0.1 * Cos(vh / 20), 0.025 * Cos(vh / 20)) * vk * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(90), Rad(0), Rad(5)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(0), Rad(0), Rad(-5)), 0.1)
      end
      for fd = 0, 2, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        vg.Neck.C0 = clerp(vg.Neck.C0, necko * angles(Rad(0), Rad(0), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(1, -0.9 - 0.1 * Cos(vh / 20), 0.025 * Cos(vh / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -0.9 - 0.1 * Cos(vh / 20), 0.025 * Cos(vh / 20)) * vk * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(120), Rad(0), Rad(5)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(0), Rad(0), Rad(-5)), 0.1)
      end
      for fd = 0, 2, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        vg.Neck.C0 = clerp(vg.Neck.C0, necko * angles(Rad(0), Rad(0), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(1, -0.9 - 0.1 * Cos(vh / 20), 0.025 * Cos(vh / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -0.9 - 0.1 * Cos(vh / 20), 0.025 * Cos(vh / 20)) * vk * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(90), Rad(0), Rad(5)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(0), Rad(0), Rad(-5)), 0.1)
      end
      va.WalkSpeed = 16
      vb.Head.face.Texture = "rbxassetid://620619801"
      attack = false
    end
    function SpinMeDad()
      attack = true
      va.WalkSpeed = 5
      vb.JumpPower = 175
      vc.Head.face.Texture = "rbxassetid://1223903433"
      CreateSound("145799973", vd, 10, 1)
      Instance.new("BodyVelocity", ve).Velocity = Vector3.new(0, 1.2, 0)
      Instance.new("BodyVelocity", ve).MaxForce = Vector3.new(10000000, 10000000, 10000000)
      for fe = 0, 60, 0.1 do
        HitboxFunction(vg.CFrame, 0.01, 1, 1, 1, 7, 5, 20, 53, "Knockdown")
        swait()
        CameraEnshaking(1, 1)
        vh.C0 = clerp(vh.C0, vj * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0 - 255.45 * fe)), 0.15)
        ve.Neck.C0 = clerp(ve.Neck.C0, necko * angles(Rad(0), Rad(0), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(1, -0.9 - 0.1 * Cos(vk / 20), 0.025 * Cos(vk / 20)) * vl * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -0.9 - 0.1 * Cos(vk / 20), 0.025 * Cos(vk / 20)) * vm * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vk / 30), 0.025 * Cos(vk / 20)) * angles(Rad(0), Rad(0), Rad(90)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vk / 30), 0.025 * Cos(vk / 20)) * angles(Rad(0), Rad(0), Rad(-90)), 0.1)
      end
      va.WalkSpeed = 16
      Instance.new("BodyVelocity", ve):Destroy()
      vc.Head.face.Texture = "rbxassetid://620619801"
      vb.JumpPower = 50
      attack = false
    end
    function EndMySufferingV2()
      attack = true
      va.WalkSpeed = 1.01
      vb.Head.face.Texture = "rbxassetid://202210455"
      if math.random(1, 5) == 1 then
        meme.SoundId = "rbxassetid://295810519"
      end
      if math.random(1, 5) == 2 then
        meme.SoundId = "rbxassetid://1124778077"
      end
      if math.random(1, 5) == 3 then
        meme.SoundId = "rbxassetid://464157070"
      end
      if math.random(1, 5) == 4 then
        meme.SoundId = "rbxassetid://146334595"
      end
      if math.random(1, 5) == 5 then
        meme.SoundId = "rbxassetid://145536915"
      end
      meme:Play()
      vc:Play()
      vd.Rate = 70
      ve.Rate = 70
      vg.Rate = 70
      vh.Rate = 70
      for fe = 0, 50, 0.1 do
        swait()
        CameraEnshaking(1, 10)
        vc.Parent = vj
        meme.Parent = vj
        vk.C0 = clerp(vk.C0, vl * CF(0, 0, -0.1 + 0.1 * math.cos(vm / 20)) * angles(math.rad(15), math.rad(-10), math.rad(0)), 0.15)
        vo.Neck.C0 = clerp(vo.Neck.C0, necko * angles(math.rad(35), math.rad(0), math.rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(1, -0.9 - 0.1 * math.cos(vm / 20), 0.025 * math.cos(vm / 20)) * vp * angles(math.rad(-5), math.rad(0), math.rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -0.9 - 0.1 * math.cos(vm / 20), 0.025 * math.cos(vm / 20)) * vn * angles(math.rad(-5), math.rad(0), math.rad(-20)), 0.15)
        RW.C0 = clerp(RW.C0, CFrame.new(1.1, 0.5 + 0.1 * math.sin(vm / 30), -0.6) * angles(math.rad(0), math.rad(10), math.rad(-110)), 0.1)
        LW.C0 = clerp(LW.C0, CFrame.new(-1.5, 0.5 + 0.1 * math.sin(vm / 30), 0.055 * math.cos(vm / 20)) * angles(math.rad(0), math.rad(-10), math.rad(-105)), 0.1)
      end
      vc:Stop()
      meme:Stop()
      vd.Rate = 0
      ve.Rate = 0
      vg.Rate = 0
      vh.Rate = 0
      vb.Head.face.Texture = "rbxassetid://620619801"
      attack = false
      va.WalkSpeed = 16
    end
    function HELP()
      attack = true
      va.WalkSpeed = 1.01
      vb.Head.face.Texture = "rbxassetid://307972876"
      CreateSound("1123321019", vc, 10, 1)
      for fd = 0, 15, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        vg.Neck.C0 = clerp(vg.Neck.C0, necko * angles(Rad(0), Rad(0), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(0.7, -0.11, 0.025 * Cos(vh / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-0.7, -0.11, 0.025 * Cos(vh / 20)) * vk * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(0.9, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(0), Rad(0), Rad(0)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-0.9, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(0), Rad(0), Rad(0)), 0.1)
      end
      CreateSound("198462271", vc, 10, 1)
      for fd = 0, 8, 0.1 do
        vb.Head.face.Texture = "rbxassetid://341497730"
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        vg.Neck.C0 = clerp(vg.Neck.C0, necko * angles(Rad(0), Rad(0), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(0.7, -0.11, 0.025 * Cos(vh / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-0.7, -0.11, 0.025 * Cos(vh / 20)) * vk * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(0.9, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(0), Rad(0), Rad(0)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-0.9, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(0), Rad(0), Rad(0)), 0.1)
      end
      for fd = 0, 8, 0.1 do
        vb.Head.face.Texture = "rbxassetid://341497730"
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        vg.Neck.C0 = clerp(vg.Neck.C0, necko * angles(Rad(60), Rad(0), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(0.7, -0.11, 0.025 * Cos(vh / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-0.7, -0.11, 0.025 * Cos(vh / 20)) * vk * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(0.9, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(0), Rad(0), Rad(0)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-0.9, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(0), Rad(0), Rad(0)), 0.1)
      end
      CreateSound("948494432", vc, 10, 1)
      for fd = 0, 7.5, 0.1 do
        vb.Head.face.Texture = "rbxassetid://249062487"
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        vg.Neck.C0 = clerp(vg.Neck.C0, necko * angles(Rad(60), Rad(0), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(0.7, -0.11, 0.025 * Cos(vh / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-0.7, -0.11, 0.025 * Cos(vh / 20)) * vk * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(0.9, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(0), Rad(0), Rad(0)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-0.9, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(0), Rad(0), Rad(0)), 0.1)
      end
      CreateSound("1542642349", vc, 10, 1)
      for fd = 0, 10, 0.1 do
        vb.Head.face.Texture = "rbxassetid://270636807"
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, -0.9) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        vg.Neck.C0 = clerp(vg.Neck.C0, necko * angles(Rad(0), Rad(0), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(0.7, -0.11, 0.025 * Cos(vh / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-0.7, -0.11, 0.025 * Cos(vh / 20)) * vk * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(0.9, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(0), Rad(0), Rad(0)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-0.9, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(0), Rad(0), Rad(0)), 0.1)
      end
      CreateSound("269597232", vc, 10, 1)
      for fd = 0, 6, 0.1 do
        vb.Head.face.Texture = "rbxassetid://265057155"
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, -0.9) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        vg.Neck.C0 = clerp(vg.Neck.C0, necko * angles(Rad(0), Rad(0), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(0.7, -0.11, 0.025 * Cos(vh / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-0.7, -0.11, 0.025 * Cos(vh / 20)) * vk * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(0.9, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(0), Rad(0), Rad(0)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-0.9, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(0), Rad(0), Rad(0)), 0.1)
      end
      attack = false
      vb.Head.face.Texture = "rbxassetid://620619801"
      va.WalkSpeed = 16
    end
    function Choose()
      attack = true
      va.WalkSpeed = 1.01
      vb.Head.face.Texture = "rbxassetid://374187112"
      CreateSound("130784263", vc, 10, 1)
      for fd = 0, 4, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        vg.Neck.C0 = clerp(vg.Neck.C0, necko * angles(Rad(0), Rad(0), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vh / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vh / 20)) * vk * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(110), Rad(0), Rad(0)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(110), Rad(0), Rad(0)), 0.1)
      end
      for fd = 0, 5, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        vg.Neck.C0 = clerp(vg.Neck.C0, necko * angles(Rad(0), Rad(0), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vh / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vh / 20)) * vk * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(35), Rad(0), Rad(-10)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(35), Rad(0), Rad(10)), 0.1)
      end
      attack = false
      vb.Head.face.Texture = "rbxassetid://620619801"
      va.WalkSpeed = 16
    end
    function slap()
      attack = true
      va.WalkSpeed = 10
      CreateSound("146163534", vb, 10, 1)
      CameraEnshaking(1, 2)
      for fd = 0, 4, 0.1 do
        swait()
        vc.C0 = clerp(vc.C0, vd * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        ve.Neck.C0 = clerp(ve.Neck.C0, necko * angles(Rad(20), Rad(0), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vg / 20)) * vh * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vg / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(20), Rad(0), Rad(5)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(119), Rad(45), Rad(50)), 0.1)
      end
      vk.Head.face.Texture = "rbxassetid://620619801"
      attack = false
      va.WalkSpeed = 16
    end
    function MYSPAGHETTTTTTT()
      attack = true
      va.WalkSpeed = 1.01
      CreateSound("1282149571", vb, 10, 1)
      CameraEnshaking(1, 2.2)
      for fd = 0, 4, 0.1 do
        swait()
        vc.C0 = clerp(vc.C0, vd * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        ve.Neck.C0 = clerp(ve.Neck.C0, necko * angles(Rad(20), Rad(0), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vg / 20)) * vh * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vg / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(20), Rad(0), Rad(5)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(119), Rad(45), Rad(50)), 0.1)
      end
      for fd = 0, 5, 0.1 do
        swait()
        vc.C0 = clerp(vc.C0, vd * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        ve.Neck.C0 = clerp(ve.Neck.C0, necko * angles(Rad(0), Rad(0), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vg / 20)) * vh * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vg / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(110), Rad(0), Rad(0)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(110), Rad(0), Rad(0)), 0.1)
      end
      for fd = 0, 6, 0.1 do
        swait()
        vc.C0 = clerp(vc.C0, vd * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        ve.Neck.C0 = clerp(ve.Neck.C0, necko * angles(Rad(0), Rad(0), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vg / 20)) * vh * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vg / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(35), Rad(0), Rad(-10)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(35), Rad(0), Rad(10)), 0.1)
      end
      attack = false
      vk.Head.face.Texture = "rbxassetid://620619801"
      va.WalkSpeed = 16
    end
    function dead()
      attack = true
      va.WalkSpeed = 0.2
      CreateSound("137225991", vb, 10, 1)
      vc.Head.face.Texture = "rbxassetid://297512410"
      for fd = 0, 1.1, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        vg.Neck.C0 = clerp(vg.Neck.C0, necko * angles(Rad(0), Rad(0), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vh / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(90)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vh / 20)) * vk * angles(Rad(-2.5), Rad(0), Rad(-90)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 1 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(0), Rad(0), Rad(140)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 1 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(0), Rad(0), Rad(-140)), 0.1)
      end
      for fd = 0, 1.1, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(90), Rad(0)), 0.15)
        vg.Neck.C0 = clerp(vg.Neck.C0, necko * angles(Rad(0), Rad(0), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vh / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(90)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vh / 20)) * vk * angles(Rad(-2.5), Rad(0), Rad(-90)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 1 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(0), Rad(0), Rad(140)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 1 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(0), Rad(0), Rad(-140)), 0.1)
      end
      for fd = 0, 1.1, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(180), Rad(0)), 0.15)
        vg.Neck.C0 = clerp(vg.Neck.C0, necko * angles(Rad(0), Rad(0), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vh / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(90)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vh / 20)) * vk * angles(Rad(-2.5), Rad(0), Rad(-90)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 1 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(0), Rad(0), Rad(140)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 1 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(0), Rad(0), Rad(-140)), 0.1)
      end
      for fd = 0, 1.1, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(270), Rad(0)), 0.15)
        vg.Neck.C0 = clerp(vg.Neck.C0, necko * angles(Rad(0), Rad(0), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vh / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(90)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vh / 20)) * vk * angles(Rad(-2.5), Rad(0), Rad(-90)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 1 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(0), Rad(0), Rad(140)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 1 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(0), Rad(0), Rad(-140)), 0.1)
      end
      for fd = 0, 1.1, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        vg.Neck.C0 = clerp(vg.Neck.C0, necko * angles(Rad(0), Rad(0), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vh / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(90)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vh / 20)) * vk * angles(Rad(-2.5), Rad(0), Rad(-90)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 1 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(0), Rad(0), Rad(140)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 1 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(0), Rad(0), Rad(-140)), 0.1)
      end
      for fd = 0, 1.1, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(90), Rad(0)), 0.15)
        vg.Neck.C0 = clerp(vg.Neck.C0, necko * angles(Rad(0), Rad(0), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vh / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(90)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vh / 20)) * vk * angles(Rad(-2.5), Rad(0), Rad(-90)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 1 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(0), Rad(0), Rad(140)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 1 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(0), Rad(0), Rad(-140)), 0.1)
      end
      for fd = 0, 1.1, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(180), Rad(0)), 0.15)
        vg.Neck.C0 = clerp(vg.Neck.C0, necko * angles(Rad(0), Rad(0), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vh / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(90)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vh / 20)) * vk * angles(Rad(-2.5), Rad(0), Rad(-90)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 1 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(0), Rad(0), Rad(140)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 1 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(0), Rad(0), Rad(-140)), 0.1)
      end
      for fd = 0, 1.1, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(270), Rad(0)), 0.15)
        vg.Neck.C0 = clerp(vg.Neck.C0, necko * angles(Rad(0), Rad(0), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vh / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(90)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vh / 20)) * vk * angles(Rad(-2.5), Rad(0), Rad(-90)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 1 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(0), Rad(0), Rad(140)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 1 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(0), Rad(0), Rad(-140)), 0.1)
      end
      for fd = 0, 1.1, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        vg.Neck.C0 = clerp(vg.Neck.C0, necko * angles(Rad(0), Rad(0), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vh / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(90)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vh / 20)) * vk * angles(Rad(-2.5), Rad(0), Rad(-90)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 1 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(0), Rad(0), Rad(140)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 1 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(0), Rad(0), Rad(-140)), 0.1)
      end
      vc.Head.face.Texture = "rbxassetid://273309187"
      for fd = 0, 9, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, -2.49) * angles(Rad(-90), Rad(90), Rad(0)), 0.15)
        vg.Neck.C0 = clerp(vg.Neck.C0, necko * angles(Rad(0), Rad(0), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vh / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vh / 20)) * vk * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(0), Rad(0), Rad(30)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(0), Rad(0), Rad(-30)), 0.1)
      end
      attack = false
      vc.Head.face.Texture = "rbxassetid://620619801"
      va.WalkSpeed = 16
    end
    function hap()
      attack = true
      va.WalkSpeed = 0.1
      CreateSound("363808674", vb, 10, 1)
      vc.Head.face.Texture = "rbxassetid://315792941"
      for fd = 0, 12, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        vg.Neck.C0 = clerp(vg.Neck.C0, necko * angles(Rad(0), Rad(0), Rad(180)), 0.3)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vh / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vh / 20)) * vk * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(0), Rad(0), Rad(0)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(0), Rad(0), Rad(0)), 0.1)
      end
      CreateSound("233168827", vb, 10, 1)
      vc.Head.face.Texture = "rbxassetid://335761015"
      for fd = 0, 10, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        vg.Neck.C0 = clerp(vg.Neck.C0, necko * angles(Rad(0), Rad(0), Rad(180)), 0.3)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vh / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vh / 20)) * vk * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(0), Rad(0), Rad(0)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(0), Rad(0), Rad(0)), 0.1)
      end
      CreateSound("363808674", vb, 10, 1)
      attack = false
      vc.Head.face.Texture = "rbxassetid://620619801"
      va.WalkSpeed = 16
    end
    function HAAAAA()
      attack = true
      va.WalkSpeed = 1.01
      vb.Head.face.Texture = "rbxassetid://305068389"
      chargeup.Pitch = 1
      for fd = 0, 7, 0.1 do
        swait()
        vc.C0 = clerp(vc.C0, vd * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        ve.Neck.C0 = clerp(ve.Neck.C0, necko * angles(Rad(0), Rad(0), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vg / 20)) * vh * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vg / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 1 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(150), Rad(0), Rad(0)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 1 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(150), Rad(0), Rad(0)), 0.1)
      end
      vb.Head.face.Texture = "rbxassetid://313921371"
      chargeup:play()
      for fd = 0, 30, 0.1 do
        swait()
        CameraEnshaking(1, 2)
        chargeup.Parent = vk
        vc.C0 = clerp(vc.C0, vd * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        ve.Neck.C0 = clerp(ve.Neck.C0, necko * angles(Rad(15), Rad(0), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(1.1, -1, 0.025 * Cos(vg / 20)) * vh * angles(Rad(-20), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1.1, -1, 0.025 * Cos(vg / 20)) * vj * angles(Rad(-20), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.4, 5E-10 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(150), Rad(0), Rad(0)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.4, 5E-10 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(150), Rad(0), Rad(0)), 0.1)
      end
      chargeup:stop()
      chargeup.Pitch = 1.1
      chargeup.TimePosition = 1
      chargeup:play()
      vb.Head.face.Texture = "rbxassetid://304942859"
      for fd, fe in pairs(c:children()) do
        if fe.ClassName == "Part" then
          trazx:clone().Parent = fe
          trazx:clone().LightEmission = 1
          trazx:clone().Color = ColorSequence.new(Color3.new(0, 0.666666666666667, 1))
          trazx:clone().Rate = 15
          trazx:clone().Rotation = NumberRange.new(-5, 5)
          trazx:clone().Lifetime = NumberRange.new(1.5, 2)
          trazx:clone().Size = NumberSequence.new({
            NumberSequenceKeypoint.new(0, 0.1, 0),
            NumberSequenceKeypoint.new(1, 0, 0)
          })
          trazx:clone().Transparency = NumberSequence.new({
            NumberSequenceKeypoint.new(0, 1, 0),
            NumberSequenceKeypoint.new(0.135, 0, 0),
            NumberSequenceKeypoint.new(0.875, 0, 0),
            NumberSequenceKeypoint.new(1, 1, 0)
          })
          trazx:clone().Speed = NumberRange.new(0.5)
          trazx:clone().VelocitySpread = 360
          trazx:clone().VelocityInheritance = 0.5
          trazx:clone().ZOffset = 2
          trazx:clone().Acceleration = Vector3.new(0, 2.5, 0)
        end
      end
      trazx:clone().Parent = c.HumanoidRootPart
      trazx:clone().Texture = "rbxassetid://347730682"
      trazx:clone().LightEmission = 0.8
      trazx:clone().Color = ColorSequence.new(Color3.new(0, 0.666666666666667, 1))
      trazx:clone().Rate = 250
      trazx:clone().Rotation = NumberRange.new(-5, 5)
      trazx:clone().Lifetime = NumberRange.new(0.75)
      trazx:clone().Size = NumberSequence.new({
        NumberSequenceKeypoint.new(0, 4.81, 0.875),
        NumberSequenceKeypoint.new(1, 2.13, 0.875)
      })
      trazx:clone().Transparency = NumberSequence.new({
        NumberSequenceKeypoint.new(0, 1, 0),
        NumberSequenceKeypoint.new(0.0399, 0.85, 0),
        NumberSequenceKeypoint.new(0.394, 0.9, 0),
        NumberSequenceKeypoint.new(0.699, 1, 0),
        NumberSequenceKeypoint.new(1, 1, 0)
      })
      trazx:clone().Speed = NumberRange.new(15)
      trazx:clone().VelocitySpread = 360
      trazx:clone().VelocityInheritance = 0.5
      trazx:clone().ZOffset = 3.5
      trazx:clone().Acceleration = Vector3.new(0, 25, 0)
      for fe = 0, 35, 0.1 do
        swait()
        vl.Parent = vk
        CameraEnshaking(1, 3)
        vc.C0 = clerp(vc.C0, vd * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        ve.Neck.C0 = clerp(ve.Neck.C0, necko * angles(Rad(60), Rad(0), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(1.1, -1, 0.025 * Cos(vg / 20)) * vh * angles(Rad(-20), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1.1, -1, 0.025 * Cos(vg / 20)) * vj * angles(Rad(-20), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.4, 5E-10 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(150), Rad(0), Rad(0)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.4, 5E-10 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(150), Rad(0), Rad(0)), 0.1)
      end
      chargeup:stop()
      chargeup.Pitch = 1.3
      chargeup.TimePosition = 1
      chargeup:play()
      trazx:clone():Destroy()
      trazx:clone():Destroy()
      vb.Head.face.Texture = "rbxassetid://280233855"
      trazx:clone().Parent = c.HumanoidRootPart
      trazx:clone().Texture = "rbxassetid://347730682"
      trazx:clone().LightEmission = 0.8
      trazx:clone().Color = ColorSequence.new(Color3.new(1, 0, 0))
      trazx:clone().Rate = 250
      trazx:clone().Rotation = NumberRange.new(-5, 5)
      trazx:clone().Lifetime = NumberRange.new(0.3)
      trazx:clone().Size = NumberSequence.new({
        NumberSequenceKeypoint.new(0, 8, 0.875),
        NumberSequenceKeypoint.new(1, 10, 0.875)
      })
      trazx:clone().Transparency = NumberSequence.new({
        NumberSequenceKeypoint.new(0, 1, 0),
        NumberSequenceKeypoint.new(0.0399, 0.531, 0),
        NumberSequenceKeypoint.new(0.394, 0.906, 0),
        NumberSequenceKeypoint.new(0.699, 1, 0),
        NumberSequenceKeypoint.new(1, 1, 0)
      })
      for fg = 0, 32, 0.1 do
        swait()
        CameraEnshaking(1, 5)
        chargeup.Parent = vk
        vc.C0 = clerp(vc.C0, vd * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        ve.Neck.C0 = clerp(ve.Neck.C0, necko * angles(Rad(-65), Rad(0), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(1.1, -1, 0.025 * Cos(vg / 20)) * vh * angles(Rad(-20), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1.1, -1, 0.025 * Cos(vg / 20)) * vj * angles(Rad(-20), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.4, 5E-10 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(150), Rad(0), Rad(0)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.4, 5E-10 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(150), Rad(0), Rad(0)), 0.1)
      end
      chargeup:stop()
      CreateSound("681582832", vk, 10, 1)
      game.Players.LocalPlayer.Character:BreakJoints()
      Instance.new("Explosion", workspace).Position = ve.Position
      Instance.new("Explosion", workspace).BlastPressure = 9
      Instance.new("Explosion", workspace).BlastRadius = 30
      Instance.new("Explosion", workspace).ExplosionType = 0
      attack = false
      va.WalkSpeed = 16
      trazx:clone():Destroy()
      CameraEnshaking(4, 30)
      error("WARNING, TO MUCH ENERGY.")
    end
    function NEN()
      attack = true
      va.WalkSpeed = 1.01
      CreateSound("230292011", vb, 10, 1)
      for fd = 0, 4, 0.1 do
        swait()
        CameraEnshaking(1, 3)
        vc.C0 = clerp(vc.C0, vd * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        ve.Neck.C0 = clerp(ve.Neck.C0, necko * angles(Rad(-90), Rad(0), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vg / 20)) * vh * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vg / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(0), Rad(0), Rad(120)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(0), Rad(0), Rad(-120)), 0.1)
      end
      attack = false
      vk.Head.face.Texture = "rbxassetid://620619801"
      va.WalkSpeed = 16
    end
    function FLYSKYHIGH()
      attack = true
      timetofly = false
      va.WalkSpeed = 0.05
      vb.Head.face.Texture = "rbxassetid://705269463"
      Cause_Im_having_a_good_time_having_a_good_time:Play()
      Cause_Im_having_a_good_time_having_a_good_time.TimePosition = 35.3
      vc.JumpPower = 0
      for fd = 0, 300, 0.1 do
        swait()
        CameraEnshaking(1, 7)
        HitboxFunction(vd.CFrame, 0.01, 1, 1, 1, 7, 75, 500, 100, "Knockdown")
        Cause_Im_having_a_good_time_having_a_good_time.Parent = ve
        vg.Velocity = vg.CFrame.lookVector * 225
        vh.C0 = clerp(vh.C0, vj * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        vk.Neck.C0 = clerp(vk.Neck.C0, necko * angles(Rad(0 - 255.45 * fd), Rad(0), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vl / 20)) * vm * angles(Rad(-2.5), Rad(0), Rad(0 - 255.45 * fd)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vl / 20)) * vo * angles(Rad(-2.5), Rad(0), Rad(0 - 255.45 * fd)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vl / 30), 0.025 * Cos(vl / 20)) * angles(Rad(-75), Rad(0), Rad(0)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vl / 30), 0.025 * Cos(vl / 20)) * angles(Rad(-75), Rad(0), Rad(0)), 0.1)
      end
      Cause_Im_having_a_good_time_having_a_good_time:Stop()
      attack = false
      vc.JumpPower = 50
      vb.Head.face.Texture = "rbxassetid://620619801"
      va.WalkSpeed = 16
      wait(45)
      timetofly = true
      warn("You can FLY SKY HIGH Now! Go Nuts!")
    end
    function highnoon()
      attack = true
      va.WalkSpeed = 1.01
      CreateSound("495316660", vb, 10, 1)
      vc.Head.face.Texture = "rbxassetid://155195214"
      CameraEnshaking(2, 4)
      Instance.new("Part", vd).Name = "Blob"
      Instance.new("Part", vd).CanCollide = false
      Instance.new("Part", vd).BrickColor = BrickColor.new("Really black")
      Instance.new("Part", vd).Transparency = 0
      Instance.new("Part", vd).Material = "Plastic"
      Instance.new("Part", vd).Size = Vector3.new(1, 1, 2)
      Instance.new("Part", vd).TopSurface = Enum.SurfaceType.Smooth
      Instance.new("Part", vd).BottomSurface = Enum.SurfaceType.Smooth
      Instance.new("Weld", (Instance.new("Part", vd))).Part1, Instance.new("Weld", (Instance.new("Part", vd))).Part0 = Instance.new("Part", vd), ve
      Instance.new("Weld", (Instance.new("Part", vd))).C1 = CFrame.new(0, -0.4, -1.6) * angles(Rad(180), Rad(0), Rad(180))
      Instance.new("Weld", (Instance.new("Part", vd))).C0 = CFrame.Angles(math.rad(-90), 0, 0)
      Instance.new("SpecialMesh").Parent = Instance.new("Part", vd)
      Instance.new("SpecialMesh").MeshId = "http://www.roblox.com/asset/?id=432256490"
      Instance.new("SpecialMesh").TextureId = "http://www.roblox.com/asset/?id=432256526"
      Instance.new("SpecialMesh").Scale = Vector3.new(0.002, 0.002, 0.002)
      for fh = 0, 7.75, 0.1 do
        swait()
        vg.C0 = clerp(vg.C0, vh * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(90)), 0.2)
        vj.Neck.C0 = clerp(vj.Neck.C0, necko * angles(Rad(30), Rad(0), Rad(0)), 0.2)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vk / 20)) * vl * angles(Rad(-2.5), Rad(0), Rad(0)), 0.2)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vk / 20)) * vm * angles(Rad(-2.5), Rad(0), Rad(0)), 0.2)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vk / 30), 0.025 * Cos(vk / 20)) * angles(Rad(0), Rad(-0.6), Rad(180)), 0.2)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vk / 30), 0.025 * Cos(vk / 20)) * angles(Rad(-45), Rad(-0.6), Rad(136 - 4.5 * Sin(vk / 20))), 0.2)
      end
      for fh = 0, 16.5, 0.1 do
        swait()
        vg.C0 = clerp(vg.C0, vh * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(90)), 0.2)
        vj.Neck.C0 = clerp(vj.Neck.C0, necko * angles(Rad(30), Rad(0), Rad(0)), 0.2)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vk / 20)) * vl * angles(Rad(-2.5), Rad(0), Rad(0)), 0.2)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vk / 20)) * vm * angles(Rad(-2.5), Rad(0), Rad(0)), 0.2)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vk / 30), 0.025 * Cos(vk / 20)) * angles(Rad(0), Rad(-0.6), Rad(90)), 0.2)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vk / 30), 0.025 * Cos(vk / 20)) * angles(Rad(-45), Rad(-0.6), Rad(136 - 4.5 * Sin(vk / 20))), 0.2)
      end
      Instance.new("Part", vd).Transparency = 1
      Instance.new("Part", vd):Destroy()
      attack = false
      vc.Head.face.Texture = "rbxassetid://620619801"
      va.WalkSpeed = 16
    end
    function somuchcancerwhy()
      attack = true
      va.WalkSpeed = 0.1
      vb.Head.face.Texture = "rbxassetid://315074049"
      if math.random(1, 13) == 1 then
        vc.SoundId = "rbxassetid://295810519"
        vc.TimePosition = 1
      end
      if math.random(1, 13) == 2 then
        vc.SoundId = "rbxassetid://488472970"
        vc.TimePosition = 2
      end
      if math.random(1, 13) == 3 then
        vc.SoundId = "rbxassetid://917045199"
        vc.TimePosition = 3
      end
      if math.random(1, 13) == 4 then
        vc.SoundId = "rbxassetid://324205173"
        vc.TimePosition = 1
      end
      if math.random(1, 13) == 5 then
        vc.SoundId = "rbxassetid://376134741"
        vc.TimePosition = 8
      end
      if math.random(1, 13) == 6 then
        vc.SoundId = "rbxassetid://164147183"
        vc.TimePosition = 0
      end
      if math.random(1, 13) == 7 then
        vc.SoundId = "rbxassetid://825526716"
        vc.TimePosition = 1
      end
      if math.random(1, 13) == 8 then
        vc.SoundId = "rbxassetid://185460366"
        vc.TimePosition = 0
      end
      if math.random(1, 13) == 9 then
        vc.SoundId = "rbxassetid://273319633"
        vc.TimePosition = 1
      end
      if math.random(1, 13) == 10 then
        vc.SoundId = "rbxassetid://506212392"
        vc.TimePosition = 2
      end
      if math.random(1, 13) == 11 then
        vc.SoundId = "rbxassetid://708297448"
        vc.TimePosition = 4
      end
      if math.random(1, 13) == 12 then
        vc.SoundId = "rbxassetid://497199103"
        vc.TimePosition = 9
      end
      if math.random(1, 13) == 13 then
        vc.SoundId = "rbxassetid://152833989"
        vc.TimePosition = 1
      end
      vc:Play()
      for fe = 0, 100, 0.1 do
        swait()
        CameraEnshaking(2, 3)
        vc.Parent = vd
        ve.Torso.Neck.C0 = ve.Torso.Neck.C0 * CFrame.Angles(math.random(-10, 10), math.random(-10, 10), math.random(-10, 10))
      end
      attack = false
      vc:Stop()
      vb.Head.face.Texture = "rbxassetid://620619801"
      va.WalkSpeed = 16
    end
    function WRY()
      attack = true
      va.WalkSpeed = 0.3
      CreateSound("794081034", vb, 10, 1)
      vc.Head.face.Texture = "rbxassetid://396389196"
      for fd = 0, 2, 0.1 do
        swait()
        CameraEnshaking(1, 2)
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        vg.Neck.C0 = clerp(vg.Neck.C0, necko * angles(Rad(30), Rad(0), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vh / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vh / 20)) * vk * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(0), Rad(140), Rad(60)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(0), Rad(-140), Rad(-60)), 0.1)
      end
      for fd = 0, 14.7, 0.1 do
        swait()
        CameraEnshaking(1, 3)
        vd.C0 = clerp(vd.C0, ve * CF(0, 1, -0.9) * angles(Rad(-75), Rad(0), Rad(0)), 0.15)
        vg.Neck.C0 = clerp(vg.Neck.C0, necko * angles(Rad(65), Rad(0), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(1.1, -1, 0.025 * Cos(vh / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(-70)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1.1, -1, 0.025 * Cos(vh / 20)) * vk * angles(Rad(-2.5), Rad(0), Rad(70)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(45), Rad(0), Rad(40)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(45), Rad(0), Rad(-40)), 0.1)
      end
      attack = false
      vc.Head.face.Texture = "rbxassetid://620619801"
      va.WalkSpeed = 16
    end
    function BOI()
      attack = true
      va.WalkSpeed = 1.01
      CreateSound("390901873", vb, 10, 1)
      vc.Head.face.Texture = "rbxassetid://282463320"
      for fd = 0, 4, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        vg.Neck.C0 = clerp(vg.Neck.C0, necko * angles(Rad(0), Rad(0), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vh / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vh / 20)) * vk * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(0), Rad(50), Rad(90)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(0), Rad(-50), Rad(-90)), 0.1)
      end
      for fd = 0, 4, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        vg.Neck.C0 = clerp(vg.Neck.C0, necko * angles(Rad(30), Rad(0), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vh / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vh / 20)) * vk * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(0), Rad(140), Rad(60)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(0), Rad(-140), Rad(-60)), 0.1)
      end
      attack = false
      vc.Head.face.Texture = "rbxassetid://620619801"
      va.WalkSpeed = 16
    end
    function WhatHuh()
      attack = true
      va.WalkSpeed = 1.01
      CreateSound("130766865", vb, 10, 1)
      vc.Head.face.Texture = "rbxassetid://276732672"
      for fd = 0, 4, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        vg.Neck.C0 = clerp(vg.Neck.C0, necko * angles(Rad(0), Rad(26), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vh / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vh / 20)) * vk * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(0), Rad(0), Rad(120)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(0), Rad(0), Rad(-120)), 0.1)
      end
      for fd = 0, 6.7, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        vg.Neck.C0 = clerp(vg.Neck.C0, necko * angles(Rad(0), Rad(-26), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vh / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vh / 20)) * vk * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(0), Rad(0), Rad(120)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(0), Rad(0), Rad(-120)), 0.1)
      end
      for fd = 0, 8.1, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        vg.Neck.C0 = clerp(vg.Neck.C0, necko * angles(Rad(0), Rad(26), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vh / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vh / 20)) * vk * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(0), Rad(0), Rad(120)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(0), Rad(0), Rad(-120)), 0.1)
      end
      for fd = 0, 1, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        vg.Neck.C0 = clerp(vg.Neck.C0, necko * angles(Rad(40), Rad(-26), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vh / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vh / 20)) * vk * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(0), Rad(0), Rad(120)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(0), Rad(0), Rad(-120)), 0.1)
      end
      for fd = 0, 1, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        vg.Neck.C0 = clerp(vg.Neck.C0, necko * angles(Rad(40), Rad(26), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vh / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vh / 20)) * vk * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(0), Rad(0), Rad(120)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(0), Rad(0), Rad(-120)), 0.1)
      end
      for fd = 0, 4, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        vg.Neck.C0 = clerp(vg.Neck.C0, necko * angles(Rad(0), Rad(-26), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vh / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vh / 20)) * vk * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(0), Rad(0), Rad(120)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(0), Rad(0), Rad(-120)), 0.1)
      end
      attack = false
      vc.Head.face.Texture = "rbxassetid://620619801"
      va.WalkSpeed = 16
    end
    function NothingPersonal()
      if va.Target.Parent ~= vb and va.Target.Parent.Parent ~= vb and va.Target.Parent:FindFirstChildOfClass("Humanoid") ~= nil then
        if (va.Target.Parent:FindFirstChild("Torso") or va.Target.Parent:FindFirstChild("UpperTorso")) ~= nil and va.Target.Parent:FindFirstChildOfClass("Humanoid") ~= nil then
          attack = true
          vc.CFrame = va.Target.Parent:FindFirstChild("Torso") or va.Target.Parent:FindFirstChild("UpperTorso").CFrame * CFrame.new(-1, 0, 3)
          va.Target.Parent:FindFirstChild("Torso") or va.Target.Parent:FindFirstChild("UpperTorso").Anchored = true
          vd.WalkSpeed = 0
          ve.Head.face.Texture = "rbxassetid://40770311"
          CreateSound("1255922819", vg, 10, 1)
          CameraEnshaking(2, 4)
        end
        wait(3.5)
        for fj = 0, 9, 0.1 do
          swait()
          for fo = 1, 2 do
            HitboxFunction(vh.CFrame, 0.01, 1, 1, 1, 7, 1, 10, 53, "Knockdown")
            CameraEnshaking(1, 7)
            Effects.Sphere.Create(BrickColor.new("Persimmon"), va.Target.Parent:FindFirstChild("Torso") or va.Target.Parent:FindFirstChild("UpperTorso").CFrame * CFrame.new(math.random(-200, 200) / 100, math.random(-300, 200) / 100, math.random(-100, 100) / 100), 1, 1, 1, 15, 15, 15, 0.2)
          end
        end
        wait(0.5)
        va.Target.Parent:FindFirstChild("Torso") or va.Target.Parent:FindFirstChild("UpperTorso").Anchored = false
        attack = false
        ve.Head.face.Texture = "rbxassetid://620619801"
        vd.WalkSpeed = 16
      end
    end
    function VeryMuchWorrying()
      attack = true
      va.WalkSpeed = 1.01
      vb.Head.face.Texture = "rbxassetid://111523405"
      CreateSound("1395854043", vc, 10, 1)
      for fd = 0, 14, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        vg.Neck.C0 = clerp(vg.Neck.C0, necko * angles(Rad(0), Rad(0), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vh / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vh / 20)) * vk * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.3, 0.9 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(0), Rad(0), Rad(-145)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.3, 0.9 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(0), Rad(0), Rad(145)), 0.1)
      end
      attack = false
      vb.Head.face.Texture = "rbxassetid://620619801"
      va.WalkSpeed = 16
    end
    function Ashes()
      attack = true
      va.WalkSpeed = 1.01
      vb.Head.face.Texture = "rbxassetid://360687027"
      CreateSound("290084602", vc, 10, 1)
      for fd = 0, 6.2, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, -0.1 + 0.1 * Cos(vg / 20)) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        vc.Neck.C0 = clerp(vc.Neck.C0, necko * angles(Rad(-30), Rad(0), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(1, -0.9 - 0.1 * Cos(vg / 20), 0.025 * Cos(vg / 20)) * vh * angles(Rad(-5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -0.9 - 0.1 * Cos(vg / 20), 0.025 * Cos(vg / 20)) * vj * angles(Rad(-5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(0), Rad(0), Rad(145)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(0), Rad(0), Rad(-145)), 0.1)
      end
      for fd = 0, 6.2, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, -0.1 + 0.1 * Cos(vg / 20)) * angles(Rad(20), Rad(0), Rad(0)), 0.15)
        vc.Neck.C0 = clerp(vc.Neck.C0, necko * angles(Rad(0), Rad(0), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(1, -0.9 - 0.1 * Cos(vg / 20), 0.025 * Cos(vg / 20)) * vh * angles(Rad(-5), Rad(0), Rad(20)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -0.9 - 0.1 * Cos(vg / 20), 0.025 * Cos(vg / 20)) * vj * angles(Rad(-5), Rad(0), Rad(-20)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(-30), Rad(0), Rad(15)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(-30), Rad(0), Rad(-15)), 0.1)
      end
      attack = false
      vb.Head.face.Texture = "rbxassetid://620619801"
      va.WalkSpeed = 16
    end
    function AnotherOne()
      attack = true
      va.WalkSpeed = 1.01
      swait(165)
      repeat
        swait()
        vd.Head.face.Texture = "rbxassetid://582931093"
        CameraEnshaking(1, 10)
        vc.Neck.C0 = clerp(vc.Neck.C0, necko * angles(Rad(0), Rad(0), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(ve / 20)) * vg * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(ve / 20)) * vh * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.3, 0.9 + 0.05 * Sin(ve / 30), 0.025 * Cos(ve / 20)) * angles(Rad(0), Rad(0), Rad(90)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.3, 0.9 + 0.05 * Sin(ve / 30), 0.025 * Cos(ve / 20)) * angles(Rad(0), Rad(0), Rad(-90)), 0.1)
        vc.CFrame = vc.CFrame * CF(0, 1, 0)
        swait()
        vc.CFrame = vc.CFrame
      until CreateSound("1205111204", vb, 10, 1).Playing == false
      vd.Head.face.Texture = "rbxassetid://620619801"
      attack = false
      va.WalkSpeed = 16
    end
    function Dance()
      attack = true
      va.WalkSpeed = 1.01
      CreateSound("838766490", vb, 10, 1)
      vc.Head.face.Texture = "rbxassetid://258591579"
      for fd = 0, 2, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        vg.Neck.C0 = clerp(vg.Neck.C0, necko * angles(Rad(0), Rad(0), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vh / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vh / 20)) * vk * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(0), Rad(0), Rad(180)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(0), Rad(0), Rad(-180)), 0.1)
      end
      for fd = 0, 4, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        vg.Neck.C0 = clerp(vg.Neck.C0, necko * angles(Rad(0), Rad(0), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vh / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(-30)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vh / 20)) * vk * angles(Rad(-2.5), Rad(0), Rad(-30)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(50), Rad(0), Rad(180)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(-50), Rad(0), Rad(-180)), 0.1)
      end
      for fd = 0, 4, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        vg.Neck.C0 = clerp(vg.Neck.C0, necko * angles(Rad(0), Rad(0), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vh / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(30)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vh / 20)) * vk * angles(Rad(-2.5), Rad(0), Rad(30)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(-50), Rad(0), Rad(180)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(50), Rad(0), Rad(-180)), 0.1)
      end
      for fd = 0, 4, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        vg.Neck.C0 = clerp(vg.Neck.C0, necko * angles(Rad(0), Rad(0), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vh / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(-30)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vh / 20)) * vk * angles(Rad(-2.5), Rad(0), Rad(-30)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(50), Rad(0), Rad(180)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(-50), Rad(0), Rad(-180)), 0.1)
      end
      for fd = 0, 4, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        vg.Neck.C0 = clerp(vg.Neck.C0, necko * angles(Rad(0), Rad(0), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vh / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(30)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vh / 20)) * vk * angles(Rad(-2.5), Rad(0), Rad(30)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(-50), Rad(0), Rad(180)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(50), Rad(0), Rad(-180)), 0.1)
      end
      for fd = 0, 4, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        vg.Neck.C0 = clerp(vg.Neck.C0, necko * angles(Rad(0), Rad(0), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vh / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(-30)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vh / 20)) * vk * angles(Rad(-2.5), Rad(0), Rad(-30)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(50), Rad(0), Rad(180)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(-50), Rad(0), Rad(-180)), 0.1)
      end
      for fd = 0, 4, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        vg.Neck.C0 = clerp(vg.Neck.C0, necko * angles(Rad(0), Rad(0), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vh / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(30)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vh / 20)) * vk * angles(Rad(-2.5), Rad(0), Rad(30)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(-50), Rad(0), Rad(180)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(50), Rad(0), Rad(-180)), 0.1)
      end
      for fd = 0, 4, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        vg.Neck.C0 = clerp(vg.Neck.C0, necko * angles(Rad(0), Rad(0), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vh / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(-30)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vh / 20)) * vk * angles(Rad(-2.5), Rad(0), Rad(-30)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(50), Rad(0), Rad(180)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(-50), Rad(0), Rad(-180)), 0.1)
      end
      for fd = 0, 4, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        vg.Neck.C0 = clerp(vg.Neck.C0, necko * angles(Rad(0), Rad(0), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vh / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(30)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vh / 20)) * vk * angles(Rad(-2.5), Rad(0), Rad(30)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(-50), Rad(0), Rad(180)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(50), Rad(0), Rad(-180)), 0.1)
      end
      for fd = 0, 4, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        vg.Neck.C0 = clerp(vg.Neck.C0, necko * angles(Rad(0), Rad(0), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vh / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(-30)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vh / 20)) * vk * angles(Rad(-2.5), Rad(0), Rad(-30)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(50), Rad(0), Rad(180)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(-50), Rad(0), Rad(-180)), 0.1)
      end
      for fd = 0, 4, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        vg.Neck.C0 = clerp(vg.Neck.C0, necko * angles(Rad(0), Rad(0), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vh / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(30)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vh / 20)) * vk * angles(Rad(-2.5), Rad(0), Rad(30)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(-50), Rad(0), Rad(180)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(50), Rad(0), Rad(-180)), 0.1)
      end
      for fd = 0, 4, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        vg.Neck.C0 = clerp(vg.Neck.C0, necko * angles(Rad(0), Rad(0), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vh / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(-30)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vh / 20)) * vk * angles(Rad(-2.5), Rad(0), Rad(-30)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(50), Rad(0), Rad(180)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(-50), Rad(0), Rad(-180)), 0.1)
      end
      for fd = 0, 4, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        vg.Neck.C0 = clerp(vg.Neck.C0, necko * angles(Rad(0), Rad(0), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vh / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(30)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vh / 20)) * vk * angles(Rad(-2.5), Rad(0), Rad(30)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(-50), Rad(0), Rad(180)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(50), Rad(0), Rad(-180)), 0.1)
      end
      for fd = 0, 4, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        vg.Neck.C0 = clerp(vg.Neck.C0, necko * angles(Rad(0), Rad(0), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vh / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(-30)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vh / 20)) * vk * angles(Rad(-2.5), Rad(0), Rad(-30)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(50), Rad(0), Rad(180)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(-50), Rad(0), Rad(-180)), 0.1)
      end
      for fd = 0, 4, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        vg.Neck.C0 = clerp(vg.Neck.C0, necko * angles(Rad(0), Rad(0), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vh / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(30)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vh / 20)) * vk * angles(Rad(-2.5), Rad(0), Rad(30)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(-50), Rad(0), Rad(180)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(50), Rad(0), Rad(-180)), 0.1)
      end
      for fd = 0, 3, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        vg.Neck.C0 = clerp(vg.Neck.C0, necko * angles(Rad(0), Rad(0), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vh / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(-30)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vh / 20)) * vk * angles(Rad(-2.5), Rad(0), Rad(-30)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(50), Rad(0), Rad(180)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(-50), Rad(0), Rad(-180)), 0.1)
      end
      attack = false
      vc.Head.face.Texture = "rbxassetid://620619801"
      va.WalkSpeed = 16
    end
    function kyu_will_break_your_neck_asdf_longest_function_name_ever_xd()
      attack = true
      va.Head.face.Texture = "rbxassetid://266304560"
      for fd = 0, 6, 0.1 do
        swait()
        vb.C0 = clerp(vb.C0, vc * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        vd.Neck.C0 = clerp(vd.Neck.C0, necko * angles(Rad(0), Rad(0), Rad(0)), 0.3)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(ve / 20)) * vg * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(ve / 20)) * vh * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.3, 0.9 + 0.05 * Sin(ve / 30), 0.2 * Cos(ve / 20)) * angles(Rad(170), Rad(0), Rad(-15)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.3, 0.8 + 0.05 * Sin(ve / 30), -0.025 * Cos(ve / 20)) * angles(Rad(140), Rad(0), Rad(15)), 0.1)
      end
      CreateSound("1093102664", vj, 10, 1)
      CameraEnshaking(3, 8)
      for fd = 0, 2, 0.1 do
        swait()
        vb.C0 = clerp(vb.C0, vc * CF(0, 0, 0) * angles(Rad(5), Rad(0), Rad(0)), 0.15)
        vd.Neck.C0 = clerp(vd.Neck.C0, necko * angles(Rad(10), Rad(40), Rad(0)), 0.4)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(ve / 20)) * vg * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(ve / 20)) * vh * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.3, 0.9 + 0.05 * Sin(ve / 30), 0.2 * Cos(ve / 20)) * angles(Rad(200), Rad(0), Rad(-40)), 0.4)
        LW.C0 = clerp(LW.C0, CF(-1.3, 0.8 + 0.05 * Sin(ve / 30), -0.025 * Cos(ve / 20)) * angles(Rad(40), Rad(0), Rad(40)), 0.4)
      end
      va.Head.face.Texture = "rbxassetid://30128383"
      ragdoll(vk)
      CreateSound("534269232", vj, 5, 1)
      error("Seems like you just died.")
    end
    MoreTaunts = false
    game:service("Players").LocalPlayer:GetMouse().KeyDown:connect(function(a)
      a = a
      if attack == false and MoreTaunts == false then
        if a == "q" then
          GEtOuT()
        elseif a == "e" then
          GEtOuT2()
        elseif a == "x" then
          OBJECTION()
        elseif a == "n" then
          BOI()
        elseif a == "u" then
          Victory()
        elseif a == "3" then
          hap()
        elseif a == "6" then
          Flight()
        elseif a == "9" and timetofly then
          FLYSKYHIGH()
        elseif a == "9" then
          if math.random(1, 10) == 1 then
            warn("This has a Cooldown, Please wait. :>")
          end
          if math.random(1, 10) == 2 then
            warn("You can't Fly All day, you know.")
          end
          if math.random(1, 10) == 3 then
            warn("Calm down there.")
          end
          if math.random(1, 10) == 4 then
            warn("Take a Break.")
          end
          if math.random(1, 10) == 5 then
            warn("*Elevator Music plays in the backround*")
          end
          if math.random(1, 10) == 6 then
            warn("I know, You want to FLY SKY HIGH, but wait a little bit.")
          end
          if math.random(1, 10) == 7 then
            warn("Can you wait a LITTLE Longer?")
          end
          if math.random(1, 10) == 8 then
            warn("Like a tiger defying the laws of gravity...")
          end
          if math.random(1, 10) == 9 then
            warn("DON'T STOP ME NNNNNOOOOOOOOWWWW")
          end
          if math.random(1, 10) == 10 then
            warn("Oh, I'm burnin' through the sky, Yeah!")
          end
        elseif a == "k" then
          Hello()
        elseif a == "5" then
          HAAAAA()
        elseif a == "4" then
          Dance()
        elseif a == "1" then
          HELP()
        elseif a == "2" then
          dead()
        elseif a == "j" then
          WhatHuh()
        elseif a == "l" then
          ShutTheHellUp()
        elseif a == "c" then
          Choose()
        elseif a == "r" then
          MYSPAGHETTTTTTT()
        elseif a == "t" then
          SpinMeDad()
        elseif a == "y" then
          EndMySufferingV2()
        elseif a == "f" then
          NEN()
        elseif a == "z" then
          NothingPersonal()
        elseif a == "7" then
          somuchcancerwhy()
        elseif a == "8" then
          highnoon()
        elseif a == "v" then
          VeryMuchWorrying()
        elseif a == "b" then
          Ashes()
        elseif a == "p" then
          kyu_will_break_your_neck_asdf_longest_function_name_ever_xd()
        elseif a == "g" then
          AnotherOne()
        elseif a == "h" then
          slap()
        elseif a == "m" then
          WRY()
        end
      end
    end)
    while jumping do
      game:service("Players").LocalPlayer.Character.Raw.Humanoid.Jump = true
      wait(0.9)
    end
    game:service("Players").LocalPlayer.Character.Raw.Humanoid.Animator.Parent = nil
    while true do
      swait()
      hitfloor, posfloor = rayCast(game:service("Players").LocalPlayer.Character.Raw.HumanoidRootPart.Position, CFrame.new(game:service("Players").LocalPlayer.Character.Raw.HumanoidRootPart.Position, game:service("Players").LocalPlayer.Character.Raw.HumanoidRootPart.Position - Vector3.new(0, 1, 0)).lookVector, 4, game:service("Players").LocalPlayer.Character.Raw)
      if false ~= true then
      end
      if false == false then
        if attack == false then
        else
        end
        if 1 < game:service("Players").LocalPlayer.Character.Raw.HumanoidRootPart.Velocity.y and hitfloor == nil then
          Anim = "Jump"
          if attack == false then
            game:service("Players").LocalPlayer.Character.Raw.HumanoidRootPart.RootJoint.C0 = clerp(game:service("Players").LocalPlayer.Character.Raw.HumanoidRootPart.RootJoint.C0, CFrame.fromEulerAnglesXYZ(-1.57, 0, 3.14) * CF(0, 0, -0.1 + 0.1 * Cos((0 + 1) / 20)) * angles(Rad(10), Rad(0), Rad(0)), 0.3)
            game:service("Players").LocalPlayer.Character.Raw.Torso.Neck.C0 = clerp(game:service("Players").LocalPlayer.Character.Raw.Torso.Neck.C0, necko * angles(Rad(-40), Rad(0), Rad(0)), 0.3)
            RW.C0 = clerp(RW.C0, CF(1.5, 0.5, 0) * angles(Rad(30), Rad(0), Rad(20)), 0.3)
            LW.C0 = clerp(LW.C0, CF(-1.5, 0.5, 0) * angles(Rad(-20), Rad(0), Rad(-30)), 0.3)
            LH.C0 = clerp(LH.C0, CF(-1, -0.9 - 0.1 * Cos((0 + 1) / 20), -0.3) * CFrame.fromEulerAnglesXYZ(0, -1.6, 0) * angles(Rad(-5), Rad(0), Rad(20)), 0.15)
            RH.C0 = clerp(RH.C0, CF(1, -1, 0.3) * angles(Rad(0), Rad(90), Rad(-20)), 0.3)
          end
        elseif -1 > game:service("Players").LocalPlayer.Character.Raw.HumanoidRootPart.Velocity.y and hitfloor == nil then
          Anim = "Fall"
          if attack == false then
            game:service("Players").LocalPlayer.Character.Raw.HumanoidRootPart.RootJoint.C0 = clerp(game:service("Players").LocalPlayer.Character.Raw.HumanoidRootPart.RootJoint.C0, CFrame.fromEulerAnglesXYZ(-1.57, 0, 3.14) * CF(0, 0, -0.1 + 0.1 * Cos((0 + 1) / 20)) * angles(Rad(-5), Rad(0), Rad(0)), 0.3)
            game:service("Players").LocalPlayer.Character.Raw.Torso.Neck.C0 = clerp(game:service("Players").LocalPlayer.Character.Raw.Torso.Neck.C0, necko * angles(Rad(40), Rad(0), Rad(0)), 0.3)
            RW.C0 = clerp(RW.C0, CF(1.5, 0.5, 0) * angles(Rad(30), Rad(0), Rad(20)), 0.3)
            LW.C0 = clerp(LW.C0, CF(-1.5, 0.5, 0) * angles(Rad(-20), Rad(0), Rad(-30)), 0.3)
            LH.C0 = clerp(LH.C0, CF(-1, -0.4 - 0.1 * Cos((0 + 1) / 20), -0.6) * CFrame.fromEulerAnglesXYZ(0, -1.6, 0) * angles(Rad(-5), Rad(0), Rad(20)), 0.15)
            RH.C0 = clerp(RH.C0, CF(1, -0.3 - 0.1 * Cos((0 + 1) / 20), -0.6) * angles(Rad(0), Rad(90), Rad(-20)), 0.3)
          end
        elseif game:service("Players").LocalPlayer.Character.Raw.HumanoidRootPart.Velocity * Vector3.new(1, 0, 1).magnitude < 1 and hitfloor ~= nil then
          Anim = "Idle"
          if attack == false then
            game:service("Players").LocalPlayer.Character.Raw.HumanoidRootPart.RootJoint.C0 = clerp(game:service("Players").LocalPlayer.Character.Raw.HumanoidRootPart.RootJoint.C0, CFrame.fromEulerAnglesXYZ(-1.57, 0, 3.14) * CF(0, 0, -0.1 + 0.1 * Cos((0 + 1) / 20)) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
            game:service("Players").LocalPlayer.Character.Raw.Torso.Neck.C0 = clerp(game:service("Players").LocalPlayer.Character.Raw.Torso.Neck.C0, necko * angles(Rad(0), Rad(0), Rad(0)), 0.3)
            RH.C0 = clerp(RH.C0, CF(1, -0.9 - 0.1 * Cos((0 + 1) / 20), 0.025 * Cos((0 + 1) / 20)) * CFrame.fromEulerAnglesXYZ(0, 1.6, 0) * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
            LH.C0 = clerp(LH.C0, CF(-1, -0.9 - 0.1 * Cos((0 + 1) / 20), 0.025 * Cos((0 + 1) / 20)) * CFrame.fromEulerAnglesXYZ(0, -1.6, 0) * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
            RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin((0 + 1) / 30), 0.025 * Cos((0 + 1) / 20)) * angles(Rad(30 * Cos((0 + 1) / 20)), Rad(0), Rad(5)), 0.1)
            LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin((0 + 1) / 30), 0.025 * Cos((0 + 1) / 20)) * angles(Rad(30 * Cos((0 + 1) / 20)), Rad(0), Rad(-5)), 0.1)
          end
        elseif game:service("Players").LocalPlayer.Character.Raw.Torso.Velocity.magnitude < 50 and hitfloor ~= nil then
          Anim = "Walk"
          if attack == false then
            game:service("Players").LocalPlayer.Character.Raw.HumanoidRootPart.RootJoint.C0 = clerp(game:service("Players").LocalPlayer.Character.Raw.HumanoidRootPart.RootJoint.C0, CFrame.fromEulerAnglesXYZ(-1.57, 0, 3.14) * CF(0, 0, -0.175 + 0.025 * Cos((0 + 1) / 3.5) + -Sin((0 + 1) / 3.5) / 7) * angles(Rad(9 - 2.5 * Cos((0 + 1) / 3.5)), Rad(0), Rad(10 * Cos((0 + 1) / 7))), 0.15)
            game:service("Players").LocalPlayer.Character.Raw.Torso.Neck.C0 = clerp(game:service("Players").LocalPlayer.Character.Raw.Torso.Neck.C0, necko * angles(Rad(0), Rad(0), Rad(0)), 0.3)
            RH.C0 = clerp(RH.C0, CFrame.new(1, -0.925 - 0.5 * math.cos((0 + 1) / 7) / 2, 0.5 * math.cos((0 + 1) / 7) / 2) * angles(math.rad(-15 - 35 * math.cos((0 + 1) / 7)) + -math.sin((0 + 1) / 7) / 2.5, math.rad(90 - 2 * math.cos((0 + 1) / 7)), math.rad(0)) * angles(math.rad(0 + 2.5 * math.cos((0 + 1) / 7)), math.rad(0), math.rad(0)), 0.3)
            LH.C0 = clerp(LH.C0, CFrame.new(-1, -0.925 + 0.5 * math.cos((0 + 1) / 7) / 2, -0.5 * math.cos((0 + 1) / 7) / 2) * angles(math.rad(-15 + 35 * math.cos((0 + 1) / 7)) + math.sin((0 + 1) / 7) / 2.5, math.rad(-90 - 2 * math.cos((0 + 1) / 7)), math.rad(0)) * angles(math.rad(0 - 2.5 * math.cos((0 + 1) / 7)), math.rad(0), math.rad(0)), 0.3)
            RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin((0 + 1) / 30), 0.025 * Cos((0 + 1) / 20)) * angles(Rad(70) * Cos((0 + 1) / 7), Rad(0), Rad(5)), 0.1)
            LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin((0 + 1) / 30), 0.025 * Cos((0 + 1) / 20)) * angles(Rad(-70) * Cos((0 + 1) / 7), Rad(0), Rad(-5)), 0.1)
          end
        end
      end
      if 0 < #Effects then
        for fZ = 1, #Effects do
          if Effects[fZ] ~= nil and Effects[fZ] ~= nil then
            if 1 >= Effects[fZ][1].Transparency then
              if Effects[fZ][2] == "Block1" then
                Effects[fZ][1].CFrame = Effects[fZ][1].CFrame * CFrame.fromEulerAnglesXYZ(math.random(-50, 50), math.random(-50, 50), math.random(-50, 50))
                Effects[fZ][1].Mesh.Scale = Effects[fZ][1].Mesh.Scale + Vector3.new(Effects[fZ][4], Effects[fZ][5], Effects[fZ][6])
                Effects[fZ][1].Transparency = Effects[fZ][1].Transparency + Effects[fZ][3]
              elseif Effects[fZ][2] == "Block2" then
                Effects[fZ][1].CFrame = Effects[fZ][1].CFrame + Vector3.new(0, 0, 0)
                Effects[fZ][7].Scale = Effects[fZ][7].Scale + Vector3.new(Effects[fZ][4], Effects[fZ][5], Effects[fZ][6])
                Effects[fZ][1].Transparency = Effects[fZ][1].Transparency + Effects[fZ][3]
              elseif Effects[fZ][2] == "Block3" then
                Effects[fZ][1].CFrame = Effects[fZ][1].CFrame * CFrame.fromEulerAnglesXYZ(math.random(-50, 50), math.random(-50, 50), math.random(-50, 50)) + Vector3.new(0, 0.15, 0)
                Effects[fZ][7].Scale = Effects[fZ][7].Scale + Vector3.new(Effects[fZ][4], Effects[fZ][5], Effects[fZ][6])
                Effects[fZ][1].Transparency = Effects[fZ][1].Transparency + Effects[fZ][3]
              elseif Effects[fZ][2] == "Cylinder" then
                Effects[fZ][1].Mesh.Scale = Effects[fZ][1].Mesh.Scale + Vector3.new(Effects[fZ][4], Effects[fZ][5], Effects[fZ][6])
                Effects[fZ][1].Transparency = Effects[fZ][1].Transparency + Effects[fZ][3]
              elseif Effects[fZ][2] == "Blood" then
                Effects[fZ][1].CFrame = Effects[fZ][1].CFrame * Vector3.new(0, 0.5, 0)
                Effects[fZ][7].Scale = Effects[fZ][7].Scale + Vector3.new(Effects[fZ][4], Effects[fZ][5], Effects[fZ][6])
                Effects[fZ][1].Transparency = Effects[fZ][1].Transparency + Effects[fZ][3]
              elseif Effects[fZ][2] == "Elec" then
                Effects[fZ][1].Mesh.Scale = Effects[fZ][1].Mesh.Scale + Vector3.new(Effects[fZ][7], Effects[fZ][8], Effects[fZ][9])
                Effects[fZ][1].Transparency = Effects[fZ][1].Transparency + Effects[fZ][3]
              elseif Effects[fZ][2] == "Disappear" then
                Effects[fZ][1].Transparency = Effects[fZ][1].Transparency + Effects[fZ][3]
              elseif Effects[fZ][2] == "Shatter" then
                Effects[fZ][1].Transparency = Effects[fZ][1].Transparency + Effects[fZ][3]
                Effects[fZ][4] = Effects[fZ][4] * CFrame.new(0, Effects[fZ][7], 0)
                Effects[fZ][1].CFrame = Effects[fZ][4] * CFrame.fromEulerAnglesXYZ(Effects[fZ][6], 0, 0)
                Effects[fZ][6] = Effects[fZ][6] + Effects[fZ][5]
              end
            else
              Effects[fZ][1].Parent = nil
              table.remove(Effects, fZ)
            end
          end
        end
      end
    end
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Text Scripts (cringe)"):NewSection("cringe shit"):NewButton("ASMR or something", "funny button go brr", function()
  (function(a)
    a = a
    game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireNewTab(a, "all")
  end)("-WHISPERS: welcome to my asmr video, lets get started with some really good triggers-")
  wait(3);
  (function(a)
    a = a
    game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireNewTab(a, "all")
  end)("AJIGDHNBASDHYU HNJ NJSDF JKASDDJAKS JMFAMKADGF<M")
  wait(2.5);
  (function(a)
    a = a
    game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireNewTab(a, "all")
  end)("KOISAGIKSDGKIOKISGD KMSGDBKMDVBM KSVCSV")
  wait(5);
  (function(a)
    a = a
    game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireNewTab(a, "all")
  end)("I hope you loved that message, so you see, were not just making you deaf, were changing lifes.")
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Text Scripts (cringe)"):NewSection("cringe shit"):NewButton("yo hamster dead", "funny button go brr", function()
  (function(a)
    a = a
    game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireNewTab(a, "all")
  end)("So you see,")
  wait(3);
  (function(a)
    a = a
    game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireNewTab(a, "all")
  end)("YO HAMSTER DEAD")
  wait(2);
  (function(a)
    a = a
    game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireNewTab(a, "all")
  end)("DEAD AS HELL XDDDDDDDDDDDD")
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Free Scripts"):NewSection("Free Scripts"):NewButton("Chill", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    m = game.Players.LocalPlayer
    char = m.Character.Raw
    function Random(a)
      a = a
      if 1 > a % 1 * 3 then
        return 1
      elseif a % 1 * 3 < 2 then
        return 1 - math.sin(0.5 * math.pi * (a % 1 * 3 % 1))
      else
        return 1 - math.cos(0.5 * math.pi * (a % 1 * 3 % 1))
      end
    end
    function rainb(a)
      a = a
      if a % 1 * 3 < 1 then
        return Color3.new(1, 1 - math.cos(0.5 * math.pi * (a % 1 * 3 % 1)), 1 - math.sin(0.5 * math.pi * (a % 1 * 3 % 1)))
      elseif 2 > a % 1 * 3 then
        return Color3.new(1 - math.sin(0.5 * math.pi * (a % 1 * 3 % 1)), 1, 1 - math.cos(0.5 * math.pi * (a % 1 * 3 % 1)))
      else
        return Color3.new(1 - math.cos(0.5 * math.pi * (a % 1 * 3 % 1)), 1 - math.sin(0.5 * math.pi * (a % 1 * 3 % 1)), 1)
      end
    end
    Chillmusic = Instance.new("Sound", workspace)
    Chillmusic.Parent = game.Chat
    Chillmusic.Volume = 8
    Chillmusic.SoundId = "rbxassetid://1221694420"
    Chillmusic.Looped = true
    Chillmusic:Play()
    Instance.new("BillboardGui", char).Adornee = char.Head
    Instance.new("BillboardGui", char).Name = "_status"
    Instance.new("BillboardGui", char).Size = UDim2.new(2, 0, 1.2, 0)
    Instance.new("BillboardGui", char).StudsOffset = Vector3.new(-9, 8, 0)
    Instance.new("TextLabel", (Instance.new("BillboardGui", char))).Size = UDim2.new(10, 0, 7, 0)
    Instance.new("TextLabel", (Instance.new("BillboardGui", char))).FontSize = "Size24"
    Instance.new("TextLabel", (Instance.new("BillboardGui", char))).TextScaled = true
    Instance.new("TextLabel", (Instance.new("BillboardGui", char))).TextTransparency = 0
    Instance.new("TextLabel", (Instance.new("BillboardGui", char))).BackgroundTransparency = 1
    Instance.new("TextLabel", (Instance.new("BillboardGui", char))).TextTransparency = 0
    Instance.new("TextLabel", (Instance.new("BillboardGui", char))).TextStrokeTransparency = 0
    Instance.new("TextLabel", (Instance.new("BillboardGui", char))).Font = "Arcade"
    Instance.new("TextLabel", (Instance.new("BillboardGui", char))).TextStrokeColor3 = Color3.new(0, 0, 0)
    v = Instance.new("Part")
    v.Name = "ColorBrick"
    v.Parent = m.Character.Raw
    v.FormFactor = "Symmetric"
    v.Anchored = true
    v.CanCollide = false
    v.BottomSurface = "Smooth"
    v.TopSurface = "Smooth"
    v.Size = Vector3.new(10, 5, 3)
    v.Transparency = 1
    v.CFrame = char.Torso.CFrame
    v.BrickColor = BrickColor.new("Really black")
    v.Transparency = 1
    spawn(function()
      TweenService = game:GetService("TweenService")
      Colours = {
        Color3.fromRGB(0, 100, 200),
        Color3.fromRGB(4, 175, 236)
      }
      Int = 0
      while wait(2) do
        if Int == #Colours then
          Int = 0
        end
        Int = Int + 1
        TweenService:Create(va, TweenInfo.new(1), {
          TextColor3 = Colours[Int]
        }):Play()
      end
    end)
    v.Shape = "Block"
    Instance.new("TextLabel", (Instance.new("BillboardGui", char))).Text = "~\187Chill Af\171~"
    Player = game:GetService("Players").LocalPlayer
    Character = Player.Character.Raw
    PlayerGui = Player.PlayerGui
    Backpack = Player.Backpack
    Torso = Character.Torso
    Head = Character.Head
    Humanoid = Character.Humanoid
    m = Instance.new("Model", Character)
    LeftArm = Character["Left Arm"]
    LeftLeg = Character["Left Leg"]
    RightArm = Character["Right Arm"]
    RightLeg = Character["Right Leg"]
    LS = Torso["Left Shoulder"]
    LH = Torso["Left Hip"]
    RS = Torso["Right Shoulder"]
    RH = Torso["Right Hip"]
    Face = Head.face
    Neck = Torso.Neck
    it = Instance.new
    attacktype = 1
    vt = Vector3.new
    cf = CFrame.new
    bc = BrickColor.new
    br = BrickColor.random
    it = Instance.new
    euler = CFrame.fromEulerAnglesXYZ
    angles = CFrame.Angles
    cloaked = false
    necko = cf(0, 1, 0, -1, 0, 0, 0, 0, 1, 0, 1, 0)
    necko2 = cf(0, -0.5, 0, -1, 0, 0, 0, 0, 1, 0, 1, 0)
    LHC0 = cf(-1, -1, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
    LHC1 = cf(-0.5, 1, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
    RHC0 = cf(1, -1, 0, 0, 0, 1, 0, 1, 0, -1, 0, 0)
    RHC1 = cf(0.5, 1, 0, 0, 0, 1, 0, 1, 0, -1, 0, 0)
    RootPart = Character.HumanoidRootPart
    RootJoint = RootPart.RootJoint
    RootCF = euler(-1.57, 0, 3.14)
    attack = false
    attackdebounce = false
    equipped = false
    trispeed = 0.2
    attackmode = "none"
    Head.face.Texture = "rbxassetid://206844132"
    Instance.new("Attachment", char["Right Arm"]).Name = "TrailAttachment0"
    Instance.new("Attachment", char["Right Arm"]).CFrame = CFrame.new(-0.25, -1, 0)
    Instance.new("Attachment", char["Right Arm"]).CFrame = CFrame.new(0.25, -1, 0)
    Instance.new("Attachment", char["Right Arm"]).Name = "TrailAttachment1"
    Instance.new("Trail", char).Transparency = NumberSequence.new({
      NumberSequenceKeypoint.new(0, 0),
      [30] = NumberSequenceKeypoint.new(1, 1)
    })
    Instance.new("Trail", char).Color = ColorSequence.new({
      ColorSequenceKeypoint.new(0, Color3.new(1, 0, 0)),
      ColorSequenceKeypoint.new(0.2, Color3.new(1, 1, 0)),
      ColorSequenceKeypoint.new(0.4, Color3.new(0, 1, 0)),
      ColorSequenceKeypoint.new(0.6, Color3.new(0, 1, 1)),
      ColorSequenceKeypoint.new(0.8, Color3.new(0, 0, 1)),
      [21] = ColorSequenceKeypoint.new(1, Color3.new(0, 0, 1))
    })
    Instance.new("Trail", char).Lifetime = 0.5
    Instance.new("Trail", char).Attachment1, Instance.new("Trail", char).Attachment0 = Instance.new("Attachment", char["Right Arm"]), Instance.new("Attachment", char["Right Arm"])
    Instance.new("Attachment", char["Left Arm"]).Name = "TrailAttachment0"
    Instance.new("Attachment", char["Left Arm"]).CFrame = CFrame.new(-0.25, -1, 0)
    Instance.new("Attachment", char["Left Arm"]).CFrame = CFrame.new(0.25, -1, 0)
    Instance.new("Attachment", char["Left Arm"]).Name = "TrailAttachment1"
    Instance.new("Trail", char).Transparency = NumberSequence.new({
      NumberSequenceKeypoint.new(0, 0),
      [27] = NumberSequenceKeypoint.new(1, 1)
    })
    Instance.new("Trail", char).Color = ColorSequence.new({
      ColorSequenceKeypoint.new(0, Color3.new(1, 0, 0)),
      ColorSequenceKeypoint.new(0.2, Color3.new(1, 1, 0)),
      ColorSequenceKeypoint.new(0.4, Color3.new(0, 1, 0)),
      ColorSequenceKeypoint.new(0.6, Color3.new(0, 1, 1)),
      ColorSequenceKeypoint.new(0.8, Color3.new(0, 0, 1)),
      [27] = ColorSequenceKeypoint.new(1, Color3.new(0, 0, 1))
    })
    Instance.new("Trail", char).Lifetime = 0.5
    Instance.new("Trail", char).Attachment1, Instance.new("Trail", char).Attachment0 = Instance.new("Attachment", char["Left Arm"]), Instance.new("Attachment", char["Left Arm"])
    Instance.new("Attachment", char["Right Leg"]).Name = "TrailAttachment0"
    Instance.new("Attachment", char["Right Leg"]).CFrame = CFrame.new(-0.25, -1, 0)
    Instance.new("Attachment", char["Right Leg"]).CFrame = CFrame.new(0.25, -1, 0)
    Instance.new("Attachment", char["Right Leg"]).Name = "TrailAttachment1"
    Instance.new("Trail", char).Transparency = NumberSequence.new({
      NumberSequenceKeypoint.new(0, 0),
      [24] = NumberSequenceKeypoint.new(1, 1)
    })
    Instance.new("Trail", char).Color = ColorSequence.new({
      ColorSequenceKeypoint.new(0, Color3.new(1, 0, 0)),
      ColorSequenceKeypoint.new(0.2, Color3.new(1, 1, 0)),
      ColorSequenceKeypoint.new(0.4, Color3.new(0, 1, 0)),
      ColorSequenceKeypoint.new(0.6, Color3.new(0, 1, 1)),
      ColorSequenceKeypoint.new(0.8, Color3.new(0, 0, 1)),
      [24] = ColorSequenceKeypoint.new(1, Color3.new(0, 0, 1))
    })
    Instance.new("Trail", char).Lifetime = 0.5
    Instance.new("Trail", char).Attachment1, Instance.new("Trail", char).Attachment0 = Instance.new("Attachment", char["Right Leg"]), Instance.new("Attachment", char["Right Leg"])
    Instance.new("Attachment", char["Left Leg"]).Name = "TrailAttachment0"
    Instance.new("Attachment", char["Left Leg"]).CFrame = CFrame.new(-0.25, -1, 0)
    Instance.new("Attachment", char["Left Leg"]).CFrame = CFrame.new(0.25, -1, 0)
    Instance.new("Attachment", char["Left Leg"]).Name = "TrailAttachment1"
    Instance.new("Trail", char).Transparency = NumberSequence.new({
      NumberSequenceKeypoint.new(0, 0),
      [21] = NumberSequenceKeypoint.new(1, 1)
    })
    Instance.new("Trail", char).Color = ColorSequence.new({
      ColorSequenceKeypoint.new(0, Color3.new(1, 0, 0)),
      ColorSequenceKeypoint.new(0.2, Color3.new(1, 1, 0)),
      ColorSequenceKeypoint.new(0.4, Color3.new(0, 1, 0)),
      ColorSequenceKeypoint.new(0.6, Color3.new(0, 1, 1)),
      ColorSequenceKeypoint.new(0.8, Color3.new(0, 0, 1)),
      [21] = ColorSequenceKeypoint.new(1, Color3.new(0, 0, 1))
    })
    Instance.new("Trail", char).Lifetime = 0.5
    Instance.new("Trail", char).Attachment1, Instance.new("Trail", char).Attachment0 = Instance.new("Attachment", char["Left Leg"]), Instance.new("Attachment", char["Left Leg"])
    Humanoid.Animator.Parent = nil
    Character.Animate.Parent = nil
    function FindNearestTorso(a, b, c)
      a = a
      if c then
        return b >= c.Torso.CFrame.p - a.magnitude
      end
      for fj, fk in pairs(workspace:GetChildren()) do
        if fk:IsA("Model") and fk:findFirstChild("Torso") and fk ~= Character and b >= fk.Torso.Position - a.magnitude then
          table.insert({}, fk)
        end
      end
      return {}
    end
    function lerp(a, b, c)
      a = a
      return a + (b - a) * c
    end
    function slerp(a, b, c)
      a = a
      dot = a:Dot(b)
      if -0.99999 > dot then
        if c <= 0.5 then
        end
        return a or b
      else
        r = math.acos(dot)
        return (a * math.sin((1 - c) * r) + b * math.sin(c * r)) / math.sin(r)
      end
    end
    function matrixInterpolate(a, b, c)
      a = a
      if not (0 >= slerp(Vector3.new(a:components()), Vector3.new(b:components()), c):Dot((slerp(Vector3.new(a:components()), Vector3.new(b:components()), c)))) and slerp(Vector3.new(a:components()), Vector3.new(b:components()), c):Dot((slerp(Vector3.new(a:components()), Vector3.new(b:components()), c))) ~= 0 and not (0 <= slerp(Vector3.new(a:components()), Vector3.new(b:components()), c):Dot((slerp(Vector3.new(a:components()), Vector3.new(b:components()), c)))) then
        return CFrame.new()
      end
      return CFrame.new(lerp(Vector3.new(a:components()), Vector3.new(b:components()), c).x, lerp(Vector3.new(a:components()), Vector3.new(b:components()), c).y, lerp(Vector3.new(a:components()), Vector3.new(b:components()), c).z, slerp(Vector3.new(a:components()), Vector3.new(b:components()), c).x, slerp(Vector3.new(a:components()), Vector3.new(b:components()), c).y, slerp(Vector3.new(a:components()), Vector3.new(b:components()), c).z, slerp(Vector3.new(a:components()), Vector3.new(b:components()), c).x, slerp(Vector3.new(a:components()), Vector3.new(b:components()), c).y, slerp(Vector3.new(a:components()), Vector3.new(b:components()), c).z, slerp(Vector3.new(a:components()), Vector3.new(b:components()), c).x, slerp(Vector3.new(a:components()), Vector3.new(b:components()), c).y, slerp(Vector3.new(a:components()), Vector3.new(b:components()), c).z)
    end
    function genWeld(a, b)
      a = a
      Instance.new("Weld", a).Part0 = a
      Instance.new("Weld", a).Part1 = b
      return (Instance.new("Weld", a))
    end
    function weld(a, b)
      a = a
      Instance.new("Weld").Name = "W"
      Instance.new("Weld").Part0 = a
      Instance.new("Weld").Part1 = b
      Instance.new("Weld").C0 = a.CFrame:inverse() * b.CFrame
      Instance.new("Weld").Parent = a
      return (Instance.new("Weld"))
    end
    function Lerp(a, b, c)
      a = a
      for fk, fl in pairs({
        a.X,
        a.Y,
        a.Z,
        a:toEulerAnglesXYZ()
      }) do
      end
      return CFrame.new({
        a.X,
        a.Y,
        a.Z,
        a:toEulerAnglesXYZ()
      }[1], {
        a.X,
        a.Y,
        a.Z,
        a:toEulerAnglesXYZ()
      }[2], {
        a.X,
        a.Y,
        a.Z,
        a:toEulerAnglesXYZ()
      }[3]) * CFrame.Angles(select(4, unpack({
        a.X,
        a.Y,
        a.Z,
        a:toEulerAnglesXYZ()
      })))
    end
    function clerp(a, b, c)
      a = a
      return QuaternionToCFrame((1 - c) * a.x + c * b.x, (1 - c) * a.y + c * b.y, (1 - c) * a.z + c * b.z, QuaternionSlerp({
        QuaternionFromCFrame(a)
      }, {
        QuaternionFromCFrame(b)
      }, c))
    end
    function QuaternionFromCFrame(a)
      a = a
      if a:components() + a:components() + a:components() > 0 then
        return (a:components() - a:components()) * (0.5 / math.sqrt(1 + (a:components() + a:components() + a:components()))), (a:components() - a:components()) * (0.5 / math.sqrt(1 + (a:components() + a:components() + a:components())))
      else
        if 1 == 0 then
        end
        if 2 == 0 then
          return 0.5 * math.sqrt(a:components() - a:components() - a:components() + 1), (a:components() + a:components()) * (0.5 / math.sqrt(a:components() - a:components() - a:components() + 1))
        elseif 2 == 1 then
          return (a:components() + a:components()) * (0.5 / math.sqrt(a:components() - a:components() - a:components() + 1)), 0.5 * math.sqrt(a:components() - a:components() - a:components() + 1)
        elseif 2 == 2 then
          return (a:components() + a:components()) * (0.5 / math.sqrt(a:components() - a:components() - a:components() + 1)), (a:components() + a:components()) * (0.5 / math.sqrt(a:components() - a:components() - a:components() + 1))
        end
      end
    end
    function QuaternionToCFrame(a, b, c, d, e, g, h)
      a = a
      return CFrame.new(a, b, c, 1 - (e * (e + e) + g * (g + g)), d * (e + e) - h * (g + g), d * (g + g) + h * (e + e), d * (e + e) + h * (g + g), 1 - (d * (d + d) + g * (g + g)), e * (g + g) - h * (d + d), d * (g + g) - h * (e + e), e * (g + g) + h * (d + d), 1 - (d * (d + d) + e * (e + e)))
    end
    function QuaternionSlerp(a, b, c)
      a = a
      if 0.0001 <= a[1] * b[1] + a[2] * b[2] + a[3] * b[3] + a[4] * b[4] then
        if 0.0001 < 1 - (a[1] * b[1] + a[2] * b[2] + a[3] * b[3] + a[4] * b[4]) then
        else
        end
      elseif 0.0001 < 1 + (a[1] * b[1] + a[2] * b[2] + a[3] * b[3] + a[4] * b[4]) then
      else
      end
      return a[1] * (c - 1) + b[1] * c, a[2] * (c - 1) + b[2] * c
    end
    function rayCast(a, b, c, d)
      a = a
      return game:service("Workspace"):FindPartOnRay(Ray.new(a, b.unit * (c or 999.999)), d)
    end
    function part(a, b, c, d, e, g, h)
      a = a
      it("Part").formFactor = a
      it("Part").Parent = b
      it("Part").Reflectance = c
      it("Part").Transparency = d
      it("Part").CanCollide = false
      it("Part").Locked = true
      it("Part").BrickColor = e
      it("Part").Name = g
      it("Part").Size = h
      it("Part").Position = Torso.Position
      it("Part").BottomSurface = "Smooth"
      it("Part").TopSurface = "Smooth"
      it("Part"):BreakJoints()
      return (it("Part"))
    end
    function mesh(a, b, c, d, e, g)
      a = a
      it(a).Parent = b
      if a == "SpecialMesh" then
        it(a).MeshType = c
        it(a).MeshId = d
      end
      it(a).Offset = e
      it(a).Scale = g
      return (it(a))
    end
    function weld(a, b, c, d)
      a = a
      it("Weld").Parent = a
      it("Weld").Part0 = b
      it("Weld").Part1 = c
      it("Weld").C0 = d
      return (it("Weld"))
    end
    function rayCast(a, b, c, d)
      a = a
      return game:service("Workspace"):FindPartOnRay(Ray.new(a, b.unit * (c or 999.999)), d)
    end
    RSH, LSH = nil, nil
    RW, LW = Instance.new("Weld"), Instance.new("Weld")
    RW.Name = "Right Shoulder"
    LW.Name = "Left Shoulder"
    LH = Torso["Left Hip"]
    RH = Torso["Right Hip"]
    TorsoColor = Torso.BrickColor
    function NoOutline(a)
      a = a
      a.TopSurface, a.BottomSurface, a.LeftSurface, a.RightSurface, a.FrontSurface, a.BackSurface = 10, 10, 10, 10, 10, 10
    end
    player = Player
    ch = Character
    RSH = ch.Torso["Right Shoulder"]
    LSH = ch.Torso["Left Shoulder"]
    RSH.Parent = nil
    LSH.Parent = nil
    RW.Name = "Right Shoulder"
    RW.Part0 = ch.Torso
    RW.C0 = cf(1.5, 0.5, 0)
    RW.C1 = cf(0, 0.5, 0)
    RW.Part1 = ch["Right Arm"]
    RW.Parent = ch.Torso
    LW.Name = "Left Shoulder"
    LW.Part0 = ch.Torso
    LW.C0 = cf(-1.5, 0.5, 0)
    LW.C1 = cf(0, 0.5, 0)
    LW.Part1 = ch["Left Arm"]
    LW.Parent = ch.Torso
    function newWeld(a, b, c, d, e)
      a = a
      Instance.new("Weld", b).Part0 = a
      Instance.new("Weld", b).Part1 = b
      Instance.new("Weld", b).C0 = CFrame.new(c, d, e)
    end
    newWeld(RootPart, Torso, 0, -1, 0)
    Torso.Weld.C1 = CFrame.new(0, -1, 0)
    newWeld(Torso, LeftLeg, -0.5, -1, 0)
    LeftLeg.Weld.C1 = CFrame.new(0, 1, 0)
    newWeld(Torso, RightLeg, 0.5, -1, 0)
    RightLeg.Weld.C1 = CFrame.new(0, 1, 0)
    Player = game:GetService("Players").LocalPlayer
    Character = Player.Character
    mouse = Player:GetMouse()
    m = Instance.new("Model", Character)
    ArtificialHB = Instance.new("BindableEvent", script)
    ArtificialHB.Name = "Heartbeat"
    script:WaitForChild("Heartbeat")
    frame = 0.0166666666666667
    tf = 0
    allowframeloss = false
    tossremainder = false
    lastframe = tick()
    script.Heartbeat:Fire()
    game:GetService("RunService").Heartbeat:connect(function(a, b)
      a = a
      tf = tf + a
      if tf >= frame then
        if allowframeloss then
          script.Heartbeat:Fire()
          lastframe = tick()
        else
          for fg = 1, math.floor(tf / frame) do
            script.Heartbeat:Fire()
          end
          lastframe = tick()
        end
        if tossremainder then
          tf = 0
        else
          tf = tf - frame * math.floor(tf / frame)
        end
      end
    end)
    function swait(a)
      a = a
      if a ~= 0 then
      end
      if a == nil then
        ArtificialHB.Event:wait()
      else
        for fe = 0, a do
          ArtificialHB.Event:wait()
        end
      end
    end
    mouse.KeyDown:connect(function(a)
      a = a
      repeat
        if a == "c" then
          swait()
          Chillmusic.Volume = Chillmusic.Volume - 0.05
          Chillmusic:Stop()
          swait()
          Chillmusic2:Play()
          Chillmusic.Volume = 1
        end
      until Chillmusic.Volume == 0
    end)
    mouse.KeyDown:connect(function(a)
      a = a
      if a == "f" then
        va.Text = "Guys why not just chill?"
        wait(1)
        va.Text = "It's just the way life should be."
        wait(1)
        va.Text = "Chill is life."
        wait(1)
        va.Text = "Chill is love."
        wait(1)
        va.Text = "Chill is for the best."
        wait(1)
        va.Text = "Maybe if you were chill you wouldn't be a skid..."
        wait(3)
        va.Text = "But some people cant handle the chill can they."
        wait(3)
        va.Text = "Chill Af"
      end
    end)
    mouse.KeyDown:connect(function(a)
      a = a
      repeat
        if a == "v" then
          swait()
          Chillmusic2.Volume = Chillmusic2.Volume - 0.05
          Chillmusic2:Stop()
          swait()
          Chillmusic:Play()
          Chillmusic2.Volume = 1
        end
      until Chillmusic2.Volume == 0
    end)
    mouse.KeyDown:connect(function(a)
      a = a
      if a == "b" then
        va.Text = "Be back scrubs."
        wait(1)
        va.Text = "Afk nibba..."
      end
    end)
    mouse.KeyDown:connect(function(a)
      a = a
      if a == "n" then
        va.Text = "K back you nubs's!"
        wait(1)
        va.Text = "Chill Af"
      end
    end)
    m = Instance.new("ForceField", Character)
    m.Visible = false
    Character.Humanoid.WalkSpeed = 4
    mouse.KeyDown:connect(function(a)
      a = a
      if string.byte(a) == 48 then
        Swing = 2
        Character.Humanoid.WalkSpeed = 40
      end
    end)
    mouse.KeyUp:connect(function(a)
      a = a
      if string.byte(a) == 48 then
        Swing = 1
        Character.Humanoid.WalkSpeed = 4
      end
    end)
    spawn(function()
      while true do
        swait()
        va = va + vb
        hitfloor, posfloor = rayCast(RootPart.Position, CFrame.new(RootPart.Position, RootPart.Position - Vector3.new(0, 1, 0)).lookVector, 4, Character)
        if equipped == false then
          if attack == false then
            vc = vc + 1
            Character.Humanoid.MaxHealth = math.huge
            Character.Humanoid.Health = math.huge
          else
            vc = 0
          end
          repeat
          until vc >= 500 and attack == false
          if 1 > RootPart.Velocity * Vector3.new(1, 0, 1).magnitude and hitfloor ~= nil then
            vd = "Chill"
            if attack == false then
              Humanoid.CameraOffset = Vector3.new(0, 10.25 - 5.45 * math.cos(va / 65), 0)
              Torso.Weld.C0 = clerp(Torso.Weld.C0, CFrame.new(0, 10.25 - 5.45 * math.cos(va / 65), 0) * CFrame.Angles(math.rad(90 + 15 * math.sin(va / 60)), math.rad(0), math.rad(0)), 0.8)
              Torso.Neck.C0 = clerp(Torso.Neck.C0, necko * angles(math.rad(-20 + 20 * math.cos(va / 60)), math.rad(0 + 4 * math.sin(va / 60)), math.rad(0)), 0.2)
              RW.C0 = clerp(RW.C0, CFrame.new(1.5, 0.5, 0) * angles(math.rad(-90 + 25 * math.cos(va / 60)), math.rad(0 + 20 * math.sin(va / 60)), math.rad(0 + 55 * math.sin(va / 60))), 0.3)
              LW.C0 = clerp(LW.C0, CFrame.new(-1.5, 0.5, 0) * angles(math.rad(-90 + 25 * math.cos(va / 60)), math.rad(-20 - 20 * math.sin(va / 60)), math.rad(0 - 55 * math.sin(va / 60))), 0.3)
              LeftLeg.Weld.C0 = clerp(LeftLeg.Weld.C0, CFrame.new(-0.5, -0.86 + 0.03 * math.cos(va / 65), -0.4) * CFrame.Angles(math.rad(15 - 45 * math.cos(va / 70)), math.rad(3), math.rad(-4)), 0.8)
              RightLeg.Weld.C0 = clerp(RightLeg.Weld.C0, CFrame.new(0.5, -1 + 0.05 * math.cos(va / 65), -0.4) * CFrame.Angles(math.rad(15 - 35 * math.cos(va / 65)), math.rad(-3), math.rad(4)), 0.8)
            end
          elseif 2 < RootPart.Velocity * Vector3.new(1, 0, 1).magnitude and 22 > RootPart.Velocity * Vector3.new(1, 0, 1).magnitude and hitfloor ~= nil then
            vd = "Walk"
            if attack == false then
              Humanoid.CameraOffset = Vector3.new(0, 6 - 2.55 * math.cos(va / 48.5), 0)
              RootJoint.C0 = clerp(RootJoint.C0, RootCF * cf(0, 0, 0) * angles(math.rad(5), math.rad(0), math.rad(0)), 0.2)
              Torso.Weld.C0 = clerp(Torso.Weld.C0, CFrame.new(0, 6 - 2.55 * math.cos(va / 48.5), 0) * CFrame.Angles(math.rad(-90 + 5 * math.cos(va / 45)), math.rad(180 * math.cos(va / 48.5)), math.rad(0)), 0.8)
              Torso.Neck.C0 = clerp(Torso.Neck.C0, necko * angles(math.rad(-4 + 2 * math.sin(va / 48)), math.rad(0), math.rad(0)), 0.2)
              RW.C0 = clerp(RW.C0, cf(1.5, 0.5 + 0.1 * math.cos(va / 45), 0) * angles(math.rad(90), math.rad(0), math.rad(90 - 20.5 * math.cos(va / 45))), 0.3)
              LW.C0 = clerp(LW.C0, cf(-1.5, 0.5 + 0.1 * math.cos(va / 45), 0) * angles(math.rad(90), math.rad(0), math.rad(-90 + 20.5 * math.cos(va / 45))), 0.3)
              LeftLeg.Weld.C0 = clerp(LeftLeg.Weld.C0, CFrame.new(-0.5, -1 - 0.05 * math.cos(va / 45), 0) * CFrame.Angles(math.rad(0), math.rad(3), math.rad(-4)), 0.8)
              RightLeg.Weld.C0 = clerp(RightLeg.Weld.C0, CFrame.new(0.5, -1 + 0.05 * math.cos(va / 45), 0) * CFrame.Angles(math.rad(0), math.rad(-3), math.rad(4)), 0.8)
            end
          elseif 22 <= RootPart.Velocity * Vector3.new(1, 0, 1).magnitude and hitfloor ~= nil then
            vd = "Run"
            if attack == false then
              Humanoid.CameraOffset = Vector3.new(0, 6 - 1.55 * math.cos(va / 68.5), 0)
              RootJoint.C0 = clerp(RootJoint.C0, RootCF * cf(0, 6 - 1.55 * math.cos(va / 68.5), -0.2) * angles(math.rad(50), math.rad(0), math.rad(0)), 0.2)
              Torso.Weld.C0 = clerp(Torso.Weld.C0, CFrame.new(0, 6 - 1.55 * math.cos(va / 68.5), 0) * CFrame.Angles(math.rad(-40 + 20 * math.sin(va / 68.5)), 0, 0), 0.8)
              Torso.Neck.C0 = clerp(Torso.Neck.C0, necko * angles(math.rad(-12 + 17 * math.cos(va / 68.5)), math.rad(0), math.rad(0)), 0.2)
              RW.C0 = clerp(RW.C0, CFrame.new(1.5, 0.5, 0) * angles(math.rad(-90), math.rad(0), math.rad(40 - 20 * math.cos(va / 68.5))), 0.2)
              LW.C0 = clerp(LW.C0, CFrame.new(-1.5, 0.5, 0) * angles(math.rad(-90), math.rad(0), math.rad(-40 + 20 * math.cos(va / 68.5))), 0.2)
              LeftLeg.Weld.C0 = clerp(LeftLeg.Weld.C0, CFrame.new(-0.5, -0.87, -0.25) * CFrame.Angles(math.rad(-45 - 10 * math.cos(va / 68.5)), math.rad(0), math.rad(0)), 0.8)
              RightLeg.Weld.C0 = clerp(RightLeg.Weld.C0, CFrame.new(0.5, -1, -0.1) * CFrame.Angles(math.rad(-35 - 10 * math.cos(va / 68.5)), math.rad(0), math.rad(0)), 0.8)
            end
          end
        end
      end
    end)
    Instance.new("ScreenGui", game.Players.LocalPlayer.PlayerGui).Name = "Chill_Gui_Bro"
    Instance.new("Frame").Parent, Instance.new("Frame").Name = Instance.new("ScreenGui", game.Players.LocalPlayer.PlayerGui), "Header"
    Instance.new("Frame").BackgroundColor3 = Color3.new(0.117647, 0.117647, 0.117647)
    Instance.new("Frame").BorderSizePixel = 0
    Instance.new("Frame").Draggable = true
    Instance.new("Frame").Active = true
    Instance.new("Frame").Selectable = true
    Instance.new("Frame").Position = UDim2.new(0.469539374, 0, 0.147921771, 0)
    Instance.new("Frame").Size = UDim2.new(0, 250, 0, 45)
    Instance.new("Frame").Parent, Instance.new("Frame").Name = Instance.new("Frame"), "BackGround"
    Instance.new("Frame").BackgroundColor3 = Color3.new(0.196078, 0.196078, 0.196078)
    Instance.new("Frame").BorderSizePixel = 0
    Instance.new("Frame").Draggable = true
    Instance.new("Frame").Position = UDim2.new(0, 0, 1, 0)
    Instance.new("Frame").Size = UDim2.new(0, 250, 0, 299)
    Instance.new("TextLabel").Parent, Instance.new("TextLabel").Name = Instance.new("Frame"), "Chill_Gui_Label"
    Instance.new("TextLabel").BackgroundColor3 = Color3.new(1, 1, 1)
    Instance.new("TextLabel").BackgroundTransparency = 1
    Instance.new("TextLabel").BorderSizePixel = 0
    Instance.new("TextLabel").Draggable = true
    Instance.new("TextLabel").Size = UDim2.new(0, 250, 0, 45)
    Instance.new("TextLabel").Font = Enum.Font.Arcade
    Instance.new("TextLabel").Text = "~\187Chill Gui\171~"
    Instance.new("TextLabel").TextColor3 = Color3.new(1, 1, 1)
    Instance.new("TextLabel").TextScaled = true
    Instance.new("TextLabel").TextSize = 14
    Instance.new("TextLabel").TextWrapped = true
    Instance.new("TextNewButton").Parent, Instance.new("TextNewButton").Name = Instance.new("Frame"), "Play_ID_NewButton"
    Instance.new("TextNewButton").BackgroundColor3 = Color3.new(0.117647, 0.117647, 0.117647)
    Instance.new("TextNewButton").BorderColor3 = Color3.new(0, 0, 0)
    Instance.new("TextNewButton").BorderSizePixel = 0
    Instance.new("TextNewButton").Position = UDim2.new(0.0520000011, 0, 1.22222221, 0)
    Instance.new("TextNewButton").Size = UDim2.new(0, 68, 0, 35)
    Instance.new("TextNewButton").Font = Enum.Font.Arcade
    Instance.new("TextNewButton").Text = "Play ID"
    Instance.new("TextNewButton").TextColor3 = Color3.new(1, 1, 1)
    Instance.new("TextNewButton").TextSize = 20
    Instance.new("TextNewButton").TextWrapped = true
    Instance.new("TextBox").Parent, Instance.new("TextBox").Name = Instance.new("Frame"), "ID_Box"
    Instance.new("TextBox").BackgroundColor3 = Color3.new(0.117647, 0.117647, 0.117647)
    Instance.new("TextBox").BorderColor3 = Color3.new(0, 0, 0)
    Instance.new("TextBox").BorderSizePixel = 0
    Instance.new("TextBox").Position = UDim2.new(0.356000006, 0, 1.22222221, 0)
    Instance.new("TextBox").Size = UDim2.new(0, 140, 0, 35)
    Instance.new("TextBox").Font = Enum.Font.Arcade
    Instance.new("TextBox").Text = "ID here"
    Instance.new("TextBox").TextColor3 = Color3.new(1, 1, 1)
    Instance.new("TextBox").TextSize = 35
    Instance.new("TextBox").TextWrapped = true
    Instance.new("TextNewButton").Parent, Instance.new("TextNewButton").Name = Instance.new("Frame"), "Set_Vol_NewButton"
    Instance.new("TextNewButton").BackgroundColor3 = Color3.new(0.117647, 0.117647, 0.117647)
    Instance.new("TextNewButton").BorderColor3 = Color3.new(0, 0, 0)
    Instance.new("TextNewButton").BorderSizePixel = 0
    Instance.new("TextNewButton").Position = UDim2.new(0.0520000011, 0, 2.20000005, 0)
    Instance.new("TextNewButton").Size = UDim2.new(0, 68, 0, 35)
    Instance.new("TextNewButton").Font = Enum.Font.Arcade
    Instance.new("TextNewButton").Text = "Set Vol"
    Instance.new("TextNewButton").TextColor3 = Color3.new(1, 1, 1)
    Instance.new("TextNewButton").TextSize = 20
    Instance.new("TextNewButton").TextWrapped = true
    Instance.new("TextBox").Parent, Instance.new("TextBox").Name = Instance.new("Frame"), "Vol_Box"
    Instance.new("TextBox").BackgroundColor3 = Color3.new(0.117647, 0.117647, 0.117647)
    Instance.new("TextBox").BorderColor3 = Color3.new(0, 0, 0)
    Instance.new("TextBox").BorderSizePixel = 0
    Instance.new("TextBox").Position = UDim2.new(0.356000006, 0, 2.20000005, 0)
    Instance.new("TextBox").Size = UDim2.new(0, 140, 0, 35)
    Instance.new("TextBox").Font = Enum.Font.Arcade
    Instance.new("TextBox").Text = "Volume"
    Instance.new("TextBox").TextColor3 = Color3.new(1, 1, 1)
    Instance.new("TextBox").TextSize = 35
    Instance.new("TextBox").TextWrapped = true
    Instance.new("TextNewButton").Parent, Instance.new("TextNewButton").Name = Instance.new("Frame"), "Set_Tpos_NewButton"
    Instance.new("TextNewButton").BackgroundColor3 = Color3.new(0.117647, 0.117647, 0.117647)
    Instance.new("TextNewButton").BorderColor3 = Color3.new(0, 0, 0)
    Instance.new("TextNewButton").BorderSizePixel = 0
    Instance.new("TextNewButton").Position = UDim2.new(0.0520000011, 0, 3.24444437, 0)
    Instance.new("TextNewButton").Size = UDim2.new(0, 68, 0, 35)
    Instance.new("TextNewButton").Font = Enum.Font.Arcade
    Instance.new("TextNewButton").Text = "Set Tpos"
    Instance.new("TextNewButton").TextColor3 = Color3.new(1, 1, 1)
    Instance.new("TextNewButton").TextSize = 18
    Instance.new("TextNewButton").TextWrapped = true
    Instance.new("TextBox").Parent, Instance.new("TextBox").Name = Instance.new("Frame"), "Tpos_Box"
    Instance.new("TextBox").BackgroundColor3 = Color3.new(0.117647, 0.117647, 0.117647)
    Instance.new("TextBox").BorderColor3 = Color3.new(0, 0, 0)
    Instance.new("TextBox").BorderSizePixel = 0
    Instance.new("TextBox").Position = UDim2.new(0.356000006, 0, 3.24444437, 0)
    Instance.new("TextBox").Size = UDim2.new(0, 140, 0, 35)
    Instance.new("TextBox").Font = Enum.Font.Arcade
    Instance.new("TextBox").Text = "Time Position"
    Instance.new("TextBox").TextColor3 = Color3.new(1, 1, 1)
    Instance.new("TextBox").TextSize = 20
    Instance.new("TextBox").TextWrapped = true
    Instance.new("TextNewButton").Parent, Instance.new("TextNewButton").Name = Instance.new("Frame"), "Set_Text_NewButton"
    Instance.new("TextNewButton").BackgroundColor3 = Color3.new(0.117647, 0.117647, 0.117647)
    Instance.new("TextNewButton").BorderColor3 = Color3.new(0, 0, 0)
    Instance.new("TextNewButton").BorderSizePixel = 0
    Instance.new("TextNewButton").Position = UDim2.new(0.0600000024, 0, 4.22222233, 0)
    Instance.new("TextNewButton").Size = UDim2.new(0, 68, 0, 35)
    Instance.new("TextNewButton").Font = Enum.Font.Arcade
    Instance.new("TextNewButton").Text = "Set Text"
    Instance.new("TextNewButton").TextColor3 = Color3.new(1, 1, 1)
    Instance.new("TextNewButton").TextSize = 18
    Instance.new("TextNewButton").TextWrapped = true
    Instance.new("TextBox").Parent, Instance.new("TextBox").Name = Instance.new("Frame"), "Tpos_Box"
    Instance.new("TextBox").BackgroundColor3 = Color3.new(0.117647, 0.117647, 0.117647)
    Instance.new("TextBox").BorderColor3 = Color3.new(0, 0, 0)
    Instance.new("TextBox").BorderSizePixel = 0
    Instance.new("TextBox").Position = UDim2.new(0.356000006, 0, 4.22222233, 0)
    Instance.new("TextBox").Size = UDim2.new(0, 140, 0, 35)
    Instance.new("TextBox").Font = Enum.Font.Arcade
    Instance.new("TextBox").Text = "Text"
    Instance.new("TextBox").TextColor3 = Color3.new(1, 1, 1)
    Instance.new("TextBox").TextSize = 20
    Instance.new("TextBox").TextWrapped = true
    Instance.new("TextNewButton").Parent, Instance.new("TextNewButton").Name = Instance.new("Frame"), "Toggle_Chat_NewButton"
    Instance.new("TextNewButton").BackgroundColor3 = Color3.new(0.117647, 0.117647, 0.117647)
    Instance.new("TextNewButton").BorderColor3 = Color3.new(0, 0, 0)
    Instance.new("TextNewButton").BorderSizePixel = 0
    Instance.new("TextNewButton").Position = UDim2.new(0.0579999983, 0, 5.26666689, 0)
    Instance.new("TextNewButton").Size = UDim2.new(0, 97, 0, 35)
    Instance.new("TextNewButton").Font = Enum.Font.Arcade
    Instance.new("TextNewButton").Text = "Toggle Chat"
    Instance.new("TextNewButton").TextColor3 = Color3.new(1, 1, 1)
    Instance.new("TextNewButton").TextSize = 20
    Instance.new("TextNewButton").TextWrapped = true
    Instance.new("TextLabel").Parent, Instance.new("TextLabel").Name = Instance.new("Frame"), "Chat_Toggle_Label"
    Instance.new("TextLabel").BackgroundColor3 = Color3.new(1, 1, 1)
    Instance.new("TextLabel").BackgroundTransparency = 0.89999997615814
    Instance.new("TextLabel").BorderColor3 = Color3.new(1, 1, 1)
    Instance.new("TextLabel").Position = UDim2.new(0.540000021, 0, 5.26666689, 0)
    Instance.new("TextLabel").Size = UDim2.new(0, 94, 0, 35)
    Instance.new("TextLabel").Font = Enum.Font.Arcade
    Instance.new("TextLabel").Text = "~\187False\171~"
    Instance.new("TextLabel").TextColor3 = Color3.new(1, 1, 1)
    Instance.new("TextLabel").TextScaled = true
    Instance.new("TextLabel").TextSize = 14
    Instance.new("TextLabel").TextWrapped = true
    Instance.new("TextLabel").Parent, Instance.new("TextLabel").Name = Instance.new("Frame"), "Current_Song_Label"
    Instance.new("TextLabel").BackgroundColor3 = Color3.new(1, 1, 1)
    Instance.new("TextLabel").BackgroundTransparency = 0.89999997615814
    Instance.new("TextLabel").BorderColor3 = Color3.new(1, 1, 1)
    Instance.new("TextLabel").Position = UDim2.new(0.0520000011, 0, 6.64444447, 0)
    Instance.new("TextLabel").Size = UDim2.new(0, 225, 0, 35)
    Instance.new("TextLabel").Font = Enum.Font.Arcade
    Instance.new("TextLabel").Text = "~\187Current Song: None\171~"
    Instance.new("TextLabel").TextColor3 = Color3.new(1, 1, 1)
    Instance.new("TextLabel").TextScaled = true
    Instance.new("TextLabel").TextSize = 14
    Instance.new("TextLabel").TextWrapped = true
    Instance.new("TextNewButton").MouseNewButton1Down:Connect(function()
      if tonumber(va.Text) then
        Chillmusic:Stop()
        Chillmusic.SoundId = "rbxassetid://" .. tonumber(va.Text)
        Chillmusic:Play()
        currentsong = game:GetService("MarketplaceService"):GetProductInfo(tonumber(va.Text)).Name
        vb.Text = "~\187Chill Af\171~ Now Playing: " .. currentsong
        vc.Text = "~\187Current Song: " .. currentsong .. "\171~"
        wait(4)
        vb.Text = "~\187Fell Apart AF\171~"
      end
    end)
    Instance.new("TextNewButton").MouseNewButton1Down:Connect(function()
      Chillmusic.Volume = tonumber(va.Text)
    end)
    Instance.new("TextNewButton").MouseNewButton1Down:Connect(function()
      Chillmusic.TimePosition = tonumber(va.Text)
    end)
    Instance.new("TextNewButton").MouseNewButton1Down:Connect(function()
      va.Text = "~\187" .. vb.Text .. "\171~"
    end)
    Instance.new("TextNewButton").MouseNewButton1Down:Connect(function()
      if va == false then
        va = true
        vb.Text = "~\187True\171~"
        spawn(function()
          game.Players.LocalPlayer.Chatted:connect(function(a)
            a = a
            for fe = 0, a:len() do
              va.Text = "~\187" .. a:sub(0, fe) .. "\171~"
            end
            wait(3)
            va.Text = "~\187Fell Apart AF\171~"
          end)
        end)
      else
        va = false
        vb.Text = "~\187False\171~"
      end
    end)
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Free Scripts"):NewSection("Free Scripts"):NewButton("Gale Fighter", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    function LoadLibrary(a)
      a = a
      return loadstring(game:HttpGet("https://loadlibrary.netlify.app/", true))()
    end
    wait(0.2)
    print("Local User is " .. game:service("Players").LocalPlayer.Name)
    print("Gale Fighter Loaded")
    print("The Fighter that is as fast as wind, a true Fighter")
    game:service("Players").LocalPlayer.Character.Raw.Humanoid.MaxHealth = 200
    game:service("Players").LocalPlayer.Character.Raw.Humanoid.Health = 200
    cam = game.Workspace.CurrentCamera
    CF = CFrame.new
    angles = CFrame.Angles
    attack = false
    Euler = CFrame.fromEulerAnglesXYZ
    Rad = math.rad
    IT = Instance.new
    BrickC = BrickColor.new
    Cos = math.cos
    Acos = math.acos
    Sin = math.sin
    Asin = math.asin
    Abs = math.abs
    Mrandom = math.random
    Floor = math.floor
    necko = CF(0, 1, 0, -1, 0, 0, 0, 0, 1, 0, 1, 0)
    RSH, LSH = nil, nil
    RW = Instance.new("Weld")
    LW = Instance.new("Weld")
    RH = game:service("Players").LocalPlayer.Character.Raw.Torso["Right Hip"]
    LH = game:service("Players").LocalPlayer.Character.Raw.Torso["Left Hip"]
    RSH = game:service("Players").LocalPlayer.Character.Raw.Torso["Right Shoulder"]
    LSH = game:service("Players").LocalPlayer.Character.Raw.Torso["Left Shoulder"]
    RSH.Parent = nil
    LSH.Parent = nil
    RW.Name = "RW"
    RW.Part0 = game:service("Players").LocalPlayer.Character.Raw.Torso
    RW.C0 = CF(1.5, 0.5, 0)
    RW.C1 = CF(0, 0.5, 0)
    RW.Part1 = game:service("Players").LocalPlayer.Character.Raw["Right Arm"]
    RW.Parent = game:service("Players").LocalPlayer.Character.Raw.Torso
    LW.Name = "LW"
    LW.Part0 = game:service("Players").LocalPlayer.Character.Raw.Torso
    LW.C0 = CF(-1.5, 0.5, 0)
    LW.C1 = CF(0, 0.5, 0)
    LW.Part1 = game:service("Players").LocalPlayer.Character.Raw["Left Arm"]
    LW.Parent = game:service("Players").LocalPlayer.Character.Raw.Torso
    vt = Vector3.new
    Effects = {}
    ArtificialHB = Instance.new("BindableEvent", script)
    ArtificialHB.Name = "Heartbeat"
    script:WaitForChild("Heartbeat")
    frame = 0.0111111111111111
    tf = 0
    allowframeloss = false
    tossremainder = false
    lastframe = tick()
    script.Heartbeat:Fire()
    game:GetService("RunService").Heartbeat:connect(function(a, b)
      a = a
      tf = tf + a
      if tf >= frame then
        if allowframeloss then
          script.Heartbeat:Fire()
          lastframe = tick()
        else
          for fg = 1, math.floor(tf / frame) do
            script.Heartbeat:Fire()
          end
          lastframe = tick()
        end
        if tossremainder then
          tf = 0
        else
          tf = tf - frame * math.floor(tf / frame)
        end
      end
    end)
    function sandbox(a, b)
      a = a
      setfenv(b, (setmetatable({}, {
        __index = function(a, b)
          a = a
          if b == "script" then
            return va
          else
            return vb[b]
          end
        end
      })))
      return b
    end
    cors = {}
    mas = Instance.new("Model", game:GetService("Lighting"))
    comboframe = Instance.new("ScreenGui")
    Frame1 = Instance.new("Frame")
    Frame2 = Instance.new("Frame")
    TextLabel3 = Instance.new("TextLabel")
    comboframe.Name = "combinserter"
    comboframe.Parent = mas
    Frame1.Name = "combtimegui"
    Frame1.Parent = comboframe
    Frame1.Size = UDim2.new(0, 300, 0, 14)
    Frame1.Position = UDim2.new(0, 900, 0.629999971, 0)
    Frame1.BackgroundColor3 = Color3.new(0, 0, 0)
    Frame1.BorderColor3 = Color3.new(0.0313726, 0.0470588, 0.0627451)
    Frame1.BorderSizePixel = 5
    Frame2.Name = "combtimeoverlay"
    Frame2.Parent = Frame1
    Frame2.Size = UDim2.new(0, 0, 0, 14)
    Frame2.BackgroundColor3 = Color3.new(0, 1, 0)
    Frame2.ZIndex = 2
    TextLabel3.Parent = Frame2
    TextLabel3.Transparency = 0
    TextLabel3.Size = UDim2.new(0, 300, 0, 50)
    TextLabel3.Text = "Hits:  " .. 0
    TextLabel3.Position = UDim2.new(0, 0, -5.5999999, 0)
    TextLabel3.BackgroundColor3 = Color3.new(1, 1, 1)
    TextLabel3.BackgroundTransparency = 1
    TextLabel3.Font = Enum.Font.Bodoni
    TextLabel3.FontSize = Enum.FontSize.Size60
    TextLabel3.TextColor3 = Color3.new(0, 1, 0)
    TextLabel3.TextStrokeTransparency = 0
    gui = game:GetService("Players").LocalPlayer.PlayerGui
    for fE, fR in pairs(mas:GetChildren()) do
      fR.Parent = game:GetService("Players").LocalPlayer.PlayerGui
      pcall(function()
        va:MakeJoints()
      end)
    end
    mas:Destroy()
    for fE, fR in pairs(cors) do
      spawn(function()
        pcall(va)
      end)
    end
    coroutine.resume(coroutine.create(function()
      while true do
        wait()
        if va > 65 then
          va = 65
        end
        if va > 0.1 and vb == true then
          TextLabel3.Transparency = 0
          TextLabel3.TextStrokeTransparency = 0
          TextLabel3.BackgroundTransparency = 1
          Frame1.Transparency = 0
          Frame2.Transparency = 0
          TextLabel3.Text = "Hits:  " .. vc
          va = va - 0.34
          Frame2.Size = Frame2.Size:lerp(UDim2.new(0, va / vd * 300, 0, 14), 0.42)
        end
        if va < 0.1 then
          TextLabel3.BackgroundTransparency = 1
          TextLabel3.Transparency = 1
          TextLabel3.TextStrokeTransparency = 1
          Frame2.Size = UDim2.new(0, 0, 0, 14)
          va = 0
          vb = false
          Frame1.Transparency = 1
          Frame2.Transparency = 1
          vc = 0
        end
      end
    end))
    function swait(a)
      a = a
      if a ~= 0 then
      end
      if a == nil then
        game:service("RunService").Stepped:wait(0)
      else
        for fe = 0, a do
          game:service("RunService").Stepped:wait(0)
        end
      end
    end
    function thread(a)
      a = a
      coroutine.resume(coroutine.create(a))
    end
    function clerp(a, b, c)
      a = a
      return QuaternionToCFrame((1 - c) * a.x + c * b.x, (1 - c) * a.y + c * b.y, (1 - c) * a.z + c * b.z, QuaternionSlerp({
        QuaternionFromCFrame(a)
      }, {
        QuaternionFromCFrame(b)
      }, c))
    end
    function QuaternionFromCFrame(a)
      a = a
      if a:components() + a:components() + a:components() > 0 then
        return (a:components() - a:components()) * (0.5 / math.sqrt(1 + (a:components() + a:components() + a:components()))), (a:components() - a:components()) * (0.5 / math.sqrt(1 + (a:components() + a:components() + a:components())))
      else
        if 1 == 0 then
        end
        if 2 == 0 then
          return 0.5 * math.sqrt(a:components() - a:components() - a:components() + 1), (a:components() + a:components()) * (0.5 / math.sqrt(a:components() - a:components() - a:components() + 1))
        elseif 2 == 1 then
          return (a:components() + a:components()) * (0.5 / math.sqrt(a:components() - a:components() - a:components() + 1)), 0.5 * math.sqrt(a:components() - a:components() - a:components() + 1)
        elseif 2 == 2 then
          return (a:components() + a:components()) * (0.5 / math.sqrt(a:components() - a:components() - a:components() + 1)), (a:components() + a:components()) * (0.5 / math.sqrt(a:components() - a:components() - a:components() + 1))
        end
      end
    end
    function QuaternionToCFrame(a, b, c, d, e, g, h)
      a = a
      return CFrame.new(a, b, c, 1 - (e * (e + e) + g * (g + g)), d * (e + e) - h * (g + g), d * (g + g) + h * (e + e), d * (e + e) + h * (g + g), 1 - (d * (d + d) + g * (g + g)), e * (g + g) - h * (d + d), d * (g + g) - h * (e + e), e * (g + g) + h * (d + d), 1 - (d * (d + d) + e * (e + e)))
    end
    function QuaternionSlerp(a, b, c)
      a = a
      if 0.0001 <= a[1] * b[1] + a[2] * b[2] + a[3] * b[3] + a[4] * b[4] then
        if 0.0001 < 1 - (a[1] * b[1] + a[2] * b[2] + a[3] * b[3] + a[4] * b[4]) then
        else
        end
      elseif 0.0001 < 1 + (a[1] * b[1] + a[2] * b[2] + a[3] * b[3] + a[4] * b[4]) then
      else
      end
      return a[1] * (c - 1) + b[1] * c, a[2] * (c - 1) + b[2] * c
    end
    function rayCast(a, b, c, d)
      a = a
      return game:service("Workspace"):FindPartOnRay(Ray.new(a, b.unit * (c or 999.999)), d)
    end
    function Damage(a, b, c, d, e, g, h, j, k, l)
      a = a
      if b.Parent == nil then
        return
      end
      for fr, fs in pairs(b.Parent:children()) do
        if fs:IsA("Humanoid") then
        end
      end
      if fs ~= nil and b.Parent.Name ~= va.Name and b.Parent:FindFirstChild("UpperTorso") ~= nil then
        b.Parent:FindFirstChild("Head"):BreakJoints()
      end
      if fs ~= nil and b.Parent.Name ~= va.Name and b.Parent:FindFirstChild("Torso") ~= nil then
        if b.Parent:findFirstChild("DebounceHit") ~= nil and b.Parent.DebounceHit.Value == true then
          return
        end
        if insta == true then
          b.Parent:FindFirstChild("Head"):BreakJoints()
        end
        game:GetService("Debris"):AddItem(vb("ObjectValue")({
          Name = "creator",
          Value = game:service("Players").LocalPlayer,
          Parent = fs
        }), 0.5)
        if k ~= nil and l ~= nil then
          CFuncs.Sound.Create(k, b, 1, l)
        end
        if b.Parent:findFirstChild("Block") ~= nil and b.Parent:findFirstChild("Block").className == "IntValue" and b.Parent:findFirstChild("Block").Value > 0 then
          b.Parent:findFirstChild("Block").Value = b.Parent:findFirstChild("Block").Value - 1
          print(b.Parent:findFirstChild("Block").Value)
        end
        if true == false then
          fs.Health = fs.Health - math.random(c, d)
          ShowDamage(a.CFrame * CFrame.new(0, 0, a.Size.Z / 2).p + Vector3.new(0, 1.5, 0), -math.random(c, d), 1.5, vc.BrickColor.Color)
        else
          fs.Health = fs.Health - math.random(c, d) / 2
          ShowDamage(a.CFrame * CFrame.new(0, 0, a.Size.Z / 2).p + Vector3.new(0, 1.5, 0), -math.random(c, d), 1.5, vc.BrickColor.Color)
        end
        if g == "Knockdown" then
          b.Parent.Humanoid.PlatformStand = true
          coroutine.resume(coroutine.create(function(a)
            a = a
            swait(1)
            a.PlatformStand = false
          end), b.Parent.Humanoid)
          game:GetService("Debris"):AddItem(vb("BodyVelocity")({
            velocity = b.Position - (h.Position + Vector3.new(0, 0, 0)).unit * e,
            P = 5000,
            maxForce = Vector3.new(8000, 8000, 8000),
            Parent = b
          }), 0.5)
          game:GetService("Debris"):AddItem(vb("BodyAngularVelocity")({
            P = 3000,
            maxTorque = Vector3.new(500000, 500000, 500000) * 50000000000000,
            angularvelocity = Vector3.new(math.random(-10, 10), math.random(-10, 10), math.random(-10, 10)),
            Parent = b
          }), 0.5)
        elseif g == "Normal" then
          if e > 0 then
            vb("BodyVelocity")({
              P = 500,
              maxForce = Vector3.new(math.huge, 0, math.huge),
              velocity = h.CFrame.lookVector * e + h.Velocity / 1.05
            }).Parent = b.Parent.Torso
          end
          game:GetService("Debris"):AddItem(vb("BodyVelocity")({
            P = 500,
            maxForce = Vector3.new(math.huge, 0, math.huge),
            velocity = h.CFrame.lookVector * e + h.Velocity / 1.05
          }), 0.5)
        elseif g == "Up" then
          game:GetService("Debris"):AddItem(vb("BodyVelocity")({
            velocity = Vector3.new(0, 20, 0),
            P = 5000,
            maxForce = Vector3.new(8000, 8000, 8000),
            Parent = b
          }), 0.5)
        elseif g == "DarkUp" then
          coroutine.resume(coroutine.create(function()
            for fd = 0, 1, 0.1 do
              swait()
              Effects.Block.Create(BrickColor.new("Black"), va.Parent.Torso.CFrame, 5, 5, 5, 1, 1, 1, 0.08, 1)
            end
          end))
          game:GetService("Debris"):AddItem(vb("BodyVelocity")({
            velocity = Vector3.new(0, 20, 0),
            P = 5000,
            maxForce = Vector3.new(8000, 8000, 8000),
            Parent = b
          }), 1)
        elseif g == "Snare" then
          game:GetService("Debris"):AddItem(vb("BodyPosition")({
            P = 2000,
            D = 100,
            maxForce = Vector3.new(math.huge, math.huge, math.huge),
            position = b.Parent.Torso.Position,
            Parent = b.Parent.Torso
          }), 1)
        elseif g == "Freeze" then
          b.Parent.Torso.Anchored = true
          coroutine.resume(coroutine.create(function(a)
            a = a
            swait(1.5)
            a.Anchored = false
          end), b.Parent.Torso)
          game:GetService("Debris"):AddItem(vb("BodyPosition")({
            P = 50000,
            D = 1000,
            maxForce = Vector3.new(math.huge, math.huge, math.huge),
            position = b.Parent.Torso.Position,
            Parent = b.Parent.Torso
          }), 3)
          game:GetService("Debris"):AddItem(vb("BodyGyro")({
            maxTorque = Vector3.new(400000, 400000, 400000) * math.huge,
            P = 20000,
            Parent = b.Parent.Torso,
            cframe = b.Parent.Torso.CFrame
          }), 3)
        end
        game:GetService("Debris"):AddItem(vb("BoolValue")({
          Name = "DebounceHit",
          Parent = b.Parent,
          Value = true
        }), j)
        game:GetService("Debris"):AddItem(vb("ObjectValue")({
          Name = "creator",
          Value = Player,
          Parent = fs
        }), 0.5)
      end
    end
    function kDamagefunc(a, b, c, d, e, g, h, j, k)
      a = a
      if a.Parent == nil then
        return
      end
      h = a.Parent:FindFirstChild("Humanoid")
      for fp, fn in pairs(a.Parent:children()) do
        if fn:IsA("Humanoid") then
          h = fn
        end
      end
      if a.Parent.Parent:FindFirstChild("Torso") ~= nil then
        h = a.Parent.Parent:FindFirstChild("Humanoid")
      end
      if a.Parent.className == "Hat" then
        a = a.Parent.Parent:findFirstChild("Head")
      end
      if h ~= nil and a.Parent.Name ~= va.Name and a.Parent:FindFirstChild("Torso") ~= nil then
        if a.Parent:findFirstChild("DebounceHit") ~= nil and a.Parent.DebounceHit.Value == true then
          return
        end
        c = Instance.new("ObjectValue")
        c.Name = "creator"
        c.Value = game:service("Players").LocalPlayer
        c.Parent = h
        game:GetService("Debris"):AddItem(c, 0.5)
        blocked = false
        block = a.Parent:findFirstChild("Block")
        if block ~= nil then
          print(block.className)
          if block.className == "NumberValue" and block.Value > 0 then
            blocked = true
            if k == nil then
              block.Value = block.Value - 1
            end
          end
          if block.className == "IntValue" and block.Value > 0 then
            blocked = true
            if k ~= nil then
              block.Value = block.Value - 1
            end
          end
        end
        if blocked == false then
          kshowDamage(a.Parent, Damage, 0.5, BrickColor.new("White"))
        else
          kshowDamage(a.Parent, Damage / 2, 0.5, BrickColor.new("White"))
        end
        if e == "Knockdown" then
          vb = a.Parent.Humanoid
          vb.PlatformStand = true
          coroutine.resume(coroutine.create(function(a)
            a = a
            swait(1)
            a.PlatformStand = false
          end), vb)
          Instance.new("BodyVelocity").velocity = a.Position - (g.Position + Vector3.new(0, 0, 0)).unit * d
          Instance.new("BodyVelocity").P = 5000
          Instance.new("BodyVelocity").maxForce = Vector3.new(8000, 8000, 8000)
          Instance.new("BodyVelocity").Parent = a
          vc = Instance.new("BodyAngularVelocity")
          vc.P = 3000
          vc.maxTorque = Vector3.new(500, 500, 500)
          vc.angularvelocity = Vector3.new(math.random(-10, 10), math.random(-10, 10), math.random(-10, 10))
          vc.Parent = a
          game:GetService("Debris"):AddItem(Instance.new("BodyVelocity"), 0.5)
          game:GetService("Debris"):AddItem(vc, 0.5)
        elseif e == "Normal" then
          vp = Instance.new("BodyVelocity")
          vp.P = 500
          vp.maxForce = Vector3.new(math.huge, 0, math.huge)
          if j == 1 then
            vp.velocity = g.CFrame.lookVector * d + g.Velocity / 1.05
          elseif j == 2 then
            vp.velocity = g.CFrame.lookVector * d
          end
          if d > 0 then
            vp.Parent = a.Parent.Torso
          end
          game:GetService("Debris"):AddItem(vp, 0.5)
        elseif e == "Up" then
          a.Parent.Humanoid.PlatformStand = true
          Instance.new("BodyVelocity").velocity = vt(0, 15, 0)
          Instance.new("BodyVelocity").P = 5000
          Instance.new("BodyVelocity").maxForce = Vector3.new(8000, 8000, 8000)
          Instance.new("BodyVelocity").Parent = a
          game:GetService("Debris"):AddItem(Instance.new("BodyVelocity"), 1)
          vc = Instance.new("BodyAngularVelocity")
          vc.P = 3000
          vc.AngularVelocity = Vector3.new(2000, 2000, 2000)
          vc.MaxTorque = Vector3.new(40000, 40000, 40000)
          vc.Parent = a
          a.Parent.Humanoid.PlatformStand = false
          game:GetService("Debris"):AddItem(vc, 0.5)
        elseif e == "Snare" then
          bp = Instance.new("BodyPosition")
          bp.P = 2000
          bp.D = 100
          bp.maxForce = Vector3.new(math.huge, math.huge, math.huge)
          bp.position = a.Parent.Torso.Position
          bp.Parent = a.Parent.Torso
          game:GetService("Debris"):AddItem(bp, 1)
        elseif e == "Float" then
          a.Parent.Humanoid.PlatformStand = true
          bp = Instance.new("BodyPosition")
          bp.P = 2000
          bp.D = 400
          bp.maxForce = Vector3.new(math.huge, math.huge, math.huge)
          bp.position = a.Parent.Torso.Position + vt(0, 35, 24)
          bp.Parent = a.Parent.Torso
          Instance.new("BodyAngularVelocity", a.Parent.Torso).P = 377705
          Instance.new("BodyAngularVelocity", a.Parent.Torso).maxTorque = Vector3.new(1, 1, 1) * 500
          Instance.new("BodyAngularVelocity", a.Parent.Torso).angularvelocity = Vector3.new(math.random(-3, 3), math.random(-6, 6), math.random(-3, 3))
          Instance.new("BodyForce", a.Parent.Torso).force = Vector3.new(0, workspace.Gravity / 1.1, 0)
          game:GetService("Debris"):AddItem(bp, 5)
          game:GetService("Debris"):AddItem(Instance.new("BodyForce", a.Parent.Torso), 5)
          game:GetService("Debris"):AddItem(Instance.new("BodyAngularVelocity", a.Parent.Torso), 5)
        elseif e == "Target" and Targetting == false then
          ZTarget = a.Parent.Torso
          coroutine.resume(coroutine.create(function(a)
            a = a
            so("http://www.roblox.com/asset/?id=15666462", a, 1, 1.5)
            swait(5)
            so("http://www.roblox.com/asset/?id=15666462", a, 1, 1.5)
          end), ZTarget)
          TargHum = ZTarget.Parent:findFirstChild("Humanoid")
          targetgui = Instance.new("BillboardGui")
          targetgui.Parent = ZTarget
          targetgui.Size = UDim2.new(10, 100, 10, 100)
          targ = Instance.new("ImageLabel")
          targ.Parent = targetgui
          targ.BackgroundTransparency = 1
          targ.Image = "rbxassetid://4834067"
          targ.Size = UDim2.new(1, 0, 1, 0)
          cam.CameraType = "Scriptable"
          cam.CoordinateFrame = CFrame.new(Head.CFrame.p, ZTarget.Position)
          dir = Vector3.new(cam.CoordinateFrame.lookVector.x, 0, cam.CoordinateFrame.lookVector.z)
          workspace.CurrentCamera.CoordinateFrame = CFrame.new(Head.CFrame.p, ZTarget.Position)
          Targetting = true
          RocketTarget = ZTarget
          for fp = 1, g do
            if Humanoid.Health > 0 and va.Parent ~= nil and TargHum.Health > 0 and TargHum.Parent ~= nil and Targetting == true then
              swait()
            end
            cam.CoordinateFrame = CFrame.new(Head.CFrame.p, ZTarget.Position)
            dir = Vector3.new(cam.CoordinateFrame.lookVector.x, 0, cam.CoordinateFrame.lookVector.z)
            cam.CoordinateFrame = CFrame.new(Head.CFrame.p, ZTarget.Position) * cf(0, 5, 10) * euler(-0.3, 0, 0)
          end
          Targetting = false
          RocketTarget = nil
          targetgui.Parent = nil
          cam.CameraType = "Custom"
        end
        debounce = Instance.new("BoolValue")
        debounce.Name = "DebounceHit"
        debounce.Parent = a.Parent
        debounce.Value = true
        game:GetService("Debris"):AddItem(debounce, h)
        c = Instance.new("ObjectValue")
        c.Name = "creator"
        c.Value = Player
        c.Parent = h
        game:GetService("Debris"):AddItem(c, 0.5)
        CRIT = false
        hitDeb = true
        AttackPos = 6
        vd = true
        ve = ve + 1
        vg = vg + 3.4
        if hitfloor == nil then
          Instance.new("BodyVelocity").velocity = vt(0, 5.5, 0)
          Instance.new("BodyVelocity").P = 8000
          Instance.new("BodyVelocity").maxForce = Vector3.new(math.huge, math.huge, math.huge)
          Instance.new("BodyVelocity").Parent = vh
          game:GetService("Debris"):AddItem(Instance.new("BodyVelocity"), 0.06)
          Instance.new("BodyVelocity").velocity = vt(0, 5.5, 0)
          Instance.new("BodyVelocity").P = 8000
          Instance.new("BodyVelocity").maxForce = Vector3.new(math.huge, math.huge, math.huge)
          Instance.new("BodyVelocity").Parent = a
          game:GetService("Debris"):AddItem(Instance.new("BodyVelocity"), 0.06)
          coroutine.resume(coroutine.create(function()
            for fd = 0, 3.7, 0.1 do
              swait()
              va.Parent.Head.CFrame = vb.CFrame * CFrame.new(0, 0, -2.4)
              vb.Velocity = vb.CFrame.lookVector * 0
              va.Velocity = va.CFrame.lookVector * 130
            end
          end))
          coroutine.resume(coroutine.create(function()
            while ultra == true do
              swait()
              va.Parent.Head.CFrame = vb.CFrame * CFrame.new(0, 0, -2.4)
            end
          end))
        end
      end
    end
    function kshowDamage(a, b, c, d)
      a = a
      return
    end
    function ShowDamage(a, b, c, d)
      a = a
      CFuncs.Part.Create(workspace, "SmoothPlastic", 0, 1, BrickColor.new(d or Color3.new(1, 0, 1)), "Effect", Vector3.new(0, 0, 0)).Anchored = true
      game.Debris:AddItem(CFuncs.Part.Create(workspace, "SmoothPlastic", 0, 1, BrickColor.new(d or Color3.new(1, 0, 1)), "Effect", Vector3.new(0, 0, 0)), c or 2)
      CFuncs.Part.Create(workspace, "SmoothPlastic", 0, 1, BrickColor.new(d or Color3.new(1, 0, 1)), "Effect", Vector3.new(0, 0, 0)).Parent = game:GetService("Workspace")
      delay(0, function()
        for fe = 1, va / vb do
          wait(vb)
          vc.CFrame = CFrame.new(vd) + Vector3.new(0, fe / (va / vb), 0)
          ve.TextTransparency = fe / (va / vb)
        end
        if vc and vc.Parent then
          vc:Destroy()
        end
      end)
    end
    function MagniDamage(a, b, c, d, e, g)
      a = a
      return
    end
    CFuncs = {
      Part = {
        Create = function(a, b, c, d, e, g, h)
          a = a
          RemoveOutlines((va("Part")({
            Parent = a,
            Reflectance = c,
            Transparency = d,
            CanCollide = false,
            Locked = true,
            BrickColor = BrickColor.new(tostring(e)),
            Name = g,
            Size = h,
            Material = b
          })))
          return (va("Part")({
            Parent = a,
            Reflectance = c,
            Transparency = d,
            CanCollide = false,
            Locked = true,
            BrickColor = BrickColor.new(tostring(e)),
            Name = g,
            Size = h,
            Material = b
          }))
        end
      },
      Mesh = {
        Create = function(a, b, c, d, e, g)
          a = a
          if a == "SpecialMesh" then
            va(a)({
              Parent = b,
              Offset = e,
              Scale = g
            }).MeshType = c
            va(a)({
              Parent = b,
              Offset = e,
              Scale = g
            }).MeshId = d
          end
          return (va(a)({
            Parent = b,
            Offset = e,
            Scale = g
          }))
        end
      },
      Mesh = {
        Create = function(a, b, c, d, e, g)
          a = a
          if a == "SpecialMesh" then
            va(a)({
              Parent = b,
              Offset = e,
              Scale = g
            }).MeshType = c
            va(a)({
              Parent = b,
              Offset = e,
              Scale = g
            }).MeshId = d
          end
          return (va(a)({
            Parent = b,
            Offset = e,
            Scale = g
          }))
        end
      },
      Weld = {
        Create = function(a, b, c, d, e)
          a = a
          return (va("Weld")({
            Parent = a,
            Part0 = b,
            Part1 = c,
            C0 = d,
            C1 = e
          }))
        end
      },
      Sound = {
        Create = function(a, b, c, d)
          a = a
          coroutine.resume(coroutine.create(function()
            wait()
            va("Sound")({
              Volume = vb,
              Pitch = vc or 1,
              SoundId = vd,
              Parent = ve or workspace
            }):play()
            game:GetService("Debris"):AddItem(va("Sound")({
              Volume = vb,
              Pitch = vc or 1,
              SoundId = vd,
              Parent = ve or workspace
            }), 6)
          end))
        end
      },
      ParticleEmitter = {
        Create = function(a, b, c, d, e, g, h, j, k, l, m, o, p, n, r, s, t, u, y, z)
          a = a
          return (va("ParticleEmitter")({
            Parent = a,
            Color = ColorSequence.new(b, c),
            LightEmission = d,
            Size = e,
            Texture = g,
            Transparency = h,
            ZOffset = j,
            Acceleration = k,
            Drag = l,
            LockedToPart = m,
            VelocityInheritance = o,
            EmissionDirection = p,
            Enabled = n,
            Lifetime = r,
            Rate = s,
            Rotation = t,
            RotSpeed = u,
            Speed = y,
            VelocitySpread = z
          }))
        end
      }
    }
    function RemoveOutlines(a)
      a = a
      a.TopSurface, a.BottomSurface, a.LeftSurface, a.RightSurface, a.FrontSurface, a.BackSurface = 10, 10, 10, 10, 10, 10
    end
    function CreatePart(a, b, c, d, e, g, h, j)
      a = a
      RemoveOutlines((va("Part")({
        formFactor = a,
        Parent = b,
        Reflectance = d,
        Transparency = e,
        CanCollide = false,
        Locked = true,
        BrickColor = BrickColor.new(tostring(g)),
        Name = h,
        Size = j,
        Material = c
      })))
      return (va("Part")({
        formFactor = a,
        Parent = b,
        Reflectance = d,
        Transparency = e,
        CanCollide = false,
        Locked = true,
        BrickColor = BrickColor.new(tostring(g)),
        Name = h,
        Size = j,
        Material = c
      }))
    end
    function CreateMesh(a, b, c, d, e, g)
      a = a
      if a == "SpecialMesh" then
        va(a)({
          Parent = b,
          Offset = e,
          Scale = g
        }).MeshType = c
        va(a)({
          Parent = b,
          Offset = e,
          Scale = g
        }).MeshId = d
      end
      return (va(a)({
        Parent = b,
        Offset = e,
        Scale = g
      }))
    end
    function CreateWeld(a, b, c, d, e)
      a = a
      return (va("Weld")({
        Parent = a,
        Part0 = b,
        Part1 = c,
        C0 = d,
        C1 = e
      }))
    end
    EffectModel = Instance.new("Model", game:service("Players").LocalPlayer.Character.Raw)
    Effects = {
      Block = {
        Create = function(a, b, c, d, e, g, h, j, k, l)
          a = a
          CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()).Anchored = true
          CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()).CFrame = b
          game:GetService("Debris"):AddItem(CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()), 10)
          if l ~= 1 then
          end
          if l == nil then
            table.insert(Effects, {
              CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()),
              "Block1",
              k,
              g,
              h,
              j,
              (CFuncs.Mesh.Create("BlockMesh", CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()), "", "", Vector3.new(0, 0, 0), Vector3.new(c, d, e)))
            })
          elseif l == 2 then
            table.insert(Effects, {
              CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()),
              "Block2",
              k,
              g,
              h,
              j,
              (CFuncs.Mesh.Create("BlockMesh", CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()), "", "", Vector3.new(0, 0, 0), Vector3.new(c, d, e)))
            })
          else
            table.insert(Effects, {
              CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()),
              "Block3",
              k,
              g,
              h,
              j,
              (CFuncs.Mesh.Create("BlockMesh", CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()), "", "", Vector3.new(0, 0, 0), Vector3.new(c, d, e)))
            })
          end
        end
      },
      Sphere = {
        Create = function(a, b, c, d, e, g, h, j, k)
          a = a
          CFuncs.Part.Create(EffectModel, "Neon", 0, 0, a, "Effect", Vector3.new()).Anchored = true
          CFuncs.Part.Create(EffectModel, "Neon", 0, 0, a, "Effect", Vector3.new()).CFrame = b
          game:GetService("Debris"):AddItem(CFuncs.Part.Create(EffectModel, "Neon", 0, 0, a, "Effect", Vector3.new()), 10)
          table.insert(Effects, {
            CFuncs.Part.Create(EffectModel, "Neon", 0, 0, a, "Effect", Vector3.new()),
            "Cylinder",
            k,
            g,
            h,
            j,
            (CFuncs.Mesh.Create("SpecialMesh", CFuncs.Part.Create(EffectModel, "Neon", 0, 0, a, "Effect", Vector3.new()), "Sphere", "", Vector3.new(0, 0, 0), Vector3.new(c, d, e)))
          })
        end
      },
      Cylinder = {
        Create = function(a, b, c, d, e, g, h, j, k)
          a = a
          CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()).Anchored = true
          CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()).CFrame = b
          game:GetService("Debris"):AddItem(CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()), 10)
          table.insert(Effects, {
            CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()),
            "Cylinder",
            k,
            g,
            h,
            j,
            (CFuncs.Mesh.Create("CylinderMesh", CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()), "", "", Vector3.new(0, 0, 0), Vector3.new(c, d, e)))
          })
        end
      },
      Wave = {
        Create = function(a, b, c, d, e, g, h, j, k)
          a = a
          CFuncs.Part.Create(EffectModel, "Neon", 0, 0, a, "Effect", Vector3.new()).Anchored = true
          CFuncs.Part.Create(EffectModel, "Neon", 0, 0, a, "Effect", Vector3.new()).CFrame = b
          game:GetService("Debris"):AddItem(CFuncs.Part.Create(EffectModel, "Neon", 0, 0, a, "Effect", Vector3.new()), 10)
          table.insert(Effects, {
            CFuncs.Part.Create(EffectModel, "Neon", 0, 0, a, "Effect", Vector3.new()),
            "Cylinder",
            k,
            g / 60,
            h / 60,
            j / 60,
            (CFuncs.Mesh.Create("SpecialMesh", CFuncs.Part.Create(EffectModel, "Neon", 0, 0, a, "Effect", Vector3.new()), "FileMesh", "rbxassetid://20329976", Vector3.new(0, 0, 0), Vector3.new(c / 60, d / 60, e / 60)))
          })
        end
      },
      Ring = {
        Create = function(a, b, c, d, e, g, h, j, k)
          a = a
          CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()).Anchored = true
          CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()).CFrame = b
          game:GetService("Debris"):AddItem(CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()), 10)
          table.insert(Effects, {
            CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()),
            "Cylinder",
            k,
            g,
            h,
            j,
            (CFuncs.Mesh.Create("SpecialMesh", CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()), "FileMesh", "rbxassetid://3270017", Vector3.new(0, 0, 0), Vector3.new(c, d, e)))
          })
        end
      },
      Break = {
        Create = function(a, b, c, d, e)
          a = a
          CFuncs.Part.Create(EffectModel, "Neon", 0, 0, a, "Effect", Vector3.new(0.5, 0.5, 0.5)).Anchored = true
          CFuncs.Part.Create(EffectModel, "Neon", 0, 0, a, "Effect", Vector3.new(0.5, 0.5, 0.5)).CFrame = b * CFrame.fromEulerAnglesXYZ(math.random(-50, 50), math.random(-50, 50), math.random(-50, 50))
          game:GetService("Debris"):AddItem(CFuncs.Part.Create(EffectModel, "Neon", 0, 0, a, "Effect", Vector3.new(0.5, 0.5, 0.5)), 10)
          table.insert(Effects, {
            CFuncs.Part.Create(EffectModel, "Neon", 0, 0, a, "Effect", Vector3.new(0.5, 0.5, 0.5)),
            "Shatter",
            math.random(10, 50) / 1000,
            CFuncs.Part.Create(EffectModel, "Neon", 0, 0, a, "Effect", Vector3.new(0.5, 0.5, 0.5)).CFrame,
            math.random() - math.random(),
            0,
            math.random(50, 100) / 100
          })
        end
      },
      Spiral = {
        Create = function(a, b, c, d, e, g, h, j, k)
          a = a
          CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()).Anchored = true
          CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()).CFrame = b
          game:GetService("Debris"):AddItem(CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()), 10)
          table.insert(Effects, {
            CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()),
            "Cylinder",
            k,
            g,
            h,
            j,
            (CFuncs.Mesh.Create("SpecialMesh", CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()), "FileMesh", "rbxassetid://1051557", Vector3.new(0, 0, 0), Vector3.new(c, d, e)))
          })
        end
      },
      Push = {
        Create = function(a, b, c, d, e, g, h, j, k)
          a = a
          CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()).Anchored = true
          CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()).CFrame = b
          game:GetService("Debris"):AddItem(CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()), 10)
          table.insert(Effects, {
            CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()),
            "Cylinder",
            k,
            g,
            h,
            j,
            (CFuncs.Mesh.Create("SpecialMesh", CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()), "FileMesh", "rbxassetid://437347603", Vector3.new(0, 0, 0), Vector3.new(c, d, e)))
          })
        end
      }
    }
    function part(a, b, c, d, e, g, h)
      a = a
      IT("Part").formFactor = a
      IT("Part").Parent = b
      IT("Part").Reflectance = c
      IT("Part").Transparency = d
      IT("Part").CanCollide = false
      IT("Part").Locked = true
      IT("Part").BrickColor = e
      IT("Part").Name = g
      IT("Part").Size = h
      IT("Part").Position = va.Position
      RemoveOutlines((IT("Part")))
      IT("Part").Material = "SmoothPlastic"
      IT("Part"):BreakJoints()
      return (IT("Part"))
    end
    function mesh(a, b, c, d, e, g)
      a = a
      IT(a).Parent = b
      if a == "SpecialMesh" then
        IT(a).MeshType = c
        if d ~= "nil" then
          IT(a).MeshId = "http://www.roblox.com/asset/?id=" .. d
        end
      end
      IT(a).Offset = e
      IT(a).Scale = g
      return (IT(a))
    end
    function Magic(a, b, c, d, e, g, h)
      a = a
      Instance.new("Part", va).Anchored = true
      Instance.new("Part", va).BrickColor = g
      Instance.new("Part", va).CanCollide = false
      Instance.new("Part", va).FormFactor = 3
      Instance.new("Part", va).Name = "Ring"
      Instance.new("Part", va).Material = "Neon"
      Instance.new("Part", va).Size = Vector3.new(1, 1, 1)
      Instance.new("Part", va).Transparency = 0
      Instance.new("Part", va).TopSurface = 0
      Instance.new("Part", va).BottomSurface = 0
      Instance.new("Part", va).CFrame = c
      Instance.new("SpecialMesh", (Instance.new("Part", va))).MeshType = h
      Instance.new("SpecialMesh", (Instance.new("Part", va))).Scale = d
      if b == "Add" then
      else
      end
      coroutine.resume(coroutine.create(function()
        for fd = 0, 10 / va, 0.1 do
          swait()
          if vb == "Add" then
            vc = vc - 0.01 * vd / va
          elseif vb == "Divide" then
            vc = vc - 0.01 / vd * va
          end
          ve.Transparency = ve.Transparency + 0.01 * va
          vg.Scale = vg.Scale + Vector3.new(vc * va, vc * va, vc * va)
        end
        ve:Destroy()
      end))
    end
    function Eviscerate(a)
      a = a
      if a.Name ~= va then
        IT("BodyGyro", a.Head).CFrame = IT("BodyGyro", a.Head).CFrame * CFrame.fromEulerAnglesXYZ(Rad(-90), 0, 0)
        IT("BoolValue", a).Name = "IsHit"
        coroutine.wrap(function()
          va:WaitForChild("Head"):BreakJoints()
          wait(0.5)
          target = nil
          coroutine.resume(coroutine.create(function()
            for fd, fe in pairs(va:GetChildren()) do
              if fe:IsA("Accessory") then
                fe:Destroy()
              end
              if fe:IsA("Humanoid") then
                fe:Destroy()
              end
              if fe:IsA("CharacterMesh") then
                fe:Destroy()
              end
              if fe:IsA("Model") then
                fe:Destroy()
              end
              if fe:IsA("MeshPart") then
                for fk, fl in pairs(fe:GetChildren()) do
                  if fl:IsA("Decal") then
                    fl:Destroy()
                  end
                end
                coroutine.resume(coroutine.create(function()
                  va.Material = "Neon"
                  va.CanCollide = false
                  IT("ParticleEmitter", va).LightEmission = 1
                  IT("ParticleEmitter", va).Texture = "rbxassetid://284205403"
                  IT("ParticleEmitter", va).Color = ColorSequence.new(vb.Color)
                  IT("ParticleEmitter", va).Rate = 150
                  IT("ParticleEmitter", va).Lifetime = NumberRange.new(1)
                  IT("ParticleEmitter", va).Size = NumberSequence.new({
                    NumberSequenceKeypoint.new(0, 0.75, 0),
                    NumberSequenceKeypoint.new(1, 0, 0)
                  })
                  IT("ParticleEmitter", va).Transparency = NumberSequence.new({
                    NumberSequenceKeypoint.new(0, 0, 0),
                    NumberSequenceKeypoint.new(1, 1, 0)
                  })
                  IT("ParticleEmitter", va).Speed = NumberRange.new(0, 0)
                  IT("ParticleEmitter", va).VelocitySpread = 30000
                  IT("ParticleEmitter", va).Rotation = NumberRange.new(-500, 500)
                  IT("ParticleEmitter", va).RotSpeed = NumberRange.new(-500, 500)
                  IT("BodyPosition", va).P = 3000
                  IT("BodyPosition", va).D = 1000
                  IT("BodyPosition", va).maxForce = Vector3.new(50000000000, 50000000000, 50000000000)
                  IT("BodyPosition", va).position = va.Position + Vector3.new(Mrandom(-15, 15), Mrandom(-15, 15), Mrandom(-15, 15))
                  va.Color = vb.Color
                  coroutine.resume(coroutine.create(function()
                    for fd = 0, 49 do
                      swait(1)
                      va.Transparency = va.Transparency + 0.08
                    end
                    wait(0.5)
                    vb.Enabled = false
                    wait(3)
                    va:Destroy()
                    vc:Destroy()
                  end))
                end))
              end
            end
          end))
        end)()
      end
    end
    function FindNearestHead(a, b, c)
      a = a
      if c then
        return b >= c.Torso.CFrame.p - a.magnitude
      end
      for fj, fk in pairs(workspace:GetChildren()) do
        if fk:IsA("Model") and fk:findFirstChild("Head") and fk ~= va and b >= fk.Head.Position - a.magnitude then
          table.insert({}, fk)
        end
      end
      return {}
    end
    function Aura(a, b, c, d, e, g, h, j, k, l, m)
      a = a
      Instance.new("Part", va).Anchored = true
      Instance.new("Part", va).BrickColor = k
      Instance.new("Part", va).CanCollide = false
      Instance.new("Part", va).FormFactor = 3
      Instance.new("Part", va).Name = "Ring"
      Instance.new("Part", va).Material = "Neon"
      Instance.new("Part", va).Size = Vector3.new(1, 1, 1)
      Instance.new("Part", va).Transparency = 0
      Instance.new("Part", va).TopSurface = 0
      Instance.new("Part", va).BottomSurface = 0
      Instance.new("Part", va).CFrame = d
      Instance.new("Part", va).CFrame = Instance.new("Part", va).CFrame + Instance.new("Part", va).CFrame.lookVector * l
      Instance.new("SpecialMesh", (Instance.new("Part", va))).MeshType = m
      Instance.new("SpecialMesh", (Instance.new("Part", va))).Scale = Vector3.new(e, g, h)
      if c == "Add" then
      else
      end
      coroutine.resume(coroutine.create(function()
        for fd = 0, 10 / va, 0.1 do
          swait()
          if vb == "Add" then
            vc = vc - 0.01 * vd / va
          elseif vb == "Divide" then
            vc = vc - 0.01 / vd * va
          end
          ve = ve - 0.01 * vg * va
          vh.CFrame = vh.CFrame + vh.CFrame.lookVector * ve * va
          vh.Transparency = vh.Transparency + 0.01 * va
          vj.Scale = vj.Scale + Vector3.new(vc * va, vc * va, 0)
        end
        vh:Destroy()
      end))
    end
    function SoulSteal(a)
      a = a
      if a.Name ~= va then
        IT("BodyGyro", a.Head).CFrame = IT("BodyGyro", a.Head).CFrame * CFrame.fromEulerAnglesXYZ(Rad(-90), 0, 0)
        IT("BoolValue", a).Name = "IsHit"
        coroutine.wrap(function()
          Instance.new("Part", va).Size = Vector3.new(1, 1, 1)
          Instance.new("Part", va).CanCollide = false
          Instance.new("Part", va).Anchored = false
          Instance.new("Part", va).Position = vb.Position
          Instance.new("Part", va).Transparency = 1
          IT("ParticleEmitter", (Instance.new("Part", va))).LightEmission = 1
          IT("ParticleEmitter", (Instance.new("Part", va))).Texture = "rbxassetid://569507414"
          IT("ParticleEmitter", (Instance.new("Part", va))).Color = ColorSequence.new(vc.Color)
          IT("ParticleEmitter", (Instance.new("Part", va))).Rate = 250
          IT("ParticleEmitter", (Instance.new("Part", va))).Lifetime = NumberRange.new(1.6)
          IT("ParticleEmitter", (Instance.new("Part", va))).Size = NumberSequence.new({
            NumberSequenceKeypoint.new(0, 1, 0),
            NumberSequenceKeypoint.new(1, 0, 0)
          })
          IT("ParticleEmitter", (Instance.new("Part", va))).Transparency = NumberSequence.new({
            NumberSequenceKeypoint.new(0, 0, 0),
            NumberSequenceKeypoint.new(1, 1, 0)
          })
          IT("ParticleEmitter", (Instance.new("Part", va))).Speed = NumberRange.new(0, 0)
          IT("ParticleEmitter", (Instance.new("Part", va))).VelocitySpread = 30000
          IT("ParticleEmitter", (Instance.new("Part", va))).Rotation = NumberRange.new(-360, 360)
          IT("ParticleEmitter", (Instance.new("Part", va))).RotSpeed = NumberRange.new(-360, 360)
          IT("BodyPosition", (Instance.new("Part", va))).P = 3000
          IT("BodyPosition", (Instance.new("Part", va))).D = 1000
          IT("BodyPosition", (Instance.new("Part", va))).maxForce = Vector3.new(50000000000, 50000000000, 50000000000)
          IT("BodyPosition", (Instance.new("Part", va))).position = vb.Position + Vector3.new(Mrandom(-15, 15), Mrandom(-15, 15), Mrandom(-15, 15))
          wait(1.6)
          Instance.new("Part", va).Touched:connect(function(a)
            a = a
            if a.Parent == va then
              vb:Destroy()
            end
          end)
          wait(1.2)
          while Instance.new("Part", va) do
            swait()
            IT("ParticleEmitter", (Instance.new("Part", va))).Color = ColorSequence.new(vc.Color)
            IT("BodyPosition", (Instance.new("Part", va))).Position = ve.Position
          end
        end)()
      end
    end
    function CreatePart(a, b, c, d, e, g, h)
      a = a
      RemoveOutlines((va("Part")({
        Parent = a,
        Reflectance = c,
        Transparency = d,
        CanCollide = false,
        Locked = true,
        BrickColor = BrickColor.new(tostring(e)),
        Name = g,
        Size = h,
        Material = b
      })))
      return (va("Part")({
        Parent = a,
        Reflectance = c,
        Transparency = d,
        CanCollide = false,
        Locked = true,
        BrickColor = BrickColor.new(tostring(e)),
        Name = g,
        Size = h,
        Material = b
      }))
    end
    function CreateMesh(a, b, c, d, e, g)
      a = a
      if a == "SpecialMesh" then
        va(a)({
          Parent = b,
          Offset = e,
          Scale = g
        }).MeshType = c
        va(a)({
          Parent = b,
          Offset = e,
          Scale = g
        }).MeshId = d
      end
      return (va(a)({
        Parent = b,
        Offset = e,
        Scale = g
      }))
    end
    function BlockEffect(a, b, c, d, e, g, h, j, k, l)
      a = a
      CreatePart(workspace, "Neon", 0, 0, a, "Effect", Vector3.new()).Anchored = true
      CreatePart(workspace, "Neon", 0, 0, a, "Effect", Vector3.new()).CFrame = b
      game:GetService("Debris"):AddItem(CreatePart(workspace, "Neon", 0, 0, a, "Effect", Vector3.new()), 10)
      if l ~= 1 then
      end
      if l == nil then
        table.insert(Effects, {
          CreatePart(workspace, "Neon", 0, 0, a, "Effect", Vector3.new()),
          "Block1",
          k,
          g,
          h,
          j,
          (CreateMesh("BlockMesh", CreatePart(workspace, "Neon", 0, 0, a, "Effect", Vector3.new()), "", "", Vector3.new(0, 0, 0), Vector3.new(c, d, e)))
        })
      elseif l == 2 then
        table.insert(Effects, {
          CreatePart(workspace, "Neon", 0, 0, a, "Effect", Vector3.new()),
          "Block2",
          k,
          g,
          h,
          j,
          (CreateMesh("BlockMesh", CreatePart(workspace, "Neon", 0, 0, a, "Effect", Vector3.new()), "", "", Vector3.new(0, 0, 0), Vector3.new(c, d, e)))
        })
      end
    end
    function SphereEffect(a, b, c, d, e, g, h, j, k)
      a = a
      CreatePart(workspace, "Neon", 0, 0, a, "Effect", Vector3.new()).Anchored = true
      CreatePart(workspace, "Neon", 0, 0, a, "Effect", Vector3.new()).CFrame = b
      game:GetService("Debris"):AddItem(CreatePart(workspace, "Neon", 0, 0, a, "Effect", Vector3.new()), 10)
      table.insert(Effects, {
        CreatePart(workspace, "Neon", 0, 0, a, "Effect", Vector3.new()),
        "Cylinder",
        k,
        g,
        h,
        j,
        (CreateMesh("SpecialMesh", CreatePart(workspace, "Neon", 0, 0, a, "Effect", Vector3.new()), "Sphere", "", Vector3.new(0, 0, 0), Vector3.new(c, d, e)))
      })
    end
    function RingEffect(a, b, c, d, e, g, h, j, k)
      a = a
      CreatePart(workspace, "Neon", 0, 0, a, "Effect", vt(0.5, 0.5, 0.5)).Anchored = true
      CreatePart(workspace, "Neon", 0, 0, a, "Effect", vt(0.5, 0.5, 0.5)).CFrame = b
      msh = CreateMesh("SpecialMesh", CreatePart(workspace, "Neon", 0, 0, a, "Effect", vt(0.5, 0.5, 0.5)), "FileMesh", "http://www.roblox.com/asset/?id=3270017", vt(0, 0, 0), vt(c, d, e))
      game:GetService("Debris"):AddItem(CreatePart(workspace, "Neon", 0, 0, a, "Effect", vt(0.5, 0.5, 0.5)), 2)
      coroutine.resume(coroutine.create(function(a, b, c)
        a = a
        for fh = 0, 1, va do
          swait()
          a.Transparency = fh
          b.Scale = b.Scale + vt(vb, vc, vd)
        end
        a.Parent = nil
      end), CreatePart(workspace, "Neon", 0, 0, a, "Effect", vt(0.5, 0.5, 0.5)), msh, (math.random(0, 1) + math.random()) / 5)
    end
    function CylinderEffect(a, b, c, d, e, g, h, j, k)
      a = a
      CreatePart(workspace, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()).Anchored = true
      CreatePart(workspace, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()).CFrame = b
      game:GetService("Debris"):AddItem(CreatePart(workspace, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()), 10)
      table.insert(Effects, {
        CreatePart(workspace, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()),
        "Cylinder",
        k,
        g,
        h,
        j,
        (CreateMesh("CylinderMesh", CreatePart(workspace, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()), "", "", Vector3.new(0, 0, 0), Vector3.new(c, d, e)))
      })
    end
    function WaveEffect(a, b, c, d, e, g, h, j, k)
      a = a
      CreatePart(workspace, "Neon", 0, 0, a, "Effect", Vector3.new()).Anchored = true
      CreatePart(workspace, "Neon", 0, 0, a, "Effect", Vector3.new()).CFrame = b
      game:GetService("Debris"):AddItem(CreatePart(workspace, "Neon", 0, 0, a, "Effect", Vector3.new()), 10)
      table.insert(Effects, {
        CreatePart(workspace, "Neon", 0, 0, a, "Effect", Vector3.new()),
        "Cylinder",
        k,
        g,
        h,
        j,
        (CreateMesh("SpecialMesh", CreatePart(workspace, "Neon", 0, 0, a, "Effect", Vector3.new()), "FileMesh", "rbxassetid://20329976", Vector3.new(0, 0, 0), Vector3.new(c, d, e)))
      })
    end
    function SpecialEffect(a, b, c, d, e, g, h, j, k)
      a = a
      CreatePart(workspace, "Neon", 0, 0, a, "Effect", Vector3.new()).Anchored = true
      CreatePart(workspace, "Neon", 0, 0, a, "Effect", Vector3.new()).CFrame = b
      game:GetService("Debris"):AddItem(CreatePart(workspace, "Neon", 0, 0, a, "Effect", Vector3.new()), 10)
      table.insert(Effects, {
        CreatePart(workspace, "Neon", 0, 0, a, "Effect", Vector3.new()),
        "Cylinder",
        k,
        g,
        h,
        j,
        (CreateMesh("SpecialMesh", CreatePart(workspace, "Neon", 0, 0, a, "Effect", Vector3.new()), "FileMesh", "rbxassetid://24388358", Vector3.new(0, 0, 0), Vector3.new(c, d, e)))
      })
    end
    function MoonEffect(a, b, c, d, e, g, h, j, k)
      a = a
      CreatePart(workspace, "Neon", 0, 0, a, "Effect", Vector3.new()).Anchored = true
      CreatePart(workspace, "Neon", 0, 0, a, "Effect", Vector3.new()).CFrame = b
      game:GetService("Debris"):AddItem(CreatePart(workspace, "Neon", 0, 0, a, "Effect", Vector3.new()), 10)
      table.insert(Effects, {
        CreatePart(workspace, "Neon", 0, 0, a, "Effect", Vector3.new()),
        "Cylinder",
        k,
        g,
        h,
        j,
        (CreateMesh("SpecialMesh", CreatePart(workspace, "Neon", 0, 0, a, "Effect", Vector3.new()), "FileMesh", "rbxassetid://259403370", Vector3.new(0, 0, 0), Vector3.new(c, d, e)))
      })
    end
    function HeadEffect(a, b, c, d, e, g, h, j, k)
      a = a
      CreatePart(workspace, "Neon", 0, 0, a, "Effect", Vector3.new()).Anchored = true
      CreatePart(workspace, "Neon", 0, 0, a, "Effect", Vector3.new()).CFrame = b
      game:GetService("Debris"):AddItem(CreatePart(workspace, "Neon", 0, 0, a, "Effect", Vector3.new()), 10)
      table.insert(Effects, {
        CreatePart(workspace, "Neon", 0, 0, a, "Effect", Vector3.new()),
        "Cylinder",
        k,
        g,
        h,
        j,
        (CreateMesh("SpecialMesh", CreatePart(workspace, "Neon", 0, 0, a, "Effect", Vector3.new()), "Head", "", Vector3.new(0, 0, 0), Vector3.new(c, d, e)))
      })
    end
    function BreakEffect(a, b, c, d, e)
      a = a
      CreatePart(workspace, "Neon", 0, 0, a, "Effect", Vector3.new(0.5, 0.5, 0.5)).Anchored = true
      CreatePart(workspace, "Neon", 0, 0, a, "Effect", Vector3.new(0.5, 0.5, 0.5)).CFrame = b * CFrame.fromEulerAnglesXYZ(math.random(-50, 50), math.random(-50, 50), math.random(-50, 50))
      game:GetService("Debris"):AddItem(CreatePart(workspace, "Neon", 0, 0, a, "Effect", Vector3.new(0.5, 0.5, 0.5)), 10)
      table.insert(Effects, {
        CreatePart(workspace, "Neon", 0, 0, a, "Effect", Vector3.new(0.5, 0.5, 0.5)),
        "Shatter",
        math.random(10, 50) / 1000,
        CreatePart(workspace, "Neon", 0, 0, a, "Effect", Vector3.new(0.5, 0.5, 0.5)).CFrame,
        math.random() - math.random(),
        0,
        math.random(50, 100) / 100
      })
    end
    function so(a, b, c, d)
      a = a
      coroutine.resume(coroutine.create(function()
        Instance.new("Sound", va or workspace).Volume = vb
        Instance.new("Sound", va or workspace).Pitch = vc or 1
        Instance.new("Sound", va or workspace).SoundId = vd
        Instance.new("Sound", va or workspace):play()
        game:GetService("Debris"):AddItem(Instance.new("Sound", va or workspace), 8)
      end))
    end
    function FaceMouse()
      return {
        CFrame.new(va.Torso.Position, Vector3.new(vb.Hit.p.x, va.Torso.Position.y, vb.Hit.p.z)),
        Vector3.new(vb.Hit.p.x, vb.Hit.p.y, vb.Hit.p.z)
      }
    end
    function Cso(a, b, c, d)
      a = a
      coroutine.resume(coroutine.create(function()
        va = IT("Sound", vb)
        va.Volume = vc
        va.Pitch = vd
        va.SoundId = "http://www.roblox.com/asset/?id=" .. ve
        swait()
        va:play()
        game:GetService("Debris"):AddItem(va, 10)
      end))
      return nil
    end
    function CameraEnshaking(a, b)
      a = a
      coroutine.resume(coroutine.create(function()
        for fg = 0, vb, 0.1 do
          swait()
          vc.CameraOffset = Vector3.new(Rad(Mrandom(-(1 * va - 0.05 * va / vb), 1 * va - 0.05 * va / vb)), Rad(Mrandom(-(1 * va - 0.05 * va / vb), 1 * va - 0.05 * va / vb)), Rad(Mrandom(-(1 * va - 0.05 * va / vb), 1 * va - 0.05 * va / vb)))
          cam.CFrame = cam.CFrame * CF(Rad(Mrandom(-(1 * va - 0.05 * va / vb), 1 * va - 0.05 * va / vb)), Rad(Mrandom(-(1 * va - 0.05 * va / vb), 1 * va - 0.05 * va / vb)), Rad(Mrandom(-(1 * va - 0.05 * va / vb), 1 * va - 0.05 * va / vb))) * Euler(Rad(Mrandom(-(1 * va - 0.05 * va / vb), 1 * va - 0.05 * va / vb)) * (0.01 * va - 0.0005 * va / vb), Rad(Mrandom(-(1 * va - 0.05 * va / vb), 1 * va - 0.05 * va / vb)) * (0.01 * va - 0.0005 * va / vb), Rad(Mrandom(-(1 * va - 0.05 * va / vb), 1 * va - 0.05 * va / vb)) * (0.01 * va - 0.0005 * va / vb))
        end
        vc.CameraOffset = Vector3.new(0, 0, 0)
      end))
    end
    if 1 ~= 1 then
      game:service("Players").LocalPlayer.Character.Raw.HumanoidRootPart.Size = game:service("Players").LocalPlayer.Character.Raw.HumanoidRootPart.Size * 1
      game:service("Players").LocalPlayer.Character.Raw.Torso.Size = game:service("Players").LocalPlayer.Character.Raw.Torso.Size * 1
      game:service("Players").LocalPlayer.Character.Raw.Head.Size = game:service("Players").LocalPlayer.Character.Raw.Head.Size * 1
      game:service("Players").LocalPlayer.Character.Raw["Right Arm"].Size = game:service("Players").LocalPlayer.Character.Raw["Right Arm"].Size * 1
      game:service("Players").LocalPlayer.Character.Raw["Left Arm"].Size = game:service("Players").LocalPlayer.Character.Raw["Left Arm"].Size * 1
      game:service("Players").LocalPlayer.Character.Raw["Right Leg"].Size = game:service("Players").LocalPlayer.Character.Raw["Right Leg"].Size * 1
      game:service("Players").LocalPlayer.Character.Raw.Torso.Neck.Parent, game:service("Players").LocalPlayer.Character.Raw.HumanoidRootPart.RootJoint.Parent, game:service("Players").LocalPlayer.Character.Raw["Left Leg"].Size = game:service("Players").LocalPlayer.Character.Raw.Torso, game:service("Players").LocalPlayer.Character.Raw.HumanoidRootPart, game:service("Players").LocalPlayer.Character.Raw["Left Leg"].Size * 1
      RW.Parent = game:service("Players").LocalPlayer.Character.Raw.Torso
      LW.Parent = game:service("Players").LocalPlayer.Character.Raw.Torso
      RH.Parent = game:service("Players").LocalPlayer.Character.Raw.Torso
      LH.Parent = game:service("Players").LocalPlayer.Character.Raw.Torso
      game:service("Players").LocalPlayer.Character.Raw.HumanoidRootPart.RootJoint.C0 = CFrame.fromEulerAnglesXYZ(-1.57, 0, 3.14) * CF(0 * 1, 0 * 1, 0 * 1) * angles(Rad(0), Rad(0), Rad(0))
      game:service("Players").LocalPlayer.Character.Raw.HumanoidRootPart.RootJoint.C1 = CFrame.fromEulerAnglesXYZ(-1.57, 0, 3.14) * CF(0 * 1, 0 * 1, 0 * 1) * angles(Rad(0), Rad(0), Rad(0))
      game:service("Players").LocalPlayer.Character.Raw.Torso.Neck.C0 = necko * CF(0 * 1, 0 * 1, 0 + (1 * 1 - 1)) * angles(Rad(0), Rad(0), Rad(0))
      game:service("Players").LocalPlayer.Character.Raw.Torso.Neck.C1 = CF(0 * 1, -0.5 * 1, 0 * 1) * angles(Rad(-90), Rad(0), Rad(180))
      RW.C0 = CF(1.5 * 1, 0.5 * 1, 0 * 1) * angles(Rad(0), Rad(0), Rad(0))
      LW.C0 = CF(-1.5 * 1, 0.5 * 1, 0 * 1) * angles(Rad(0), Rad(0), Rad(0))
      RH.C0 = CF(1 * 1, -1 * 1, 0 * 1) * angles(Rad(0), Rad(90), Rad(0)) * angles(Rad(0), Rad(0), Rad(0))
      LH.C0 = CF(-1 * 1, -1 * 1, 0 * 1) * angles(Rad(0), Rad(-90), Rad(0)) * angles(Rad(0), Rad(0), Rad(0))
      RH.C1 = CF(0.5 * 1, 1 * 1, 0 * 1) * angles(Rad(0), Rad(90), Rad(0)) * angles(Rad(0), Rad(0), Rad(0))
      LH.C1 = CF(-0.5 * 1, 1 * 1, 0 * 1) * angles(Rad(0), Rad(-90), Rad(0)) * angles(Rad(0), Rad(0), Rad(0))
    end
    Instance.new("Sound", game:service("Players").LocalPlayer.Character.Raw.Torso).Volume = 0.7
    Instance.new("Sound", game:service("Players").LocalPlayer.Character.Raw.Torso).Looped = true
    Instance.new("Sound", game:service("Players").LocalPlayer.Character.Raw.Torso).Pitch = 1
    game:service("Players").LocalPlayer.Character.Raw.Humanoid.WalkSpeed = 8
    game:service("Players").LocalPlayer.Character.Raw.Humanoid.JumpPower = 57
    game:service("Players").LocalPlayer.Character.Raw.Animate.Parent = nil
    game:service("Players").LocalPlayer.Character.Raw.Humanoid.Animator.Parent = nil
    function attackone()
      attack = true
      for fd = 0, 1.35, 0.1 do
        swait()
        va.C0 = clerp(va.C0, vb * CFrame.new(0, 0.7, -0.3) * angles(math.rad(-4 - 2 * fd), math.rad(4 + 2 * fd), math.rad(-40 - 11 * fd)), 0.2)
        vc.Neck.C0 = clerp(vc.Neck.C0, necko * angles(math.rad(0), math.rad(0), math.rad(40 + 11 * fd)), 0.2)
        RW.C0 = clerp(RW.C0, CFrame.new(1.5, 0.6, 0.2) * angles(math.rad(90 + 4 * fd), math.rad(-43), math.rad(16 + 6 * fd)), 0.3)
        LW.C0 = clerp(LW.C0, CFrame.new(-1.5, 0.5, 0) * angles(math.rad(90), math.rad(0), math.rad(-43)), 0.3)
        RH.C0 = clerp(RH.C0, CFrame.new(1, -0.7, 0) * vd * angles(math.rad(-34), math.rad(0), math.rad(-17)), 0.2)
        LH.C0 = clerp(LH.C0, CFrame.new(-1, -0.7, -0.2) * ve * angles(math.rad(-24), math.rad(0), math.rad(0)), 0.2)
      end
      so("http://roblox.com/asset/?id=1340545854", vg, 1, math.random(0.7, 1))
      con5 = vg.Touched:connect(function(a)
        a = a
        if a.Parent:FindFirstChildOfClass("Humanoid") ~= nil and va == false then
          va = true
          kDamagefunc(a, 3, 4, math.random(2, 3), "Normal", vb, 0, 1)
          so("http://roblox.com/asset/?id=636494529", vc, 2, 1)
          RingEffect(BrickColor.new("White"), vc.CFrame * CFrame.new(0, -1, 0) * angles(math.random(-360, 360), math.random(-360, 360), math.random(-360, 360)), 1, 5, 1, 0.2, 2, 0.2, 0.06)
          RingEffect(BrickColor.new("White"), vc.CFrame * CFrame.new(0, -1, 0) * angles(math.random(-360, 360), math.random(-360, 360), math.random(-360, 360)), 1, 5, 1, 0.2, 2, 0.2, 0.06)
          SphereEffect(BrickColor.new("White"), vc.CFrame * CFrame.new(0, -1, 0) * angles(math.random(-360, 360), math.random(-360, 360), math.random(-360, 360)), 1, 5, 1, 3, 3, 3, 0.06)
          coroutine.resume(coroutine.create(function()
            for fd = 0, 1, 0.1 do
              swait()
              va.CameraOffset = va.CameraOffset:lerp(Vector3.new(math.random(-0.63, 0.63), math.random(-0.63, 0.63), math.random(-0.63, 0.63)), 0.24)
            end
          end))
          wait(0.34)
          va = false
        end
      end)
      for fd = 0, 1.12, 0.1 do
        swait()
        va.C0 = clerp(va.C0, vb * CFrame.new(0, -0.9, 0) * angles(math.rad(14), math.rad(6), math.rad(23)), 0.35)
        vc.Neck.C0 = clerp(vc.Neck.C0, necko * angles(math.rad(-4), math.rad(0), math.rad(-23)), 0.35)
        RW.C0 = clerp(RW.C0, CFrame.new(1.3, 0.6, -0.8) * angles(math.rad(110), math.rad(23), math.rad(2)), 0.4)
        LW.C0 = clerp(LW.C0, CFrame.new(-1.5, 0.5, 0.2) * angles(math.rad(-37), math.rad(0), math.rad(-13)), 0.35)
        RH.C0 = clerp(RH.C0, CFrame.new(1, -1, -0.3) * vd * angles(math.rad(-4), math.rad(0), math.rad(6)), 0.3)
        LH.C0 = clerp(LH.C0, CFrame.new(-1, -1, 0.05) * ve * angles(math.rad(-22), math.rad(0), math.rad(23)), 0.3)
      end
      con5:Disconnect()
      attack = false
    end
    function attacktwo()
      attack = true
      for fd = 0, 1.35, 0.1 do
        swait()
        va.C0 = clerp(va.C0, vb * CFrame.new(0, 0.7, -0.3) * angles(math.rad(-4), math.rad(-4), math.rad(40)), 0.2)
        vc.Neck.C0 = clerp(vc.Neck.C0, necko * angles(math.rad(0), math.rad(0), math.rad(-40)), 0.2)
        RW.C0 = clerp(RW.C0, CFrame.new(1.5, 0.5, 0) * angles(math.rad(90), math.rad(0), math.rad(46)), 0.3)
        LW.C0 = clerp(LW.C0, CFrame.new(-1.5, 0.6, 0.2) * angles(math.rad(90), math.rad(23), math.rad(6)), 0.3)
        RH.C0 = clerp(RH.C0, CFrame.new(1, -0.7, -0.2) * vd * angles(math.rad(-34), math.rad(0), math.rad(-17)), 0.2)
        LH.C0 = clerp(LH.C0, CFrame.new(-1, -0.7, 0) * ve * angles(math.rad(-24), math.rad(0), math.rad(0)), 0.2)
      end
      so("http://roblox.com/asset/?id=1340545854", vg, 1, math.random(0.7, 1))
      con5 = vg.Touched:connect(function(a)
        a = a
        if a.Parent:FindFirstChildOfClass("Humanoid") ~= nil and va == false then
          va = true
          kDamagefunc(a, 3, 4, math.random(2, 3), "Normal", vb, 0, 1)
          so("http://roblox.com/asset/?id=636494529", vc, 2, 1)
          RingEffect(BrickColor.new("White"), vc.CFrame * CFrame.new(0, -1, 0) * angles(math.random(-360, 360), math.random(-360, 360), math.random(-360, 360)), 1, 5, 1, 0.2, 2, 0.2, 0.06)
          RingEffect(BrickColor.new("White"), vc.CFrame * CFrame.new(0, -1, 0) * angles(math.random(-360, 360), math.random(-360, 360), math.random(-360, 360)), 1, 5, 1, 0.2, 2, 0.2, 0.06)
          SphereEffect(BrickColor.new("White"), vc.CFrame * CFrame.new(0, -1, 0) * angles(math.random(-360, 360), math.random(-360, 360), math.random(-360, 360)), 1, 5, 1, 3, 3, 3, 0.06)
          coroutine.resume(coroutine.create(function()
            for fd = 0, 1, 0.1 do
              swait()
              va.CameraOffset = va.CameraOffset:lerp(Vector3.new(math.random(-0.63, 0.63), math.random(-0.63, 0.63), math.random(-0.63, 0.63)), 0.24)
            end
          end))
          wait(0.34)
          va = false
        end
      end)
      for fd = 0, 1.12, 0.1 do
        swait()
        va.C0 = clerp(va.C0, vb * CFrame.new(0, -0.9, 0) * angles(math.rad(14), math.rad(-6), math.rad(-27)), 0.35)
        vc.Neck.C0 = clerp(vc.Neck.C0, necko * angles(math.rad(-4), math.rad(0), math.rad(27)), 0.35)
        RW.C0 = clerp(RW.C0, CFrame.new(1.5, 0.5, 0.16) * angles(math.rad(-33), math.rad(0), math.rad(23)), 0.4)
        LW.C0 = clerp(LW.C0, CFrame.new(-1.3, 0.67, -0.9) * angles(math.rad(116), math.rad(-28), math.rad(1)), 0.35)
        RH.C0 = clerp(RH.C0, CFrame.new(1, -1, 0.05) * vd * angles(math.rad(-22), math.rad(0), math.rad(-18)), 0.3)
        LH.C0 = clerp(LH.C0, CFrame.new(-1, -1, -0.3) * ve * angles(math.rad(-2), math.rad(0), math.rad(4)), 0.3)
      end
      con5:Disconnect()
      attack = false
    end
    function attackthree()
      attack = true
      for fd = 0, 1.14, 0.1 do
        swait()
        va.C0 = clerp(va.C0, vb * CFrame.new(0, 0.7, -0.3) * angles(math.rad(-4), math.rad(-4), math.rad(40)), 0.2)
        vc.Neck.C0 = clerp(vc.Neck.C0, necko * angles(math.rad(0), math.rad(0), math.rad(-40)), 0.2)
        RW.C0 = clerp(RW.C0, CFrame.new(1.5, 0.5, 0) * angles(math.rad(90), math.rad(0), math.rad(-46)), 0.3)
        LW.C0 = clerp(LW.C0, CFrame.new(-1.5, 0.6, 0.2) * angles(math.rad(90), math.rad(23), math.rad(36)), 0.3)
        RH.C0 = clerp(RH.C0, CFrame.new(1, -0.7, -0.2) * vd * angles(math.rad(-34), math.rad(0), math.rad(-17)), 0.2)
        LH.C0 = clerp(LH.C0, CFrame.new(-1, -0.7, 0) * ve * angles(math.rad(-12), math.rad(0), math.rad(34)), 0.2)
      end
      con5 = vg.Touched:connect(function(a)
        a = a
        if a.Parent:FindFirstChildOfClass("Humanoid") ~= nil and va == false then
          va = true
          kDamagefunc(a, 4, 5, math.random(3, 4), "Normal", vb, 0, 1)
          so("http://roblox.com/asset/?id=636494529", vc, 2, 1)
          RingEffect(BrickColor.new("White"), vc.CFrame * CF(0, -1, 0) * angles(math.random(-360, 360), math.random(-360, 360), math.random(-360, 360)), 1, 5, 1, 0.2, 2, 0.2, 0.06)
          RingEffect(BrickColor.new("White"), vc.CFrame * CF(0, -1, 0) * angles(math.random(-360, 360), math.random(-360, 360), math.random(-360, 360)), 1, 5, 1, 0.2, 2, 0.2, 0.06)
          SphereEffect(BrickColor.new("White"), vc.CFrame * CF(0, -1, 0) * angles(math.random(-360, 360), math.random(-360, 360), math.random(-360, 360)), 1, 5, 1, 3, 3, 3, 0.06)
          coroutine.resume(coroutine.create(function()
            for fd = 0, 1, 0.1 do
              swait()
              va.CameraOffset = va.CameraOffset:lerp(Vector3.new(math.random(-0.63, 0.63), math.random(-0.63, 0.63), math.random(-0.63, 0.63)), 0.24)
            end
          end))
          wait(0.34)
          va = false
        end
      end)
      so("http://www.roblox.com/asset/?id=158475221", RightLeg, 1, 1.3)
      for fd = 0, 9.14, 0.3 do
        swait()
        BlockEffect(BrickColor.new("White"), vk.CFrame * CF(0, -1, 0), 2, 2, 2, 3.5, 3.5, 3.5, 0.05)
        va.C0 = clerp(va.C0, vb * CFrame.new(0, 0, -0.87) * angles(math.rad(8), math.rad(8), math.rad(0 - 54 * fd)), 0.35)
        vc.Neck.C0 = clerp(vc.Neck.C0, necko * angles(math.rad(12), math.rad(0), math.rad(24)), 0.35)
        RW.C0 = clerp(RW.C0, CFrame.new(1.5, 0.5, 0) * angles(math.rad(12), math.rad(0), math.rad(62)), 0.35)
        LW.C0 = clerp(LW.C0, CFrame.new(-1.5, 0.3, 0) * angles(math.rad(12), math.rad(0), math.rad(-23)), 0.35)
        RH.C0 = clerp(RH.C0, CFrame.new(1, -0.17, -0.4) * vd * angles(math.rad(7), math.rad(0), math.rad(4)), 0.35)
        LH.C0 = clerp(LH.C0, CFrame.new(-1, -0.13, -0.6) * ve * angles(math.rad(-64 - 7 * fd), math.rad(0), math.rad(0 - 9 * fd)), 0.35)
      end
      attack = false
      con5:disconnect()
    end
    function attackfour()
      attack = true
      so("http://www.roblox.com/asset/?id=1452040709", RightLeg, 3, 1)
      WaveEffect(BrickColor.new("White"), va.CFrame * CFrame.new(0, -1, 0) * vb(0, math.random(-50, 50), 0), 1, 1, 1, 1, 0.5, 1, 0.05)
      for fd = 0, 5.14, 0.1 do
        swait()
        SphereEffect(BrickColor.new("White"), vc.CFrame * angles(math.random(-50, 50), math.random(-50, 50), math.random(-50, 50)), 1, 5, 1, 0.05, 4, 0.05, 0.03)
        vd.C0 = clerp(vd.C0, ve * CFrame.new(0, 0, -0.8) * angles(math.rad(24 + 4 * fd), math.rad(0), math.rad(0)), 0.2)
        vg.Neck.C0 = clerp(vg.Neck.C0, necko * angles(math.rad(0 + 11 * fd), math.rad(0), math.rad(0)), 0.2)
        RW.C0 = clerp(RW.C0, CFrame.new(1.5, 0.5, 0) * angles(math.rad(0 - 6 * fd), math.rad(0), math.rad(36 + 4 * fd)), 0.3)
        LW.C0 = clerp(LW.C0, CFrame.new(-1.5, 0.5, 0) * angles(math.rad(0 - 6 * fd), math.rad(0), math.rad(-36 - 4 * fd)), 0.3)
        RH.C0 = clerp(RH.C0, CFrame.new(1, -0.6, -0.3) * vh * angles(math.rad(0), math.rad(0), math.rad(-28 + 4 * fd)), 0.2)
        LH.C0 = clerp(LH.C0, CFrame.new(-1, -0.2, -0.5) * vj * angles(math.rad(0), math.rad(0), math.rad(-34 - 4 * fd)), 0.2)
      end
      so("http://www.roblox.com/asset/?id=158475221", RightLeg, 1, 1.3)
      Instance.new("BodyVelocity").velocity = vt(0, 25, 0)
      Instance.new("BodyVelocity").P = 8000
      Instance.new("BodyVelocity").maxForce = Vector3.new(math.huge, math.huge, math.huge)
      Instance.new("BodyVelocity").Parent = va
      game:GetService("Debris"):AddItem(Instance.new("BodyVelocity"), 0.7)
      con5 = vk.Touched:connect(function(a)
        a = a
        if a.Parent:FindFirstChildOfClass("Humanoid") ~= nil and va == false then
          va = true
          coroutine.resume(coroutine.create(function()
            for fd = 0, 1.5, 0.1 do
              swait()
              va.Parent.Head.CFrame = vb.CFrame * CFrame.new(0, 1.6, -1.8)
            end
          end))
          kDamagefunc(a, 3, 4, math.random(0, 0), "Normal", vb, 0, 1)
          so("http://roblox.com/asset/?id=636494529", vc, 2, 1)
          RingEffect(BrickColor.new("White"), vc.CFrame * angles(math.random(-360, 360), math.random(-360, 360), math.random(-360, 360)), 1, 5, 1, 0.2, 2, 0.2, 0.06)
          RingEffect(BrickColor.new("White"), vc.CFrame * angles(math.random(-360, 360), math.random(-360, 360), math.random(-360, 360)), 1, 5, 1, 0.2, 2, 0.2, 0.06)
          SphereEffect(BrickColor.new("White"), vc.CFrame * angles(math.random(-360, 360), math.random(-360, 360), math.random(-360, 360)), 1, 5, 1, 3, 3, 3, 0.06)
          coroutine.resume(coroutine.create(function()
            for fd = 0, 1, 0.1 do
              swait()
              va.CameraOffset = va.CameraOffset:lerp(Vector3.new(math.random(-1.35, 1.35), math.random(-1.35, 1.35), math.random(-1.35, 1.35)), 0.44)
            end
          end))
          wait(0.14)
          va = false
        end
      end)
      for fe = 0, 5.11, 0.15 do
        swait()
        BlockEffect(BrickColor.new("White"), vc.CFrame * CF(0, -1, 0), 2, 2, 2, 3.5, 3.5, 3.5, 0.05)
        vd.C0 = clerp(vd.C0, ve * CFrame.new(0, 0, 0.1 + 0.2 * fe) * angles(math.rad(-10 - 80 * fe), math.rad(0), math.rad(0)), 0.42)
        vg.Neck.C0 = clerp(vg.Neck.C0, necko * angles(math.rad(-43), math.rad(0), math.rad(0)), 0.42)
        RW.C0 = clerp(RW.C0, CFrame.new(1.5, 0.5, 0) * angles(math.rad(-8), math.rad(0), math.rad(60)), 0.35)
        LW.C0 = clerp(LW.C0, CFrame.new(-1.5, 0.5, 0) * angles(math.rad(-8), math.rad(0), math.rad(-60)), 0.35)
        RH.C0 = clerp(RH.C0, CFrame.new(1, -0.5, 0) * vh * angles(math.rad(0), math.rad(0), math.rad(20 + 10 * fe)), 0.42)
        LH.C0 = clerp(LH.C0, CFrame.new(-1, -0.5, -0.4) * vj * angles(math.rad(0), math.rad(0), math.rad(24)), 0.42)
      end
      attack = false
      con5:disconnect()
    end
    function quickkick()
      attack = true
      con5 = va.Touched:connect(function(a)
        a = a
        if a.Parent:FindFirstChildOfClass("Humanoid") ~= nil and va == false then
          va = true
          coroutine.resume(coroutine.create(function()
            for fd = 0, 1.5, 0.1 do
              swait()
              va.Parent.Head.CFrame = vb.CFrame * CFrame.new(0, 1.3, -1.8)
            end
          end))
          kDamagefunc(a, 1, 2, math.random(0, 0), "Normal", vb, 0, 1)
          so("http://roblox.com/asset/?id=636494529", vc, 2, 1)
          RingEffect(BrickColor.new("White"), vc.CFrame * angles(math.random(-360, 360), math.random(-360, 360), math.random(-360, 360)), 1, 5, 1, 0.2, 2, 0.2, 0.06)
          RingEffect(BrickColor.new("White"), vc.CFrame * angles(math.random(-360, 360), math.random(-360, 360), math.random(-360, 360)), 1, 5, 1, 0.2, 2, 0.2, 0.06)
          SphereEffect(BrickColor.new("White"), vc.CFrame * angles(math.random(-360, 360), math.random(-360, 360), math.random(-360, 360)), 1, 5, 1, 3, 3, 3, 0.06)
          coroutine.resume(coroutine.create(function()
            for fd = 0, 1, 0.1 do
              swait()
              va.CameraOffset = va.CameraOffset:lerp(Vector3.new(math.random(-1.44, 1.44), math.random(-1.44, 1.44), math.random(-1.44, 1.44)), 0.44)
            end
          end))
          wait(0.08)
          va = false
        end
      end)
      so("http://www.roblox.com/asset/?id=158475221", RightLeg, 1, 1.3)
      for fd = 0, 11.14, 0.3 do
        swait()
        vc.Velocity = vc.CFrame.lookVector * 30
        BlockEffect(BrickColor.new("White"), ve.CFrame * CF(0, -1, 0), 2, 2, 2, 3.5, 3.5, 3.5, 0.05)
        vg.C0 = clerp(vg.C0, vh * CFrame.new(0, 0, -0.87) * angles(math.rad(-21 - 30 * fd), math.rad(8 + 10 * fd), math.rad(0 - 90 * fd)), 0.35)
        vj.Neck.C0 = clerp(vj.Neck.C0, necko * angles(math.rad(12), math.rad(0), math.rad(24)), 0.35)
        RW.C0 = clerp(RW.C0, CFrame.new(1.5, 0.5, 0) * angles(math.rad(12), math.rad(0), math.rad(62)), 0.35)
        LW.C0 = clerp(LW.C0, CFrame.new(-1.5, 0.3, 0) * angles(math.rad(12), math.rad(0), math.rad(-23)), 0.35)
        RH.C0 = clerp(RH.C0, CFrame.new(1, -0.17, -0.4) * vk * angles(math.rad(7), math.rad(0), math.rad(4)), 0.35)
        LH.C0 = clerp(LH.C0, CFrame.new(-1, -0.13, -0.6) * vl * angles(math.rad(-64 - 2 * fd), math.rad(0), math.rad(0 - 9 * fd)), 0.35)
      end
      attack = false
      con5:disconnect()
    end
    function Taunt()
      attack = true
      va.WalkSpeed = 0
      Cso("1535995570", vb, 8.45, 1)
      for fd = 0, 8.2, 0.1 do
        swait()
        va.WalkSpeed = 0
        vc.C0 = clerp(vc.C0, vd * CF(0 * ve, 0 * ve, -0.1 + 0.1 * ve * Cos(vg / 12)) * angles(Rad(0), Rad(0), Rad(0)), 0.2)
        vh.Neck.C0 = clerp(vh.Neck.C0, necko * CF(0, 0, 0 + (1 * ve - 1)) * angles(Rad(25), Rad(0), Rad(16 * Cos(vg / 12))), 0.2)
        RH.C0 = clerp(RH.C0, CF(1 * ve, -0.9 - 0.1 * Cos(vg / 12) * ve, 0 * ve) * angles(Rad(0), Rad(75), Rad(0)) * angles(Rad(-6.5), Rad(0), Rad(0)), 0.1)
        LH.C0 = clerp(LH.C0, CF(-1 * ve, -0.9 - 0.1 * Cos(vg / 12) * ve, 0 * ve) * angles(Rad(0), Rad(-75), Rad(0)) * angles(Rad(-6.5), Rad(0), Rad(0)), 0.1)
        RW.C0 = clerp(RW.C0, CF(1.1 * ve, 0.5 + 0.05 * Sin(vg / 12) * ve, -0.5 * ve) * angles(Rad(180), Rad(6), Rad(-56)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1 * ve, 0.1 + 0.05 * Sin(vg / 12) * ve, -0.5 * ve) * angles(Rad(45), Rad(6), Rad(86)), 0.1)
      end
      attack = false
      va.WalkSpeed = 8
    end
    function Hyperkickcombo()
      attack = true
      so("http://www.roblox.com/asset/?id=1452040709", RightLeg, 3, 1)
      WaveEffect(BrickColor.new("White"), va.CFrame * CFrame.new(0, -1, 0) * vb(0, math.random(-50, 50), 0), 1, 1, 1, 1, 0.5, 1, 0.05)
      for fd = 0, 7.14, 0.1 do
        swait()
        SphereEffect(BrickColor.new("White"), vc.CFrame * angles(math.random(-50, 50), math.random(-50, 50), math.random(-50, 50)), 1, 5, 1, 0.05, 4, 0.05, 0.03)
        vd.C0 = clerp(vd.C0, ve * CFrame.new(0, 0, -0.8) * angles(math.rad(24), math.rad(0), math.rad(0)), 0.2)
        vg.Neck.C0 = clerp(vg.Neck.C0, necko * angles(math.rad(0), math.rad(0), math.rad(0)), 0.2)
        RW.C0 = clerp(RW.C0, CFrame.new(1.5, 0.5, 0) * angles(math.rad(-20), math.rad(0), math.rad(36)), 0.3)
        LW.C0 = clerp(LW.C0, CFrame.new(-1.5, 0.5, 0) * angles(math.rad(-20), math.rad(0), math.rad(-36)), 0.3)
        RH.C0 = clerp(RH.C0, CFrame.new(1, -0.6, -0.3) * vh * angles(math.rad(0), math.rad(0), math.rad(-28)), 0.2)
        LH.C0 = clerp(LH.C0, CFrame.new(-1, -0.2, -0.5) * vj * angles(math.rad(0), math.rad(0), math.rad(-34)), 0.2)
      end
      for fe = 0, 7.14, 0.1 do
        swait()
        vk.CameraOffset = vk.CameraOffset:lerp(Vector3.new(math.random(-0.99, 0.99), math.random(-0.99, 0.99), math.random(-0.99, 0.99)), 0.34)
        Aura(5, 0.15, "Add", va.CFrame * CF(Mrandom(-12, 12), -6, Mrandom(-12, 12)) * angles(Rad(90 + Mrandom(-12, 12)), 0, 0), 1.5, 1.5, 10, -0.015, BrickC("Lime green"), 0, "Sphere")
        WaveEffect(BrickColor.new("Lime green"), va.CFrame * CFrame.new(0, -6, 0) * vb(0, math.random(-25, 25), 0), 1, 1, 1, 1, 0.2, 1, 0.05)
        SphereEffect(BrickColor.new("Lime green"), vc.CFrame * angles(math.random(-50, 50), math.random(-50, 50), math.random(-50, 50)), 1, 5, 1, 0.05, 4, 0.05, 0.03)
        SphereEffect(BrickColor.new("Lime green"), vl.CFrame * angles(math.random(-50, 50), math.random(-50, 50), math.random(-50, 50)), 1, 5, 1, 0.05, 4, 0.05, 0.03)
        vd.C0 = clerp(vd.C0, ve * CFrame.new(0, 0, -0.8) * angles(math.rad(24), math.rad(0), math.rad(0)), 0.2)
        vg.Neck.C0 = clerp(vg.Neck.C0, necko * angles(math.rad(30), math.rad(0), math.rad(0)), 0.2)
        RW.C0 = clerp(RW.C0, CFrame.new(1.5, 0.5, 0) * angles(math.rad(20), math.rad(0), math.rad(36)), 0.3)
        LW.C0 = clerp(LW.C0, CFrame.new(-1.5, 0.5, 0) * angles(math.rad(20), math.rad(0), math.rad(-36)), 0.3)
        RH.C0 = clerp(RH.C0, CFrame.new(1, -0.6, -0.3) * vh * angles(math.rad(0), math.rad(0), math.rad(-28)), 0.2)
        LH.C0 = clerp(LH.C0, CFrame.new(-1, -0.2, -0.5) * vj * angles(math.rad(0), math.rad(0), math.rad(-34)), 0.2)
      end
      Cso("292536356", vg, 10, 1).Playing = false
      so("http://www.roblox.com/asset/?id=197161452", vm, 3, 0.8)
      so("http://www.roblox.com/asset/?id=158475221", RightLeg, 1, 1.3)
      SphereEffect(BrickColor.new("Lime green"), vg.CFrame * angles(math.random(-360, 360), math.random(-360, 360), math.random(-360, 360)), 1, 5, 1, 38, 38, 38, 0.08)
      Instance.new("BodyVelocity").velocity = vt(0, 27, 0)
      Instance.new("BodyVelocity").P = 11000
      Instance.new("BodyVelocity").maxForce = Vector3.new(math.huge, math.huge, math.huge)
      Instance.new("BodyVelocity").Parent = va
      game:GetService("Debris"):AddItem(Instance.new("BodyVelocity"), 1.24)
      con5 = vk.Touched:connect(function(a)
        a = a
        if a.Parent:FindFirstChildOfClass("Humanoid") ~= nil and va == false then
          va = true
          coroutine.resume(coroutine.create(function()
            for fd = 0, 1.5, 0.1 do
              swait()
              va.Parent.Head.CFrame = vb.CFrame * CFrame.new(0, 3.4, -1.8)
            end
          end))
          kDamagefunc(a, 2, 3, math.random(0, 0), "Normal", vb, 0, 1)
          so("http://roblox.com/asset/?id=636494529", vc, 2, 1.6)
          RingEffect(BrickColor.new("Lime green"), vc.CFrame * angles(math.random(-360, 360), math.random(-360, 360), math.random(-360, 360)), 1, 5, 1, 0.2, 2, 0.2, 0.06)
          RingEffect(BrickColor.new("Lime green"), vc.CFrame * angles(math.random(-360, 360), math.random(-360, 360), math.random(-360, 360)), 1, 5, 1, 0.2, 2, 0.2, 0.06)
          SphereEffect(BrickColor.new("Lime green"), vc.CFrame * angles(math.random(-360, 360), math.random(-360, 360), math.random(-360, 360)), 1, 5, 1, 3, 3, 3, 0.06)
          coroutine.resume(coroutine.create(function()
            for fd = 0, 1, 0.1 do
              swait()
              va.CameraOffset = va.CameraOffset:lerp(Vector3.new(math.random(-0.99, 0.99), math.random(-0.99, 0.99), math.random(-0.99, 0.99)), 0.34)
            end
          end))
          wait(0.09)
          va = false
        end
      end)
      for fg = 0, 9.11, 0.2 do
        swait()
        BlockEffect(BrickColor.new("Lime green"), vc.CFrame * CF(0, -1, 0), 2, 2, 2, 3.5, 3.5, 3.5, 0.05)
        vd.C0 = clerp(vd.C0, ve * CFrame.new(0, 0, 0.1 + 0.12 * fg) * angles(math.rad(-10 - 95 * fg), math.rad(0), math.rad(0)), 0.42)
        vg.Neck.C0 = clerp(vg.Neck.C0, necko * angles(math.rad(-43), math.rad(0), math.rad(0)), 0.42)
        RW.C0 = clerp(RW.C0, CFrame.new(1.5, 0.5, 0) * angles(math.rad(-8), math.rad(0), math.rad(60)), 0.35)
        LW.C0 = clerp(LW.C0, CFrame.new(-1.5, 0.5, 0) * angles(math.rad(-8), math.rad(0), math.rad(-60)), 0.35)
        RH.C0 = clerp(RH.C0, CFrame.new(1, -0.5, 0) * vh * angles(math.rad(0), math.rad(0), math.rad(20 + 10 * fg)), 0.42)
        LH.C0 = clerp(LH.C0, CFrame.new(-1, -0.5, -0.4) * vj * angles(math.rad(0), math.rad(0), math.rad(24)), 0.42)
      end
      con5:disconnect()
      con5 = vk.Touched:connect(function(a)
        a = a
        if a.Parent:FindFirstChildOfClass("Humanoid") ~= nil and va == false then
          va = true
          coroutine.resume(coroutine.create(function()
            for fd = 0, 1.5, 0.1 do
              swait()
              va.Parent.Head.CFrame = vb.CFrame * CFrame.new(0, 1.1, -1.8)
            end
          end))
          kDamagefunc(a, 3, 4, math.random(0, 0), "Normal", vb, 0, 1)
          so("http://roblox.com/asset/?id=636494529", vc, 2, 1.6)
          RingEffect(BrickColor.new("Lime green"), vc.CFrame * angles(math.random(-360, 360), math.random(-360, 360), math.random(-360, 360)), 1, 5, 1, 0.2, 2, 0.2, 0.06)
          RingEffect(BrickColor.new("Lime green"), vc.CFrame * angles(math.random(-360, 360), math.random(-360, 360), math.random(-360, 360)), 1, 5, 1, 0.2, 2, 0.2, 0.06)
          SphereEffect(BrickColor.new("Lime green"), vc.CFrame * angles(math.random(-360, 360), math.random(-360, 360), math.random(-360, 360)), 1, 5, 1, 3, 3, 3, 0.06)
          coroutine.resume(coroutine.create(function()
            for fd = 0, 1, 0.1 do
              swait()
              va.CameraOffset = va.CameraOffset:lerp(Vector3.new(math.random(-0.99, 0.99), math.random(-0.99, 0.99), math.random(-0.99, 0.99)), 0.34)
            end
          end))
          wait(0.08)
          va = false
        end
      end)
      so("http://www.roblox.com/asset/?id=158475221", RightLeg, 1, 1.3)
      for fg = 0, 9.14, 0.3 do
        swait()
        va.Velocity = va.CFrame.lookVector * 20
        BlockEffect(BrickColor.new("Lime green"), vl.CFrame * CF(0, -1, 0), 2, 2, 2, 3.5, 3.5, 3.5, 0.05)
        vd.C0 = clerp(vd.C0, ve * CFrame.new(0, 0, -0.87) * angles(math.rad(53), math.rad(8), math.rad(0 - 54 * fg)), 0.35)
        vg.Neck.C0 = clerp(vg.Neck.C0, necko * angles(math.rad(12), math.rad(0), math.rad(24)), 0.35)
        RW.C0 = clerp(RW.C0, CFrame.new(1.5, 0.5, 0) * angles(math.rad(12), math.rad(0), math.rad(62)), 0.35)
        LW.C0 = clerp(LW.C0, CFrame.new(-1.5, 0.3, 0) * angles(math.rad(12), math.rad(0), math.rad(-23)), 0.35)
        RH.C0 = clerp(RH.C0, CFrame.new(1, -0.17, -0.4) * vh * angles(math.rad(7), math.rad(0), math.rad(4)), 0.35)
        LH.C0 = clerp(LH.C0, CFrame.new(-1, -0.13, -0.6) * vj * angles(math.rad(-64 - 7 * fg), math.rad(0), math.rad(0 - 9 * fg)), 0.35)
      end
      con5:disconnect()
      con5 = vk.Touched:connect(function(a)
        a = a
        if a.Parent:FindFirstChildOfClass("Humanoid") ~= nil and va == false then
          va = true
          coroutine.resume(coroutine.create(function()
            for fd = 0, 1.5, 0.1 do
              swait()
              va.Parent.Head.CFrame = vb.CFrame * CFrame.new(0, 1.1, -1.8)
            end
          end))
          kDamagefunc(a, 3, 4, math.random(0, 0), "Normal", vb, 0, 1)
          so("http://roblox.com/asset/?id=636494529", vc, 2, 1.6)
          RingEffect(BrickColor.new("Lime green"), vc.CFrame * angles(math.random(-360, 360), math.random(-360, 360), math.random(-360, 360)), 1, 5, 1, 0.2, 2, 0.2, 0.06)
          RingEffect(BrickColor.new("Lime green"), vc.CFrame * angles(math.random(-360, 360), math.random(-360, 360), math.random(-360, 360)), 1, 5, 1, 0.2, 2, 0.2, 0.06)
          SphereEffect(BrickColor.new("Lime green"), vc.CFrame * angles(math.random(-360, 360), math.random(-360, 360), math.random(-360, 360)), 1, 5, 1, 3, 3, 3, 0.06)
          coroutine.resume(coroutine.create(function()
            for fd = 0, 1, 0.1 do
              swait()
              va.CameraOffset = va.CameraOffset:lerp(Vector3.new(math.random(-0.99, 0.99), math.random(-0.99, 0.99), math.random(-0.99, 0.99)), 0.34)
            end
          end))
          wait(0.05)
          va = false
        end
      end)
      so("http://www.roblox.com/asset/?id=158475221", RightLeg, 1, 1.3)
      for fg = 0, 15.14, 0.32 do
        swait()
        va.Velocity = va.CFrame.lookVector * 20
        BlockEffect(BrickColor.new("Lime green"), vl.CFrame * CF(0, -1, 0), 2, 2, 2, 3.5, 3.5, 3.5, 0.05)
        vd.C0 = clerp(vd.C0, ve * CFrame.new(0, 0, -0.87) * angles(math.rad(-21 - 50 * fg), math.rad(8 + 20 * fg), math.rad(0 - 90 * fg)), 0.35)
        vg.Neck.C0 = clerp(vg.Neck.C0, necko * angles(math.rad(12), math.rad(0), math.rad(24)), 0.35)
        RW.C0 = clerp(RW.C0, CFrame.new(1.5, 0.5, 0) * angles(math.rad(12), math.rad(0), math.rad(62)), 0.35)
        LW.C0 = clerp(LW.C0, CFrame.new(-1.5, 0.3, 0) * angles(math.rad(12), math.rad(0), math.rad(-23)), 0.35)
        RH.C0 = clerp(RH.C0, CFrame.new(1, -0.17, -0.4) * vh * angles(math.rad(7), math.rad(0), math.rad(4)), 0.35)
        LH.C0 = clerp(LH.C0, CFrame.new(-1, -0.13, -0.6) * vj * angles(math.rad(-64 - 2 * fg), math.rad(0), math.rad(0 - 4 * fg)), 0.35)
      end
      attack = false
      con5:disconnect()
    end
    function Galekicks()
      attack = true
      so("http://www.roblox.com/asset/?id=1452040709", RightLeg, 3, 1)
      for fd = 0, 1.65, 0.1 do
        swait()
        va.Velocity = va.CFrame.lookVector * 0
        SphereEffect(BrickColor.new("Lime green"), vb.CFrame * angles(math.random(-50, 50), math.random(-50, 50), math.random(-50, 50)), 1, 5, 1, 0.05, 4, 0.05, 0.03)
        vc.C0 = clerp(vc.C0, vd * CFrame.new(0, 0.7, -0.3) * angles(math.rad(-32), math.rad(-2), math.rad(90)), 0.2)
        ve.Neck.C0 = clerp(ve.Neck.C0, necko * angles(math.rad(0), math.rad(-17), math.rad(-90)), 0.2)
        RW.C0 = clerp(RW.C0, CFrame.new(1.1, 0.5, -0.6) * angles(math.rad(90), math.rad(0), math.rad(-56)), 0.3)
        LW.C0 = clerp(LW.C0, CFrame.new(-1.2, 0.6, -0.5) * angles(math.rad(90), math.rad(0), math.rad(56)), 0.3)
        RH.C0 = clerp(RH.C0, CFrame.new(1, 0.62, -0.3) * vg * angles(math.rad(-40), math.rad(0), math.rad(2)), 0.2)
        LH.C0 = clerp(LH.C0, CFrame.new(-1, -0.7, 0) * vh * angles(math.rad(-28), math.rad(0), math.rad(0)), 0.2)
      end
      for fd = 1, 17 do
        con5 = vj.Touched:connect(function(a)
          a = a
          if a.Parent:FindFirstChildOfClass("Humanoid") ~= nil and va == false then
            va = true
            coroutine.resume(coroutine.create(function()
              for fd = 0, 1.5, 0.1 do
                swait()
                va.Parent.Head.CFrame = vb.CFrame * CFrame.new(0, 1.1, -1.8)
              end
            end))
            kDamagefunc(a, 1, 2, math.random(0, 0), "Normal", vb, 0, 1)
            so("http://roblox.com/asset/?id=636494529", vc, 2, 1.6)
            RingEffect(BrickColor.new("Lime green"), vc.CFrame * angles(math.random(-360, 360), math.random(-360, 360), math.random(-360, 360)), 1, 5, 1, 0.2, 2, 0.2, 0.06)
            RingEffect(BrickColor.new("Lime green"), vc.CFrame * angles(math.random(-360, 360), math.random(-360, 360), math.random(-360, 360)), 1, 5, 1, 0.2, 2, 0.2, 0.06)
            SphereEffect(BrickColor.new("Lime green"), vc.CFrame * angles(math.random(-360, 360), math.random(-360, 360), math.random(-360, 360)), 1, 5, 1, 3, 3, 3, 0.06)
            coroutine.resume(coroutine.create(function()
              for fd = 0, 1, 0.1 do
                swait()
                va.CameraOffset = va.CameraOffset:lerp(Vector3.new(math.random(-0.99, 0.99), math.random(-0.99, 0.99), math.random(-0.99, 0.99)), 0.34)
              end
            end))
            wait(0.05)
            va = false
          end
        end)
        for fj = 0, 0.1, 0.2 do
          swait()
          BlockEffect(BrickColor.new("Lime green"), vb.CFrame * CF(0, -1, 0), 2, 2, 2, 1.5, 1.5, 1.5, 0.03)
          va.Velocity = va.CFrame.lookVector * 10
          vc.C0 = clerp(vc.C0, vd * CFrame.new(0, -0.5, -0.3) * angles(math.rad(-44), math.rad(-2), math.rad(90)), 0.7)
          ve.Neck.C0 = clerp(ve.Neck.C0, necko * angles(math.rad(0), math.rad(-24), math.rad(-90)), 0.7)
          RW.C0 = clerp(RW.C0, CFrame.new(1.1, 0.5, -0.6) * angles(math.rad(90), math.rad(0), math.rad(-56)), 0.7)
          LW.C0 = clerp(LW.C0, CFrame.new(-1.2, 0.6, -0.5) * angles(math.rad(90), math.rad(0), math.rad(56)), 0.7)
          RH.C0 = clerp(RH.C0, CFrame.new(1, -0.6, 0) * vg * angles(math.rad(math.random(-100, -10)), math.rad(0), math.rad(2)), 0.7)
          LH.C0 = clerp(LH.C0, CFrame.new(-1, -0.7, 0) * vh * angles(math.rad(-34), math.rad(0), math.rad(0)), 0.7)
        end
        so("http://roblox.com/asset/?id=1340545854", vb, 1, math.random(0.7, 1))
        for fj = 0, 0.4, 0.2 do
          swait()
          vc.C0 = clerp(vc.C0, vd * CFrame.new(0, 0.7, -0.3) * angles(math.rad(-32), math.rad(-2), math.rad(90)), 0.2)
          ve.Neck.C0 = clerp(ve.Neck.C0, necko * angles(math.rad(0), math.rad(-17), math.rad(-90)), 0.2)
          RW.C0 = clerp(RW.C0, CFrame.new(1.1, 0.5, -0.6) * angles(math.rad(90), math.rad(0), math.rad(-56)), 0.3)
          LW.C0 = clerp(LW.C0, CFrame.new(-1.2, 0.6, -0.5) * angles(math.rad(90), math.rad(0), math.rad(56)), 0.3)
          RH.C0 = clerp(RH.C0, CFrame.new(1, 0.62, -0.3) * vg * angles(math.rad(-40), math.rad(0), math.rad(2)), 0.2)
          LH.C0 = clerp(LH.C0, CFrame.new(-1, -0.7, 0) * vh * angles(math.rad(-28), math.rad(0), math.rad(0)), 0.2)
        end
        con5:disconnect()
      end
      u = vl.KeyDown:connect(function(a)
        a = a
        if a == "r" and va >= 150 then
          vb = true
          SphereEffect(BrickColor.new("Really red"), vc.CFrame * angles(math.random(-360, 360), math.random(-360, 360), math.random(-360, 360)), 1, 5, 1, 15, 15, 15, 0.04)
        end
      end)
      wait(0.3)
      if vo == true then
        vm = 0
        wait(0.1)
        for fd = 0, 1.65, 0.1 do
          swait()
          va.Velocity = va.CFrame.lookVector * 0
          SphereEffect(BrickColor.new("Really red"), vb.CFrame * angles(math.random(-50, 50), math.random(-50, 50), math.random(-50, 50)), 1, 5, 1, 0.05, 4, 0.05, 0.03)
          vc.C0 = clerp(vc.C0, vd * CFrame.new(0, 0.7, -0.3) * angles(math.rad(-32), math.rad(-2), math.rad(90)), 0.2)
          ve.Neck.C0 = clerp(ve.Neck.C0, necko * angles(math.rad(0), math.rad(-17), math.rad(-90)), 0.2)
          RW.C0 = clerp(RW.C0, CFrame.new(1.1, 0.5, -0.6) * angles(math.rad(90), math.rad(0), math.rad(-56)), 0.3)
          LW.C0 = clerp(LW.C0, CFrame.new(-1.2, 0.6, -0.5) * angles(math.rad(90), math.rad(0), math.rad(56)), 0.3)
          RH.C0 = clerp(RH.C0, CFrame.new(1, 0.62, -0.3) * vg * angles(math.rad(-40), math.rad(0), math.rad(2)), 0.2)
          LH.C0 = clerp(LH.C0, CFrame.new(-1, -0.7, 0) * vh * angles(math.rad(-28), math.rad(0), math.rad(0)), 0.2)
        end
        so("http://roblox.com/asset/?id=146094803", vp, 1, 1.2)
        for fd = 1, 65 do
          con5 = vj.Touched:connect(function(a)
            a = a
            if a.Parent:FindFirstChildOfClass("Humanoid") ~= nil and va == false then
              va = true
              coroutine.resume(coroutine.create(function()
                for fd = 0, 1.5, 0.1 do
                  swait()
                  va.Parent.Head.CFrame = vb.CFrame * CFrame.new(0, 1.1, -1.8)
                end
              end))
              kDamagefunc(a, 1, 2, math.random(0, 0), "Normal", vb, 0, 1)
              so("http://roblox.com/asset/?id=636494529", vc, 2, 1.6)
              RingEffect(BrickColor.new("Really red"), vc.CFrame * angles(math.random(-360, 360), math.random(-360, 360), math.random(-360, 360)), 1, 5, 1, 0.2, 2, 0.2, 0.06)
              RingEffect(BrickColor.new("Really red"), vc.CFrame * angles(math.random(-360, 360), math.random(-360, 360), math.random(-360, 360)), 1, 5, 1, 0.2, 2, 0.2, 0.06)
              SphereEffect(BrickColor.new("Really red"), vc.CFrame * angles(math.random(-360, 360), math.random(-360, 360), math.random(-360, 360)), 1, 5, 1, 3, 3, 3, 0.06)
              coroutine.resume(coroutine.create(function()
                for fd = 0, 1, 0.1 do
                  swait()
                  va.CameraOffset = va.CameraOffset:lerp(Vector3.new(math.random(-0.99, 0.99), math.random(-0.99, 0.99), math.random(-0.99, 0.99)), 0.34)
                end
              end))
              wait(0.05)
              va = false
            end
          end)
          for fj = 0, 0.03, 0.1 do
            swait()
            BlockEffect(BrickColor.new("Really red"), vb.CFrame * CF(0, -1, 0), 2, 2, 2, 1.5, 1.5, 1.5, 0.03)
            va.Velocity = va.CFrame.lookVector * 10
            vc.C0 = clerp(vc.C0, vd * CFrame.new(0, -0.5, -0.3) * angles(math.rad(-44), math.rad(-2), math.rad(90)), 0.7)
            ve.Neck.C0 = clerp(ve.Neck.C0, necko * angles(math.rad(0), math.rad(-24), math.rad(-90)), 0.7)
            RW.C0 = clerp(RW.C0, CFrame.new(1.1, 0.5, -0.6) * angles(math.rad(90), math.rad(0), math.rad(-56)), 0.7)
            LW.C0 = clerp(LW.C0, CFrame.new(-1.2, 0.6, -0.5) * angles(math.rad(90), math.rad(0), math.rad(56)), 0.7)
            RH.C0 = clerp(RH.C0, CFrame.new(1, -0.6, 0) * vg * angles(math.rad(math.random(-100, -10)), math.rad(0), math.rad(2)), 0.7)
            LH.C0 = clerp(LH.C0, CFrame.new(-1, -0.7, 0) * vh * angles(math.rad(-34), math.rad(0), math.rad(0)), 0.7)
          end
          so("http://roblox.com/asset/?id=1340545854", vb, 1, math.random(0.7, 1))
          for fj = 0, 0.07, 0.1 do
            swait()
            vc.C0 = clerp(vc.C0, vd * CFrame.new(0, 0.7, -0.3) * angles(math.rad(-32), math.rad(-2), math.rad(90)), 0.2)
            ve.Neck.C0 = clerp(ve.Neck.C0, necko * angles(math.rad(0), math.rad(-17), math.rad(-90)), 0.2)
            RW.C0 = clerp(RW.C0, CFrame.new(1.1, 0.5, -0.6) * angles(math.rad(90), math.rad(0), math.rad(-56)), 0.3)
            LW.C0 = clerp(LW.C0, CFrame.new(-1.2, 0.6, -0.5) * angles(math.rad(90), math.rad(0), math.rad(56)), 0.3)
            RH.C0 = clerp(RH.C0, CFrame.new(1, 0.62, -0.3) * vg * angles(math.rad(-40), math.rad(0), math.rad(2)), 0.2)
            LH.C0 = clerp(LH.C0, CFrame.new(-1, -0.7, 0) * vh * angles(math.rad(-28), math.rad(0), math.rad(0)), 0.2)
          end
          con5:disconnect()
        end
        for fd = 0, 1.65, 0.1 do
          swait()
          va.Velocity = va.CFrame.lookVector * 0
          SphereEffect(BrickColor.new("Really red"), vb.CFrame * angles(math.random(-50, 50), math.random(-50, 50), math.random(-50, 50)), 1, 5, 1, 0.05, 4, 0.05, 0.03)
          vc.C0 = clerp(vc.C0, vd * CFrame.new(0, 0.7, -0.3) * angles(math.rad(-32), math.rad(-2), math.rad(90)), 0.2)
          ve.Neck.C0 = clerp(ve.Neck.C0, necko * angles(math.rad(0), math.rad(-17), math.rad(-90)), 0.2)
          RW.C0 = clerp(RW.C0, CFrame.new(1.1, 0.5, -0.6) * angles(math.rad(90), math.rad(0), math.rad(-56)), 0.3)
          LW.C0 = clerp(LW.C0, CFrame.new(-1.2, 0.6, -0.5) * angles(math.rad(90), math.rad(0), math.rad(56)), 0.3)
          RH.C0 = clerp(RH.C0, CFrame.new(1, 0.62, -0.3) * vg * angles(math.rad(-40), math.rad(0), math.rad(2)), 0.2)
          LH.C0 = clerp(LH.C0, CFrame.new(-1, -0.7, 0) * vh * angles(math.rad(-28), math.rad(0), math.rad(0)), 0.2)
        end
        con5 = vj.Touched:connect(function(a)
          a = a
          if a.Parent:FindFirstChildOfClass("Humanoid") ~= nil and va == false then
            va = true
            coroutine.resume(coroutine.create(function()
              for fd = 0, 1.5, 0.1 do
                swait()
              end
            end))
            kDamagefunc(a, 1, 3, 0, "Normal", vb, 0, 1)
            so("http://roblox.com/asset/?id=636494529", vc, 2, 0.63)
            RingEffect(BrickColor.new("Really red"), vc.CFrame * angles(math.random(-360, 360), math.random(-360, 360), math.random(-360, 360)), 1, 5, 1, 0.2, 2, 0.2, 0.06)
            RingEffect(BrickColor.new("Really red"), vc.CFrame * angles(math.random(-360, 360), math.random(-360, 360), math.random(-360, 360)), 1, 5, 1, 0.2, 2, 0.2, 0.06)
            SphereEffect(BrickColor.new("Really red"), vc.CFrame * angles(math.random(-360, 360), math.random(-360, 360), math.random(-360, 360)), 1, 5, 1, 3, 3, 3, 0.06)
            coroutine.resume(coroutine.create(function()
              for fd = 0, 1, 0.1 do
                swait()
                va.CameraOffset = va.CameraOffset:lerp(Vector3.new(math.random(-0.99, 0.99), math.random(-0.99, 0.99), math.random(-0.99, 0.99)), 0.34)
              end
            end))
            wait(0.05)
            va = false
          end
        end)
        so("http://www.roblox.com/asset/?id=1452040709", RightLeg, 1, 1.4)
        SphereEffect(BrickColor.new("Really red"), vb.CFrame * angles(math.random(-360, 360), math.random(-360, 360), math.random(-360, 360)), 1, 5, 1, 38, 38, 38, 0.08)
        for fd = 0, 2, 0.1 do
          swait()
          vc.C0 = clerp(vc.C0, vd * CFrame.new(0, -0.5, -0.3) * angles(math.rad(-32), math.rad(-2), math.rad(90)), 0.2)
          ve.Neck.C0 = clerp(ve.Neck.C0, necko * angles(math.rad(0), math.rad(-17), math.rad(-90)), 0.2)
          RW.C0 = clerp(RW.C0, CFrame.new(1.1, 0.5, -0.6) * angles(math.rad(90), math.rad(0), math.rad(-56)), 0.3)
          LW.C0 = clerp(LW.C0, CFrame.new(-1.2, 0.6, -0.5) * angles(math.rad(90), math.rad(0), math.rad(56)), 0.3)
          RH.C0 = clerp(RH.C0, CFrame.new(1, -0.6, 0.2) * vg * angles(math.rad(-50), math.rad(0), math.rad(2)), 0.2)
          LH.C0 = clerp(LH.C0, CFrame.new(-1, -0.7, 0) * vh * angles(math.rad(-28), math.rad(0), math.rad(0)), 0.2)
        end
        SphereEffect(BrickColor.new("Really red"), ve.CFrame * angles(math.random(-360, 360), math.random(-360, 360), math.random(-360, 360)), 1, 5, 1, 8, 8, 8, 0.04)
        wait(0.25)
        con5:Disconnect()
        con5 = vj.Touched:connect(function(a)
          a = a
          if a.Parent:FindFirstChildOfClass("Humanoid") ~= nil and va == false then
            va = true
            kDamagefunc(a, 1, 2, math.random(0, 0), "Normal", vb, 0, 1)
            so("http://roblox.com/asset/?id=565207203", vc, 7, 0.63)
            RingEffect(BrickColor.new("Really red"), vc.CFrame * angles(math.random(-360, 360), math.random(-360, 360), math.random(-360, 360)), 1, 5, 1, 2.2, 6, 2.2, 0.04)
            RingEffect(BrickColor.new("Really red"), vc.CFrame * angles(math.random(-360, 360), math.random(-360, 360), math.random(-360, 360)), 1, 5, 1, 2.2, 6, 2.2, 0.04)
            SphereEffect(BrickColor.new("Really red"), vc.CFrame * angles(math.random(-360, 360), math.random(-360, 360), math.random(-360, 360)), 1, 5, 1, 8, 8, 8, 0.04)
            SpecialEffect(BrickColor.new("Really red"), vc.CFrame * angles(math.random(-360, 360), math.random(-360, 360), math.random(-360, 360)), 1, 5, 1, 8, 8, 8, 0.04)
            SphereEffect(BrickColor.new("Really red"), vc.CFrame * angles(math.random(-360, 360), math.random(-360, 360), math.random(-360, 360)), 1, 5, 1, 5, 18, 5, 0.04)
            WaveEffect(BrickColor.new("Really red"), vc.CFrame * angles(math.random(-360, 360), math.random(-360, 360), math.random(-360, 360)), 1, 5, 1, 1.5, 16, 1.5, 0.04)
            coroutine.resume(coroutine.create(function()
              for fd = 0, 1, 0.1 do
                swait()
                va.CameraOffset = va.CameraOffset:lerp(Vector3.new(math.random(-0.63, 0.63), math.random(-0.63, 0.63), math.random(-0.63, 0.63)), 0.24)
              end
            end))
            wait(0.06)
            va = false
          end
        end)
        coroutine.resume(coroutine.create(function()
          while va == true do
            swait()
            vb.CFrame = vb.CFrame * CFrame.new(math.random(-3, 3), math.random(-2, 2), math.random(-3, 3))
          end
        end))
        so("http://www.roblox.com/asset/?id=158475221", RightLeg, 1, 1.3)
        for fd = 1, 3 do
          for fj = 0, 9.14, 0.45 do
            swait()
            va.Velocity = va.CFrame.lookVector * 30
            BlockEffect(BrickColor.new("Really red"), vn.CFrame * CF(0, -1, 0), 2, 2, 2, 3.5, 3.5, 3.5, 0.05)
            vc.C0 = clerp(vc.C0, vd * CFrame.new(0, 0, -0.87) * angles(math.rad(8), math.rad(8), math.rad(0 - 94 * fj)), 0.35)
            ve.Neck.C0 = clerp(ve.Neck.C0, necko * angles(math.rad(12), math.rad(0), math.rad(24)), 0.35)
            RW.C0 = clerp(RW.C0, CFrame.new(1.5, 0.5, 0) * angles(math.rad(12), math.rad(0), math.rad(62)), 0.35)
            LW.C0 = clerp(LW.C0, CFrame.new(-1.5, 0.3, 0) * angles(math.rad(12), math.rad(0), math.rad(-23)), 0.35)
            RH.C0 = clerp(RH.C0, CFrame.new(1, -0.17, -0.4) * vg * angles(math.rad(7), math.rad(0), math.rad(4)), 0.35)
            LH.C0 = clerp(LH.C0, CFrame.new(-1, -0.13, -0.6) * vh * angles(math.rad(-64 - 7 * fj), math.rad(0), math.rad(0 - 9 * fj)), 0.35)
          end
        end
        for fd = 1, 3 do
          for fj = 0, 11.14, 0.45 do
            swait()
            va.Velocity = va.CFrame.lookVector * 30
            BlockEffect(BrickColor.new("Really red"), vn.CFrame * CF(0, -1, 0), 2, 2, 2, 3.5, 3.5, 3.5, 0.05)
            vc.C0 = clerp(vc.C0, vd * CFrame.new(0, 0, -0.87) * angles(math.rad(-21 - 30 * fj), math.rad(8 + 10 * fj), math.rad(0 - 110 * fj)), 0.35)
            ve.Neck.C0 = clerp(ve.Neck.C0, necko * angles(math.rad(12), math.rad(0), math.rad(24)), 0.35)
            RW.C0 = clerp(RW.C0, CFrame.new(1.5, 0.5, 0) * angles(math.rad(12), math.rad(0), math.rad(62)), 0.35)
            LW.C0 = clerp(LW.C0, CFrame.new(-1.5, 0.3, 0) * angles(math.rad(12), math.rad(0), math.rad(-23)), 0.35)
            RH.C0 = clerp(RH.C0, CFrame.new(1, -0.17, -0.4) * vg * angles(math.rad(27), math.rad(0), math.rad(74)), 0.35)
            LH.C0 = clerp(LH.C0, CFrame.new(-1, -0.13, -0.6) * vh * angles(math.rad(-34 - 2 * fj), math.rad(0), math.rad(0 - 9 * fj)), 0.35)
          end
        end
        so("http://www.roblox.com/asset/?id=197161452", vr, 0.5, 0.8)
        con5:disconnect()
      end
      attack = false
      vo = false
      u:disconnect()
    end
    game:service("Players").LocalPlayer:GetMouse().KeyDown:connect(function(a)
      a = a
      if string.byte(a) == 48 then
        Swing = 2
        va.WalkSpeed = 24.82
      end
    end)
    game:service("Players").LocalPlayer:GetMouse().KeyUp:connect(function(a)
      a = a
      if string.byte(a) == 48 then
        Swing = 1
        va.WalkSpeed = 8
      end
    end)
    game:service("Players").LocalPlayer:GetMouse().NewButton1Down:connect(function()
      if attack == false then
        if va == 1 then
          attack = true
          va = 2
          attackone()
        elseif va == 2 then
          attack = true
          va = 3
          attacktwo()
        elseif va == 3 then
          attack = true
          va = 4
          attackthree()
        elseif va == 4 then
          attack = true
          va = 1
          attackfour()
        end
      end
    end)
    game:service("Players").LocalPlayer:GetMouse().KeyDown:connect(function(a)
      a = a
      if a == "e" and attack == false and va == true and vb == false then
        quickkick()
        vb = true
        coroutine.resume(coroutine.create(function()
          wait(2)
          va = false
        end))
      end
    end)
    game:service("Players").LocalPlayer:GetMouse().KeyDown:connect(function(a)
      a = a
      if attack == false then
        if a == "t" then
          Taunt()
        elseif a == "f" then
          Hyperkickcombo()
        elseif a == "r" then
          Galekicks()
        end
      end
    end)
    print("By Makhail07 and KillerDarkness0105")
    print("Basic Animations by Makhail07")
    print("Attack Animations by KillerDarkness0105")
    print("This is pretty much our final script together")
    print("--------------------------------")
    print("Attacks")
    print("E in air: Quick Kicks")
    print("Left Mouse: 4 click combo")
    print("F: Hyper Kicks")
    print("R: Gale Kicks, Spam R if your combo is over 150 to do an ultra combo")
    print("--------------------------------")
    while true do
      swait()
      hitfloor, posfloor = rayCast(game:service("Players").LocalPlayer.Character.Raw.HumanoidRootPart.Position, CFrame.new(game:service("Players").LocalPlayer.Character.Raw.HumanoidRootPart.Position, game:service("Players").LocalPlayer.Character.Raw.HumanoidRootPart.Position - Vector3.new(0, 1, 0)).lookVector, 4 * 1, game:service("Players").LocalPlayer.Character.Raw)
      if hitfloor == nil then
      else
      end
      if false == false then
        if attack == false then
        else
        end
        if 1 < game:service("Players").LocalPlayer.Character.Raw.HumanoidRootPart.Velocity.y and hitfloor == nil then
          Anim = "Jump"
          if attack == false then
            game:service("Players").LocalPlayer.Character.Raw.Humanoid.CameraOffset = game:service("Players").LocalPlayer.Character.Raw.Humanoid.CameraOffset:lerp(Vector3.new(0, 0, 0), 0.15)
            game:service("Players").LocalPlayer.Character.Raw.HumanoidRootPart.RootJoint.C0 = clerp(game:service("Players").LocalPlayer.Character.Raw.HumanoidRootPart.RootJoint.C0, CFrame.fromEulerAnglesXYZ(-1.57, 0, 3.14) * CF(0 * 1, 0 * 1, -0.1 + 0.1 * Cos((0 + 1) / 20) * 1) * angles(Rad(-16), Rad(0), Rad(0)), 0.15)
            game:service("Players").LocalPlayer.Character.Raw.Torso.Neck.C0 = clerp(game:service("Players").LocalPlayer.Character.Raw.Torso.Neck.C0, necko * CF(0, 0, 0 + (1 * 1 - 1)) * angles(Rad(10 - 2.5 * Sin((0 + 1) / 30)), Rad(0), Rad(0)), 0.1)
            RH.C0 = clerp(RH.C0, CF(1 * 1, -0.2 - 0.1 * Cos((0 + 1) / 20) * 1, -0.3 * 1) * CFrame.fromEulerAnglesXYZ(0, 1.6, 0) * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
            LH.C0 = clerp(LH.C0, CF(-1 * 1, -0.9 - 0.1 * Cos((0 + 1) / 20), -0.5 * 1) * CFrame.fromEulerAnglesXYZ(0, -1.6, 0) * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
            RW.C0 = clerp(RW.C0, CF(1.5 * 1, 0.5 + 0.02 * Sin((0 + 1) / 20) * 1, 0 * 1) * angles(Rad(25), Rad(-0.6), Rad(13 + 4.5 * Sin((0 + 1) / 20))), 0.1)
            LW.C0 = clerp(LW.C0, CF(-1.5 * 1, 0.5 + 0.02 * Sin((0 + 1) / 20) * 1, 0 * 1) * angles(Rad(25), Rad(-0.6), Rad(-13 - 4.5 * Sin((0 + 1) / 20))), 0.1)
          end
        elseif -1 > game:service("Players").LocalPlayer.Character.Raw.HumanoidRootPart.Velocity.y and hitfloor == nil then
          Anim = "Fall"
          if attack == false then
            game:service("Players").LocalPlayer.Character.Raw.Humanoid.CameraOffset = game:service("Players").LocalPlayer.Character.Raw.Humanoid.CameraOffset:lerp(Vector3.new(0, 0, 0), 0.15)
            game:service("Players").LocalPlayer.Character.Raw.HumanoidRootPart.RootJoint.C0 = clerp(game:service("Players").LocalPlayer.Character.Raw.HumanoidRootPart.RootJoint.C0, CFrame.fromEulerAnglesXYZ(-1.57, 0, 3.14) * CF(0 * 1, 0 * 1, -0.1 + 0.1 * Cos((0 + 1) / 20) * 1) * angles(Rad(24), Rad(0), Rad(0)), 0.15)
            game:service("Players").LocalPlayer.Character.Raw.Torso.Neck.C0 = clerp(game:service("Players").LocalPlayer.Character.Raw.Torso.Neck.C0, necko * CF(0, 0, 0 + (1 * 1 - 1)) * angles(Rad(10 - 2.5 * Sin((0 + 1) / 30)), Rad(0), Rad(0)), 0.1)
            RH.C0 = clerp(RH.C0, CF(1 * 1, -1 - 0.1 * Cos((0 + 1) / 20) * 1, -0.3 * 1) * CFrame.fromEulerAnglesXYZ(0, 1.6, 0) * angles(Rad(-3.5), Rad(0), Rad(0)), 0.15)
            LH.C0 = clerp(LH.C0, CF(-1 * 1, -0.8 - 0.1 * Cos((0 + 1) / 20) * 1, -0.3 * 1) * CFrame.fromEulerAnglesXYZ(0, -1.6, 0) * angles(Rad(-3.5), Rad(0), Rad(0)), 0.15)
            RW.C0 = clerp(RW.C0, CF(1.5 * 1, 0.5 + 0.02 * Sin((0 + 1) / 20) * 1, 0 * 1) * angles(Rad(65), Rad(-0.6), Rad(45 + 4.5 * Sin((0 + 1) / 20))), 0.1)
            LW.C0 = clerp(LW.C0, CF(-1.5 * 1, 0.5 + 0.02 * Sin((0 + 1) / 20) * 1, 0 * 1) * angles(Rad(55), Rad(-0.6), Rad(-45 - 4.5 * Sin((0 + 1) / 20))), 0.1)
          end
        elseif game:service("Players").LocalPlayer.Character.Raw.HumanoidRootPart.Velocity * Vector3.new(1, 0, 1).magnitude < 1 and hitfloor ~= nil then
          Anim = "Idle"
          if attack == false then
            game:service("Players").LocalPlayer.Character.Raw.Humanoid.CameraOffset = game:service("Players").LocalPlayer.Character.Raw.Humanoid.CameraOffset:lerp(Vector3.new(0, 0, 0), 0.15)
            game:service("Players").LocalPlayer.Character.Raw.HumanoidRootPart.RootJoint.C0 = clerp(game:service("Players").LocalPlayer.Character.Raw.HumanoidRootPart.RootJoint.C0, CFrame.fromEulerAnglesXYZ(-1.57, 0, 3.14) * CF(0 * 1, 0 * 1, -0.1 + 0.1 * 1 * Cos((0 + 1) / 12)) * angles(Rad(0), Rad(0), Rad(20)), 0.1)
            game:service("Players").LocalPlayer.Character.Raw.Torso.Neck.C0 = clerp(game:service("Players").LocalPlayer.Character.Raw.Torso.Neck.C0, necko * CF(0, 0, 0 + (1 * 1 - 1)) * angles(Rad(-6.5 * Sin((0 + 1) / 12)), Rad(0), Rad(-20)), 0.1)
            RH.C0 = clerp(RH.C0, CF(1 * 1, -0.9 - 0.1 * Cos((0 + 1) / 12) * 1, 0 * 1) * angles(Rad(0), Rad(75), Rad(0)) * angles(Rad(-12.5), Rad(0), Rad(0)), 0.1)
            LH.C0 = clerp(LH.C0, CF(-1 * 1, -0.9 - 0.1 * Cos((0 + 1) / 12) * 1, -0.2 * 1) * angles(Rad(0), Rad(-65), Rad(0)) * angles(Rad(-6.5), Rad(0), Rad(6)), 0.1)
            RW.C0 = clerp(RW.C0, CF(1.5 * 1, 0.2 + 0.05 * Sin((0 + 1) / 12) * 1, 0 * 1) * angles(Rad(110), Rad(6 + 6.5 * Sin((0 + 1) / 12)), Rad(25)), 0.1)
            LW.C0 = clerp(LW.C0, CF(-1.3 * 1, 0.2 + 0.05 * Sin((0 + 1) / 12) * 1, -0.5 * 1) * angles(Rad(110), Rad(6 - 6.5 * Sin((0 + 1) / 12)), Rad(25)), 0.1)
          end
        elseif game:service("Players").LocalPlayer.Character.Raw.HumanoidRootPart.Velocity * Vector3.new(1, 0, 1).magnitude > 2 and game:service("Players").LocalPlayer.Character.Raw.HumanoidRootPart.Velocity * Vector3.new(1, 0, 1).magnitude < 22 and hitfloor ~= nil then
          Anim = "Walk"
          if attack == false then
            game:service("Players").LocalPlayer.Character.Raw.Humanoid.CameraOffset = game:service("Players").LocalPlayer.Character.Raw.Humanoid.CameraOffset:lerp(Vector3.new(0, 0, 0), 0.15)
            game:service("Players").LocalPlayer.Character.Raw.HumanoidRootPart.RootJoint.C0 = clerp(game:service("Players").LocalPlayer.Character.Raw.HumanoidRootPart.RootJoint.C0, CFrame.fromEulerAnglesXYZ(-1.57, 0, 3.14) * CF(0 * 1, 0 * 1, -0.175 + 0.025 * Cos((0 + 1) / 3.5) + -Sin((0 + 1) / 3.5) / 7 * 1) * angles(Rad(3 - 2.5 * Cos((0 + 1) / 3.5)), Rad(0) - game:service("Players").LocalPlayer.Character.Raw.HumanoidRootPart.RotVelocity.Y / 75, Rad(8 * Cos((0 + 1) / 7))), 0.15)
            game:service("Players").LocalPlayer.Character.Raw.Torso.Neck.C0 = clerp(game:service("Players").LocalPlayer.Character.Raw.Torso.Neck.C0, necko * CF(0, 0, 0 + (1 * 1 - 1)) * angles(Rad(-1), Rad(0), Rad(0) - game:service("Players").LocalPlayer.Character.Raw.Head.RotVelocity.Y / 15), 0.15)
            RH.C0 = clerp(RH.C0, CF(1 * 1, -0.8 - 0.5 * Cos((0 + 1) / 7) / 2 * 1, 0.6 * Cos((0 + 1) / 7) / 2 * 1) * angles(Rad(-15 - 15 * Cos((0 + 1) / 7)) - game:service("Players").LocalPlayer.Character.Raw["Right Leg"].RotVelocity.Y / 75 + -Sin((0 + 1) / 7) / 2.5, Rad(90 - 10 * Cos((0 + 1) / 7)), Rad(0)) * angles(Rad(0 + 2 * Cos((0 + 1) / 7)), Rad(0), Rad(0)), 0.3)
            LH.C0 = clerp(LH.C0, CF(-1 * 1, -0.8 + 0.5 * Cos((0 + 1) / 7) / 2 * 1, -0.6 * Cos((0 + 1) / 7) / 2 * 1) * angles(Rad(-15 + 15 * Cos((0 + 1) / 7)) + game:service("Players").LocalPlayer.Character.Raw["Left Leg"].RotVelocity.Y / 75 + Sin((0 + 1) / 7) / 2.5, Rad(-90 - 10 * Cos((0 + 1) / 7)), Rad(0)) * angles(Rad(0 - 2 * Cos((0 + 1) / 7)), Rad(0), Rad(0)), 0.3)
            RW.C0 = clerp(RW.C0, CF(1.5 * 1, 0.5 + 0.05 * Sin((0 + 1) / 7) * 1, 0 * 1) * angles(Rad(56) * Cos((0 + 1) / 7), Rad(10 * Cos((0 + 1) / 7)), Rad(6) - game:service("Players").LocalPlayer.Character.Raw["Right Arm"].RotVelocity.Y / 75), 0.1)
            LW.C0 = clerp(LW.C0, CF(-1.5 * 1, 0.5 + 0.05 * Sin((0 + 1) / 7) * 1, 0 * 1) * angles(Rad(-56) * Cos((0 + 1) / 7), Rad(10 * Cos((0 + 1) / 7)), Rad(-6) + game:service("Players").LocalPlayer.Character.Raw["Left Arm"].RotVelocity.Y / 75), 0.1)
          end
        elseif game:service("Players").LocalPlayer.Character.Raw.HumanoidRootPart.Velocity * Vector3.new(1, 0, 1).magnitude >= 22 and hitfloor ~= nil then
          Anim = "Sprint"
          if attack == false then
            game:service("Players").LocalPlayer.Character.Raw.Humanoid.CameraOffset = game:service("Players").LocalPlayer.Character.Raw.Humanoid.CameraOffset:lerp(Vector3.new(0, 0, 0), 0.15)
            game:service("Players").LocalPlayer.Character.Raw.HumanoidRootPart.RootJoint.C0 = clerp(game:service("Players").LocalPlayer.Character.Raw.HumanoidRootPart.RootJoint.C0, CFrame.fromEulerAnglesXYZ(-1.57, 0, 3.14) * CF(0 * 1, 0 * 1, -0.175 + 0.025 * Cos((0 + 1) / 3.5) + -Sin((0 + 1) / 3.5) / 7 * 1) * angles(Rad(26 - 4.5 * Cos((0 + 1) / 3.5)), Rad(0) - game:service("Players").LocalPlayer.Character.Raw.HumanoidRootPart.RotVelocity.Y / 75, Rad(15 * Cos((0 + 1) / 7))), 0.15)
            game:service("Players").LocalPlayer.Character.Raw.Torso.Neck.C0 = clerp(game:service("Players").LocalPlayer.Character.Raw.Torso.Neck.C0, necko * CF(0, 0, 0 + (1 * 1 - 1)) * angles(Rad(-8.5 - 2 * Sin((0 + 1) / 20)), Rad(0), Rad(0) - game:service("Players").LocalPlayer.Character.Raw.Head.RotVelocity.Y / 15), 0.15)
            RH.C0 = clerp(RH.C0, CF(1 * 1, -0.925 - 0.5 * Cos((0 + 1) / 7) / 2 * 1, 0.7 * Cos((0 + 1) / 7) / 2 * 1) * angles(Rad(-15 - 55 * Cos((0 + 1) / 7)) - game:service("Players").LocalPlayer.Character.Raw["Right Leg"].RotVelocity.Y / 75 + -Sin((0 + 1) / 7) / 2.5, Rad(90 - 0.1 * Cos((0 + 1) / 7)), Rad(0)) * angles(Rad(0 + 0.1 * Cos((0 + 1) / 7)), Rad(0), Rad(0)), 0.3)
            LH.C0 = clerp(LH.C0, CF(-1 * 1, -0.925 + 0.5 * Cos((0 + 1) / 7) / 2 * 1, -0.7 * Cos((0 + 1) / 7) / 2 * 1) * angles(Rad(-15 + 55 * Cos((0 + 1) / 7)) + game:service("Players").LocalPlayer.Character.Raw["Left Leg"].RotVelocity.Y / 75 + Sin((0 + 1) / 7) / 2.5, Rad(-90 - 0.1 * Cos((0 + 1) / 7)), Rad(0)) * angles(Rad(0 - 0.1 * Cos((0 + 1) / 7)), Rad(0), Rad(0)), 0.3)
            RW.C0 = clerp(RW.C0, CF(1.5 * 1, 0.5 + 0.05 * Sin((0 + 1) / 30) * 1, 0.34 * Cos((0 + 1) / 7 * 1)) * angles(Rad(-65), Rad(0), Rad(13) - game:service("Players").LocalPlayer.Character.Raw["Right Arm"].RotVelocity.Y / 75), 0.15)
            LW.C0 = clerp(LW.C0, CF(-1.5 * 1, 0.5 + 0.05 * Sin((0 + 1) / 30) * 1, -0.34 * Cos((0 + 1) / 7 * 1)) * angles(Rad(-65), Rad(0), Rad(-13) + game:service("Players").LocalPlayer.Character.Raw["Left Arm"].RotVelocity.Y / 75), 0.15)
          end
        end
      end
      Instance.new("Sound", game:service("Players").LocalPlayer.Character.Raw.Torso).SoundId = "rbxassetid://" .. 900817147
      Instance.new("Sound", game:service("Players").LocalPlayer.Character.Raw.Torso).Looped = true
      Instance.new("Sound", game:service("Players").LocalPlayer.Character.Raw.Torso).Pitch = 1
      Instance.new("Sound", game:service("Players").LocalPlayer.Character.Raw.Torso).Parent, Instance.new("Sound", game:service("Players").LocalPlayer.Character.Raw.Torso).Volume = game:service("Players").LocalPlayer.Character.Raw.Torso, 0.7
      Instance.new("Sound", game:service("Players").LocalPlayer.Character.Raw.Torso):Resume()
      if 0 < #Effects then
        for fac = 1, #Effects do
          if Effects[fac] ~= nil and Effects[fac] ~= nil then
            if 1 >= Effects[fac][1].Transparency then
              if Effects[fac][2] == "Block1" then
                Effects[fac][1].CFrame = Effects[fac][1].CFrame * CFrame.fromEulerAnglesXYZ(math.random(-50, 50), math.random(-50, 50), math.random(-50, 50))
                Effects[fac][1].Mesh.Scale = Effects[fac][1].Mesh.Scale + Vector3.new(Effects[fac][4], Effects[fac][5], Effects[fac][6])
                Effects[fac][1].Transparency = Effects[fac][1].Transparency + Effects[fac][3]
              elseif Effects[fac][2] == "Block2" then
                Effects[fac][1].CFrame = Effects[fac][1].CFrame + Vector3.new(0, 0, 0)
                Effects[fac][7].Scale = Effects[fac][7].Scale + Vector3.new(Effects[fac][4], Effects[fac][5], Effects[fac][6])
                Effects[fac][1].Transparency = Effects[fac][1].Transparency + Effects[fac][3]
              elseif Effects[fac][2] == "Block3" then
                Effects[fac][1].CFrame = Effects[fac][1].CFrame * CFrame.fromEulerAnglesXYZ(math.random(-50, 50), math.random(-50, 50), math.random(-50, 50)) + Vector3.new(0, 0.15, 0)
                Effects[fac][7].Scale = Effects[fac][7].Scale + Vector3.new(Effects[fac][4], Effects[fac][5], Effects[fac][6])
                Effects[fac][1].Transparency = Effects[fac][1].Transparency + Effects[fac][3]
              elseif Effects[fac][2] == "Cylinder" then
                Effects[fac][1].Mesh.Scale = Effects[fac][1].Mesh.Scale + Vector3.new(Effects[fac][4], Effects[fac][5], Effects[fac][6])
                Effects[fac][1].Transparency = Effects[fac][1].Transparency + Effects[fac][3]
              elseif Effects[fac][2] == "Blood" then
                Effects[fac][1].CFrame = Effects[fac][1].CFrame * Vector3.new(0, 0.5, 0)
                Effects[fac][7].Scale = Effects[fac][7].Scale + Vector3.new(Effects[fac][4], Effects[fac][5], Effects[fac][6])
                Effects[fac][1].Transparency = Effects[fac][1].Transparency + Effects[fac][3]
              elseif Effects[fac][2] == "Elec" then
                Effects[fac][1].Mesh.Scale = Effects[fac][1].Mesh.Scale + Vector3.new(Effects[fac][7], Effects[fac][8], Effects[fac][9])
                Effects[fac][1].Transparency = Effects[fac][1].Transparency + Effects[fac][3]
              elseif Effects[fac][2] == "Disappear" then
                Effects[fac][1].Transparency = Effects[fac][1].Transparency + Effects[fac][3]
              elseif Effects[fac][2] == "Shatter" then
                Effects[fac][1].Transparency = Effects[fac][1].Transparency + Effects[fac][3]
                Effects[fac][4] = Effects[fac][4] * CFrame.new(0, Effects[fac][7], 0)
                Effects[fac][1].CFrame = Effects[fac][4] * CFrame.fromEulerAnglesXYZ(Effects[fac][6], 0, 0)
                Effects[fac][6] = Effects[fac][6] + Effects[fac][5]
              end
            else
              Effects[fac][1].Parent = nil
              table.remove(Effects, fac)
            end
          end
        end
      end
    end
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
function playid(a, b, c)
  a = a
  if b ~= nil then
    if c == true then
      va.PlaybackSpeed = 0.7
    else
      va.PlaybackSpeed = 1
    end
    va.Playing = false
    va.TimePosition = 0
    va.SoundId = "rbxassetid://" .. tostring(b)
    va.Playing = true
  else
    va.TimePosition = 0
    va.Playing = false
  end
  animid = "rbxassetid://" .. tostring(a)
  plr = game.Players.LocalPlayer
  bruhmomentrighthahahahhahah = plr.Character.Raw
  cf = bruhmomentrighthahahahhahah.HumanoidRootPart.CFrame
  t = bruhmomentrighthahahahhahah.Torso
  rs = t["Right Shoulder"]
  ls = t["Left Shoulder"]
  rh = t["Right Hip"]
  lh = t["Left Hip"]
  n = t.Neck
  rj = bruhmomentrighthahahahhahah.HumanoidRootPart.RootJoint
  rsc0 = rs.C0
  lsc0 = ls.C0
  rhc0 = rh.C0
  lhc0 = lh.C0
  rjc0 = rj.C0
  nc0 = n.C0
  gc0 = CFrame.new()
  orsc0 = rs.C0
  olsc0 = ls.C0
  orhc0 = rh.C0
  olhc0 = lh.C0
  orjc0 = rj.C0
  onc0 = n.C0
  count2 = 100
  maxcount2 = 100
  game["Run Service"].Heartbeat:Connect(function()
    count2 = count2 + 1
    if count2 <= maxcount2 then
      rs.Transform = rs.Transform:Lerp(rsc0, count2 / maxcount2)
      ls.Transform = ls.Transform:Lerp(lsc0, count2 / maxcount2)
      rh.Transform = rh.Transform:Lerp(rhc0, count2 / maxcount2)
      lh.Transform = lh.Transform:Lerp(lhc0, count2 / maxcount2)
      n.Transform = n.Transform:Lerp(nc0, count2 / maxcount2)
      rj.Transform = rj.Transform:Lerp(rjc0, count2 / maxcount2)
    end
  end)
  animid = game:GetObjects(animid)[1]
  function wait2(a)
    a = a
    if a < 0.1 then
      wait(0.001)
    else
      for fe = 1, a * 40 do
        wait(0.001)
      end
    end
  end
  anim = {}
  function kftotbl(a)
    a = a
    tbl3 = {}
    for fe, fg in pairs(a:GetDescendants()) do
      if fg:IsA("Pose") then
        tbl3[string.sub(fg.Name, 1, 1) .. string.sub(fg.Name, #fg.Name, #fg.Name)] = fg.CFrame
      end
    end
    return tbl3
  end
  for fj, fk in pairs(animid:GetChildren()) do
    if fk:IsA("Keyframe") then
      anim[fk.Time] = kftotbl(fk)
    end
  end
  function getnext(a, b)
    a = a
    c = 100
    rtrnv = 0
    for fg, fh in pairs(a) do
      if b < fg and fg - b < c then
        c = fg - b
        rtrnv = fg
      end
    end
    return rtrnv
  end
  count = 0
  char = game.Players.LocalPlayer.Character.Raw
  hhhh = game.Players.LocalPlayer.Character.Raw.Humanoid.Animator
  hhhh.Parent = nil
  for fj, fk in pairs(char.Humanoid:GetPlayingAnimationTracks()) do
    fk:Stop()
  end
  while wait() do
    for fj, fk in pairs(anim) do
      asdf = getnext(anim, count)
      v = anim[asdf]
      if v.Lg then
        lhc0 = v.Lg
      end
      if v.Rg then
        rhc0 = v.Rg
      end
      if v.Lm then
        lsc0 = v.Lm
      end
      if v.Rm then
        rsc0 = v.Rm
      end
      if v.To then
        rjc0 = v.To
      end
      if v.Hd then
        nc0 = v.Hd
      end
      count2 = 0
      maxcount2 = asdf - count
      count = asdf
      wait2(asdf - count)
      count2 = maxcount2
      if v.Lg then
        char.Torso["Left Hip"].Transform = v.Lg
      end
      if v.Rg then
        char.Torso["Right Hip"].Transform = v.Rg
      end
      if v.Lm then
        char.Torso["Left Shoulder"].Transform = v.Lm
      end
      if v.Rm then
        char.Torso["Right Shoulder"].Transform = v.Rm
      end
      if v.To then
        char.HumanoidRootPart.RootJoint.Transform = v.To
      end
    end
  end
end
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Animations"):NewSection("Animations"):NewButton("Smug Dance", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    playid("3450125501")
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Animations"):NewSection("Animations"):NewButton("Parrot", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    playid("3656900015")
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Animations"):NewSection("Animations"):NewButton("Roach", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    playid("4087012028")
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Animations"):NewSection("Animations"):NewButton("Billie Jean", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    playid("4792883833")
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Animations"):NewSection("Animations"):NewButton("Conga", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    playid("4572096542")
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Animations"):NewSection("Animations"):NewButton("Whip", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    playid("4633952191")
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Animations"):NewSection("Animations"):NewButton("Floss", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    playid("4812941481")
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Animations"):NewSection("Animations"):NewButton("Carlton 2", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    playid("4837749916")
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Animations"):NewSection("Animations"):NewButton("Take The L", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    playid("4827299133")
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Animations"):NewSection("Animations"):NewButton("Aerostep", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    playid("4776588732")
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Animations"):NewSection("Animations"):NewButton("Helicopter", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    playid("4724894341")
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Animations"):NewSection("Animations"):NewButton("Smooth Moves", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    playid("4900539662")
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Animations"):NewSection("Animations"):NewButton("Anthony Shuffle", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    playid("4837748730")
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Animations"):NewSection("Animations"):NewButton("Kazotsky Kick", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    playid("4846209506")
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Animations"):NewSection("Animations"):NewButton("Pogo", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    playid("3053543383")
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Animations"):NewSection("Animations"):NewButton("Boogie Down", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    playid("5025546871")
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Animations"):NewSection("Animations"):NewButton("Thriller", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    playid("4699820365")
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Animations"):NewSection("Animations"):NewButton("Spongebob", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    playid("4896926493")
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Animations"):NewSection("Animations"):NewButton("Engineer", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    playid("4677980227")
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Animations"):NewSection("Animations"):NewButton("Sniper", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    playid("4677930905")
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Animations"):NewSection("Animations"):NewButton("Freestylin'", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    playid("4432024917", "3132426762")
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Animations"):NewSection("Animations"):NewButton("Crabby", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    playid("3643129020")
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Animations"):NewSection("Animations"):NewButton("Electro Shuffle", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    playid("3619935462")
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Animations"):NewSection("Animations"):NewButton("Revenge", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    playid("3696716156")
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Animations"):NewSection("Animations"):NewButton("Got That", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    playid("3742184308")
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Animations"):NewSection("Animations"):NewButton("Torture Dance", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    playid("4109162757")
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Animations"):NewSection("Animations"):NewButton("Soldier", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    playid("4787449997")
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Animations"):NewSection("Animations"):NewButton("Dream Feet", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    playid("4300218011")
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Animations"):NewSection("Animations"):NewButton("Peter Parker (what)", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    playid("4776598075")
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Animations"):NewSection("Animations"):NewButton("Goopie", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    playid("5238669868", "5177150121")
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Animations"):NewSection("Animations"):NewButton("Garry Dance", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    playid("4300223810")
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Animations"):NewSection("Animations"):NewButton("Casey", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    playid("3442913250")
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Animations"):NewSection("Animations"):NewButton("Praise the Lord", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    playid("4776745048")
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Animations"):NewSection("Animations"):NewButton("Nic", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    playid("4550142152")
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Animations"):NewSection("Animations"):NewButton("Side Hustle", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    playid("4863897442")
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Animations"):NewSection("Animations"):NewButton("Rewind", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    playid("5011408603")
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Animations"):NewSection("Animations"):NewButton("Minecraft Parrot", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    playid("4300228160")
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Animations"):NewSection("Animations"):NewButton("Breakdown", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    playid("4558409610")
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Animations"):NewSection("Animations"):NewButton("OOOH A RAT!", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    playid("4746273203")
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Animations"):NewSection("Animations"):NewButton("Medic", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    playid("4679640288")
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Animations"):NewSection("Animations"):NewButton("Skibidi", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    playid("4835795413")
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Animations"):NewSection("Animations"):NewButton("Default Dance", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    playid("4776575115")
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Animations"):NewSection("Animations"):NewButton("Tidy", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    playid("4831391731")
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Animations"):NewSection("Animations"):NewButton("Demoman", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    playid("4764153637")
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Animations"):NewSection("Animations"):NewButton("Electro Swing", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    playid("4820078879")
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Animations"):NewSection("Animations"):NewButton("Club Penguin", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    playid("6265042122")
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Animations"):NewSection("Animations"):NewButton("Double Step", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    playid("4715102040")
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Animations"):NewSection("Animations"):NewButton("Drip", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    playid("4959380041")
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Animations"):NewSection("Animations"):NewButton("Fright Fun", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    playid("5596328928")
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Animations"):NewSection("Animations"):NewButton("Heel-toe Hop", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    playid("5352468249")
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Animations"):NewSection("Animations"):NewButton("Jive", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    playid("5231214106")
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Hat Scripts"):NewSection("Hat Scripts"):NewButton("Banzai Bazooka", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    IT = Instance.new
    CF = CFrame.new
    VT = Vector3.new
    RAD = math.rad
    C3 = Color3.new
    UD2 = UDim2.new
    BRICKC = BrickColor.new
    ANGLES = CFrame.Angles
    EULER = CFrame.fromEulerAnglesXYZ
    COS = math.cos
    ACOS = math.acos
    SIN = math.sin
    ASIN = math.asin
    ABS = math.abs
    MRANDOM = math.random
    FLOOR = math.floor
    game.Players.LocalPlayer.Character["Back Attack Missle Launcher"].Handle:BreakJoints();
    (function(a, b)
      a = a
      attachment = Instance.new("Attachment", a)
      attachment.Position = Vector3.new(0.3, 0, 0)
      attachment.Orientation = Vector3.new(-45, 90, 0)
      attachment02 = Instance.new("Attachment", b)
      lol = Instance.new("AlignPosition", a)
      lol.Attachment0 = attachment
      lol.Attachment1 = attachment02
      lol.MaxForce = 67734
      lol.RigidityEnabled = true
      pog = Instance.new("AlignOrientation", a)
      pog.Attachment0 = attachment
      pog.Attachment1 = attachment02
      pog.Responsiveness = 200
      pog.RigidityEnabled = true
    end)(game.Players.LocalPlayer.Character["Back Attack Missle Launcher"].Handle, game:GetObjects("rbxassetid://6730580482")[1].Bazooka)
    game:GetObjects("rbxassetid://6730580482")[1].Bazooka.Transparency = 1
    IT("Folder", game.Players.LocalPlayer.Character.Raw).Name = "FXFolder"
    ArtificialHB = Instance.new("BindableEvent", game:GetObjects("rbxassetid://6730580482")[1])
    ArtificialHB.Name = "ArtificialHB"
    game:GetObjects("rbxassetid://6730580482")[1]:WaitForChild("ArtificialHB")
    frame = 0.0166666666666667
    tf = 0
    allowframeloss = false
    tossremainder = false
    lastframe = tick()
    game:GetObjects("rbxassetid://6730580482")[1].ArtificialHB:Fire()
    game:GetService("RunService").Heartbeat:connect(function(a, b)
      a = a
      tf = tf + a
      if tf >= frame then
        if allowframeloss then
          ArtificialHB:Fire()
          lastframe = tick()
        else
          for fg = 1, math.floor(tf / frame) do
            ArtificialHB:Fire()
          end
          lastframe = tick()
        end
        if tossremainder then
          tf = 0
        else
          tf = tf - frame * math.floor(tf / frame)
        end
      end
    end)
    function PositiveAngle(a)
      a = a
      if a >= 0 then
        a = 0
      end
      return a
    end
    function NegativeAngle(a)
      a = a
      if a <= 0 then
        a = 0
      end
      return a
    end
    function Swait(a)
      a = a
      if a ~= 0 then
      end
      if a == nil then
        ArtificialHB.Event:wait()
      else
        for fe = 1, a do
          ArtificialHB.Event:wait()
        end
      end
    end
    function QuaternionFromCFrame(a)
      a = a
      if a:components() + a:components() + a:components() > 0 then
        return (a:components() - a:components()) * (0.5 / math.sqrt(1 + (a:components() + a:components() + a:components()))), (a:components() - a:components()) * (0.5 / math.sqrt(1 + (a:components() + a:components() + a:components())))
      else
        if 1 == 0 then
        end
        if 2 == 0 then
          return 0.5 * math.sqrt(a:components() - a:components() - a:components() + 1), (a:components() + a:components()) * (0.5 / math.sqrt(a:components() - a:components() - a:components() + 1))
        elseif 2 == 1 then
          return (a:components() + a:components()) * (0.5 / math.sqrt(a:components() - a:components() - a:components() + 1)), 0.5 * math.sqrt(a:components() - a:components() - a:components() + 1)
        elseif 2 == 2 then
          return (a:components() + a:components()) * (0.5 / math.sqrt(a:components() - a:components() - a:components() + 1)), (a:components() + a:components()) * (0.5 / math.sqrt(a:components() - a:components() - a:components() + 1))
        end
      end
    end
    function QuaternionToCFrame(a, b, c, d, e, g, h)
      a = a
      return CFrame.new(a, b, c, 1 - (e * (e + e) + g * (g + g)), d * (e + e) - h * (g + g), d * (g + g) + h * (e + e), d * (e + e) + h * (g + g), 1 - (d * (d + d) + g * (g + g)), e * (g + g) - h * (d + d), d * (g + g) - h * (e + e), e * (g + g) + h * (d + d), 1 - (d * (d + d) + e * (e + e)))
    end
    function QuaternionSlerp(a, b, c)
      a = a
      if 0.0001 <= a[1] * b[1] + a[2] * b[2] + a[3] * b[3] + a[4] * b[4] then
        if 0.0001 < 1 - (a[1] * b[1] + a[2] * b[2] + a[3] * b[3] + a[4] * b[4]) then
        else
        end
      elseif 0.0001 < 1 + (a[1] * b[1] + a[2] * b[2] + a[3] * b[3] + a[4] * b[4]) then
      else
      end
      return a[1] * (c - 1) + b[1] * c, a[2] * (c - 1) + b[2] * c
    end
    function Clerp(a, b, c)
      a = a
      return QuaternionToCFrame((1 - c) * a.x + c * b.x, (1 - c) * a.y + c * b.y, (1 - c) * a.z + c * b.z, QuaternionSlerp({
        QuaternionFromCFrame(a)
      }, {
        QuaternionFromCFrame(b)
      }, c))
    end
    function WeldParts(a, b)
      a = a
      IT("ManualWeld").Part0 = a
      IT("ManualWeld").Part1 = b
      IT("ManualWeld").C1 = b.CFrame:inverse() * a.CFrame
      IT("ManualWeld").Parent = a
      return (IT("ManualWeld"))
    end
    function NewSound(a)
      a = a
      if "rbxassetid://" .. (a.ID or 0) ~= "rbxassetid://0" then
        IT("Sound", a.PARENT or va).PlayOnRemove, IT("Sound", a.PARENT or va).EmitterSize, IT("Sound", a.PARENT or va).MaxDistance, IT("Sound", a.PARENT or va).Looped, IT("Sound", a.PARENT or va).Pitch, IT("Sound", a.PARENT or va).Volume, IT("Sound", a.PARENT or va).SoundId = a.PLAYONREMOVE or false, a.EMITTERSIZE or 10, a.MAXDISTANCE or 100, a.LOOP or false, a.PITCH or 1, a.VOLUME or 0.5, "rbxassetid://" .. (a.ID or 0)
        if (a.DOESDEBRIS or true) == true and (a.PLAYING or true) == true and (a.LOOP or false) == false then
          vb:AddItem(IT("Sound", a.PARENT or va), IT("Sound", a.PARENT or va).TimeLength + 5)
        end
        if (a.PLAYING or true) == true then
          IT("Sound", a.PARENT or va):Play()
        end
        return (IT("Sound", a.PARENT or va))
      end
    end
    function ManSlaughter(a)
      a = a
      return
    end
    function AreaOfEffect(a, b, c, d)
      a = a
      for fk, fl in pairs(workspace:GetChildren()) do
        if fl:FindFirstChildOfClass("Humanoid") and fl:FindFirstChildOfClass("Humanoid").Torso and b >= fl:FindFirstChildOfClass("Humanoid").Torso.Position - a.Magnitude then
          if d == true then
            if fl ~= va then
              table.insert({}, {
                fl,
                fl:FindFirstChildOfClass("Humanoid"),
                fl:FindFirstChildOfClass("Humanoid").Torso
              })
            end
          elseif fl ~= va then
            ManSlaughter(fl)
          end
        end
      end
      if d == true then
        return {}
      end
    end
    function CreatePart(a, b, c, d, e, g, h, j, k)
      a = a
      IT("Part").formFactor = a
      IT("Part").Reflectance = d
      IT("Part").Transparency = e
      IT("Part").CanCollide = false
      IT("Part").Locked = true
      IT("Part").Anchored = true
      if k == false then
        IT("Part").Anchored = false
      end
      IT("Part").BrickColor = BRICKC(tostring(g))
      IT("Part").Name = h
      IT("Part").Size = j
      IT("Part").Position = va.Position
      IT("Part").Material = c
      IT("Part"):BreakJoints()
      IT("Part").Parent = b
      return (IT("Part"))
    end
    function Raycast(a, b, c, d)
      a = a
      return workspace:FindPartOnRay(Ray.new(a, b.unit * c), d)
    end
    function CameraShake(a, b, c, d)
      a = a
      for fj, fk in pairs(workspace:GetChildren()) do
        if fk:FindFirstChildOfClass("Humanoid") and fk:FindFirstChildOfClass("Humanoid").Torso and game.Players:GetPlayerFromCharacter(fk) and b >= fk:FindFirstChildOfClass("Humanoid").Torso.Position - a.Magnitude then
          if fk:FindFirstChild("CamShake") then
            va:AddItem(fk:FindFirstChild("CamShake"), 0.05)
          end
          vb.CamShake:Clone().Parent = fk
          IT("NumberValue", (vb.CamShake:Clone())).Name = "Timer"
          IT("NumberValue", (vb.CamShake:Clone())).Value = d
          IT("NumberValue", (vb.CamShake:Clone())).Name = "Shake"
          IT("NumberValue", (vb.CamShake:Clone())).Value = c
          vb.CamShake:Clone().Disabled = false
          va:AddItem(vb.CamShake:Clone(), 15)
        end
      end
    end
    game:GetObjects("rbxassetid://6730580482")[1].Helmet.Parent = game.Players.LocalPlayer.Character.Raw
    do return end
    while true do
      repeat
      until game.Players.LocalPlayer.Character.Raw:GetChildren() ~= game.Players.LocalPlayer.Character.Raw.Humanoid.Torso and game.Players.LocalPlayer.Character.Raw:GetChildren():IsA("Accessory")
    end
    game:GetObjects("rbxassetid://6730580482")[1].Helmet.CFrame = game.Players.LocalPlayer.Character.Raw.Head.CFrame * CF(0, 0.5, 0)
    game:GetObjects("rbxassetid://6730580482")[1].Helmet.Anchored = false
    WeldParts(game.Players.LocalPlayer.Character.Raw.Head, game:GetObjects("rbxassetid://6730580482")[1].Helmet)
    game:GetObjects("rbxassetid://6730580482")[1].Bazooka.Parent = game.Players.LocalPlayer.Character.Raw
    game:GetObjects("rbxassetid://6730580482")[1].Bazooka.Anchored = false
    IT("Motor6D").Part1, IT("Motor6D").Part0 = game:GetObjects("rbxassetid://6730580482")[1].Bazooka, game.Players.LocalPlayer.Character.Raw["Right Arm"]
    IT("Motor6D").C0 = CF(0, -1, -0.5) * ANGLES(RAD(-90), 0, 0) * CF(0, 0, 1.85)
    IT("Motor6D").Parent = game.Players.LocalPlayer.Character.Raw["Right Arm"]
    for faj = 1, 15 do
      CreatePart(3, game.Players.LocalPlayer.Character.Raw, "Fabric", 0, 0 + (faj - 1) / 15.2, "Dark stone grey", "FaceGradient", VT(1.01, 0.58, 1.01), false).Color = C3(0, 0, 0)
      game.Players.LocalPlayer.Character.Raw.Head:FindFirstChildOfClass("SpecialMesh"):Clone().Parent = CreatePart(3, game.Players.LocalPlayer.Character.Raw, "Fabric", 0, 0 + (faj - 1) / 15.2, "Dark stone grey", "FaceGradient", VT(1.01, 0.58, 1.01), false)
      CreatePart(3, game.Players.LocalPlayer.Character.Raw, "Fabric", 0, 0 + (faj - 1) / 15.2, "Dark stone grey", "FaceGradient", VT(1.01, 0.58, 1.01), false).CFrame = game.Players.LocalPlayer.Character.Raw.Head.CFrame * CF(0, 0.3 - (faj - 1) / 35, 0)
      WeldParts(game.Players.LocalPlayer.Character.Raw.Head, (CreatePart(3, game.Players.LocalPlayer.Character.Raw, "Fabric", 0, 0 + (faj - 1) / 15.2, "Dark stone grey", "FaceGradient", VT(1.01, 0.58, 1.01), false)))
    end
    game:GetObjects("rbxassetid://6730580482")[1].Missile.Parent = nil
    game:GetObjects("rbxassetid://6730580482")[1].ControlsGUI.Parent = game.Players.LocalPlayer.PlayerGui
    game:GetObjects("rbxassetid://6730580482")[1].ControlsGUI.ToggleButton.MouseButton1Click:Connect(function()
      if va.ToggleButton.Controls.Visible == false then
        va.ToggleButton.Controls.Visible = true
      elseif va.ToggleButton.Controls.Visible == true then
        va.ToggleButton.Controls.Visible = false
      end
    end)
    game:GetObjects("rbxassetid://6730580482")[1].ControlsGUI.ToggleButton.Stored.Text = "STORED: " .. 9999999999999
    function AddTo(a)
      a = a
      va = va + a
      vb.Text = "STORED: " .. va
    end
    function Fire_in_the_hole()
      if va > 0 then
        vb = true
        IT("BodyGyro").D = 50
        IT("BodyGyro").P = 5000
        IT("BodyGyro").MaxTorque = VT(0, 4000000, 0)
        IT("BodyGyro").CFrame = CF(vc.Position, vd.Hit.p)
        IT("BodyGyro").Parent = vc
        vb = true
        coroutine.resume(coroutine.create(function()
          repeat
            Swait()
            va.CFrame = CF(vb.Position, vc.Hit.p)
          until vd == false
          va:Remove()
        end))
        repeat
          for fe = 0, 0.06, 0.1 / ve do
            Swait()
            vg.C0 = Clerp(vg.C0, vh * CF(0, 0, -0.02) * ANGLES(RAD(0), RAD(0), RAD(45)), 2.5 / ve)
            vj.C0 = Clerp(vj.C0, vk * CF(0, 0, 0) * ANGLES(RAD(0), RAD(0), RAD(-45)) * ANGLES(RAD(5), RAD(0), RAD(0)), 2.5 / ve)
            vl.C0 = Clerp(vl.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(90), RAD(0), RAD(45)) * vm, 2.5 / ve)
            vo.C0 = Clerp(vo.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(-45), RAD(0), RAD(-45)) * vp, 1.5 / ve)
            vn.C0 = Clerp(vn.C0, CF(1, -1, 0) * ANGLES(RAD(0), RAD(45), RAD(0)) * CF(0.4, 0, 0) * ANGLES(RAD(-10), RAD(0), RAD(0)), 2.5 / ve)
            vr.C0 = Clerp(vr.C0, CF(-1.1, -1, 0) * ANGLES(RAD(0), RAD(-135), RAD(0)) * CF(-0.4, 0, 0) * ANGLES(RAD(-10), RAD(0), RAD(0)), 2.5 / ve)
          end
          AddTo(-1)
          coroutine.resume(coroutine.create(function()
            vb:Clone().Parent = vc
            vb:Clone().CFrame = CF(vd.CFrame * CF(0, 0, -2).p, va.Hit.p)
            NewSound({
              ID = 440145223,
              PARENT = vd,
              VOLUME = 2,
              PITCH = MRANDOM(9, 11) / 10,
              LOOP = false,
              MAXDISTANCE = 80,
              EMITTERSIZE = 15,
              PLAYING = true,
              PLAYONREMOVE = false,
              DOESDEBRIS = true
            })
            NewSound({
              ID = 440145223,
              PARENT = vb:Clone(),
              VOLUME = 2,
              PITCH = MRANDOM(9, 11) / 10,
              LOOP = false,
              MAXDISTANCE = 80,
              EMITTERSIZE = 15,
              PLAYING = true,
              PLAYONREMOVE = false,
              DOESDEBRIS = true
            })
            for fg = 1, 200 do
              Swait()
              if Raycast(vb:Clone().Position, vb:Clone().CFrame.lookVector, 5, ve) then
                vb:Clone().CFrame = CF(Raycast(vb:Clone().Position, vb:Clone().CFrame.lookVector, 5, ve))
                break
              end
              vb:Clone().CFrame = vb:Clone().CFrame * CF(0, 0, -4)
            end
            vb:Clone().Transparency = 1
            vb:Clone().Hind:Remove()
            vb:Clone().CFrame = CF(vb:Clone().Position)
            vb:Clone().Size = VT(0, 0, 0)
            NewSound({
              ID = 142070127,
              PARENT = vb:Clone(),
              VOLUME = 7,
              PITCH = MRANDOM(8, 12) / 10,
              LOOP = false,
              MAXDISTANCE = 300,
              EMITTERSIZE = 15,
              PLAYING = true,
              PLAYONREMOVE = false,
              DOESDEBRIS = true
            })
            for fg, fh in pairs(vg.Grenade:GetChildren()) do
              fh:Clone().Parent = vb:Clone()
              fh:Clone():Emit(125)
            end
            CameraShake(vb:Clone().Position, 50, 125, 70)
            AreaOfEffect(vb:Clone().Position, 35, 200, false)
            vh:AddItem(vb:Clone(), 2)
          end))
          for fe = 0, 0.025, 0.1 / ve do
            Swait()
            vg.C0 = Clerp(vg.C0, vh * CF(0, 0, -0.02) * ANGLES(RAD(0), RAD(0), RAD(45)), 2.5 / ve)
            vj.C0 = Clerp(vj.C0, vk * CF(0, 0, 0) * ANGLES(RAD(0), RAD(0), RAD(-45)) * ANGLES(RAD(5), RAD(0), RAD(0)), 2.5 / ve)
            vl.C0 = Clerp(vl.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(200), RAD(0), RAD(45)) * vm, 2.5 / ve)
            vo.C0 = Clerp(vo.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(-45), RAD(0), RAD(-45)) * vp, 1.5 / ve)
            vn.C0 = Clerp(vn.C0, CF(1, -1, 0) * ANGLES(RAD(0), RAD(45), RAD(0)) * CF(0.4, 0, 0) * ANGLES(RAD(-10), RAD(0), RAD(0)), 2.5 / ve)
            vr.C0 = Clerp(vr.C0, CF(-1.1, -1, 0) * ANGLES(RAD(0), RAD(-135), RAD(0)) * CF(-0.4, 0, 0) * ANGLES(RAD(-10), RAD(0), RAD(0)), 2.5 / ve)
          end
        until va <= 0
        if va <= 0 then
          va = 0
          vx.Text = "STORED: 0"
        end
        vb = false
      end
    end
    function Store()
      va.WalkSpeed = 0
      va.JumpPower = 0
      vb = true
      repeat
        for fd = 0, 0.01, 0.1 / vc do
          Swait()
          vd.C0 = Clerp(vd.C0, CF(0, -1, -0.5) * ANGLES(RAD(-80), RAD(15), 0) * CF(0, 0, 1.85), 2.5 / vc)
          ve.C0 = Clerp(ve.C0, vg * CF(0, 0, -0.02 + 0.05 * COS(vh / 6)) * ANGLES(RAD(0), RAD(0), RAD(-5)), 0.5 / vc)
          vj.C0 = Clerp(vj.C0, vk * CF(0, 0, 0) * ANGLES(RAD(15), RAD(0), RAD(15)), 2.5 / vc)
          vl.C0 = Clerp(vl.C0, CF(1.7, 0.45, 0) * ANGLES(RAD(35), RAD(0), RAD(-45)) * vm, 2.5 / vc)
          vo.C0 = Clerp(vo.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(45), RAD(0), RAD(-25)) * vp, 2.5 / vc)
          vn.C0 = Clerp(vn.C0, CF(1, -1 - 0.05 * COS(vh / 6), 0) * ANGLES(RAD(0), RAD(85), RAD(0)) * ANGLES(RAD(-10), RAD(0), RAD(-2.5)), 0.5 / vc)
          vr.C0 = Clerp(vr.C0, CF(-1, -1 - 0.05 * COS(vh / 6), 0) * ANGLES(RAD(0), RAD(-85), RAD(0)) * ANGLES(RAD(-10), RAD(0), RAD(-2.5)), 0.5 / vc)
        end
        vs:Clone().Anchored = false
        vs:Clone():ClearAllChildren()
        vs:Clone().CFrame = vt.CFrame * CF(0, -1, 0) * ANGLES(RAD(0), RAD(90), RAD(0))
        vs:Clone().Parent = vu
        WeldParts(vs:Clone(), vt)
        for fe = 0, 0.02, 0.1 / vc do
          Swait()
          vd.C0 = Clerp(vd.C0, CF(0, -1, -0.5) * ANGLES(RAD(-80), RAD(15), 0) * CF(0, 0, 1.85), 2.5 / vc)
          ve.C0 = Clerp(ve.C0, vg * CF(0, 0, -0.02 + 0.05 * COS(vh / 6)) * ANGLES(RAD(0), RAD(0), RAD(-5)), 0.5 / vc)
          vj.C0 = Clerp(vj.C0, vk * CF(0, 0, 0) * ANGLES(RAD(15), RAD(0), RAD(15)), 2.5 / vc)
          vl.C0 = Clerp(vl.C0, CF(1.675, 0.45, 0.3) * ANGLES(RAD(35), RAD(0), RAD(-45)) * vm, 2.5 / vc)
          vo.C0 = Clerp(vo.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(-45), RAD(0), RAD(25)) * vp, 2.5 / vc)
          vn.C0 = Clerp(vn.C0, CF(1, -1 - 0.05 * COS(vh / 6), 0) * ANGLES(RAD(0), RAD(85), RAD(0)) * ANGLES(RAD(-10), RAD(0), RAD(-2.5)), 0.5 / vc)
          vr.C0 = Clerp(vr.C0, CF(-1, -1 - 0.05 * COS(vh / 6), 0) * ANGLES(RAD(0), RAD(-85), RAD(0)) * ANGLES(RAD(-10), RAD(0), RAD(-2.5)), 0.5 / vc)
        end
        for fe = 0, 0.02, 0.1 / vc do
          Swait()
          vd.C0 = Clerp(vd.C0, CF(0, -1, -0.5) * ANGLES(RAD(-80), RAD(15), 0) * CF(0, 0, 1.85), 2.5 / vc)
          ve.C0 = Clerp(ve.C0, vg * CF(0, 0, -0.02 + 0.05 * COS(vh / 6)) * ANGLES(RAD(0), RAD(0), RAD(-5)), 0.5 / vc)
          vj.C0 = Clerp(vj.C0, vk * CF(0, 0, 0) * ANGLES(RAD(15), RAD(0), RAD(15)), 2.5 / vc)
          vl.C0 = Clerp(vl.C0, CF(1.7, 0.45, 0) * ANGLES(RAD(35), RAD(0), RAD(-45)) * vm, 2.5 / vc)
          vo.C0 = Clerp(vo.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(45), RAD(0), RAD(-25)) * vp, 2.5 / vc)
          vn.C0 = Clerp(vn.C0, CF(1, -1 - 0.05 * COS(vh / 6), 0) * ANGLES(RAD(0), RAD(85), RAD(0)) * ANGLES(RAD(-10), RAD(0), RAD(-2.5)), 0.5 / vc)
          vr.C0 = Clerp(vr.C0, CF(-1, -1 - 0.05 * COS(vh / 6), 0) * ANGLES(RAD(0), RAD(-85), RAD(0)) * ANGLES(RAD(-10), RAD(0), RAD(-2.5)), 0.5 / vc)
        end
        NewSound({
          ID = 440145223,
          PARENT = vy,
          VOLUME = 1,
          PITCH = MRANDOM(9, 11) / 6,
          LOOP = false,
          MAXDISTANCE = 80,
          EMITTERSIZE = 15,
          PLAYING = true,
          PLAYONREMOVE = false,
          DOESDEBRIS = true
        })
        for fe = 0, 0.05, 0.1 / vc do
          Swait()
          vd.C0 = Clerp(vd.C0, CF(0, -1, -0.5) * ANGLES(RAD(-80), RAD(15), 0) * CF(0, 0, 1.85), 2.5 / vc)
          ve.C0 = Clerp(ve.C0, vg * CF(0, 0, -0.02 + 0.05 * COS(vh / 6)) * ANGLES(RAD(0), RAD(0), RAD(5)), 0.5 / vc)
          vj.C0 = Clerp(vj.C0, vk * CF(0, 0, 0) * ANGLES(RAD(15), RAD(0), RAD(-15)), 2.5 / vc)
          vl.C0 = Clerp(vl.C0, CF(1.75, 0.45, -0.1) * ANGLES(RAD(45), RAD(0), RAD(-45)) * vm, 2.5 / vc)
          vo.C0 = Clerp(vo.C0, CF(-0.9, 0.5, -0.75) * ANGLES(RAD(60), RAD(0), RAD(37.5)) * vp, 2.5 / vc)
          vn.C0 = Clerp(vn.C0, CF(1, -1 - 0.05 * COS(vh / 6), 0) * ANGLES(RAD(0), RAD(85), RAD(0)) * ANGLES(RAD(-10), RAD(0), RAD(2.5)), 0.5 / vc)
          vr.C0 = Clerp(vr.C0, CF(-1, -1 - 0.05 * COS(vh / 6), 0) * ANGLES(RAD(0), RAD(-85), RAD(0)) * ANGLES(RAD(-10), RAD(0), RAD(2.5)), 0.5 / vc)
        end
        vs:Clone():Remove()
        vy.Face.Pop:Emit(5)
        AddTo(1)
      until vz == false
      vb = false
      va.WalkSpeed = 100
      va.JumpPower = 50
    end
    function Dance()
      va.WalkSpeed = 0
      va.JumpPower = 0
      vb = true
      if vc:FindFirstChild("BGM_MUSIC") then
        vc:FindFirstChild("BGM_MUSIC").Volume = 5
      else
      end
      NewSound({
        ID = vd,
        PARENT = vc,
        VOLUME = 5,
        PITCH = 1,
        LOOP = true,
        MAXDISTANCE = 300,
        EMITTERSIZE = 300,
        PLAYING = true,
        PLAYONREMOVE = false,
        DOESDEBRIS = true
      }).SoundId = "rbxassetid://" .. vd
      NewSound({
        ID = vd,
        PARENT = vc,
        VOLUME = 5,
        PITCH = 1,
        LOOP = true,
        MAXDISTANCE = 300,
        EMITTERSIZE = 300,
        PLAYING = true,
        PLAYONREMOVE = false,
        DOESDEBRIS = true
      }):Play()
      IT("PointLight", vc).Brightness = 25
      IT("PointLight", vc).Color = BrickColor.random().Color
      repeat
        Swait()
        IT("PointLight", vc).Color = BrickColor.random().Color
        vh.C0 = Clerp(vh.C0, vj * CF(0 - 0.32 * SIN((0 + 2) / 10), 0, -0.55 - 0.05 * COS((0 + 2) / 5)) * ANGLES(RAD(0), RAD(0 - 20 * SIN((0 + 2) / 10)), RAD(0)), 1.5 / vk)
        vl.C0 = Clerp(vl.C0, vm * CF(0, 0, 0) * ANGLES(RAD(0), RAD(0 - 20 * SIN((0 + 2) / 10)), RAD(0)), 1.5 / vk)
        vo.C0 = Clerp(vo.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(170), RAD(10), RAD(-35 * COS((0 + 2) / 10))) * CF(0, -1, 0) * vp, 1.5 / vk)
        vn.C0 = Clerp(vn.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(170), RAD(-10), RAD(-35 * COS((0 + 2) / 10))) * CF(0, -1, 0) * vr, 1.5 / vk)
        vs.C0 = Clerp(vs.C0, CF(1.35, -0.475 + 0.36 * SIN((0 + 2) / 10) + 0.05 * COS((0 + 2) / 5), -0.35) * ANGLES(RAD(0), RAD(45), RAD(0)) * ANGLES(RAD(-12 - 19 * SIN((0 + 2) / 10)), RAD(0), RAD(0)), 1.5 / vk)
        vt.C0 = Clerp(vt.C0, CF(-1.35, -0.475 - 0.36 * SIN((0 + 2) / 10) + 0.05 * COS((0 + 2) / 5), -0.35) * ANGLES(RAD(0), RAD(-45), RAD(0)) * ANGLES(RAD(-12 + 19 * SIN((0 + 2) / 10)), RAD(0), RAD(0)), 1.5 / vk)
      until false == true
      IT("PointLight", vc):Remove()
      ve.KeyDown:connect(function(a)
        a = a
        a = a:lower()
        if a == "m" then
          va = true
          vb = false
          if vc == true then
            vd:Remove()
          else
            vd:Play()
            vd.Volume = 1.25
            vd.SoundId = "rbxassetid://" .. ve
          end
        end
      end):Disconnect()
      if true == true then
        NewSound({
          ID = vd,
          PARENT = vc,
          VOLUME = 5,
          PITCH = 1,
          LOOP = true,
          MAXDISTANCE = 300,
          EMITTERSIZE = 300,
          PLAYING = true,
          PLAYONREMOVE = false,
          DOESDEBRIS = true
        }):Remove()
      else
        NewSound({
          ID = vd,
          PARENT = vc,
          VOLUME = 5,
          PITCH = 1,
          LOOP = true,
          MAXDISTANCE = 300,
          EMITTERSIZE = 300,
          PLAYING = true,
          PLAYONREMOVE = false,
          DOESDEBRIS = true
        }):Play()
        NewSound({
          ID = vd,
          PARENT = vc,
          VOLUME = 5,
          PITCH = 1,
          LOOP = true,
          MAXDISTANCE = 300,
          EMITTERSIZE = 300,
          PLAYING = true,
          PLAYONREMOVE = false,
          DOESDEBRIS = true
        }).Volume = 1.25
        NewSound({
          ID = vd,
          PARENT = vc,
          VOLUME = 5,
          PITCH = 1,
          LOOP = true,
          MAXDISTANCE = 300,
          EMITTERSIZE = 300,
          PLAYING = true,
          PLAYONREMOVE = false,
          DOESDEBRIS = true
        }).SoundId = "rbxassetid://" .. vg
      end
      vb = false
      va.WalkSpeed = 100
      va.JumpPower = 50
    end
    game.Players.LocalPlayer:GetMouse().Button1Down:connect(function()
      va = true
      if vb == false then
        Fire_in_the_hole()
      end
    end)
    game.Players.LocalPlayer:GetMouse().Button1Up:connect(function()
      va = false
    end)
    game.Players.LocalPlayer:GetMouse().KeyDown:connect(function(a)
      a = a
      a = a:lower()
      va = true
      if a == "z" then
        Store()
      elseif a == "m" then
        Dance()
      elseif a == "t" then
        NewSound({
          ID = 145757437,
          PARENT = vb,
          VOLUME = 10,
          PITCH = 1,
          LOOP = false,
          MAXDISTANCE = 100,
          EMITTERSIZE = 25,
          PLAYING = true,
          PLAYONREMOVE = false,
          DOESDEBRIS = true
        })
      elseif a == "e" then
        if vb:FindFirstChild("BGM_MUSIC") then
          vb:FindFirstChild("BGM_MUSIC"):Remove()
        else
          NewSound({
            ID = vc,
            PARENT = vb,
            VOLUME = 1.25,
            PITCH = 1,
            LOOP = true,
            MAXDISTANCE = 300,
            EMITTERSIZE = 300,
            PLAYING = true,
            PLAYONREMOVE = false,
            DOESDEBRIS = true
          }).Name = "BGM_MUSIC"
        end
      end
    end)
    game.Players.LocalPlayer:GetMouse().KeyUp:connect(function()
      va = false
    end)
    NewSound({
      ID = 213546066,
      PARENT = game.Players.LocalPlayer.Character.Raw.Humanoid.Torso,
      VOLUME = 1.25,
      PITCH = 1,
      LOOP = true,
      MAXDISTANCE = 300,
      EMITTERSIZE = 300,
      PLAYING = true,
      PLAYONREMOVE = false,
      DOESDEBRIS = true
    }).Name = "BGM_MUSIC"
    game.Players.LocalPlayer.Character.Raw.Humanoid.WalkSpeed = 100
    while true do
      Swait()
      if game.Players.LocalPlayer.Character.Raw:FindFirstChild("Animate") then
        game.Players.LocalPlayer.Character.Raw:FindFirstChild("Animate"):Destroy()
      end
      if game.Players.LocalPlayer.Character.Raw:FindFirstChild("Sound") then
        game.Players.LocalPlayer.Character.Raw:FindFirstChild("Sound"):Destroy()
      end
      for fap, fan in next, game.Players.LocalPlayer.Character.Raw.Humanoid:GetPlayingAnimationTracks() do
        fan:Stop()
      end
      if "Idle" == "Walk" and 1 < game.Players.LocalPlayer.Character.Raw.Humanoid.Torso.Velocity * VT(1, 0, 1).magnitude and game.Players.LocalPlayer.Character.Raw.Humanoid.Sit == false then
        game.Players.LocalPlayer.Character.Raw.Torso["Right Hip"].C1 = Clerp(game.Players.LocalPlayer.Character.Raw.Torso["Right Hip"].C1, CF(0.5, 0.875 - 0.3 * SIN((0 + 2 / 3) / 0.5), -0.5 * COS((0 + 2 / 3) / 0.5) + 0.2 + 0.2 * COS((0 + 2 / 3) / 0.5)) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(0) - game.Players.LocalPlayer.Character.Raw["Right Leg"].RotVelocity.Y / 35, RAD(0), RAD(55 * COS((0 + 2 / 3) / 0.5))), 2 / 3)
        game.Players.LocalPlayer.Character.Raw.Torso["Left Hip"].C1 = Clerp(game.Players.LocalPlayer.Character.Raw.Torso["Left Hip"].C1, CF(-0.5, 0.875 + 0.3 * SIN((0 + 2 / 3) / 0.5), 0.5 * COS((0 + 2 / 3) / 0.5) + 0.2 + -0.2 * COS((0 + 2 / 3) / 0.5)) * ANGLES(RAD(0), RAD(-90), RAD(0)) * ANGLES(RAD(0) + game.Players.LocalPlayer.Character.Raw["Left Leg"].RotVelocity.Y / 35, RAD(0), RAD(55 * COS((0 + 2 / 3) / 0.5))), 2 / 3)
      else
        if "Idle" == "Walk" and not (1 >= game.Players.LocalPlayer.Character.Raw.Humanoid.Torso.Velocity * VT(1, 0, 1).magnitude) then
        end
        if game.Players.LocalPlayer.Character.Raw.Humanoid.Sit == true then
          game.Players.LocalPlayer.Character.Raw.Torso["Right Hip"].C1 = Clerp(game.Players.LocalPlayer.Character.Raw.Torso["Right Hip"].C1, CF(0.5, 1, 0) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.2 / 3)
          game.Players.LocalPlayer.Character.Raw.Torso["Left Hip"].C1 = Clerp(game.Players.LocalPlayer.Character.Raw.Torso["Left Hip"].C1, CF(-0.5, 1, 0) * ANGLES(RAD(0), RAD(-90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.2 / 3)
        end
      end
      if false == false then
        IT("Motor6D").C0 = Clerp(IT("Motor6D").C0, IT("Motor6D").C0, 1.5 / 3)
      end
      if game.Players.LocalPlayer.Character.Raw.Humanoid.Sit == false then
        if Raycast(game.Players.LocalPlayer.Character.Raw.Humanoid.Torso.Position, CF(game.Players.LocalPlayer.Character.Raw.Humanoid.Torso.Position, game.Players.LocalPlayer.Character.Raw.Humanoid.Torso.Position + VT(0, -1, 0)).lookVector, 4 + game.Players.LocalPlayer.Character.Raw.Humanoid.HipHeight, game.Players.LocalPlayer.Character.Raw) then
          if 1 > game.Players.LocalPlayer.Character.Raw.Humanoid.Torso.Velocity * VT(1, 0, 1).magnitude and Raycast(game.Players.LocalPlayer.Character.Raw.Humanoid.Torso.Position, CF(game.Players.LocalPlayer.Character.Raw.Humanoid.Torso.Position, game.Players.LocalPlayer.Character.Raw.Humanoid.Torso.Position + VT(0, -1, 0)).lookVector, 4 + game.Players.LocalPlayer.Character.Raw.Humanoid.HipHeight, game.Players.LocalPlayer.Character.Raw) ~= nil then
            if false == false then
              game.Players.LocalPlayer.Character.Raw.Humanoid.Torso.RootJoint.C0 = Clerp(game.Players.LocalPlayer.Character.Raw.Humanoid.Torso.RootJoint.C0, CF(0, 0, 0) * ANGLES(RAD(-90), RAD(0), RAD(180)) * CF(0, 0, -0.02 + 0.05 * COS((0 + 2 / 3) / 6)) * ANGLES(RAD(0), RAD(0), RAD(0)), 1.5 / 3)
              game.Players.LocalPlayer.Character.Raw.Torso.Neck.C0 = Clerp(game.Players.LocalPlayer.Character.Raw.Torso.Neck.C0, CF(0, 1, 0) * ANGLES(RAD(-90), RAD(0), RAD(180)) * CF(0, 0, 0) * ANGLES(RAD(0 - 2.5 * COS((0 + 2 / 3) / 6)), RAD(0), RAD(0)), 1.5 / 3)
              game.Players.LocalPlayer.Character.Raw.Torso["Right Shoulder"].C0 = Clerp(game.Players.LocalPlayer.Character.Raw.Torso["Right Shoulder"].C0, CF(1.5, 0.5, 0) * ANGLES(RAD(100), RAD(0), RAD(5 + 2.5 * COS((0 + 2 / 3) / 6))) * (CF(-0.5, 0, 0) * ANGLES(RAD(0), RAD(90), RAD(0))), 1.5 / 3)
              game.Players.LocalPlayer.Character.Raw.Torso["Left Shoulder"].C0 = Clerp(game.Players.LocalPlayer.Character.Raw.Torso["Left Shoulder"].C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(0), RAD(0), RAD(-25 - 2.5 * COS((0 + 2 / 3) / 6))) * (CF(0.5, 0, 0) * ANGLES(RAD(0), RAD(-90), RAD(0))), 1.5 / 3)
              game.Players.LocalPlayer.Character.Raw.Torso["Right Hip"].C0 = Clerp(game.Players.LocalPlayer.Character.Raw.Torso["Right Hip"].C0, CF(1, -1 - 0.05 * COS((0 + 2 / 3) / 6), 0) * ANGLES(RAD(0), RAD(85), RAD(0)) * ANGLES(RAD(-10), RAD(0), RAD(0)), 1.5 / 3)
              game.Players.LocalPlayer.Character.Raw.Torso["Left Hip"].C0 = Clerp(game.Players.LocalPlayer.Character.Raw.Torso["Left Hip"].C0, CF(-1, -1 - 0.05 * COS((0 + 2 / 3) / 6), 0) * ANGLES(RAD(0), RAD(-85), RAD(0)) * ANGLES(RAD(-10), RAD(0), RAD(0)), 1.5 / 3)
            end
          elseif 1 < game.Players.LocalPlayer.Character.Raw.Humanoid.Torso.Velocity * VT(1, 0, 1).magnitude and Raycast(game.Players.LocalPlayer.Character.Raw.Humanoid.Torso.Position, CF(game.Players.LocalPlayer.Character.Raw.Humanoid.Torso.Position, game.Players.LocalPlayer.Character.Raw.Humanoid.Torso.Position + VT(0, -1, 0)).lookVector, 4 + game.Players.LocalPlayer.Character.Raw.Humanoid.HipHeight, game.Players.LocalPlayer.Character.Raw) ~= nil and false == false then
            game.Players.LocalPlayer.Character.Raw.Humanoid.Torso.RootJoint.C0 = Clerp(game.Players.LocalPlayer.Character.Raw.Humanoid.Torso.RootJoint.C0, CF(0, 0, 0) * ANGLES(RAD(-90), RAD(0), RAD(180)) * CF(0, 0, -0.05 + 0.05 * COS((0 + 2 / 3) / 0.5)) * ANGLES(RAD(-10), RAD(0), RAD(0)), 2 / 3)
            game.Players.LocalPlayer.Character.Raw.Torso.Neck.C0 = Clerp(game.Players.LocalPlayer.Character.Raw.Torso.Neck.C0, CF(0, 1, 0) * ANGLES(RAD(-90), RAD(0), RAD(180)) * CF(0, 0, 0) * ANGLES(RAD(10), RAD(0), RAD(0)), 2 / 3)
            game.Players.LocalPlayer.Character.Raw.Torso["Right Shoulder"].C0 = Clerp(game.Players.LocalPlayer.Character.Raw.Torso["Right Shoulder"].C0, CF(1.5, 0.5, 0) * ANGLES(RAD(135), RAD(0), RAD(5 + 2.5 * COS((0 + 2 / 3) / 0.5))) * (CF(-0.5, 0, 0) * ANGLES(RAD(0), RAD(90), RAD(0))), 2 / 3)
            game.Players.LocalPlayer.Character.Raw.Torso["Left Shoulder"].C0 = Clerp(game.Players.LocalPlayer.Character.Raw.Torso["Left Shoulder"].C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(-15), RAD(0), RAD(-25 - 2.5 * COS((0 + 2 / 3) / 0.5))) * (CF(0.5, 0, 0) * ANGLES(RAD(0), RAD(-90), RAD(0))), 2 / 3)
            game.Players.LocalPlayer.Character.Raw.Torso["Right Hip"].C0 = Clerp(game.Players.LocalPlayer.Character.Raw.Torso["Right Hip"].C0, CF(1, -1 - 0.05 * COS((0 + 2 / 3) / 0.5), 0) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(-5), RAD(0), RAD(-15)), 2 / 3)
            game.Players.LocalPlayer.Character.Raw.Torso["Left Hip"].C0 = Clerp(game.Players.LocalPlayer.Character.Raw.Torso["Left Hip"].C0, CF(-1, -1 - 0.05 * COS((0 + 2 / 3) / 0.5), 0) * ANGLES(RAD(0), RAD(-90), RAD(0)) * ANGLES(RAD(-5), RAD(0), RAD(15)), 2 / 3)
          end
        elseif 0 < game.Players.LocalPlayer.Character.Raw.Humanoid.Torso.Velocity.y then
          if false == false then
            game.Players.LocalPlayer.Character.Raw.Humanoid.Torso.RootJoint.C0 = Clerp(game.Players.LocalPlayer.Character.Raw.Humanoid.Torso.RootJoint.C0, CF(0, 0, 0) * ANGLES(RAD(-90), RAD(0), RAD(180)) * CF(0, 0, 0) * ANGLES(RAD(0), RAD(0), RAD(0)), 1 / 3)
            game.Players.LocalPlayer.Character.Raw.Torso.Neck.C0 = Clerp(game.Players.LocalPlayer.Character.Raw.Torso.Neck.C0, CF(0, 1, 0) * ANGLES(RAD(-90), RAD(0), RAD(180)) * CF(0, 0, 0) * ANGLES(RAD(-20), RAD(0), RAD(0)), 1 / 3)
            game.Players.LocalPlayer.Character.Raw.Torso["Right Shoulder"].C0 = Clerp(game.Players.LocalPlayer.Character.Raw.Torso["Right Shoulder"].C0, CF(1.5, 0.5, 0) * ANGLES(RAD(25), RAD(0), RAD(5 + 2.5 * COS((0 + 2 / 3) / 6))) * (CF(-0.5, 0, 0) * ANGLES(RAD(0), RAD(90), RAD(0))), 1.5 / 3)
            game.Players.LocalPlayer.Character.Raw.Torso["Left Shoulder"].C0 = Clerp(game.Players.LocalPlayer.Character.Raw.Torso["Left Shoulder"].C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(-2), RAD(0), RAD(10)) * (CF(0.5, 0, 0) * ANGLES(RAD(0), RAD(-90), RAD(0))), 1 / 3)
            game.Players.LocalPlayer.Character.Raw.Torso["Right Hip"].C0 = Clerp(game.Players.LocalPlayer.Character.Raw.Torso["Right Hip"].C0, CF(1, -0.4, -0.6) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(-20)), 1 / 3)
            game.Players.LocalPlayer.Character.Raw.Torso["Left Hip"].C0 = Clerp(game.Players.LocalPlayer.Character.Raw.Torso["Left Hip"].C0, CF(-1, -1, -0.3) * ANGLES(RAD(0), RAD(-90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(20)), 1 / 3)
          end
        elseif false == false then
          game.Players.LocalPlayer.Character.Raw.Humanoid.Torso.RootJoint.C0 = Clerp(game.Players.LocalPlayer.Character.Raw.Humanoid.Torso.RootJoint.C0, CF(0, 0, 0) * ANGLES(RAD(-90), RAD(0), RAD(180)) * CF(0, 0, 0) * ANGLES(RAD(0), RAD(0), RAD(0)), 1 / 3)
          game.Players.LocalPlayer.Character.Raw.Torso.Neck.C0 = Clerp(game.Players.LocalPlayer.Character.Raw.Torso.Neck.C0, CF(0, 1, 0) * ANGLES(RAD(-90), RAD(0), RAD(180)) * CF(0, 0, 0) * ANGLES(RAD(20), RAD(0), RAD(0)), 1 / 3)
          game.Players.LocalPlayer.Character.Raw.Torso["Right Shoulder"].C0 = Clerp(game.Players.LocalPlayer.Character.Raw.Torso["Right Shoulder"].C0, CF(1.5, 0.5, 0) * ANGLES(RAD(150), RAD(0), RAD(5 + 2.5 * COS((0 + 2 / 3) / 6))) * (CF(-0.5, 0, 0) * ANGLES(RAD(0), RAD(90), RAD(0))), 1.5 / 3)
          game.Players.LocalPlayer.Character.Raw.Torso["Left Shoulder"].C0 = Clerp(game.Players.LocalPlayer.Character.Raw.Torso["Left Shoulder"].C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(-2), RAD(0), RAD(-60)) * (CF(0.5, 0, 0) * ANGLES(RAD(0), RAD(-90), RAD(0))), 1 / 3)
          game.Players.LocalPlayer.Character.Raw.Torso["Right Hip"].C0 = Clerp(game.Players.LocalPlayer.Character.Raw.Torso["Right Hip"].C0, CF(1, -0.5, -0.5) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(20)), 1 / 3)
          game.Players.LocalPlayer.Character.Raw.Torso["Left Hip"].C0 = Clerp(game.Players.LocalPlayer.Character.Raw.Torso["Left Hip"].C0, CF(-1, -1, 0) * ANGLES(RAD(0), RAD(-90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(10)), 1 / 3)
        end
      elseif false == false then
        game.Players.LocalPlayer.Character.Raw.Humanoid.Torso.RootJoint.C0 = Clerp(game.Players.LocalPlayer.Character.Raw.Humanoid.Torso.RootJoint.C0, CF(0, 0, 0) * ANGLES(RAD(-90), RAD(0), RAD(180)) * CF(0, 0, -0.5) * ANGLES(RAD(0), RAD(0), RAD(0)), 1.25 / 3)
        game.Players.LocalPlayer.Character.Raw.Torso.Neck.C0 = Clerp(game.Players.LocalPlayer.Character.Raw.Torso.Neck.C0, CF(0, 1, 0) * ANGLES(RAD(-90), RAD(0), RAD(180)) * CF(0, 0, 0) * ANGLES(RAD(0), RAD(0), RAD(0)), 1.25 / 3)
        game.Players.LocalPlayer.Character.Raw.Torso["Right Shoulder"].C0 = Clerp(game.Players.LocalPlayer.Character.Raw.Torso["Right Shoulder"].C0, CF(1.5, 0.5, 0) * ANGLES(RAD(90), RAD(0), RAD(45)) * (CF(-0.5, 0, 0) * ANGLES(RAD(0), RAD(90), RAD(0))), 1.5 / 3)
        game.Players.LocalPlayer.Character.Raw.Torso["Left Shoulder"].C0 = Clerp(game.Players.LocalPlayer.Character.Raw.Torso["Left Shoulder"].C0, CF(-1.5, 0.65, 0) * ANGLES(RAD(50), RAD(-10), RAD(45)) * CF(0, -0.25, 0) * (CF(0.5, 0, 0) * ANGLES(RAD(0), RAD(-90), RAD(0))), 1.25 / 3)
        game.Players.LocalPlayer.Character.Raw.Torso["Right Hip"].C0 = Clerp(game.Players.LocalPlayer.Character.Raw.Torso["Right Hip"].C0, CF(1, -0.25, -1) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(10)), 1.25 / 3)
        game.Players.LocalPlayer.Character.Raw.Torso["Left Hip"].C0 = Clerp(game.Players.LocalPlayer.Character.Raw.Torso["Left Hip"].C0, CF(-1, -0.25, -1) * ANGLES(RAD(0), RAD(-90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(-10)), 1.25 / 3)
      end
    end
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Hat Scripts"):NewSection("Hat Scripts"):NewButton("Arsenal Delinquent", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    wait(0.2)
    PlayerGui = game.Players.LocalPlayer.PlayerGui
    Cam = workspace.CurrentCamera
    Backpack = game.Players.LocalPlayer.Backpack
    Character = game.Players.LocalPlayer.Character.Raw
    Humanoid = Character.Humanoid
    RootPart = Character.HumanoidRootPart
    Torso = Character.Torso
    Head = Character.Head
    RightArm = Character["Right Arm"]
    LeftArm = Character["Left Arm"]
    RightLeg = Character["Right Leg"]
    LeftLeg = Character["Left Leg"]
    RootJoint = RootPart.RootJoint
    Neck = Torso.Neck
    RightShoulder = Torso["Right Shoulder"]
    LeftShoulder = Torso["Left Shoulder"]
    RightHip = Torso["Right Hip"]
    LeftHip = Torso["Left Hip"]
    IT = Instance.new
    CF = CFrame.new
    VT = Vector3.new
    RAD = math.rad
    C3 = Color3.new
    UD2 = UDim2.new
    BRICKC = BrickColor.new
    ANGLES = CFrame.Angles
    EULER = CFrame.fromEulerAnglesXYZ
    COS = math.cos
    ACOS = math.acos
    SIN = math.sin
    ASIN = math.asin
    ABS = math.abs
    MRANDOM = math.random
    FLOOR = math.floor
    Animation_Speed = 3
    Frame_Speed = 0.0166666666666667
    Frame_Speed = 0.0125
    IT("Animation").Name = "Roblox Idle Animation"
    IT("Animation").AnimationId = "http://www.roblox.com/asset/?id=180435571"
    IT("ScreenGui", PlayerGui).Name = "BanishV3Gui"
    IT("Model").Name = "shackisgaylol"
    IT("Model").Name = "shackismegagaylol"
    IT("Folder", (IT("Model"))).Name = "Effects"
    IT("Folder", (IT("Model"))).Name = "Effects"
    game:GetObjects("rbxassetid://6726523130")[1].Parent = PlayerGui
    frame = Frame_Speed
    tf = 0
    allowframeloss = false
    tossremainder = false
    lastframe = tick()
    game:GetService("RunService").Heartbeat:connect(function(a, b)
      a = a
      tf = tf + a
      if tf >= frame then
        if allowframeloss then
          lastframe = tick()
        else
          for fg = 1, math.floor(tf / frame) do
          end
          lastframe = tick()
        end
        if tossremainder then
          tf = 0
        else
          tf = tf - frame * math.floor(tf / frame)
        end
      end
    end)
    for fac, fad in pairs(Character:GetDescendants()) do
      if fad:IsA("BasePart") and fad.Name ~= "Handle" then
        if fad ~= RootPart and fad ~= Torso and fad ~= Head and fad ~= RightArm and fad ~= LeftArm and fad ~= RightLeg and fad ~= LeftLeg then
          fad.CustomPhysicalProperties = PhysicalProperties.new(0, 0, 0, 0, 0)
        end
        table.insert({}, {
          fad,
          fad.Parent,
          fad.Material,
          fad.Color,
          fad.Transparency
        })
        break
      end
      if fad:IsA("JointInstance") then
        table.insert({}, {
          fad,
          fad.Parent,
          nil,
          nil,
          nil
        })
      end
    end
    for fac = 1, #{} do
      if {}[fac] ~= nil then
        if {}[fac][1].ClassName == "Part" and {}[fac][1] ~= RootPart then
          {}[fac][1].Transparency, {}[fac][1].Color, {}[fac][1].Material = {}[fac][5], {}[fac][4], {}[fac][3]
        end
        {}[fac][1].AncestryChanged:Connect(function()
          va.Parent = vb
        end)
      end
    end
    function refit()
      Character.Parent = workspace
      for fd = 1, #va do
        if va[fd] ~= nil then
          if va[fd][1]:IsA("BasePart") and va[fd][1] ~= RootPart then
            va[fd][1].Color, va[fd][1].Material = va[fd][4], va[fd][3]
            va[fd][1].Transparency = va[fd][5] + EXTRATRANS
          end
          if va[fd][1].Parent ~= va[fd][2] then
            Humanoid:remove()
            va[fd][1].Parent = va[fd][2]
            Humanoid = IT("Humanoid", Character)
          end
        end
      end
    end
    function Raycast(a, b, c, d)
      a = a
      return workspace:FindPartOnRay(Ray.new(a, b.unit * c), d)
    end
    function PositiveAngle(a)
      a = a
      if a >= 0 then
        a = 0
      end
      return a
    end
    function NegativeAngle(a)
      a = a
      if a <= 0 then
        a = 0
      end
      return a
    end
    function Swait(a)
      a = a
      game:GetService("RunService").RenderStepped:Wait()
    end
    function CreateMesh(a, b, c, d, e, g, h)
      a = a
      if a == "SpecialMesh" then
        IT(a).MeshType = c
        if d ~= "nil" and d ~= "" then
          IT(a).MeshId = "http://www.roblox.com/asset/?id=" .. d
        end
        if e ~= "nil" and e ~= "" then
          IT(a).TextureId = "http://www.roblox.com/asset/?id=" .. e
        end
      end
      IT(a).Offset = h or VT(0, 0, 0)
      IT(a).Scale = g
      IT(a).Parent = b
      return (IT(a))
    end
    function CreatePart(a, b, c, d, e, g, h, j, k)
      a = a
      IT("Part").formFactor = a
      IT("Part").Reflectance = d
      IT("Part").Transparency = e
      IT("Part").CanCollide = false
      IT("Part").Locked = true
      IT("Part").Anchored = true
      if k == false then
        IT("Part").Anchored = false
      end
      IT("Part").BrickColor = BRICKC(tostring(g))
      IT("Part").Name = h
      IT("Part").Size = j
      IT("Part").Position = Torso.Position
      IT("Part").Material = c
      IT("Part"):BreakJoints()
      IT("Part").Parent = b
      return (IT("Part"))
    end
    function QuaternionFromCFrame(a)
      a = a
      if 0 < a:components() + a:components() + a:components() then
        return (a:components() - a:components()) * (0.5 / math.sqrt(1 + (a:components() + a:components() + a:components()))), (a:components() - a:components()) * (0.5 / math.sqrt(1 + (a:components() + a:components() + a:components())))
      else
        if 1 == 0 then
        end
        if 2 == 0 then
          return 0.5 * math.sqrt(a:components() - a:components() - a:components() + 1), (a:components() + a:components()) * (0.5 / math.sqrt(a:components() - a:components() - a:components() + 1))
        elseif 2 == 1 then
          return (a:components() + a:components()) * (0.5 / math.sqrt(a:components() - a:components() - a:components() + 1)), 0.5 * math.sqrt(a:components() - a:components() - a:components() + 1)
        elseif 2 == 2 then
          return (a:components() + a:components()) * (0.5 / math.sqrt(a:components() - a:components() - a:components() + 1)), (a:components() + a:components()) * (0.5 / math.sqrt(a:components() - a:components() - a:components() + 1))
        end
      end
    end
    function QuaternionToCFrame(a, b, c, d, e, g, h)
      a = a
      return CFrame.new(a, b, c, 1 - (e * (e + e) + g * (g + g)), d * (e + e) - h * (g + g), d * (g + g) + h * (e + e), d * (e + e) + h * (g + g), 1 - (d * (d + d) + g * (g + g)), e * (g + g) - h * (d + d), d * (g + g) - h * (e + e), e * (g + g) + h * (d + d), 1 - (d * (d + d) + e * (e + e)))
    end
    function QuaternionSlerp(a, b, c)
      a = a
      if 0.0001 <= a[1] * b[1] + a[2] * b[2] + a[3] * b[3] + a[4] * b[4] then
        if 0.0001 < 1 - (a[1] * b[1] + a[2] * b[2] + a[3] * b[3] + a[4] * b[4]) then
        else
        end
      elseif 0.0001 < 1 + (a[1] * b[1] + a[2] * b[2] + a[3] * b[3] + a[4] * b[4]) then
      else
      end
      return a[1] * (c - 1) + b[1] * c, a[2] * (c - 1) + b[2] * c
    end
    function Clerp(a, b, c)
      a = a
      return QuaternionToCFrame((1 - c) * a.x + c * b.x, (1 - c) * a.y + c * b.y, (1 - c) * a.z + c * b.z, QuaternionSlerp({
        QuaternionFromCFrame(a)
      }, {
        QuaternionFromCFrame(b)
      }, c))
    end
    function CreateFrame(a, b, c, d, e, g, h, j)
      a = a
      IT("Frame").BackgroundTransparency = b
      IT("Frame").BorderSizePixel = c
      IT("Frame").Position = d
      IT("Frame").Size = e
      IT("Frame").BackgroundColor3 = g
      IT("Frame").BorderColor3 = h
      IT("Frame").Name = j
      IT("Frame").Parent = a
      return (IT("Frame"))
    end
    function CreateLabel(a, b, c, d, e, g, h, j, k)
      a = a
      IT("TextLabel").BackgroundTransparency = 1
      IT("TextLabel").Size = UD2(1, 0, 1, 0)
      IT("TextLabel").Position = UD2(0, 0, 0, 0)
      IT("TextLabel").TextColor3 = c
      IT("TextLabel").TextStrokeTransparency = j
      IT("TextLabel").TextTransparency = g
      IT("TextLabel").FontSize = d
      IT("TextLabel").Font = e
      IT("TextLabel").BorderSizePixel = h
      IT("TextLabel").TextScaled = false
      IT("TextLabel").Text = b
      IT("TextLabel").Name = k
      IT("TextLabel").Parent = a
      return (IT("TextLabel"))
    end
    function NoOutlines(a)
      a = a
      a.TopSurface, a.BottomSurface, a.LeftSurface, a.RightSurface, a.FrontSurface, a.BackSurface = 10, 10, 10, 10, 10, 10
    end
    function CreateWeld(a, b, c, d, e, g, h, j, k, l, m, o, p, n, r)
      a = a
      Instance.new("Weld").Parent = a
      Instance.new("Weld").Part0 = b
      Instance.new("Weld").Part1 = c
      Instance.new("Weld").C1 = CFrame.new(d, e, g) * CFrame.Angles(h, j, k)
      Instance.new("Weld").C0 = CFrame.new(l, m, o) * CFrame.Angles(p, n, r)
      return (Instance.new("Weld"))
    end
    function NewSound(a)
      a = a
      if "rbxassetid://" .. (a.ID or 0) ~= "rbxassetid://0" then
        IT("Sound", a.PARENT or RootPart).PlayOnRemove, IT("Sound", a.PARENT or RootPart).EmitterSize, IT("Sound", a.PARENT or RootPart).MaxDistance, IT("Sound", a.PARENT or RootPart).Looped, IT("Sound", a.PARENT or RootPart).Pitch, IT("Sound", a.PARENT or RootPart).Volume, IT("Sound", a.PARENT or RootPart).SoundId = a.PLAYONREMOVE or false, a.EMITTERSIZE or 10, a.MAXDISTANCE or 100, a.LOOP or false, a.PITCH or 1, a.VOLUME or 0.5, "rbxassetid://" .. (a.ID or 0)
        if (a.DOESDEBRIS or true) == true and (a.PLAYING or true) == true and (a.LOOP or false) == false then
          Debris:AddItem(IT("Sound", a.PARENT or RootPart), IT("Sound", a.PARENT or RootPart).TimeLength + 5)
        end
        if (a.PLAYING or true) == true then
          IT("Sound", a.PARENT or RootPart):Play()
        end
        return (IT("Sound", a.PARENT or RootPart))
      end
    end
    function CreateWeldOrSnapOrMotor(a, b, c, d, e, g)
      a = a
      IT(a).Part0 = c
      IT(a).Part1 = d
      IT(a).C0 = e
      IT(a).C1 = g
      IT(a).Parent = b
      return (IT(a))
    end
    function CreateSound(a, b, c, d, e)
      a = a
      coroutine.resume(coroutine.create(function()
        va = vb:Clone()
        va.Parent = vc
        va.Volume = vd
        va.Pitch = ve
        va.SoundId = "http://www.roblox.com/asset/?id=" .. vg
        va:play()
        if vh == true then
          va.Looped = true
        else
          repeat
            wait(1)
            if va.Playing ~= false then
            end
          until va.Parent ~= vc
          va:remove()
        end
      end))
      return nil
    end
    function CFrameFromTopBack(a, b, c)
      a = a
      return CF(a.x, a.y, a.z, b:Cross(c).x, b.x, c.x, b:Cross(c).y, b.y, c.y, b:Cross(c).z, b.z, c.z)
    end
    function WACKYEFFECT(a)
      a = a
      coroutine.resume(coroutine.create(function()
        if vd ~= nil and ve ~= nil and vg ~= nil then
        end
        CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true).Color = vh
        if vj == "Sphere" then
        elseif vj == "Block" then
          IT("BlockMesh", (CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true))).Scale = VT(vk.X, vk.X, vk.X)
        elseif vj == "Wave" then
        elseif vj == "Ring" then
        elseif vj == "Slash" then
        elseif vj == "Round Slash" then
        elseif vj == "Swirl" then
        elseif vj == "Skull" then
        elseif vj == "Crystal" then
        end
        if CreateMesh("SpecialMesh", CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true), "FileMesh", "9756362", "", vk, VT(0, 0, 0)) ~= nil then
          if vl ~= nil then
          end
          if vj == "Block" then
            CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true).CFrame = vm * ANGLES(RAD(MRANDOM(0, 360)), RAD(MRANDOM(0, 360)), RAD(MRANDOM(0, 360)))
          else
            CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true).CFrame = vm
          end
          for fm = 1, vo + 1 do
            Swait()
            CreateMesh("SpecialMesh", CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true), "FileMesh", "9756362", "", vk, VT(0, 0, 0)).Scale = CreateMesh("SpecialMesh", CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true), "FileMesh", "9756362", "", vk, VT(0, 0, 0)).Scale - (vk - vp) / vo
            if vj == "Wave" then
              CreateMesh("SpecialMesh", CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true), "FileMesh", "9756362", "", vk, VT(0, 0, 0)).Offset = VT(0, 0, -CreateMesh("SpecialMesh", CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true), "FileMesh", "9756362", "", vk, VT(0, 0, 0)).Scale.X / 8)
            end
            CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true).Transparency = CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true).Transparency - (vc - vn) / vo
            if vj == "Block" then
              CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true).CFrame = vm * ANGLES(RAD(MRANDOM(0, 360)), RAD(MRANDOM(0, 360)), RAD(MRANDOM(0, 360)))
            else
              CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true).CFrame = CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true).CFrame * ANGLES(RAD(vr), RAD(vs), RAD(vt))
            end
            if vl ~= nil then
              CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true).Orientation, CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true).CFrame = CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true).Orientation, CF(CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true).Position, vl) * CF(0, 0, -(vm.p - vl.Magnitude / vo))
            end
          end
          if true == false then
            CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true):remove()
          else
            CreateSound(vd, CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true), vg, ve, false).Stopped:Connect(function()
              va:remove()
            end)
          end
        elseif true == false then
          CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true):remove()
        else
          repeat
            Swait()
          until CreateSound(vd, CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true), vg, ve, false).Playing == false
          CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true):remove()
        end
      end))
    end
    function MakeForm(a, b)
      a = a
      if b == "Cyl" then
      elseif b == "Ball" then
        IT("SpecialMesh", a).MeshType = "Sphere"
      elseif b == "Wedge" then
        IT("SpecialMesh", a).MeshType = "Wedge"
      end
    end
    function SpawnTrail(a, b, c)
      a = a
      MakeForm(CreatePart(3, va, "Neon", 0, 0.5, "New Yeller", "Trail", VT(0, 0, 0)), "Cyl")
      if c == true then
        CreatePart(3, va, "Neon", 0, 0.5, "New Yeller", "Trail", VT(0, 0, 0)).Size = VT(0.5, a - b.Magnitude, 0.5)
      else
        CreatePart(3, va, "Neon", 0, 0.5, "New Yeller", "Trail", VT(0, 0, 0)).Size = VT(0.25, a - b.Magnitude, 0.25)
      end
      CreatePart(3, va, "Neon", 0, 0.5, "New Yeller", "Trail", VT(0, 0, 0)).CFrame = CF(a, b) * CF(0, 0, -a - b.Magnitude / 2) * ANGLES(RAD(90), RAD(0), RAD(0))
      coroutine.resume(coroutine.create(function()
        for fd = 1, 5 do
          Swait()
          va.Transparency = va.Transparency + 0.1
        end
        va:remove()
      end))
    end
    function MagicSphere(a, b, c, d, e)
      a = a
      IT("SpecialMesh", (CreatePart(3, va, "Neon", 0, 0, BRICKC(d), "Effect", VT(1, 1, 1), true))).MeshType = "Sphere"
      IT("SpecialMesh", (CreatePart(3, va, "Neon", 0, 0, BRICKC(d), "Effect", VT(1, 1, 1), true))).Scale = a
      IT("SpecialMesh", (CreatePart(3, va, "Neon", 0, 0, BRICKC(d), "Effect", VT(1, 1, 1), true))).Offset = VT(0, 0, 0)
      CreatePart(3, va, "Neon", 0, 0, BRICKC(d), "Effect", VT(1, 1, 1), true).CFrame = c
      coroutine.resume(coroutine.create(function(a)
        a = a
        for fe = 1, va do
          Swait()
          vb.Scale = vb.Scale + vc
          vd.Transparency = vd.Transparency + 1 / va
          if 0.99 < vd.Transparency then
            vd:remove()
          end
        end
      end))
    end
    function MagicSphereCo(a, b, c, d, e)
      a = a
      IT("SpecialMesh", (CreatePart(3, va, "Neon", 0, 0, BRICKC(d), "Effect", VT(1, 1, 1), true))).MeshType = "Sphere"
      IT("SpecialMesh", (CreatePart(3, va, "Neon", 0, 0, BRICKC(d), "Effect", VT(1, 1, 1), true))).Scale = a
      IT("SpecialMesh", (CreatePart(3, va, "Neon", 0, 0, BRICKC(d), "Effect", VT(1, 1, 1), true))).Offset = VT(0, 0, 0)
      CreatePart(3, va, "Neon", 0, 0, BRICKC(d), "Effect", VT(1, 1, 1), true).CFrame = c
      coroutine.resume(coroutine.create(function(a)
        a = a
        for fe = 1, va do
          Swait()
          vb.Scale = vb.Scale + vc
          vd.Transparency = vd.Transparency + 1 / va
          if vd.Transparency > 0.99 then
            vd:remove()
          end
        end
      end))
    end
    function MagicBlock(a, b, c, d, e)
      a = a
      CreatePart(3, va, "ForceField", 0, 0.5, BRICKC(d), "Effect", VT(a, a, a), true).CFrame = c * ANGLES(RAD(math.random(-360, 360)), RAD(math.random(-360, 360)), RAD(math.random(-360, 360)))
      coroutine.resume(coroutine.create(function(a)
        a = a
        for fe = 1, va do
          Swait()
          vb.Scale = vb.Scale + vc
          vd.CFrame = ve * ANGLES(RAD(math.random(-360, 360)), RAD(math.random(-360, 360)), RAD(math.random(-360, 360)))
          vd.Transparency = vd.Transparency + 0.5 / va
          if 0.99 < vd.Transparency then
            vd:remove()
          end
        end
      end))
    end
    function CreateRing(a, b, c, d, e, g, h)
      a = a
      CreatePart(3, va, "Neon", 0, 0.5, BRICKC(g), "Effect", VT(0, 0, 0)).CFrame = e
      coroutine.resume(coroutine.create(function(a)
        a = a
        for fe = 1, va do
          Swait()
          vb.Scale = vb.Scale + vc
          if vd == true then
            ve.CFrame = ve.CFrame * CFrame.fromEulerAnglesXYZ(0, vg, 0)
          end
          ve.Transparency = ve.Transparency + 0.5 / va
          if 0.99 < ve.Transparency then
            ve:remove()
          end
        end
      end))
    end
    function MagicRing()
      vb:Clone().Parent = CreatePart(3, va, "Granite", 0, 1, "Maroon", "MagicRing", VT(0, 0, 0), true)
      vb:Clone().Face = "Bottom"
      vb:Clone().Name = "BottomTexture"
      vb:Clone().Parent = CreatePart(3, va, "Granite", 0, 1, "Maroon", "MagicRing", VT(0, 0, 0), true)
      vb:Clone().Face = "Top"
      vb:Clone().Name = "TopTexture"
      vb:Clone().Texture = "http://www.roblox.com/asset/?id=1208118228"
      vb:Clone().Texture = "http://www.roblox.com/asset/?id=1208118228"
      vb:Clone().Color3 = C3(0, 0, 0)
      vb:Clone().Color3 = C3(1, 1, 1)
      return CreatePart(3, va, "Granite", 0, 1, "Maroon", "MagicRing", VT(0, 0, 0), true), (IT("BlockMesh", (CreatePart(3, va, "Granite", 0, 1, "Maroon", "MagicRing", VT(0, 0, 0), true))))
    end
    Debris = game:GetService("Debris")
    function CastProperRay(a, b, c, d)
      a = a
      return Raycast(a, CF(a, b).lookVector, c, d)
    end
    function turnto(a)
      a = a
      RootPart.CFrame = CFrame.new(RootPart.CFrame.p, VT(a.X, RootPart.Position.Y, a.Z)) * CFrame.new(0, 0, 0)
    end
    function SHAKECAM(a, b, c, d)
      a = a
      for fk, fl in pairs((workspace:GetDescendants())) do
        if fl.ClassName == "Model" and fl:FindFirstChildOfClass("Humanoid") then
          if (fl:FindFirstChild("Torso") or fl:FindFirstChild("UpperTorso")) and b >= fl:FindFirstChild("Torso") or fl:FindFirstChild("UpperTorso").Position - a.Magnitude then
            va.CamShake:Clone().Shake.Value = c
            va.CamShake:Clone().Timer.Value = d
            va.CamShake:Clone().Parent = fl
            va.CamShake:Clone().Disabled = false
          end
        end
      end
    end
    function WWeld(a, b, c)
      a = a
      Instance.new("Weld", a).Part0 = a
      Instance.new("Weld", a).Part1 = b
      if c ~= nil then
        Instance.new("Weld", a).C0 = c
      end
    end
    for fag = 1, 10 do
      wait()
    end
    TORSO = game:GetObjects("rbxassetid://6726523130")[1].Torso
    TORSO.Parent = Character
    WWeld(TORSO.Torso, Torso, CF(0, 0, 0) * ANGLES(RAD(176), RAD(359), RAD(180)), CF(0, 0, 0))
    game:GetObjects("rbxassetid://6726523130")[1].Tec9:Clone().Parent = RightArm
    for fah, faj in pairs(game:GetObjects("rbxassetid://6726523130")[1].Tec9:Clone():GetChildren()) do
      faj.Transparency = 1
    end
    CreateWeld(game:GetObjects("rbxassetid://6726523130")[1].Tec9:Clone().Handle, RightArm, game:GetObjects("rbxassetid://6726523130")[1].Tec9:Clone().Handle, -0.3, -0.2, -0.9, math.rad(90), math.rad(0), math.rad(180), 0, 0, 0, math.rad(0), math.rad(0), math.rad(0))
    game.Players.LocalPlayer.Character["VN9K [Front]"].Handle:BreakJoints();
    (function(a, b)
      a = a
      attachment = Instance.new("Attachment", a)
      attachment.Position = Vector3.new(1, -0.5, -0.3)
      attachment.Orientation = Vector3.new(90, 90, 0)
      attachment02 = Instance.new("Attachment", b)
      lol = Instance.new("AlignPosition", a)
      lol.Attachment0 = attachment
      lol.Attachment1 = attachment02
      lol.MaxForce = math.huge
      lol.RigidityEnabled = true
      pog = Instance.new("AlignOrientation", a)
      pog.Attachment0 = attachment
      pog.Attachment1 = attachment02
      pog.Responsiveness = 20
      pog.RigidityEnabled = true
    end)(game.Players.LocalPlayer.Character["VN9K [Front]"].Handle, game.Players.LocalPlayer.Character["Right Arm"])
    IT("ParticleEmitter", nil).Enabled = false
    IT("ParticleEmitter", nil).Transparency = NumberSequence.new({
      NumberSequenceKeypoint.new(0, 0.3),
      NumberSequenceKeypoint.new(0.3, 0),
      [25] = NumberSequenceKeypoint.new(1, 1)
    })
    IT("ParticleEmitter", nil).LightEmission = 0.5
    IT("ParticleEmitter", nil).Rate = 150
    IT("ParticleEmitter", nil).ZOffset = 0.2
    IT("ParticleEmitter", nil).Rotation = NumberRange.new(-180, 180)
    IT("ParticleEmitter", nil).RotSpeed = NumberRange.new(-180, 180)
    IT("ParticleEmitter", nil).Texture = "http://www.roblox.com/asset/?id=304437537"
    IT("ParticleEmitter", nil).Color = ColorSequence.new(C3(1, 1, 1), C3(0, 0, 0))
    function ParticleEmitter(a)
      a = a
      va:Clone().Parent = a.Parent or Torso
      va:Clone().Size = NumberSequence.new(a.Size1 or 1, a.Size2 or 5)
      va:Clone().Lifetime = NumberRange.new(a.Lifetime1 or 1, a.Lifetime2 or 1.5)
      va:Clone().Acceleration, va:Clone().Drag, va:Clone().VelocitySpread, va:Clone().Speed = a.Acel or VT(0, 0, 0), a.Drag or 0, a.Offset or 360, NumberRange.new(a.Speed or 5)
      if (a.Enabled or false) == false then
        va:Clone():Emit(a.Emit or 100)
        Debris:AddItem(va:Clone(), a.Lifetime2 or 1.5)
      else
        va:Clone().Enabled = true
      end
      return (va:Clone())
    end
    for fal, fam in pairs(IT("Model"):GetChildren()) do
      if fam.ClassName == "Part" then
        fam.CustomPhysicalProperties = PhysicalProperties.new(0, 0, 0, 0, 0)
      end
    end
    IT("Model").Parent = Character
    IT("Model").Parent = Character
    for fan, far in pairs(Character:GetDescendants()) do
      if far:IsA("BasePart") and far.Name ~= "Handle" then
        if far ~= RootPart and far ~= Torso and far ~= Head and far ~= RightArm and far ~= LeftArm and far ~= RightLeg and far ~= LeftLeg then
          far.CustomPhysicalProperties = PhysicalProperties.new(0, 0, 0, 0, 0)
        end
        table.insert({}, {
          far,
          far.Parent,
          far.Material,
          far.Color,
          far.Transparency,
          far.Size,
          far.Name
        })
        break
      end
      if far:IsA("Pants") then
        table.insert({}, {
          far,
          far.Parent,
          nil,
          nil,
          nil,
          nil,
          nil
        })
      end
    end
    function refit()
      Character.Parent = workspace
      va.Parent = Character
      for fd = 1, #vb do
        if vb[fd] ~= nil then
          if vb[fd][1].ClassName == "Part" and vb[fd][1] ~= RootPart then
            vb[fd][1].Name, vb[fd][1].Transparency, vb[fd][1].Material = vb[fd][7], vb[fd][5], vb[fd][3]
          end
          if vb[fd][1].Parent ~= vb[fd][2] then
            if vb[fd][1].Name == "Torso" then
              Humanoid:remove()
            end
            vb[fd][1].Parent = vb[fd][2]
            if vb[fd][1].Name == "Torso" then
              Humanoid = IT("Humanoid", Character)
            end
          end
        end
      end
    end
    Humanoid.Died:connect(function()
      refit()
    end)
    function chatfunc(a)
      a = a
      coroutine.wrap(function()
        if Character:FindFirstChild("TalkingBillBoard") ~= nil then
          Character:FindFirstChild("TalkingBillBoard"):destroy()
        end
        Instance.new("BillboardGui", Character).Size = UDim2.new(0, 100, 0, 40)
        Instance.new("BillboardGui", Character).StudsOffset = Vector3.new(0, 3, 0)
        Instance.new("BillboardGui", Character).Adornee = Character.Head
        Instance.new("BillboardGui", Character).Name = "TalkingBillBoard"
        Instance.new("TextLabel", (Instance.new("BillboardGui", Character))).BackgroundTransparency = 1
        Instance.new("TextLabel", (Instance.new("BillboardGui", Character))).BorderSizePixel = 0
        Instance.new("TextLabel", (Instance.new("BillboardGui", Character))).Text = ""
        Instance.new("TextLabel", (Instance.new("BillboardGui", Character))).Font = "SourceSansItalic"
        Instance.new("TextLabel", (Instance.new("BillboardGui", Character))).TextSize = 40
        Instance.new("TextLabel", (Instance.new("BillboardGui", Character))).TextStrokeTransparency = 0
        Instance.new("TextLabel", (Instance.new("BillboardGui", Character))).Size = UDim2.new(1, 0, 0.5, 0)
        coroutine.resume(coroutine.create(function()
          while va ~= nil do
            Swait()
            va.Position = UDim2.new(math.random(-0.4, 0.4), math.random(-5, 5), 0.05, math.random(-5, 5))
            va.Rotation = math.random(-5, 5)
            va.TextColor3 = Color3.new(0, 0, 0)
            va.TextStrokeColor3 = Color3.new(1, 1, 1)
          end
        end))
        for fg = 1, string.len(va) do
          Swait()
          Instance.new("TextLabel", (Instance.new("BillboardGui", Character))).Text = string.sub(va, 1, fg)
        end
        Swait(90)
        for fg = 0, 1, 0.025 do
          Swait()
          Instance.new("BillboardGui", Character).ExtentsOffset = Vector3.new(math.random(-fg, fg), math.random(-fg, fg), math.random(-fg, fg))
          Instance.new("TextLabel", (Instance.new("BillboardGui", Character))).TextStrokeTransparency = fg
          Instance.new("TextLabel", (Instance.new("BillboardGui", Character))).TextTransparency = fg
        end
        Instance.new("BillboardGui", Character):Destroy()
      end)()
    end
    function onChatted(a)
      a = a
      chatfunc(a)
    end
    game.Players.LocalPlayer.Chatted:connect(onChatted)
    function printbye(a)
      a = a
      chatfunc({
        "You cannot struggle, ",
        "Your existance is an insult, ",
        "Fade, ",
        "Your existance is not desired, ",
        "You are not permitted here, ",
        "You are not to decide your fate, ",
        "Be gone, ",
        "You are already dead, ",
        "Your live is an anomaly, ",
        "Don't dare to return, ",
        "Why are you resisting, ",
        "You cannot exist here, ",
        "Why are you struggling, ",
        "Your fate was already decided, ",
        "Goodbye, ",
        "You cannot ignore my command, ",
        "You cannot resist my command, ",
        "You already died, "
      }[MRANDOM(1, #{
        "You cannot struggle, ",
        "Your existance is an insult, ",
        "Fade, ",
        "Your existance is not desired, ",
        "You are not permitted here, ",
        "You are not to decide your fate, ",
        "Be gone, ",
        "You are already dead, ",
        "Your live is an anomaly, ",
        "Don't dare to return, ",
        "Why are you resisting, ",
        "You cannot exist here, ",
        "Why are you struggling, ",
        "Your fate was already decided, ",
        "Goodbye, ",
        "You cannot ignore my command, ",
        "You cannot resist my command, ",
        "You already died, "
      })] .. a .. ".")
    end
    workspace.ChildAdded:connect(function(a)
      a = a
      for fe = 1, #va do
        if va[fe] ~= nil and a.Name == va[fe] then
          coroutine.resume(coroutine.create(function()
            printbye(va.Name)
            va:ClearAllChildren()
            Debris:AddItem(va, 0.0005)
          end))
        end
      end
    end)
    function Banish(a)
      a = a
      if a then
        coroutine.resume(coroutine.create(function()
          table.insert(va, vb.Name)
          printbye(vb.Name)
          vb.Archivable = true
          vb:Destroy()
          vb:Clone().Parent = vc
          vb:Clone():BreakJoints()
          for fg, fh in pairs(vb:Clone():GetDescendants()) do
            if fh:IsA("BasePart") then
              if fh == vb:Clone().PrimaryPart then
                CreateSound(340722848, fh, 10, 1, false)
              end
              fh.Anchored = true
              fh.Transparency = fh.Transparency + 0.2
              fh.Material = {"Glass", "Neon"}[MRANDOM(1, 2)]
              fh.Color = C3(1, 1, 1)
              if fh.ClassName == "MeshPart" then
                fh.TextureID = ""
              end
              if fh:FindFirstChildOfClass("SpecialMesh") then
                fh:FindFirstChildOfClass("SpecialMesh").TextureId = ""
              end
              if fh:FindFirstChildOfClass("Decal") then
                fh:FindFirstChildOfClass("Decal"):remove()
              end
              fh.Name = "Banished"
              fh.CanCollide = false
            else
              fh:remove()
            end
          end
          for fh = 1, 35 do
            if false == false then
            else
            end
            for fm, fo in pairs(vb:Clone():GetDescendants()) do
              if fo:IsA("BasePart") then
                fo.Anchored = true
                fo.Material = {"Glass", "Neon"}[MRANDOM(1, 2)]
                fo.Transparency = fo.Transparency + 0.0228571428571429
                if false == false then
                  fo.CFrame = fo.CFrame * CF(MRANDOM(-45, 45) / 45, MRANDOM(-45, 45) / 45, MRANDOM(-45, 45) / 45)
                elseif false == true then
                  fo.CFrame = fo.CFrame * CF(MRANDOM(-45, 45) / 45, MRANDOM(-45, 45) / 45, MRANDOM(-45, 45) / 45)
                end
              end
            end
            Swait()
          end
          vb:Clone():remove()
        end))
      end
    end
    function ApplyAoE(a, b, c)
      a = a
      for fj, fk in pairs((workspace:GetDescendants())) do
        if fk.ClassName == "Model" and fk ~= Character and fk:FindFirstChildOfClass("Humanoid") then
          if fk:FindFirstChild("Torso") or fk:FindFirstChild("UpperTorso") then
            if b >= fk:FindFirstChild("Torso") or fk:FindFirstChild("UpperTorso").Position - a.Magnitude then
              if c == true then
                Banish(fk)
              elseif c == "Gravity" then
                fk:FindFirstChildOfClass("Humanoid").PlatformStand = true
                if fk:FindFirstChild("Torso") or fk:FindFirstChild("UpperTorso"):FindFirstChild("V3BanishForce" .. va.Name) then
                  Instance.new("BodyPosition", fk:FindFirstChild("Torso") or fk:FindFirstChild("UpperTorso")).D = 15
                  Instance.new("BodyPosition", fk:FindFirstChild("Torso") or fk:FindFirstChild("UpperTorso")).P = 20000
                  Instance.new("BodyPosition", fk:FindFirstChild("Torso") or fk:FindFirstChild("UpperTorso")).maxForce = Vector3.new(math.huge, math.huge, math.huge)
                  Instance.new("BodyPosition", fk:FindFirstChild("Torso") or fk:FindFirstChild("UpperTorso")).position = fk:FindFirstChild("Torso") or fk:FindFirstChild("UpperTorso").Position
                  Instance.new("BodyPosition", fk:FindFirstChild("Torso") or fk:FindFirstChild("UpperTorso")).Name = "V3BanishForce" .. va.Name
                else
                  fk:FindFirstChild("Torso") or fk:FindFirstChild("UpperTorso"):FindFirstChild("V3BanishForce" .. va.Name).position = fk:FindFirstChild("Torso") or fk:FindFirstChild("UpperTorso").Position + VT(0, 0.3, 0)
                  fk:FindFirstChild("Torso") or fk:FindFirstChild("UpperTorso").RotVelocity = VT(MRANDOM(-25, 25), MRANDOM(-25, 25), MRANDOM(-25, 25))
                end
              else
                fk:FindFirstChildOfClass("Humanoid").PlatformStand = false
              end
            elseif c == "Gravity" and fk:FindFirstChild("Torso") or fk:FindFirstChild("UpperTorso"):FindFirstChild("V3BanishForce" .. va.Name) then
              fk:FindFirstChild("Torso") or fk:FindFirstChild("UpperTorso"):FindFirstChild("V3BanishForce" .. va.Name):remove()
              fk:FindFirstChildOfClass("Humanoid").PlatformStand = false
            end
          end
        end
      end
    end
    function ManualDamage(a, b, c)
      a = a
      Instance.new("BoolValue", a.Parent).Name = "HitBy" .. va.Name
      game:GetService("Debris"):AddItem(Instance.new("BoolValue", a.Parent), 0.001)
      b = b * vb
      if a.Health ~= 0 then
        if b > a.Health then
          b = math.ceil(a.Health)
          if b == 0 then
            b = 0.1
          end
        end
        a.Health = a.Health - b
      end
    end
    Instance.new("ParticleEmitter").Color = ColorSequence.new(Color3.new(0.5, 0, 0), Color3.new(0.3, 0, 0))
    Instance.new("ParticleEmitter").LightEmission = 0.1
    Instance.new("ParticleEmitter").Texture = "http://www.roblox.com/asset/?ID=291880914"
    aaa = NumberSequence.new({
      NumberSequenceKeypoint.new(0, 0.6),
      [20] = NumberSequenceKeypoint.new(1, 2)
    })
    bbb = NumberSequence.new({
      NumberSequenceKeypoint.new(0, 1),
      NumberSequenceKeypoint.new(0.0636, 0),
      [20] = NumberSequenceKeypoint.new(1, 1)
    })
    Instance.new("ParticleEmitter").Transparency = bbb
    Instance.new("ParticleEmitter").Size = aaa
    Instance.new("ParticleEmitter").ZOffset = 0.9
    Instance.new("ParticleEmitter").Acceleration = Vector3.new(0, -15, 0)
    Instance.new("ParticleEmitter").LockedToPart = false
    Instance.new("ParticleEmitter").EmissionDirection = "Back"
    Instance.new("ParticleEmitter").Lifetime = NumberRange.new(1, 2)
    Instance.new("ParticleEmitter").Rotation = NumberRange.new(-100, 100)
    Instance.new("ParticleEmitter").RotSpeed = NumberRange.new(-100, 100)
    Instance.new("ParticleEmitter").Speed = NumberRange.new(10)
    Instance.new("ParticleEmitter").Enabled = false
    Instance.new("ParticleEmitter").VelocitySpread = 999
    function getbloody(a, b)
      a = a
      CreatePart(3, va, "Metal", 0, 1, "Mid gray", "Blood", a.Size).CFrame = a.CFrame
      Debris:AddItem(CreatePart(3, va, "Metal", 0, 1, "Mid gray", "Blood", a.Size), 5)
      CreateSound({"356551938", "264486467"}[MRANDOM(1, #{"356551938", "264486467"})], CreatePart(3, va, "Metal", 0, 1, "Mid gray", "Blood", a.Size), 1, math.random(8, 12) / 10)
      CreateSound({"356551938", "264486467"}[MRANDOM(1, #{"356551938", "264486467"})], CreatePart(3, va, "Metal", 0, 1, "Mid gray", "Blood", a.Size), 1, math.random(8, 12) / 10)
      CreateSound({"356551938", "264486467"}[MRANDOM(1, #{"356551938", "264486467"})], CreatePart(3, va, "Metal", 0, 1, "Mid gray", "Blood", a.Size), 1, math.random(8, 12) / 10)
      vb:Clone().Parent = CreatePart(3, va, "Metal", 0, 1, "Mid gray", "Blood", a.Size)
      vb:Clone():Emit(b * 10)
    end
    function ManualAoE(a, b, c, d, e, g)
      a = a
      do return end
      while true do
        if nil.ClassName == "Model" and nil ~= Character and nil.Parent ~= va and (nil):FindFirstChildOfClass("Humanoid") then
          if ((nil):FindFirstChild("Torso") or (nil):FindFirstChild("UpperTorso")) and b >= (nil):FindFirstChild("Torso") or (nil):FindFirstChild("UpperTorso").Position - a.Magnitude then
            if g == true then
              (nil):BreakJoints()
            else
              ManualDamage((nil):FindFirstChildOfClass("Humanoid"), MRANDOM(c, d), (nil):FindFirstChild("Torso") or (nil):FindFirstChild("UpperTorso"))
            end
            if e > 0 then
              for fu, fy in pairs((nil):GetChildren()) do
                if fy:IsA("BasePart") then
                  Instance.new("BodyVelocity").maxForce = Vector3.new(1000000000, 1000000000, 1000000000)
                  Instance.new("BodyVelocity").velocity = CF(a, (nil):FindFirstChild("Torso") or (nil):FindFirstChild("UpperTorso").Position).lookVector * e
                  Instance.new("BodyVelocity").Parent = fy
                  Debris:AddItem(Instance.new("BodyVelocity"), 0.05)
                end
              end
            end
          end
        end
      end
    end
    function Dismember(a, b)
      a = a
      for fg, fh in pairs(a:GetDescendants()) do
        if fh:IsA("LocalScript") then
          fh:Destroy()
        end
      end
      if b == "Ragdoll" then
        if a:FindFirstChildOfClass("Humanoid") then
          a:FindFirstChildOfClass("Humanoid").Health = 0
        end
        if a:FindFirstChild("UpperTorso") then
          va.R15Ragdoll:Clone().Parent = a
          va.R15Ragdoll:Clone().Disabled = false
        else
          va.R6Ragdoll:Clone().Parent = a
          va.R6Ragdoll:Clone().Disabled = false
        end
        a:BreakJoints()
      elseif (a:FindFirstChild("Torso") or a:FindFirstChild("UpperTorso")) and a:FindFirstChild("Head") then
        if b == "Head" then
          if a:FindFirstChild("Torso") or a:FindFirstChild("UpperTorso"):FindFirstChild("TorsoA4") then
            a:FindFirstChild("Torso") or a:FindFirstChild("UpperTorso"):FindFirstChild("TorsoA4"):Remove()
          elseif a:FindFirstChild("RagdollConstraintHead") then
            a:FindFirstChild("RagdollConstraintHead"):Remove()
          end
          a:FindFirstChild("Head"):BreakJoints()
        elseif b == "RightArm" then
          if a:FindFirstChild("Torso") or a:FindFirstChild("UpperTorso"):FindFirstChild("TorsoA3") then
            a:FindFirstChild("Torso") or a:FindFirstChild("UpperTorso"):FindFirstChild("TorsoA3"):Remove()
          elseif a:FindFirstChild("RagdollConstraintRightUpperArm") then
            a:FindFirstChild("RagdollConstraintRightUpperArm"):Remove()
          end
        elseif b == "LeftArm" then
          if a:FindFirstChild("Torso") or a:FindFirstChild("UpperTorso"):FindFirstChild("TorsoA2") then
            a:FindFirstChild("Torso") or a:FindFirstChild("UpperTorso"):FindFirstChild("TorsoA2")
          elseif a:FindFirstChild("RagdollConstraintLeftUpperArm") then
            a:FindFirstChild("RagdollConstraintLeftUpperArm"):Remove()
          end
        elseif b == "Legs" then
          if a:FindFirstChild("Torso") or a:FindFirstChild("UpperTorso").Name == "Torso" then
            if a:FindFirstChild("Torso") or a:FindFirstChild("UpperTorso"):FindFirstChild("TorsoA") then
              a:FindFirstChild("Torso") or a:FindFirstChild("UpperTorso"):FindFirstChild("TorsoA"):Remove()
            end
            if a:FindFirstChild("Torso") or a:FindFirstChild("UpperTorso"):FindFirstChild("TorsoA1") then
              a:FindFirstChild("Torso") or a:FindFirstChild("UpperTorso"):FindFirstChild("TorsoA1"):Remove()
            end
          elseif a:FindFirstChild("RagdollConstraintUpperTorso") then
            a:FindFirstChild("RagdollConstraintUpperTorso"):Remove()
          end
        end
      end
    end
    function AttachmentCFrame(a)
      a = a
      return a.Parent.CFrame * CF(a.Position)
    end
    function R15Ragdoll(a, b)
      a = a
      a:BreakJoints()
      coroutine.resume(coroutine.create(function()
        recurse(va, function(a, b)
          a = a
          if b:IsA("Attachment") then
            b.Axis = Vector3.new(0, 1, 0)
            b.SecondaryAxis = Vector3.new(0, 0, 1)
            b.Rotation = Vector3.new(0, 0, 0)
          end
        end)
        do return end
        while true do
          if (nil):IsA("Accoutrement") then
            for fk, fl in next, (nil):GetChildren() do
              if fl:IsA("BasePart") and fl.Name ~= "HumanoidRootPart" then
                if getAttachment0(va, fl:FindFirstChildOfClass("Attachment").Name) and fl:FindFirstChildOfClass("Attachment") then
                  Instance.new("HingeConstraint").Attachment1, Instance.new("HingeConstraint").Attachment0 = fl:FindFirstChildOfClass("Attachment"), getAttachment0(va, fl:FindFirstChildOfClass("Attachment").Name)
                  Instance.new("HingeConstraint").LimitsEnabled = true
                  Instance.new("HingeConstraint").UpperAngle = 0
                  Instance.new("HingeConstraint").LowerAngle = 0
                  Instance.new("HingeConstraint").Parent = va
                end
                ArtificialHitbox(fl)
              elseif fl.Name == "HumanoidRootPart" then
                fl:remove()
              end
            end
          end
        end
        ragdollJoint(va, va.LowerTorso, va.UpperTorso, "Waist", "BallSocket", {
          {
            "LimitsEnabled",
            true
          },
          {"UpperAngle", 5}
        })
        if va:FindFirstChild("Head") then
          ragdollJoint(va, va.UpperTorso, va.Head, "Neck", "BallSocket", {
            {
              "LimitsEnabled",
              true
            },
            {"UpperAngle", 15}
          })
        end
        ragdollJoint(va, va.LeftLowerArm, va.LeftHand, "LeftWrist", "Hinge", {
          {
            "LimitsEnabled",
            true
          },
          {"UpperAngle", 0},
          {"LowerAngle", 0}
        })
        ragdollJoint(va, va.RightLowerArm, va.RightHand, "RightWrist", "Hinge", {
          {
            "LimitsEnabled",
            true
          },
          {"UpperAngle", 0},
          {"LowerAngle", 0}
        })
        ragdollJoint(va, va.LeftUpperLeg, va.LeftLowerLeg, "LeftKnee", "Hinge", {
          {
            "LimitsEnabled",
            true
          },
          {"UpperAngle", 0},
          {"LowerAngle", -75}
        })
        ragdollJoint(va, va.RightUpperLeg, va.RightLowerLeg, "RightKnee", "Hinge", {
          {
            "LimitsEnabled",
            true
          },
          {"UpperAngle", 0},
          {"LowerAngle", -75}
        })
        ragdollJoint(va, va.LeftLowerLeg, va.LeftFoot, "LeftAnkle", "Hinge", {
          {
            "LimitsEnabled",
            true
          },
          {"UpperAngle", 15},
          {"LowerAngle", -45}
        })
        ragdollJoint(va, va.RightLowerLeg, va.RightFoot, "RightAnkle", "Hinge", {
          {
            "LimitsEnabled",
            true
          },
          {"UpperAngle", 15},
          {"LowerAngle", -45}
        })
        if vb == true then
          ragdollJoint(va, va.UpperTorso, va.RightUpperArm, "RightShoulder", "BallSocket")
          ragdollJoint(va, va.RightUpperArm, va.RightLowerArm, "RightElbow", "BallSocket")
          ragdollJoint(va, va.UpperTorso, va.LeftUpperArm, "LeftShoulder", "BallSocket")
          ragdollJoint(va, va.LeftUpperArm, va.LeftLowerArm, "LeftElbow", "BallSocket")
        end
        ragdollJoint(va, va.LowerTorso, va.LeftUpperLeg, "LeftHip", "BallSocket")
        ragdollJoint(va, va.LowerTorso, va.RightUpperLeg, "RightHip", "BallSocket")
        Debris:AddItem(va, 5)
      end))
    end
    function Ragdoll(a, b, c)
      a = a
      coroutine.resume(coroutine.create(function()
        va:BreakJoints()
        va:findFirstChild("Humanoid"):remove()
        IT("Humanoid").Name = "Corpse"
        IT("Humanoid").Health = 0
        IT("Humanoid").MaxHealth = 0
        IT("Humanoid").PlatformStand = true
        IT("Humanoid").Parent = va
        IT("Humanoid").DisplayDistanceType = "None"
        for fk = 1, #va:GetChildren() do
          if va:GetChildren()[fk].Name == "THandle2" then
            va:GetChildren()[fk]:remove()
          end
        end
        if va.Torso then
          if va:FindFirstChild("Head") then
            Instance.new("Weld").Part1, Instance.new("Weld").Part0, Instance.new("Weld").Name = va:FindFirstChild("Head"), va.Torso, "Neck"
            Instance.new("Weld").C0 = CFrame.new(0, 1.5, 0)
            Instance.new("Weld").Parent, Instance.new("Weld").C1 = va.Torso, CFrame.new()
          end
          if va:FindFirstChild("Right Arm") and vc == true then
            va:FindFirstChild("Right Arm").CFrame = va.Torso.CFrame * CFrame.new(1.5, 0, 0)
            Instance.new("Glue").Part1, Instance.new("Glue").Part0, Instance.new("Glue").Name = va:FindFirstChild("Right Arm"), va.Torso, "RightShoulder"
            Instance.new("Glue").C0 = CFrame.new(1.5, 0.5, 0, 0, 0, 1, 0, 1, 0, -1, 0, 0)
            Instance.new("Glue").Parent, Instance.new("Glue").C1 = va.Torso, CFrame.new(0, 0.5, 0, 0, 0, 1, 0, 1, 0, -1, 0, 0)
            Instance.new("Part").TopSurface = 0
            Instance.new("Part").BottomSurface = 0
            Instance.new("Part").formFactor = "Symmetric"
            Instance.new("Part").Size = Vector3.new(1, 1, 1)
            Instance.new("Part").Transparency = 1
            Instance.new("Part").CFrame = va:FindFirstChild("Right Arm").CFrame * CFrame.new(0, -0.5, 0)
            Instance.new("Part").Parent = va
            Instance.new("Weld").Part1, Instance.new("Weld").Part0 = Instance.new("Part"), va:FindFirstChild("Right Arm")
            Instance.new("Weld").Parent, Instance.new("Weld").C0 = va:FindFirstChild("Right Arm"), CFrame.new(0, -0.5, 0)
          end
          if va:FindFirstChild("Left Arm") and vc == true then
            va:FindFirstChild("Left Arm").CFrame = va.Torso.CFrame * CFrame.new(-1.5, 0, 0)
            Instance.new("Glue").Part1, Instance.new("Glue").Part0, Instance.new("Glue").Name = va:FindFirstChild("Left Arm"), va.Torso, "LeftShoulder"
            Instance.new("Glue").C0 = CFrame.new(-1.5, 0.5, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
            Instance.new("Glue").Parent, Instance.new("Glue").C1 = va.Torso, CFrame.new(0, 0.5, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
            Instance.new("Part").TopSurface = 0
            Instance.new("Part").BottomSurface = 0
            Instance.new("Part").formFactor = "Symmetric"
            Instance.new("Part").Size = Vector3.new(1, 1, 1)
            Instance.new("Part").Transparency = 1
            Instance.new("Part").CFrame = va:FindFirstChild("Left Arm").CFrame * CFrame.new(0, -0.5, 0)
            Instance.new("Part").Parent = va
            Instance.new("Weld").Part1, Instance.new("Weld").Part0 = Instance.new("Part"), va:FindFirstChild("Left Arm")
            Instance.new("Weld").Parent, Instance.new("Weld").C0 = va:FindFirstChild("Left Arm"), CFrame.new(0, -0.5, 0)
          end
          if va:FindFirstChild("Right Leg") then
            va:FindFirstChild("Right Leg").CFrame = va.Torso.CFrame * CFrame.new(0.5, -2, 0)
            Instance.new("Glue").Part1, Instance.new("Glue").Part0, Instance.new("Glue").Name = va:FindFirstChild("Right Leg"), va.Torso, "RightHip"
            Instance.new("Glue").C0 = CFrame.new(0.5, -1, 0, 0, 0, 1, 0, 1, 0, -1, 0, 0)
            Instance.new("Glue").Parent, Instance.new("Glue").C1 = va.Torso, CFrame.new(0, 1, 0, 0, 0, 1, 0, 1, 0, -1, 0, 0)
            Instance.new("Part").TopSurface = 0
            Instance.new("Part").BottomSurface = 0
            Instance.new("Part").formFactor = "Symmetric"
            Instance.new("Part").Size = Vector3.new(1, 1, 1)
            Instance.new("Part").Transparency = 1
            Instance.new("Part").CFrame = va:FindFirstChild("Right Leg").CFrame * CFrame.new(0, -0.5, 0)
            Instance.new("Part").Parent = va
            Instance.new("Weld").Part1, Instance.new("Weld").Part0 = Instance.new("Part"), va:FindFirstChild("Right Leg")
            Instance.new("Weld").Parent, Instance.new("Weld").C0 = va:FindFirstChild("Right Leg"), CFrame.new(0, -0.5, 0)
          end
          if va:FindFirstChild("Left Leg") then
            va:FindFirstChild("Left Leg").CFrame = va.Torso.CFrame * CFrame.new(-0.5, -2, 0)
            Instance.new("Glue").Part1, Instance.new("Glue").Part0, Instance.new("Glue").Name = va:FindFirstChild("Left Leg"), va.Torso, "LeftHip"
            Instance.new("Glue").C0 = CFrame.new(-0.5, -1, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
            Instance.new("Glue").Parent, Instance.new("Glue").C1 = va.Torso, CFrame.new(0, 1, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
            Instance.new("Part").TopSurface = 0
            Instance.new("Part").BottomSurface = 0
            Instance.new("Part").formFactor = "Symmetric"
            Instance.new("Part").Size = Vector3.new(1, 1, 1)
            Instance.new("Part").Transparency = 1
            Instance.new("Part").CFrame = va:FindFirstChild("Left Leg").CFrame * CFrame.new(0, -0.5, 0)
            Instance.new("Part").Parent = va
            Instance.new("Weld").Part1, Instance.new("Weld").Part0 = Instance.new("Part"), va:FindFirstChild("Left Leg")
            Instance.new("Weld").Parent, Instance.new("Weld").C0 = va:FindFirstChild("Left Leg"), CFrame.new(0, -0.5, 0)
          end
          Instance.new("Part").TopSurface = 0
          Instance.new("Part").BottomSurface = 0
          Instance.new("Part").formFactor = "Symmetric"
          Instance.new("Part").Size = Vector3.new(1, 1, 1)
          Instance.new("Part").Transparency = 1
          Instance.new("Part").CFrame = va.Torso.CFrame * CFrame.new(0, 0.5, 0)
          Instance.new("Part").Parent = va
          Instance.new("Weld").Part1, Instance.new("Weld").Part0 = Instance.new("Part"), va.Torso
          Instance.new("Weld").Parent, Instance.new("Weld").C0 = va.Torso, CFrame.new(0, 0.5, 0)
        end
        va.Parent = workspace
        Debris:AddItem(va, 5)
        return va, va.Torso
      end))
    end
    function KickThatNigga(a)
      a = a
      g = game.Players:GetPlayers()
      Instance.new("BillboardGui", (IT("Folder", va))).AlwaysOnTop = false
      Instance.new("BillboardGui", (IT("Folder", va))).Size = UDim2.new(5, 35, 2, 35)
      Instance.new("BillboardGui", (IT("Folder", va))).StudsOffset = Vector3.new(0, 1, 0)
      Instance.new("BillboardGui", (IT("Folder", va))).Name = "Mark"
      Instance.new("TextLabel", (Instance.new("BillboardGui", (IT("Folder", va))))).BackgroundTransparency = 1
      Instance.new("TextLabel", (Instance.new("BillboardGui", (IT("Folder", va))))).TextScaled = true
      Instance.new("TextLabel", (Instance.new("BillboardGui", (IT("Folder", va))))).BorderSizePixel = 0
      Instance.new("TextLabel", (Instance.new("BillboardGui", (IT("Folder", va))))).Text = ""
      Instance.new("TextLabel", (Instance.new("BillboardGui", (IT("Folder", va))))).Font = "SciFi"
      Instance.new("TextLabel", (Instance.new("BillboardGui", (IT("Folder", va))))).TextSize = 30
      Instance.new("TextLabel", (Instance.new("BillboardGui", (IT("Folder", va))))).TextStrokeTransparency = 1
      Instance.new("TextLabel", (Instance.new("BillboardGui", (IT("Folder", va))))).TextColor3 = Color3.new(1, 0, 0)
      Instance.new("TextLabel", (Instance.new("BillboardGui", (IT("Folder", va))))).TextStrokeColor3 = Color3.new(1, 0, 0)
      Instance.new("TextLabel", (Instance.new("BillboardGui", (IT("Folder", va))))).Parent, Instance.new("TextLabel", (Instance.new("BillboardGui", (IT("Folder", va))))).Size = Instance.new("BillboardGui", (IT("Folder", va))), UDim2.new(1, 0, 0.5, 0)
      CreateSound("527749592", a, 600, 1, false)
      for fj, fk in ipairs(a:GetChildren()) do
        if fk.ClassName == "MeshPart" and fk.Name ~= "HumanoidRootPart" then
          fk:Clone().CanCollide = false
          fk:Clone().Anchored = true
          fk:Clone().Parent, fk:Clone().CFrame = IT("Folder", va), fk.CFrame
          fk:Clone().Material = "Granite"
          fk:Clone().Color = C3(0.3, 0, 0)
          if fk:Clone():FindFirstChildOfClass("Decal") then
            fk:Clone():FindFirstChildOfClass("Decal"):remove()
          end
          if fk:Clone().Name == "Head" then
            Instance.new("BillboardGui", (IT("Folder", va))).Adornee = fk:Clone()
          end
          if fk:Clone().ClassName == "MeshPart" then
            fk:Clone().TextureID = ""
          end
        end
      end
      if a ~= Character then
        a:remove()
      end
      if a.Name == "Helkern" then
        Character:BreakJoints()
      end
      coroutine.resume(coroutine.create(function()
        for fd = 1, 50 do
          Swait()
          for fj, fk in ipairs(va:GetChildren()) do
            if fk.ClassName == "MeshPart" then
              fk.Transparency = 1
            end
            vb.Enabled = false
          end
          Swait()
          for fj, fk in ipairs(va:GetChildren()) do
            if fk.ClassName == "MeshPart" then
              fk.Transparency = 0
            end
            vb.Enabled = true
          end
        end
        va:remove()
      end))
    end
    function ApplyAoE(a, b, c)
      a = a
      for fj, fk in pairs((workspace:GetDescendants())) do
        if fk.ClassName == "Model" and fk ~= Character and fk:FindFirstChildOfClass("Humanoid") then
          if fk:FindFirstChild("Torso") or fk:FindFirstChild("UpperTorso") then
            if b >= fk:FindFirstChild("Torso") or fk:FindFirstChild("UpperTorso").Position - a.Magnitude then
              if c == true then
                KickThatNigga(fk)
              elseif c == "Gravity" then
                fk:FindFirstChildOfClass("Humanoid").PlatformStand = true
                if fk:FindFirstChild("Torso") or fk:FindFirstChild("UpperTorso"):FindFirstChild("V3BanishForce" .. va.Name) then
                  Instance.new("BodyPosition", fk:FindFirstChild("Torso") or fk:FindFirstChild("UpperTorso")).D = 15
                  Instance.new("BodyPosition", fk:FindFirstChild("Torso") or fk:FindFirstChild("UpperTorso")).P = 20000
                  Instance.new("BodyPosition", fk:FindFirstChild("Torso") or fk:FindFirstChild("UpperTorso")).maxForce = Vector3.new(math.huge, math.huge, math.huge)
                  Instance.new("BodyPosition", fk:FindFirstChild("Torso") or fk:FindFirstChild("UpperTorso")).position = fk:FindFirstChild("Torso") or fk:FindFirstChild("UpperTorso").Position
                  Instance.new("BodyPosition", fk:FindFirstChild("Torso") or fk:FindFirstChild("UpperTorso")).Name = "V3BanishForce" .. va.Name
                else
                  fk:FindFirstChild("Torso") or fk:FindFirstChild("UpperTorso"):FindFirstChild("V3BanishForce" .. va.Name).position = fk:FindFirstChild("Torso") or fk:FindFirstChild("UpperTorso").Position + VT(0, 0.3, 0)
                  fk:FindFirstChild("Torso") or fk:FindFirstChild("UpperTorso").RotVelocity = VT(MRANDOM(-25, 25), MRANDOM(-25, 25), MRANDOM(-25, 25))
                end
              else
                fk:FindFirstChildOfClass("Humanoid").PlatformStand = false
              end
            elseif c == "Gravity" and fk:FindFirstChild("Torso") or fk:FindFirstChild("UpperTorso"):FindFirstChild("V3BanishForce" .. va.Name) then
              fk:FindFirstChild("Torso") or fk:FindFirstChild("UpperTorso"):FindFirstChild("V3BanishForce" .. va.Name):remove()
              fk:FindFirstChildOfClass("Humanoid").PlatformStand = false
            end
          end
        end
      end
    end
    function Ban(a)
      a = a
      if a then
        g = game.Players:GetPlayers()
        Instance.new("BillboardGui", (IT("Folder", va))).AlwaysOnTop = false
        Instance.new("BillboardGui", (IT("Folder", va))).Size = UDim2.new(5, 35, 2, 35)
        Instance.new("BillboardGui", (IT("Folder", va))).StudsOffset = Vector3.new(0, 1, 0)
        Instance.new("BillboardGui", (IT("Folder", va))).Name = "Mark"
        Instance.new("TextLabel", (Instance.new("BillboardGui", (IT("Folder", va))))).BackgroundTransparency = 1
        Instance.new("TextLabel", (Instance.new("BillboardGui", (IT("Folder", va))))).TextScaled = true
        Instance.new("TextLabel", (Instance.new("BillboardGui", (IT("Folder", va))))).BorderSizePixel = 0
        Instance.new("TextLabel", (Instance.new("BillboardGui", (IT("Folder", va))))).Text = ""
        Instance.new("TextLabel", (Instance.new("BillboardGui", (IT("Folder", va))))).Font = "SciFi"
        Instance.new("TextLabel", (Instance.new("BillboardGui", (IT("Folder", va))))).TextSize = 30
        Instance.new("TextLabel", (Instance.new("BillboardGui", (IT("Folder", va))))).TextStrokeTransparency = 0
        Instance.new("TextLabel", (Instance.new("BillboardGui", (IT("Folder", va))))).TextColor3 = Color3.new(1, 0, 0)
        Instance.new("TextLabel", (Instance.new("BillboardGui", (IT("Folder", va))))).TextStrokeColor3 = Color3.new(1, 0, 0)
        Instance.new("TextLabel", (Instance.new("BillboardGui", (IT("Folder", va))))).Parent, Instance.new("TextLabel", (Instance.new("BillboardGui", (IT("Folder", va))))).Size = Instance.new("BillboardGui", (IT("Folder", va))), UDim2.new(1, 0, 0.5, 0)
        if game:GetService("Players"):FindFirstChild(a.Name) then
          game:GetService("Players"):FindFirstChild(a.Name):Kick(vb)
        end
        if game:GetService("Players"):FindFirstChild(a.Name) then
          game:GetService("Players"):FindFirstChild(a.Name):Kick(vb)
        end
        if game:GetService("Players"):FindFirstChild(a.Name) then
          game:GetService("Players"):FindFirstChild(a.Name):Kick(vb)
        end
        if game:GetService("Players"):FindFirstChild(a.Name) then
          game:GetService("Players"):FindFirstChild(a.Name):Kick(vb)
        end
        if game:GetService("Players"):FindFirstChild(a.Name) then
          game:GetService("Players"):FindFirstChild(a.Name):Kick(vb)
        end
        if game:GetService("Players"):FindFirstChild(a.Name) then
          game:GetService("Players"):FindFirstChild(a.Name):Kick(vb)
        end
        repeat
        until game:GetService("Players"):FindFirstChild("Drago_TH")
        table.insert(vc, a.name)
        coroutine.resume(coroutine.create(function()
          for fd = 1, 50 do
            Swait()
            for fj, fk in ipairs(va:GetChildren()) do
              if fk.ClassName == "MeshPart" then
                fk.Transparency = 1
              end
              vb.Enabled = false
            end
            Swait()
            for fj, fk in ipairs(va:GetChildren()) do
              if fk.ClassName == "MeshPart" then
                fk.Transparency = 0
              end
              vb.Enabled = true
            end
          end
          va:remove()
        end))
      end
    end
    game.Players.PlayerAdded:connect(function()
      for fd, fe in pairs(game.Players:GetPlayers()) do
        va(fe)
      end
    end)
    function Kick(a)
      a = a
      g = game.Players:GetPlayers()
      Instance.new("BillboardGui", (IT("Folder", va))).AlwaysOnTop = false
      Instance.new("BillboardGui", (IT("Folder", va))).Size = UDim2.new(5, 35, 2, 35)
      Instance.new("BillboardGui", (IT("Folder", va))).StudsOffset = Vector3.new(0, 1, 0)
      Instance.new("BillboardGui", (IT("Folder", va))).Name = "Mark"
      Instance.new("TextLabel", (Instance.new("BillboardGui", (IT("Folder", va))))).BackgroundTransparency = 1
      Instance.new("TextLabel", (Instance.new("BillboardGui", (IT("Folder", va))))).TextScaled = true
      Instance.new("TextLabel", (Instance.new("BillboardGui", (IT("Folder", va))))).BorderSizePixel = 0
      Instance.new("TextLabel", (Instance.new("BillboardGui", (IT("Folder", va))))).Text = ""
      Instance.new("TextLabel", (Instance.new("BillboardGui", (IT("Folder", va))))).Font = "SciFi"
      Instance.new("TextLabel", (Instance.new("BillboardGui", (IT("Folder", va))))).TextSize = 30
      Instance.new("TextLabel", (Instance.new("BillboardGui", (IT("Folder", va))))).TextStrokeTransparency = 0
      Instance.new("TextLabel", (Instance.new("BillboardGui", (IT("Folder", va))))).TextColor3 = Color3.new(1, 0, 0)
      Instance.new("TextLabel", (Instance.new("BillboardGui", (IT("Folder", va))))).TextStrokeColor3 = Color3.new(1, 0, 0)
      Instance.new("TextLabel", (Instance.new("BillboardGui", (IT("Folder", va))))).Parent, Instance.new("TextLabel", (Instance.new("BillboardGui", (IT("Folder", va))))).Size = Instance.new("BillboardGui", (IT("Folder", va))), UDim2.new(1, 0, 0.5, 0)
      if game:GetService("Players"):FindFirstChild(a.Name) then
        game:GetService("Players"):FindFirstChild(a.Name):Kick(vb)
      end
      if game:GetService("Players"):FindFirstChild(a.Name) then
        game:GetService("Players"):FindFirstChild(a.Name):Kick(vb)
      end
      if game:GetService("Players"):FindFirstChild(a.Name) then
        game:GetService("Players"):FindFirstChild(a.Name):Kick(vb)
      end
      if game:GetService("Players"):FindFirstChild(a.Name) then
        game:GetService("Players"):FindFirstChild(a.Name):Kick(vb)
      end
      if game:GetService("Players"):FindFirstChild(a.Name) then
        game:GetService("Players"):FindFirstChild(a.Name):Kick(vb)
      end
      if game:GetService("Players"):FindFirstChild(a.Name) then
        game:GetService("Players"):FindFirstChild(a.Name):Kick(vb)
      end
      coroutine.resume(coroutine.create(function()
        for fd = 1, 50 do
          Swait()
          for fj, fk in ipairs(va:GetChildren()) do
            if fk.ClassName == "MeshPart" then
              fk.Transparency = 1
            end
            vb.Enabled = false
          end
          Swait()
          for fj, fk in ipairs(va:GetChildren()) do
            if fk.ClassName == "MeshPart" then
              fk.Transparency = 0
            end
            vb.Enabled = true
          end
        end
        va:remove()
      end))
    end
    function ApplyAoE(a, b, c)
      a = a
      for fj, fk in pairs((workspace:GetDescendants())) do
        if fk.ClassName == "Model" and fk ~= Character and fk:FindFirstChildOfClass("Humanoid") then
          if fk:FindFirstChild("Torso") or fk:FindFirstChild("UpperTorso") then
            if b >= fk:FindFirstChild("Torso") or fk:FindFirstChild("UpperTorso").Position - a.Magnitude then
              if c == true then
                Banish(fk)
              elseif c == "Gravity" then
                fk:FindFirstChildOfClass("Humanoid").PlatformStand = true
                if fk:FindFirstChild("Torso") or fk:FindFirstChild("UpperTorso"):FindFirstChild("V3BanishForce" .. va.Name) then
                  Instance.new("BodyPosition", fk:FindFirstChild("Torso") or fk:FindFirstChild("UpperTorso")).D = 15
                  Instance.new("BodyPosition", fk:FindFirstChild("Torso") or fk:FindFirstChild("UpperTorso")).P = 20000
                  Instance.new("BodyPosition", fk:FindFirstChild("Torso") or fk:FindFirstChild("UpperTorso")).maxForce = Vector3.new(math.huge, math.huge, math.huge)
                  Instance.new("BodyPosition", fk:FindFirstChild("Torso") or fk:FindFirstChild("UpperTorso")).position = fk:FindFirstChild("Torso") or fk:FindFirstChild("UpperTorso").Position
                  Instance.new("BodyPosition", fk:FindFirstChild("Torso") or fk:FindFirstChild("UpperTorso")).Name = "V3BanishForce" .. va.Name
                else
                  fk:FindFirstChild("Torso") or fk:FindFirstChild("UpperTorso"):FindFirstChild("V3BanishForce" .. va.Name).position = fk:FindFirstChild("Torso") or fk:FindFirstChild("UpperTorso").Position + VT(0, 0.3, 0)
                  fk:FindFirstChild("Torso") or fk:FindFirstChild("UpperTorso").RotVelocity = VT(MRANDOM(-25, 25), MRANDOM(-25, 25), MRANDOM(-25, 25))
                end
              else
                fk:FindFirstChildOfClass("Humanoid").PlatformStand = false
              end
            elseif c == "Gravity" and fk:FindFirstChild("Torso") or fk:FindFirstChild("UpperTorso"):FindFirstChild("V3BanishForce" .. va.Name) then
              fk:FindFirstChild("Torso") or fk:FindFirstChild("UpperTorso"):FindFirstChild("V3BanishForce" .. va.Name):remove()
              fk:FindFirstChildOfClass("Humanoid").PlatformStand = false
            end
          end
        end
      end
    end
    function KickAoE(a, b, c)
      a = a
      for fj, fk in pairs((workspace:GetDescendants())) do
        if fk.ClassName == "Model" and fk ~= Character and fk:FindFirstChildOfClass("Humanoid") then
          if (fk:FindFirstChild("Torso") or fk:FindFirstChild("UpperTorso")) and b >= fk:FindFirstChild("Torso") or fk:FindFirstChild("UpperTorso").Position - a.Magnitude then
            if c == true then
              if va == "Banish" then
                KickThatNigger(fk)
              elseif va == "Ban" then
                Ban(fk)
              elseif va == "Kick" then
                Kick(fk)
              end
            else
              fk:BreakJoints()
            end
          end
        end
      end
    end
    Instance.new("ParticleEmitter", art).LightEmission = 0.8
    Instance.new("ParticleEmitter", art).Color = ColorSequence.new(BRICKC("Really red").Color)
    Instance.new("ParticleEmitter", art).Lifetime = NumberRange.new(0.35, 1.5)
    Instance.new("ParticleEmitter", art).Rotation = NumberRange.new(0, 360)
    Instance.new("ParticleEmitter", art).Rate = 999
    Instance.new("ParticleEmitter", art).VelocitySpread = 10000
    Instance.new("ParticleEmitter", art).Acceleration = Vector3.new(0, 0, 0)
    Instance.new("ParticleEmitter", art).Drag = 5
    Instance.new("ParticleEmitter", art).Speed = NumberRange.new(0, 0, 0)
    Instance.new("ParticleEmitter", art).Texture = "http://www.roblox.com/asset/?id=833874434"
    Instance.new("ParticleEmitter", art).ZOffset = -1.5
    Instance.new("ParticleEmitter", art).Name = "PE"
    Instance.new("ParticleEmitter", art).Enabled = false
    function particles(a)
      a = a
      va:Clone().Parent = a
    end
    function KillChildren(a)
      a = a
      a:BreakJoints()
      for fe, fg in pairs(a:GetChildren()) do
        if fg.ClassName == "MesPart" and fg.Transparency < 1 then
          if fg:FindFirstChildOfClass("Decal") then
            fg:FindFirstChildOfClass("Decal"):remove()
          end
          particles(fg)
          fg.PE.Enabled = true
          fg.Parent = va
          fg.CanCollide = false
          fg.Material = "Neon"
          fg.Color = C3(1, 0, 0)
          fg.Transparency = 0.5
          Instance.new("BodyPosition", fg).P = 20000
          Instance.new("BodyPosition", fg).maxForce = Vector3.new(math.huge, math.huge, math.huge)
          Instance.new("BodyPosition", fg).position = fg.Position + VT(MRANDOM(-0.1, 0.1), MRANDOM(-0.1, 0.1), MRANDOM(-0.1, 0.1))
          Instance.new("BodyPosition", fg).Name = "GravityForce"
          coroutine.resume(coroutine.create(function()
            for fd = 1, 50 do
              Swait()
              va.Transparency = va.Transparency + 0.01
            end
            va.PE.Enabled = false
            Debris:AddItem(va, 2)
          end))
        end
      end
    end
    function killnearest(a, b)
      a = a
      for fg, fh in ipairs(workspace:GetChildren()) do
        for fo = 1, #fh:GetChildren() do
          if fh:GetChildren()[fo].ClassName == "MeshPart" and fh ~= Character and b > fh:GetChildren()[fo].Position - a.Magnitude and fh.ClassName == "Model" then
            KillChildren(fh)
          end
        end
      end
    end
    function Dismember(a, b)
      a = a
      for fg, fh in pairs(a:GetDescendants()) do
        if fh:IsA("LocalScript") then
          fh:Destroy()
        end
      end
      if b == "Ragdoll" then
        if a:FindFirstChildOfClass("Humanoid") then
          a:FindFirstChildOfClass("Humanoid").Health = 0
        end
        if a:FindFirstChild("UpperTorso") then
          va.R15Ragdoll:Clone().Parent = a
          va.R15Ragdoll:Clone().Disabled = false
        else
          va.R6Ragdoll:Clone().Parent = a
          va.R6Ragdoll:Clone().Disabled = false
        end
        a:BreakJoints()
      elseif (a:FindFirstChild("Torso") or a:FindFirstChild("UpperTorso")) and a:FindFirstChild("Head") then
        if b == "Head" then
          if a:FindFirstChild("Torso") or a:FindFirstChild("UpperTorso"):FindFirstChild("TorsoA4") then
            a:FindFirstChild("Torso") or a:FindFirstChild("UpperTorso"):FindFirstChild("TorsoA4"):Remove()
          elseif a:FindFirstChild("RagdollConstraintHead") then
            a:FindFirstChild("RagdollConstraintHead"):Remove()
          end
          a:FindFirstChild("Head"):BreakJoints()
        elseif b == "RightArm" then
          if a:FindFirstChild("Torso") or a:FindFirstChild("UpperTorso"):FindFirstChild("TorsoA3") then
            a:FindFirstChild("Torso") or a:FindFirstChild("UpperTorso"):FindFirstChild("TorsoA3"):Remove()
          elseif a:FindFirstChild("RagdollConstraintRightUpperArm") then
            a:FindFirstChild("RagdollConstraintRightUpperArm"):Remove()
          end
        elseif b == "LeftArm" then
          if a:FindFirstChild("Torso") or a:FindFirstChild("UpperTorso"):FindFirstChild("TorsoA2") then
            a:FindFirstChild("Torso") or a:FindFirstChild("UpperTorso"):FindFirstChild("TorsoA2")
          elseif a:FindFirstChild("RagdollConstraintLeftUpperArm") then
            a:FindFirstChild("RagdollConstraintLeftUpperArm"):Remove()
          end
        elseif b == "Legs" then
          if a:FindFirstChild("Torso") or a:FindFirstChild("UpperTorso").Name == "Torso" then
            if a:FindFirstChild("Torso") or a:FindFirstChild("UpperTorso"):FindFirstChild("TorsoA") then
              a:FindFirstChild("Torso") or a:FindFirstChild("UpperTorso"):FindFirstChild("TorsoA"):Remove()
            end
            if a:FindFirstChild("Torso") or a:FindFirstChild("UpperTorso"):FindFirstChild("TorsoA1") then
              a:FindFirstChild("Torso") or a:FindFirstChild("UpperTorso"):FindFirstChild("TorsoA1"):Remove()
            end
          elseif a:FindFirstChild("RagdollConstraintUpperTorso") then
            a:FindFirstChild("RagdollConstraintUpperTorso"):Remove()
          end
        end
      end
    end
    function ManSlaughter(a)
      a = a
    end
    function ApplyDamage2(a, b, c)
      a = a
    end
    function BulletDetection(a, b, c)
      a = a
      coroutine.resume(coroutine.create(function()
        if va ~= nil and va.Parent ~= Character then
          if va.Parent.Parent:FindFirstChildOfClass("Humanoid") then
            if va.Parent:FindFirstChildOfClass("Humanoid") then
              if vb == true then
                ApplyDamage2(va.Parent:FindFirstChildOfClass("Humanoid"), 999, true)
              else
                getbloody(va, 3)
                va.Parent:BreakJoints()
                if va.Name == "Head" then
                  va.Name = "HEADSHOT"
                  va:remove()
                end
              end
            elseif vb == true then
              ApplyDamage2(va.Parent.Parent:FindFirstChildOfClass("Humanoid"), 999, true)
            else
              va.Parent.Parent:BreakJoints()
            end
          end
        end
      end))
      SpawnTrail(a, CastProperRay(a, b, 2000, Character))
      return CastProperRay(a, b, 2000, Character)
    end
    function Bomb()
      if va.Target.Parent ~= Character and va.Target.Parent.Parent ~= Character and va.Target.Parent:FindFirstChildOfClass("Humanoid") ~= nil then
        if (va.Target.Parent:FindFirstChildOfClass("Humanoid").Parent:FindFirstChild("Torso") or va.Target.Parent:FindFirstChildOfClass("Humanoid").Parent:FindFirstChild("UpperTorso")) and va.Target.Parent:FindFirstChildOfClass("Humanoid").Health > 0 then
          vb = true
          vc = false
          IT("BodyGyro", RootPart).D = 275
          IT("BodyGyro", RootPart).P = 20000
          IT("BodyGyro", RootPart).MaxTorque = VT(0, 40000, 0)
          Instance.new("BodyPosition", va.Target.Parent:FindFirstChildOfClass("Humanoid").Parent:FindFirstChild("Torso") or va.Target.Parent:FindFirstChildOfClass("Humanoid").Parent:FindFirstChild("UpperTorso")).D = 1500
          Instance.new("BodyPosition", va.Target.Parent:FindFirstChildOfClass("Humanoid").Parent:FindFirstChild("Torso") or va.Target.Parent:FindFirstChildOfClass("Humanoid").Parent:FindFirstChild("UpperTorso")).P = 20000
          Instance.new("BodyPosition", va.Target.Parent:FindFirstChildOfClass("Humanoid").Parent:FindFirstChild("Torso") or va.Target.Parent:FindFirstChildOfClass("Humanoid").Parent:FindFirstChild("UpperTorso")).maxForce = Vector3.new(math.huge, math.huge, math.huge)
          Instance.new("BodyPosition", va.Target.Parent:FindFirstChildOfClass("Humanoid").Parent:FindFirstChild("Torso") or va.Target.Parent:FindFirstChildOfClass("Humanoid").Parent:FindFirstChild("UpperTorso")).position = va.Target.Parent:FindFirstChildOfClass("Humanoid").Parent:FindFirstChild("Torso") or va.Target.Parent:FindFirstChildOfClass("Humanoid").Parent:FindFirstChild("UpperTorso").Position + VT(0, 0, 0)
          CreateSound(429459101, va.Target.Parent:FindFirstChildOfClass("Humanoid").Parent:FindFirstChild("Torso") or va.Target.Parent:FindFirstChildOfClass("Humanoid").Parent:FindFirstChild("UpperTorso"), 0.5, 1, false)
          for fm = 0, 4, 0.1 / Animation_Speed do
            Swait()
            IT("BodyGyro", RootPart).cframe = CF(RootPart.Position, va.Target.Parent:FindFirstChildOfClass("Humanoid").Parent:FindFirstChild("Torso") or va.Target.Parent:FindFirstChildOfClass("Humanoid").Parent:FindFirstChild("UpperTorso").Position)
            WACKYEFFECT({
              Time = 12,
              EffectType = "Block",
              Size = VT(0, 0, 0),
              Size2 = VT(1, 1, 1),
              Transparency = 0,
              Transparency2 = 1,
              CFrame = LeftArm.CFrame * CF(0, -1.5, 0),
              MoveToPos = nil,
              RotationX = 0,
              RotationY = 0,
              RotationZ = 0,
              Material = "Neon",
              Color = C3(1, 0, 0),
              SoundID = 0,
              SoundPitch = 2,
              SoundVolume = 0.8
            })
            RootJoint.C0 = Clerp(RootJoint.C0, vd * CF(0, 0, 0 + 0.05 * COS(ve / 15)) * ANGLES(RAD(0), RAD(0), RAD(-65)), 0.5 / Animation_Speed)
            Neck.C0 = Clerp(Neck.C0, vg * CF(0, 0, 0) * ANGLES(RAD(8), RAD(MRANDOM(-10, 10)), RAD(65)), 1 / Animation_Speed)
            RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(0), RAD(0), RAD(15)) * vh, 0.5 / Animation_Speed)
            LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(120), RAD(MRANDOM(-15, 15)), RAD(-90)) * vj, 1 / Animation_Speed)
            RightHip.C0 = Clerp(RightHip.C0, CF(1, -1 - 0.05 * COS(ve / 15), -0.01) * ANGLES(RAD(0), RAD(75), RAD(0)) * ANGLES(RAD(-7), RAD(0), RAD(0)), 0.5 / Animation_Speed)
            LeftHip.C0 = Clerp(LeftHip.C0, CF(-1, -1 - 0.05 * COS(ve / 15), -0.01) * ANGLES(RAD(0), RAD(-68), RAD(0)) * ANGLES(RAD(-7), RAD(0), RAD(0)), 0.5 / Animation_Speed)
          end
          SHAKECAM(Raycast(RootPart.Position, CF(RootPart.Position, RootPart.Position + VT(0, -1, 0)).lookVector, 25, Character))
          CreateSound(884348443, va.Target.Parent:FindFirstChildOfClass("Humanoid").Parent:FindFirstChild("Torso") or va.Target.Parent:FindFirstChildOfClass("Humanoid").Parent:FindFirstChild("UpperTorso"), 5, 0.8, false)
          killnearest(va.Target.Parent:FindFirstChildOfClass("Humanoid").Parent:FindFirstChild("Torso") or va.Target.Parent:FindFirstChildOfClass("Humanoid").Parent:FindFirstChild("UpperTorso").Position, 5, 5)
          for fm = 0, 1, 0.1 / Animation_Speed do
            Swait()
            WACKYEFFECT({
              Time = 12,
              EffectType = "Block",
              Size = VT(0, 0, 0),
              Size2 = VT(1, 1, 1),
              Transparency = 0,
              Transparency2 = 1,
              CFrame = LeftArm.CFrame * CF(0, -1.5, 0),
              MoveToPos = nil,
              RotationX = 0,
              RotationY = 0,
              RotationZ = 0,
              Material = "Neon",
              Color = C3(1, 0, 0),
              SoundID = 0,
              SoundPitch = 2,
              SoundVolume = 0.8
            })
            RootJoint.C0 = Clerp(RootJoint.C0, vd * CF(0, 0, 0 + 0.05 * COS(ve / 15)) * ANGLES(RAD(0), RAD(0), RAD(-65)), 0.5 / Animation_Speed)
            Neck.C0 = Clerp(Neck.C0, vg * CF(0, 0, 0) * ANGLES(RAD(8), RAD(MRANDOM(-10, 10)), RAD(65)), 1 / Animation_Speed)
            RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(0), RAD(0), RAD(15)) * vh, 0.5 / Animation_Speed)
            LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.5, 0.4, 0) * ANGLES(RAD(160), RAD(MRANDOM(-15, 15)), RAD(-70)) * vj, 1 / Animation_Speed)
            RightHip.C0 = Clerp(RightHip.C0, CF(1, -1 - 0.05 * COS(ve / 15), -0.01) * ANGLES(RAD(0), RAD(75), RAD(0)) * ANGLES(RAD(-7), RAD(0), RAD(0)), 0.5 / Animation_Speed)
            LeftHip.C0 = Clerp(LeftHip.C0, CF(-1, -1 - 0.05 * COS(ve / 15), -0.01) * ANGLES(RAD(0), RAD(-68), RAD(0)) * ANGLES(RAD(-7), RAD(0), RAD(0)), 0.5 / Animation_Speed)
          end
          IT("BodyGyro", RootPart):Remove()
          vb = false
          vc = false
        end
      end
    end
    function Bomb2()
      if va.Target ~= nil and va.Target.Parent:FindFirstChildOfClass("Humanoid") then
        if (va.Target.Parent:FindFirstChild("Torso") or va.Target.Parent:FindFirstChild("HumanoidRootPart") or va.Target.Parent:FindFirstChild("UpperTorso")) and 0 < va.Target.Parent:FindFirstChildOfClass("Humanoid").Health then
          RootPart.CFrame = va.Target.Parent:FindFirstChild("Torso") or va.Target.Parent:FindFirstChild("HumanoidRootPart") or va.Target.Parent:FindFirstChild("UpperTorso").CFrame * CF(0, 0, 4.2)
          va.Target.Parent:FindFirstChild("Torso") or va.Target.Parent:FindFirstChild("HumanoidRootPart") or va.Target.Parent:FindFirstChild("UpperTorso").Anchored = true
          if va.Target.Parent ~= Character and va.Target.Parent.Parent ~= Character and va.Target.Parent:FindFirstChildOfClass("Humanoid") ~= nil then
            if (va.Target.Parent:FindFirstChildOfClass("Humanoid").Parent:FindFirstChild("Torso") or va.Target.Parent:FindFirstChildOfClass("Humanoid").Parent:FindFirstChild("UpperTorso")) and 0 < va.Target.Parent:FindFirstChildOfClass("Humanoid").Health then
              vb = true
              vc = true
              vc = true
              for fp = 0, 3, 0.1 / Animation_Speed do
                Swait()
                RootJoint.C0 = Clerp(RootJoint.C0, vd * CF(0, 0, 0 + 0.05 * COS(ve / 15)) * ANGLES(RAD(0), RAD(0), RAD(65)), 0.5 / Animation_Speed)
                Neck.C0 = Clerp(Neck.C0, vg * CF(0, 0, 0) * ANGLES(RAD(8), RAD(0), RAD(65)), 1 / Animation_Speed)
                RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(0), RAD(0), RAD(15)) * vh, 0.5 / Animation_Speed)
                LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(90), RAD(0), RAD(-90)) * vj, 1 / Animation_Speed)
                RightHip.C0 = Clerp(RightHip.C0, CF(1, -1 - 0.05 * COS(ve / 15), -0.01) * ANGLES(RAD(0), RAD(68), RAD(0)) * ANGLES(RAD(-7), RAD(0), RAD(0)), 0.5 / Animation_Speed)
                LeftHip.C0 = Clerp(LeftHip.C0, CF(-1, -1 - 0.05 * COS(ve / 15), -0.01) * ANGLES(RAD(0), RAD(-75), RAD(0)) * ANGLES(RAD(-7), RAD(0), RAD(0)), 0.5 / Animation_Speed)
              end
              for ft, fu in pairs((workspace:GetDescendants())) do
                if fu.ClassName == "Model" and fu ~= Character and fu:FindFirstChildOfClass("Humanoid") and fu:FindFirstChild("Head") and 7 >= fu:FindFirstChild("Head").Position - RootPart.Position.Magnitude then
                  getbloody(fu:FindFirstChild("Head"), 5)
                  SHAKECAM(Raycast(RootPart.Position, CF(RootPart.Position, RootPart.Position + VT(0, -1, 0)).lookVector, 25, Character))
                  fu:FindFirstChild("Head"):remove()
                  if fu:FindFirstChild("Torso") then
                    Ragdoll(fu, Torso, true)
                  elseif fu:FindFirstChild("UpperTorso") then
                    R15Ragdoll(fu, true)
                  end
                end
              end
              CreateSound(887549720, va.Target.Parent:FindFirstChildOfClass("Humanoid").Parent:FindFirstChild("Torso") or va.Target.Parent:FindFirstChildOfClass("Humanoid").Parent:FindFirstChild("UpperTorso"), 5, 1, false)
              for ft = 0, 1, 0.1 / Animation_Speed do
                Swait()
                RootJoint.C0 = Clerp(RootJoint.C0, vd * CF(0, 0, 0 + 0.05 * COS(ve / 15)) * ANGLES(RAD(0), RAD(0), RAD(-90)), 1 / Animation_Speed)
                Neck.C0 = Clerp(Neck.C0, vg * CF(0, 0, 0) * ANGLES(RAD(8), RAD(0), RAD(120)), 1 / Animation_Speed)
                RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(0), RAD(0), RAD(15)) * vh, 0.5 / Animation_Speed)
                LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.5, 0.4, 0) * ANGLES(RAD(90), RAD(0), RAD(25)) * vj, 1 / Animation_Speed)
                RightHip.C0 = Clerp(RightHip.C0, CF(1, -1 - 0.05 * COS(ve / 15), -0.01) * ANGLES(RAD(0), RAD(75), RAD(0)) * ANGLES(RAD(-7), RAD(0), RAD(0)), 0.5 / Animation_Speed)
                LeftHip.C0 = Clerp(LeftHip.C0, CF(-1, -1 - 0.05 * COS(ve / 15), -0.01) * ANGLES(RAD(0), RAD(-65), RAD(0)) * ANGLES(RAD(-7), RAD(0), RAD(0)), 0.5 / Animation_Speed)
              end
              vb = false
              vc = false
            end
          end
        end
      end
    end
    function Taunt()
      va = true
      vb = true
      CreateSound(967069404, Head, 10, 0.9, false)
      for fd = 0, 4, 0.1 / Animation_Speed do
        Swait()
        RootJoint.C0 = Clerp(RootJoint.C0, vc * CF(0, 0, 0 + 0.05 * COS(vd / 2)) * ANGLES(RAD(10), RAD(0), RAD(0)), 0.5 / Animation_Speed)
        Neck.C0 = Clerp(Neck.C0, ve * CF(0, 0, 0) * ANGLES(RAD(-10), RAD(0), RAD(0)), 0.5 / Animation_Speed)
        RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(90), RAD(COS(10 * vd / 2)), RAD(0)) * vg, 0.5 / Animation_Speed)
        LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(COS(-10 * vd / 2)), RAD(COS(-10 * vd / 2)), RAD(-8)) * vh, 0.5 / Animation_Speed)
        RightHip.C0 = Clerp(RightHip.C0, CF(1, -1 - 0.05 * COS(vd / 2), -0.01) * ANGLES(RAD(10), RAD(75), RAD(0)) * ANGLES(RAD(-7), RAD(0), RAD(0)), 0.5 / Animation_Speed)
        LeftHip.C0 = Clerp(LeftHip.C0, CF(-1, -1 - 0.05 * COS(vd / 2), -0.01) * ANGLES(RAD(10), RAD(-75), RAD(0)) * ANGLES(RAD(-7), RAD(0), RAD(0)), 0.5 / Animation_Speed)
      end
      va = false
      vb = false
    end
    function Zone()
      va = true
      vb = true
      IT("BodyGyro", nil).D = 175
      IT("BodyGyro", nil).P = 20000
      IT("BodyGyro", nil).MaxTorque = VT(0, 40000, 0)
      IT("BodyGyro", nil).cframe = CF(RootPart.Position, vc.Hit.p)
      for fe = 0, 0.7, 0.1 / Animation_Speed do
        Swait()
        IT("BodyGyro", nil).cframe = CF(RootPart.Position, vc.Hit.p)
        RootJoint.C0 = Clerp(RootJoint.C0, vd * CF(0, 0, 0 + 0.05 * COS(ve / 12)) * ANGLES(RAD(-8), RAD(0), RAD(0)), 0.15 / Animation_Speed)
        Neck.C0 = Clerp(Neck.C0, vg * CF(0, 0, 0) * ANGLES(RAD(8), RAD(0), RAD(0)), 0.15 / Animation_Speed)
        RightShoulder.C0 = Clerp(RightShoulder.C0, CF(0.9, 0.3, -0.5) * ANGLES(RAD(50), RAD(0), RAD(-50)) * vh, 0.5 / Animation_Speed)
        LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(180), RAD(0), RAD(-15)) * vj, 0.5 / Animation_Speed)
        RightHip.C0 = Clerp(RightHip.C0, CF(1, -1 - 0.05 * COS(ve / 12), -0.01) * ANGLES(RAD(-9), RAD(82), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.15 / Animation_Speed)
        LeftHip.C0 = Clerp(LeftHip.C0, CF(-1, -1 - 0.05 * COS(ve / 12), -0.01) * ANGLES(RAD(-9), RAD(-82), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.15 / Animation_Speed)
      end
      for fe = 0, 0.7, 0.1 / Animation_Speed do
        Swait()
        IT("BodyGyro", nil).cframe = CF(RootPart.Position, vc.Hit.p)
        RootJoint.C0 = Clerp(RootJoint.C0, vd * CF(0, 0, 0 + 0.05 * COS(ve / 12)) * ANGLES(RAD(-8), RAD(0), RAD(0)), 0.15 / Animation_Speed)
        Neck.C0 = Clerp(Neck.C0, vg * CF(0, 0, 0) * ANGLES(RAD(8), RAD(0), RAD(0)), 0.15 / Animation_Speed)
        RightShoulder.C0 = Clerp(RightShoulder.C0, CF(0.9, 0.3, -0.5) * ANGLES(RAD(50), RAD(0), RAD(-50)) * vh, 0.5 / Animation_Speed)
        LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(90), RAD(25), RAD(30)) * vj, 0.5 / Animation_Speed)
        RightHip.C0 = Clerp(RightHip.C0, CF(1, -1 - 0.05 * COS(ve / 12), -0.01) * ANGLES(RAD(-9), RAD(82), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.15 / Animation_Speed)
        LeftHip.C0 = Clerp(LeftHip.C0, CF(-1, -1 - 0.05 * COS(ve / 12), -0.01) * ANGLES(RAD(-9), RAD(-82), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.15 / Animation_Speed)
      end
      CreateSound(317130715, vk, 7, 1.3, false)
      for fe = 0, 0.7, 0.1 / Animation_Speed do
        Swait()
        IT("BodyGyro", nil).cframe = CF(RootPart.Position, vc.Hit.p)
        RootJoint.C0 = Clerp(RootJoint.C0, vd * CF(0, 0, 0 + 0.05 * COS(ve / 12)) * ANGLES(RAD(-8), RAD(0), RAD(0)), 0.15 / Animation_Speed)
        Neck.C0 = Clerp(Neck.C0, vg * CF(0, 0, 0) * ANGLES(RAD(8), RAD(0), RAD(0)), 0.15 / Animation_Speed)
        RightShoulder.C0 = Clerp(RightShoulder.C0, CF(0.9, 0.3, -0.5) * ANGLES(RAD(50), RAD(0), RAD(-50)) * vh, 0.5 / Animation_Speed)
        LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(90), RAD(25), RAD(50)) * vj, 0.5 / Animation_Speed)
        RightHip.C0 = Clerp(RightHip.C0, CF(1, -1 - 0.05 * COS(ve / 12), -0.01) * ANGLES(RAD(-9), RAD(82), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.15 / Animation_Speed)
        LeftHip.C0 = Clerp(LeftHip.C0, CF(-1, -1 - 0.05 * COS(ve / 12), -0.01) * ANGLES(RAD(-9), RAD(-82), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.15 / Animation_Speed)
      end
      repeat
        for fe = 0, 0.1, 0.1 / Animation_Speed do
          Swait()
          IT("BodyGyro", nil).cframe = CF(RootPart.Position, vc.Hit.p)
          RootJoint.C0 = Clerp(RootJoint.C0, vd * CF(0, 0, 0 + 0.05 * COS(ve / 12)) * ANGLES(RAD(0), RAD(0), RAD(35)), 0.15 / Animation_Speed)
          Neck.C0 = Clerp(Neck.C0, vg * CF(0, 0, 0) * ANGLES(RAD(0), RAD(0), RAD(-35)), 0.5 / Animation_Speed)
          RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(90), RAD(MRANDOM(-10, 10)), RAD(35)) * vh, 0.5 / Animation_Speed)
          LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(0), RAD(0), RAD(-12)) * vj, 0.5 / Animation_Speed)
          RightHip.C0 = Clerp(RightHip.C0, CF(1, -1 - 0.05 * COS(ve / 12), -0.01) * ANGLES(RAD(0), RAD(70), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.15 / Animation_Speed)
          LeftHip.C0 = Clerp(LeftHip.C0, CF(-1, -1 - 0.05 * COS(ve / 12), -0.01) * ANGLES(RAD(0), RAD(-78), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.15 / Animation_Speed)
        end
        BulletDetection(vk.Position, vc.Hit.p, true)
        WACKYEFFECT({
          Time = 12,
          EffectType = "Block",
          Size = VT(0, 0, 0),
          Size2 = VT(0.8, 0.8, 0.8),
          Transparency = 0,
          Transparency2 = 1,
          CFrame = CF(AttachmentCFrame(vk.Nuzzle).p),
          MoveToPos = nil,
          RotationX = 0,
          RotationY = 0,
          RotationZ = 0,
          Material = "Glass",
          Color = C3(1, 1, 0),
          SoundID = 745308042,
          SoundPitch = 2,
          SoundVolume = 0.8
        })
        WACKYEFFECT({
          Time = 8,
          EffectType = "Box",
          Size = VT(0, 0, CastProperRay(AttachmentCFrame(vk.Nuzzle).p, vl, 1000, Character) - AttachmentCFrame(vk.Nuzzle).p.Magnitude),
          Size2 = VT(0.1, 0.1, CastProperRay(AttachmentCFrame(vk.Nuzzle).p, vl, 1000, Character) - AttachmentCFrame(vk.Nuzzle).p.Magnitude),
          Transparency = 0,
          Transparency2 = 1,
          CFrame = CF(AttachmentCFrame(vk.Nuzzle).p, CastProperRay(AttachmentCFrame(vk.Nuzzle).p, vl, 1000, Character)) * CF(0, 0, -CastProperRay(AttachmentCFrame(vk.Nuzzle).p, vl, 1000, Character) - AttachmentCFrame(vk.Nuzzle).p.Magnitude / 2),
          MoveToPos = nil,
          RotationX = 0,
          RotationY = 0,
          RotationZ = 0,
          Material = "Glass",
          Color = C3(1, 1, 0),
          SoundID = nil,
          SoundPitch = nil,
          SoundVolume = nil
        })
        SHAKECAM(Raycast(RootPart.Position, CF(RootPart.Position, RootPart.Position + VT(0, -1, 0)).lookVector, 25, Character))
        for fm = 0, 0.08, 0.1 / Animation_Speed do
          Swait()
          IT("BodyGyro", nil).cframe = CF(RootPart.Position, vc.Hit.p)
          RootJoint.C0 = Clerp(RootJoint.C0, vd * CF(0, 0, 0 + 0.05 * COS(ve / 12)) * ANGLES(RAD(0), RAD(0), RAD(35)), 0.15 / Animation_Speed)
          Neck.C0 = Clerp(Neck.C0, vg * CF(0, 0, 0) * ANGLES(RAD(0), RAD(0), RAD(-35)), 0.5 / Animation_Speed)
          RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5, 0.5, 0.3) * ANGLES(RAD(100), RAD(MRANDOM(-10, 10)), RAD(35)) * vh, 0.5 / Animation_Speed)
          LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(0), RAD(0), RAD(-12)) * vj, 0.5 / Animation_Speed)
          RightHip.C0 = Clerp(RightHip.C0, CF(1, -1 - 0.05 * COS(ve / 12), -0.01) * ANGLES(RAD(0), RAD(70), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.15 / Animation_Speed)
          LeftHip.C0 = Clerp(LeftHip.C0, CF(-1, -1 - 0.05 * COS(ve / 12), -0.01) * ANGLES(RAD(0), RAD(-78), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.15 / Animation_Speed)
        end
      until vm == false
      for fe = 0, 1, 0.1 / Animation_Speed do
        Swait()
        RootJoint.C0 = Clerp(RootJoint.C0, vd * CF(0, 0, 0 + 0.05 * COS(ve / 12)) * ANGLES(RAD(0), RAD(0), RAD(35)), 0.15 / Animation_Speed)
        Neck.C0 = Clerp(Neck.C0, vg * CF(0, 0, 0) * ANGLES(RAD(0), RAD(0), RAD(-35)), 0.5 / Animation_Speed)
        RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(90), RAD(0), RAD(35)) * vh, 0.5 / Animation_Speed)
        LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(0), RAD(0), RAD(-12)) * vj, 0.5 / Animation_Speed)
        RightHip.C0 = Clerp(RightHip.C0, CF(1, -1 - 0.05 * COS(ve / 12), -0.01) * ANGLES(RAD(0), RAD(70), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.15 / Animation_Speed)
        LeftHip.C0 = Clerp(LeftHip.C0, CF(-1, -1 - 0.05 * COS(ve / 12), -0.01) * ANGLES(RAD(0), RAD(-78), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.15 / Animation_Speed)
      end
      IT("BodyGyro", nil):Remove()
      va = false
      vb = false
    end
    Humanoid.Animator.Parent = nil
    function MouseDown(a)
      a = a
      repeat
      until va == false
    end
    function MouseUp(a)
      a = a
      va = false
    end
    function KeyDown(a)
      a = a
      va = true
      if a == "z" and vb == false then
        Zone()
      end
    end
    function KeyUp(a)
      a = a
      va = false
    end
    game.Players.LocalPlayer:GetMouse().Button1Down:connect(function(a)
      a = a
      MouseDown(a)
    end)
    game.Players.LocalPlayer:GetMouse().Button1Up:connect(function(a)
      a = a
      MouseUp(a)
    end)
    game.Players.LocalPlayer:GetMouse().KeyDown:connect(function(a)
      a = a
      KeyDown(a)
    end)
    game.Players.LocalPlayer:GetMouse().KeyUp:connect(function(a)
      a = a
      KeyUp(a)
    end)
    function unanchor()
      if va == true then
        g = vb:GetChildren()
        for fd = 1, #g do
          if g[fd].ClassName == "Part" then
            g[fd].Anchored = false
          end
        end
      end
    end
    Humanoid.Changed:connect(function(a)
      a = a
      if a == "Jump" and Disable_Jump == true then
        Humanoid.Jump = false
      end
    end)
    while true do
      Swait()
      Character:FindFirstChild("Animate").Parent = nil
      if Character:FindFirstChildOfClass("Humanoid") == nil then
        Humanoid = IT("Humanoid", Character)
      end
      for faz, faq in next, Humanoid:GetPlayingAnimationTracks() do
        faq:Stop()
      end
      if "Idle" == "Walk" and RootPart.Velocity * VT(1, 0, 1).magnitude > 1 then
        RootJoint.C1 = Clerp(RootJoint.C1, CF(0, 0, 0) * ANGLES(RAD(-90), RAD(0), RAD(180)) * CF(0, 0, -0.15 * COS((0 + 2 / Animation_Speed) / (6 / (Humanoid.WalkSpeed / 16) / 2))) * ANGLES(RAD(-RootPart.Velocity.y), RAD(0) - RootPart.RotVelocity.Y / 75, RAD(0)), 2 * (Humanoid.WalkSpeed / 16) / Animation_Speed)
        Neck.C1 = Clerp(Neck.C1, CF(0, -0.5, 0) * ANGLES(RAD(-90), RAD(0), RAD(180)) * ANGLES(RAD(2.5 * SIN((0 + 2 / Animation_Speed) / (6 / (Humanoid.WalkSpeed / 16) / 2))), RAD(0), RAD(0) - Head.RotVelocity.Y / 25), 0.2 * (Humanoid.WalkSpeed / 16) / Animation_Speed)
        RightHip.C1 = Clerp(RightHip.C1, CF(0.5, 0.875 - 0.555 * SIN((0 + 2 / Animation_Speed) / (6 / (Humanoid.WalkSpeed / 16))) - 0.15 * COS((0 + 2 / Animation_Speed) / (6 / (Humanoid.WalkSpeed / 16)) * 2), -0.7 * COS((0 + 2 / Animation_Speed) / (6 / (Humanoid.WalkSpeed / 16))) + 0.2 + 0.2 * COS((0 + 2 / Animation_Speed) / (6 / (Humanoid.WalkSpeed / 16)))) * ANGLES(RAD(0), RAD(90), RAD(-RootPart.Velocity.y)) * ANGLES(RAD(0) - RightLeg.RotVelocity.Y / 75, RAD(0), RAD(85 * COS((0 + 2 / Animation_Speed) / (6 / (Humanoid.WalkSpeed / 16))))), 0.2 * (Humanoid.WalkSpeed / 16) / Animation_Speed)
        LeftHip.C1 = Clerp(LeftHip.C1, CF(-0.5, 0.875 + 0.555 * SIN((0 + 2 / Animation_Speed) / (6 / (Humanoid.WalkSpeed / 16))) - 0.15 * COS((0 + 2 / Animation_Speed) / (6 / (Humanoid.WalkSpeed / 16)) * 2), 0.7 * COS((0 + 2 / Animation_Speed) / (6 / (Humanoid.WalkSpeed / 16))) + 0.2 + -0.2 * COS((0 + 2 / Animation_Speed) / (6 / (Humanoid.WalkSpeed / 16)))) * ANGLES(RAD(0), RAD(-90), RAD(-RootPart.Velocity.y)) * ANGLES(RAD(0) + LeftLeg.RotVelocity.Y / 75, RAD(0), RAD(85 * COS((0 + 2 / Animation_Speed) / (6 / (Humanoid.WalkSpeed / 16))))), 0.2 * (Humanoid.WalkSpeed / 16) / Animation_Speed)
      elseif RootPart.Velocity * VT(1, 0, 1).magnitude < 1 then
        RootJoint.C1 = Clerp(RootJoint.C1, CF(0, 0, 0) * ANGLES(RAD(-90), RAD(0), RAD(180)) * CF(0, 0, 0) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.2 / Animation_Speed)
        Neck.C1 = Clerp(Neck.C1, CF(0, -0.5, 0) * ANGLES(RAD(-90), RAD(0), RAD(180)) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.2 / Animation_Speed)
        RightHip.C1 = Clerp(RightHip.C1, CF(0.5, 1, 0) * ANGLES(RAD(0), RAD(85), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.2 / Animation_Speed)
        LeftHip.C1 = Clerp(LeftHip.C1, CF(-0.5, 1, 0) * ANGLES(RAD(0), RAD(-85), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.2 / Animation_Speed)
      end
      if RootPart.Velocity.y > 1 and Raycast(RootPart.Position, CF(RootPart.Position, RootPart.Position + VT(0, -1, 0)).lookVector, 5, Character) == nil then
        if false == false then
          RootJoint.C0 = Clerp(RootJoint.C0, CF(0, 0, 0) * ANGLES(RAD(-90), RAD(0), RAD(180)) * CF(0, 0, 0 + 0.05 * COS((0 + 2 / Animation_Speed) / 12)) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.5 / Animation_Speed)
          Neck.C0 = Clerp(Neck.C0, CF(0, 1, 0) * ANGLES(RAD(-90), RAD(0), RAD(180)) * CF(0, 0, 0) * ANGLES(RAD(-25 - 2.5 * SIN((0 + 2 / Animation_Speed) / 12)), RAD(0), RAD(0)), 0.5 / Animation_Speed)
          RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(0), RAD(0), RAD(0)) * (CF(-0.5, 0, 0) * ANGLES(RAD(0), RAD(90), RAD(0))), 0.5 / Animation_Speed)
          LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(0), RAD(0), RAD(0)) * (CF(0.5, 0, 0) * ANGLES(RAD(0), RAD(-90), RAD(0))), 0.5 / Animation_Speed)
          RightHip.C0 = Clerp(RightHip.C0, CF(1, -1 - 0.05 * COS((0 + 2 / Animation_Speed) / 12), -0.01) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(-4), RAD(0), RAD(15)), 0.5 / Animation_Speed)
          LeftHip.C0 = Clerp(LeftHip.C0, CF(-1, -1 - 0.05 * COS((0 + 2 / Animation_Speed) / 12), -0.01) * ANGLES(RAD(0), RAD(-90), RAD(0)) * ANGLES(RAD(-4), RAD(0), RAD(0)), 0.5 / Animation_Speed)
        end
      elseif RootPart.Velocity.y < -1 and Raycast(RootPart.Position, CF(RootPart.Position, RootPart.Position + VT(0, -1, 0)).lookVector, 5, Character) == nil then
        if false == false then
          RootJoint.C0 = Clerp(RootJoint.C0, CF(0, 0, 0) * ANGLES(RAD(-90), RAD(0), RAD(180)) * CF(0, 0, 0 + 0.05 * COS((0 + 2 / Animation_Speed) / 12)) * ANGLES(RAD(-8), RAD(0), RAD(8 * SIN((0 + 2 / Animation_Speed) / 8))), 0.5 / Animation_Speed)
          Neck.C0 = Clerp(Neck.C0, CF(0, 1, 0) * ANGLES(RAD(-90), RAD(0), RAD(180)) * CF(0, 0, 0) * ANGLES(RAD(15), RAD(0), RAD(8 * SIN((0 + 2 / Animation_Speed) / 8))), 0.5 / Animation_Speed)
          RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(0), RAD(0), RAD(45)) * (CF(-0.5, 0, 0) * ANGLES(RAD(0), RAD(90), RAD(0))), 0.5 / Animation_Speed)
          LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(0), RAD(0), RAD(-45)) * (CF(0.5, 0, 0) * ANGLES(RAD(0), RAD(-90), RAD(0))), 0.5 / Animation_Speed)
          RightHip.C0 = Clerp(RightHip.C0, CF(1, -1 - 0.05 * COS((0 + 2 / Animation_Speed) / 12), -0.01) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(-8), RAD(0), RAD(15)), 0.5 / Animation_Speed)
          LeftHip.C0 = Clerp(LeftHip.C0, CF(-1, -1 - 0.05 * COS((0 + 2 / Animation_Speed) / 12), -0.01) * ANGLES(RAD(0), RAD(-90), RAD(0)) * ANGLES(RAD(-8), RAD(0), RAD(0)), 0.5 / Animation_Speed)
        end
      elseif RootPart.Velocity * VT(1, 0, 1).magnitude < 1 and Raycast(RootPart.Position, CF(RootPart.Position, RootPart.Position + VT(0, -1, 0)).lookVector, 5, Character) ~= nil then
        if false == false then
          RootJoint.C0 = Clerp(RootJoint.C0, CF(0, 0, 0) * ANGLES(RAD(-90), RAD(0), RAD(180)) * CF(0, 0, 0 - 0.1 * SIN((0 + 2 / Animation_Speed) / 25)) * ANGLES(RAD(0), RAD(0), RAD(25)), 0.15 / Animation_Speed)
          Neck.C0 = Clerp(Neck.C0, CF(0, 1, 0) * ANGLES(RAD(-90), RAD(0), RAD(180)) * CF(0, 0, 0) * ANGLES(RAD(0), RAD(8 * SIN((0 + 2 / Animation_Speed) / 26)), RAD(-25 - 8.5 * SIN((0 + 2 / Animation_Speed) / 25))), 0.15 / Animation_Speed)
          RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(8 * SIN((0 + 2 / Animation_Speed) / 26)), RAD(-10), RAD(6 + 8.5 * SIN((0 + 2 / Animation_Speed) / 25))) * (CF(-0.5, 0, 0) * ANGLES(RAD(0), RAD(90), RAD(0))), 0.15 / Animation_Speed)
          LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-0.8, 0.4, -0.7) * ANGLES(RAD(90), RAD(0), RAD(86)) * (CF(0.5, 0, 0) * ANGLES(RAD(0), RAD(-90), RAD(0))), 0.15 / Animation_Speed)
          RightHip.C0 = Clerp(RightHip.C0, CF(1, -1 + 0.1 * SIN((0 + 2 / Animation_Speed) / 25), -0.01) * ANGLES(RAD(0), RAD(70), RAD(0)) * ANGLES(RAD(-2), RAD(0), RAD(0)), 0.15 / Animation_Speed)
          LeftHip.C0 = Clerp(LeftHip.C0, CF(-1, -1 + 0.1 * SIN((0 + 2 / Animation_Speed) / 25), -0.01) * ANGLES(RAD(0), RAD(-85), RAD(0)) * ANGLES(RAD(-2), RAD(0), RAD(0)), 0.15 / Animation_Speed)
        end
      elseif RootPart.Velocity * VT(1, 0, 1).magnitude > 1 and Raycast(RootPart.Position, CF(RootPart.Position, RootPart.Position + VT(0, -1, 0)).lookVector, 5, Character) ~= nil and false == false then
        RootJoint.C0 = Clerp(RootJoint.C0, CF(0, 0, 0) * ANGLES(RAD(-90), RAD(0), RAD(180)) * CF(0, 0.3, 0) * ANGLES(RAD(16), RAD(0), RAD(10 * COS((0 + 2 / Animation_Speed) / (6 / (Humanoid.WalkSpeed / 16))))), 0.15 / Animation_Speed)
        Neck.C0 = Clerp(Neck.C0, CF(0, 1, 0) * ANGLES(RAD(-90), RAD(0), RAD(180)) * CF(0, 0, 0) * ANGLES(RAD(-16 - 8.5 * SIN((0 + 2 / Animation_Speed) / (6 / (Humanoid.WalkSpeed / 16)))), RAD(0), RAD(-10 * COS((0 + 2 / Animation_Speed) / (6 / (Humanoid.WalkSpeed / 16))))), 0.15 / Animation_Speed)
        RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(0), RAD(-10), RAD(6)) * (CF(-0.5, 0, 0) * ANGLES(RAD(0), RAD(90), RAD(0))), 0.15 / Animation_Speed)
        LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(-(8 + Humanoid.WalkSpeed * 2 * 1.25) * COS((0 + 2 / Animation_Speed) / (6 / (Humanoid.WalkSpeed / 16)))), RAD(0), RAD(-22 * COS((0 + 2 / Animation_Speed) / (6 / (Humanoid.WalkSpeed / 16))))) * (CF(0.5, 0, 0) * ANGLES(RAD(0), RAD(-90), RAD(0))), 1 / Animation_Speed)
        RightHip.C0 = Clerp(RightHip.C0, CF(1, -1, 0) * ANGLES(RAD(0), RAD(86 - 35 * COS((0 + 2 / Animation_Speed) / (6 / (Humanoid.WalkSpeed / 16)))), RAD(0)) * ANGLES(RAD(0), RAD(10 * COS((0 + 2 / Animation_Speed) / (6 / (Humanoid.WalkSpeed / 16)))), RAD(0)), 0.15 / Animation_Speed)
        LeftHip.C0 = Clerp(LeftHip.C0, CF(-1, -1, 0) * ANGLES(RAD(0), RAD(-86 - 35 * COS((0 + 2 / Animation_Speed) / (6 / (Humanoid.WalkSpeed / 16)))), RAD(0)) * ANGLES(RAD(0), RAD(10 * COS((0 + 2 / Animation_Speed) / (6 / (Humanoid.WalkSpeed / 16)))), RAD(0)), 0.15 / Animation_Speed)
      end
      unanchor()
      Humanoid.MaxHealth = "inf"
      Humanoid.Health = "inf"
      if false == false then
        Disable_Jump = false
        Humanoid.WalkSpeed = 25
      elseif false == true then
        Disable_Jump = true
        Humanoid.WalkSpeed = 0
      end
      IT("Sound", RootPart).SoundId = "rbxassetid://" .. 1305709235
      IT("Sound", RootPart).Looped = true
      IT("Sound", RootPart).Pitch = 1
      IT("Sound", RootPart).Volume = 2
      IT("Sound", RootPart).Playing = true
      IT("Sound", RootPart).EmitterSize = 35
      if IT("Sound", RootPart).Parent ~= RootPart then
        print("Fixing music")
        IT("Sound", RootPart).SoundId = "rbxassetid://" .. 1305709235
        IT("Sound", RootPart).Looped = true
        IT("Sound", RootPart).Pitch = 1
        IT("Sound", RootPart).Volume = 2
        IT("Sound", RootPart).Playing = true
        IT("Sound", RootPart).EmitterSize = 25
        IT("Sound", RootPart).TimePosition = TIMESTAMP
        FIXING = true
      elseif FIXING == false then
        TIMESTAMP = IT("Sound", RootPart).TimePosition
      else
        FIXING = false
      end
    end
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Hat Scripts"):NewSection("Hat Scripts"):NewButton("Nebula Glitcher", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    workspace.FallenPartsDestroyHeight = -math.huge
    game.Players.LocalPlayer.Character.MeshPartAccessory.Name = "Sword1"
    game.Players.LocalPlayer.Character.MeshPartAccessory.Name = "Sword2"
    game.Players.LocalPlayer.Character.MeshPartAccessory.Name = "Sword3"
    game.Players.LocalPlayer.Character.MeshPartAccessory.Name = "Sword4"
    print(setmetatable({}, {
      __index = function(a, b)
        a = a
        return game:service(b)
      end
    }).UserInputService, setmetatable({}, {
      __index = function(a, b)
        a = a
        return game:service(b)
      end
    }).ContextActionService)
    Instance.new("Folder", setmetatable({}, {
      __index = function(a, b)
        a = a
        return game:service(b)
      end
    }).Players.LocalPlayer.Character.Raw).Name = "Effects"
    function Output(a, ...)
      a = a
      warn(table.concat({
        (...),
        "\t"
      }))
    end
    Output("Note", "NEBULAGLITCHER V1.2")
    Output("Note", "INITIAL CREATION: 11th of May, 2018")
    Output("Note", "LAST UPDATE: 6th of June, 2018")
    Output("Warn", "LEGEND:")
    Output("Warn", "* - Exclusive")
    Output("Warn", "MODE1 -> MODE2 - Transformation")
    Output("Warn", "! - Brand new")
    Output("Warn", "? - Spoiler/Upcoming")
    Output("Print", "===========================")
    Output("Note", "! Finally finished the 'demo' modes (The first 6 modes, and The Big Black)")
    Output("Print", "===========================")
    Output("Note", "Thank you for supporting the development of NebulaGlitcher!")
    function Sound(a, b, c, d, e, g, h)
      a = a
      va("Sound").SoundId = "rbxassetid://" .. tostring(b or 0)
      va("Sound").Pitch = c or 1
      va("Sound").Volume = d or 1
      va("Sound").Looped = e or false
      if h then
        coroutine.wrap(function()
          repeat
            wait()
          until va.IsLoaded
          va.Playing = vb or false
        end)()
      end
      if not e and g then
        va("Sound").Stopped:connect(function()
          va.Volume = 0
          va:destroy()
        end)
      elseif g then
        warn("Sound can't be looped and a sound effect!")
      end
      va("Sound").Parent = a or vb
      return (va("Sound"))
    end
    function Part(a, b, c, d, e, g, h)
      a = a
      va("Part").Parent = a or vb
      va("Part")["BrickColor" or "Color"] = b or vc.N(0, 0, 0)
      va("Part").Material = c or Enum.Material.SmoothPlastic
      va("Part").TopSurface, va("Part").BottomSurface = 10, 10
      va("Part").Size = d or vd.N(1, 1, 1)
      va("Part").CFrame = e or ve.N(0, 0, 0)
      va("Part").CanCollide = h or false
      va("Part").Anchored = g or false
      return (va("Part"))
    end
    function Weld(a, b, c, d)
      a = a
      va("Weld").Parent = a
      va("Weld").Part0 = a
      va("Weld").Part1 = b
      va("Weld").C0 = c or vb.N()
      va("Weld").C1 = d or vb.N()
      return (va("Weld"))
    end
    function Mesh(a, b, c, d, e, g)
      a = a
      va("SpecialMesh").MeshId = c or ""
      va("SpecialMesh").TextureId = d or ""
      va("SpecialMesh").Scale = e or vb.N(1, 1, 1)
      va("SpecialMesh").Offset = g or vb.N(0, 0, 0)
      va("SpecialMesh").MeshType = b or Enum.MeshType.Sphere
      va("SpecialMesh").Parent = a
      return (va("SpecialMesh"))
    end
    function NewInstance(a, b, c)
      a = a
      Instance.new(a).Parent = b
      if c then
        for fj, fk in next, c, nil do
          pcall(function()
            va[vb] = vc
          end)
        end
      end
      return (Instance.new(a))
    end
    function Clone(a, b, c)
      a = a
      a:Clone().Parent = b
      if c then
        for fj, fk in next, c, nil do
          pcall(function()
            va[vb] = vc
          end)
        end
      end
      return (a:Clone())
    end
    function SoundPart(a, b, c, d, e, g, h)
      a = a
      vd("Sound").SoundId = "rbxassetid://" .. tostring(a or 0)
      vd("Sound").Pitch = b or 1
      vd("Sound").Volume = c or 1
      vd("Sound").Looped = d or false
      if g then
        coroutine.wrap(function()
          repeat
            wait()
          until va.IsLoaded
          va.Playing = vb or false
        end)()
      end
      if not d and e then
        vd("Sound").Stopped:connect(function()
          va.Volume = 0
          vb:destroy()
        end)
      elseif e then
        warn("Sound can't be looped and a sound effect!")
      end
      vd("Sound").Parent = NewInstance("Part", va, {
        Transparency = 1,
        CFrame = h or vb.CFrame,
        Anchored = true,
        CanCollide = false,
        Size = vc.N()
      })
      return vd("Sound"), (NewInstance("Part", va, {
        Transparency = 1,
        CFrame = h or vb.CFrame,
        Anchored = true,
        CanCollide = false,
        Size = vc.N()
      }))
    end
    function CamShake(a, b, c, d)
      a = a
      coroutine.wrap(function()
        if script:FindFirstChild("CamShake") then
          script.CamShake:Clone():WaitForChild("intensity").Value = va
          script.CamShake:Clone():WaitForChild("times").Value = vb
          if vc then
            NewInstance("ObjectValue" or typeof(vc) == "Vector3" and "Vector3Value", script.CamShake:Clone(), {Name = "origin", Value = vc})
          end
          script.CamShake:Clone().Parent = vd
          wait()
          script.CamShake:Clone().Disabled = false
        else
          if vd ~= ve and vd ~= vg then
          end
          if vd:IsDescendantOf(ve) then
            for fg = 1, vb do
              if typeof(vc) == "Instance" and vc:IsA("BasePart") then
              elseif typeof(vc) == "Vector3" then
              end
              if math.floor(workspace.CurrentCamera.CFrame.p - vc.magnitude) / 25 then
              end
              workspace.CurrentCamera.CFrame = workspace.CurrentCamera.CFrame:lerp(workspace.CurrentCamera.CFrame * CFrame.new(math.random(-math.min(va, math.floor(va / (math.floor(workspace.CurrentCamera.CFrame.p - vc.magnitude) / 25))), (math.min(va, math.floor(va / (math.floor(workspace.CurrentCamera.CFrame.p - vc.magnitude) / 25))))) / 100, math.random(-math.min(va, math.floor(va / (math.floor(workspace.CurrentCamera.CFrame.p - vc.magnitude) / 25))), (math.min(va, math.floor(va / (math.floor(workspace.CurrentCamera.CFrame.p - vc.magnitude) / 25))))) / 100, math.random(-math.min(va, math.floor(va / (math.floor(workspace.CurrentCamera.CFrame.p - vc.magnitude) / 25))), (math.min(va, math.floor(va / (math.floor(workspace.CurrentCamera.CFrame.p - vc.magnitude) / 25))))) / 100) * CFrame.Angles(math.rad(math.random(-math.min(va, math.floor(va / (math.floor(workspace.CurrentCamera.CFrame.p - vc.magnitude) / 25))), (math.min(va, math.floor(va / (math.floor(workspace.CurrentCamera.CFrame.p - vc.magnitude) / 25))))) / 100), math.rad(math.random(-math.min(va, math.floor(va / (math.floor(workspace.CurrentCamera.CFrame.p - vc.magnitude) / 25))), (math.min(va, math.floor(va / (math.floor(workspace.CurrentCamera.CFrame.p - vc.magnitude) / 25))))) / 100), math.rad(math.random(-math.min(va, math.floor(va / (math.floor(workspace.CurrentCamera.CFrame.p - vc.magnitude) / 25))), (math.min(va, math.floor(va / (math.floor(workspace.CurrentCamera.CFrame.p - vc.magnitude) / 25))))) / 100)), 0.4)
              swait()
            end
          end
        end
      end)()
    end
    function CamShakeAll(a, b, c)
      a = a
      for fh, fj in next, va:players() do
        CamShake(fj:FindFirstChildOfClass("Backpack") or fj:FindFirstChildOfClass("PlayerGui") or fj.Character, a, b, c)
      end
    end
    function CamShakeAOE(a, b, c, d, e)
      a = a
      for fl, fm in next, getRegion(a, b, e or {}) do
        if va.Players:GetPlayerFromCharacter(fm.Parent) and fm.Parent and not {
          [fm.Parent] = true
        }[fm.Parent] and fm.Parent:FindFirstChildOfClass("Humanoid") then
          CamShake(fm, c, d, a)
        end
      end
    end
    function ServerScript(a)
      a = a
      if script:FindFirstChild("Loadstring") then
        script.Loadstring:Clone():WaitForChild("Sauce").Value = a
        script.Loadstring:Clone().Disabled = false
        script.Loadstring:Clone().Parent = workspace
      elseif NS and typeof(NS) == "function" then
        NS(a, workspace)
      else
        warn("no serverscripts lol")
      end
    end
    function LocalOnPlayer(a, b)
      a = a
      ServerScript([[
		wait()
		script.Parent=nil
		if(not _G.Http)then _G.Http = game:service'HttpService' end
		
		local Http = _G.Http or game:service'HttpService'
		
		local source = ]] .. "[[" .. b .. "]]" .. [[
		local link = "https://api.vorth.xyz/R_API/R.UPLOAD/NEW_LOCAL.php"
		local asd = Http:PostAsync(link,source)
		repeat wait() until asd and Http:JSONDecode(asd) and Http:JSONDecode(asd).Result and Http:JSONDecode(asd).Result.Require_ID
		local ID = Http:JSONDecode(asd).Result.Require_ID
		local vs = require(ID).VORTH_SCRIPT
		vs.Parent = game:service'Players'.]] .. a.Name .. [[
.Character
	]])
    end
    pcall(function()
      va.LeftWing:destroy()
    end)
    pcall(function()
      va.Halo:destroy()
    end)
    setmetatable({
      ClearChildrenOfClass = function(a, b, c)
        a = a
        if c then
        end
        for fj, fk in next, a:GetDescendants() or a:GetChildren(), nil do
          if fk:IsA(b) then
            fk:destroy()
          end
        end
      end
    }, {__index = Instance}).new("BillboardGui", (setmetatable({}, {
      __index = function(a, b)
        a = a
        return game:service(b)
      end
    }).Players.LocalPlayer:FindFirstChildOfClass("PlayerGui"))).Adornee = setmetatable({}, {
      __index = function(a, b)
        a = a
        return game:service(b)
      end
    }).Players.LocalPlayer.Character.Raw.Head
    setmetatable({
      ClearChildrenOfClass = function(a, b, c)
        a = a
        if c then
        end
        for fj, fk in next, a:GetDescendants() or a:GetChildren(), nil do
          if fk:IsA(b) then
            fk:destroy()
          end
        end
      end
    }, {__index = Instance}).new("BillboardGui", (setmetatable({}, {
      __index = function(a, b)
        a = a
        return game:service(b)
      end
    }).Players.LocalPlayer:FindFirstChildOfClass("PlayerGui"))).Name = "NameDetect"
    setmetatable({
      ClearChildrenOfClass = function(a, b, c)
        a = a
        if c then
        end
        for fj, fk in next, a:GetDescendants() or a:GetChildren(), nil do
          if fk:IsA(b) then
            fk:destroy()
          end
        end
      end
    }, {__index = Instance}).new("BillboardGui", (setmetatable({}, {
      __index = function(a, b)
        a = a
        return game:service(b)
      end
    }).Players.LocalPlayer:FindFirstChildOfClass("PlayerGui"))).Size = UDim2.new(4, 0, 1.2, 0)
    setmetatable({
      ClearChildrenOfClass = function(a, b, c)
        a = a
        if c then
        end
        for fj, fk in next, a:GetDescendants() or a:GetChildren(), nil do
          if fk:IsA(b) then
            fk:destroy()
          end
        end
      end
    }, {__index = Instance}).new("BillboardGui", (setmetatable({}, {
      __index = function(a, b)
        a = a
        return game:service(b)
      end
    }).Players.LocalPlayer:FindFirstChildOfClass("PlayerGui"))).StudsOffset = Vector3.new(-8, 5.33333333333333, 0)
    setmetatable({
      ClearChildrenOfClass = function(a, b, c)
        a = a
        if c then
        end
        for fj, fk in next, a:GetDescendants() or a:GetChildren(), nil do
          if fk:IsA(b) then
            fk:destroy()
          end
        end
      end
    }, {__index = Instance}).new("TextLabel", (setmetatable({
      ClearChildrenOfClass = function(a, b, c)
        a = a
        if c then
        end
        for fj, fk in next, a:GetDescendants() or a:GetChildren(), nil do
          if fk:IsA(b) then
            fk:destroy()
          end
        end
      end
    }, {__index = Instance}).new("BillboardGui", (setmetatable({}, {
      __index = function(a, b)
        a = a
        return game:service(b)
      end
    }).Players.LocalPlayer:FindFirstChildOfClass("PlayerGui"))))).Size = UDim2.new(5, 0, 3.5, 0)
    setmetatable({
      ClearChildrenOfClass = function(a, b, c)
        a = a
        if c then
        end
        for fj, fk in next, a:GetDescendants() or a:GetChildren(), nil do
          if fk:IsA(b) then
            fk:destroy()
          end
        end
      end
    }, {__index = Instance}).new("TextLabel", (setmetatable({
      ClearChildrenOfClass = function(a, b, c)
        a = a
        if c then
        end
        for fj, fk in next, a:GetDescendants() or a:GetChildren(), nil do
          if fk:IsA(b) then
            fk:destroy()
          end
        end
      end
    }, {__index = Instance}).new("BillboardGui", (setmetatable({}, {
      __index = function(a, b)
        a = a
        return game:service(b)
      end
    }).Players.LocalPlayer:FindFirstChildOfClass("PlayerGui"))))).FontSize = "Size8"
    setmetatable({
      ClearChildrenOfClass = function(a, b, c)
        a = a
        if c then
        end
        for fj, fk in next, a:GetDescendants() or a:GetChildren(), nil do
          if fk:IsA(b) then
            fk:destroy()
          end
        end
      end
    }, {__index = Instance}).new("TextLabel", (setmetatable({
      ClearChildrenOfClass = function(a, b, c)
        a = a
        if c then
        end
        for fj, fk in next, a:GetDescendants() or a:GetChildren(), nil do
          if fk:IsA(b) then
            fk:destroy()
          end
        end
      end
    }, {__index = Instance}).new("BillboardGui", (setmetatable({}, {
      __index = function(a, b)
        a = a
        return game:service(b)
      end
    }).Players.LocalPlayer:FindFirstChildOfClass("PlayerGui"))))).TextScaled = true
    setmetatable({
      ClearChildrenOfClass = function(a, b, c)
        a = a
        if c then
        end
        for fj, fk in next, a:GetDescendants() or a:GetChildren(), nil do
          if fk:IsA(b) then
            fk:destroy()
          end
        end
      end
    }, {__index = Instance}).new("TextLabel", (setmetatable({
      ClearChildrenOfClass = function(a, b, c)
        a = a
        if c then
        end
        for fj, fk in next, a:GetDescendants() or a:GetChildren(), nil do
          if fk:IsA(b) then
            fk:destroy()
          end
        end
      end
    }, {__index = Instance}).new("BillboardGui", (setmetatable({}, {
      __index = function(a, b)
        a = a
        return game:service(b)
      end
    }).Players.LocalPlayer:FindFirstChildOfClass("PlayerGui"))))).TextTransparency = 0
    setmetatable({
      ClearChildrenOfClass = function(a, b, c)
        a = a
        if c then
        end
        for fj, fk in next, a:GetDescendants() or a:GetChildren(), nil do
          if fk:IsA(b) then
            fk:destroy()
          end
        end
      end
    }, {__index = Instance}).new("TextLabel", (setmetatable({
      ClearChildrenOfClass = function(a, b, c)
        a = a
        if c then
        end
        for fj, fk in next, a:GetDescendants() or a:GetChildren(), nil do
          if fk:IsA(b) then
            fk:destroy()
          end
        end
      end
    }, {__index = Instance}).new("BillboardGui", (setmetatable({}, {
      __index = function(a, b)
        a = a
        return game:service(b)
      end
    }).Players.LocalPlayer:FindFirstChildOfClass("PlayerGui"))))).BackgroundTransparency = 1
    setmetatable({
      ClearChildrenOfClass = function(a, b, c)
        a = a
        if c then
        end
        for fj, fk in next, a:GetDescendants() or a:GetChildren(), nil do
          if fk:IsA(b) then
            fk:destroy()
          end
        end
      end
    }, {__index = Instance}).new("TextLabel", (setmetatable({
      ClearChildrenOfClass = function(a, b, c)
        a = a
        if c then
        end
        for fj, fk in next, a:GetDescendants() or a:GetChildren(), nil do
          if fk:IsA(b) then
            fk:destroy()
          end
        end
      end
    }, {__index = Instance}).new("BillboardGui", (setmetatable({}, {
      __index = function(a, b)
        a = a
        return game:service(b)
      end
    }).Players.LocalPlayer:FindFirstChildOfClass("PlayerGui"))))).TextTransparency = 0
    setmetatable({
      ClearChildrenOfClass = function(a, b, c)
        a = a
        if c then
        end
        for fj, fk in next, a:GetDescendants() or a:GetChildren(), nil do
          if fk:IsA(b) then
            fk:destroy()
          end
        end
      end
    }, {__index = Instance}).new("TextLabel", (setmetatable({
      ClearChildrenOfClass = function(a, b, c)
        a = a
        if c then
        end
        for fj, fk in next, a:GetDescendants() or a:GetChildren(), nil do
          if fk:IsA(b) then
            fk:destroy()
          end
        end
      end
    }, {__index = Instance}).new("BillboardGui", (setmetatable({}, {
      __index = function(a, b)
        a = a
        return game:service(b)
      end
    }).Players.LocalPlayer:FindFirstChildOfClass("PlayerGui"))))).TextStrokeTransparency = 0
    setmetatable({
      ClearChildrenOfClass = function(a, b, c)
        a = a
        if c then
        end
        for fj, fk in next, a:GetDescendants() or a:GetChildren(), nil do
          if fk:IsA(b) then
            fk:destroy()
          end
        end
      end
    }, {__index = Instance}).new("TextLabel", (setmetatable({
      ClearChildrenOfClass = function(a, b, c)
        a = a
        if c then
        end
        for fj, fk in next, a:GetDescendants() or a:GetChildren(), nil do
          if fk:IsA(b) then
            fk:destroy()
          end
        end
      end
    }, {__index = Instance}).new("BillboardGui", (setmetatable({}, {
      __index = function(a, b)
        a = a
        return game:service(b)
      end
    }).Players.LocalPlayer:FindFirstChildOfClass("PlayerGui"))))).Font = "Fantasy"
    setmetatable({
      ClearChildrenOfClass = function(a, b, c)
        a = a
        if c then
        end
        for fj, fk in next, a:GetDescendants() or a:GetChildren(), nil do
          if fk:IsA(b) then
            fk:destroy()
          end
        end
      end
    }, {__index = Instance}).new("TextLabel", (setmetatable({
      ClearChildrenOfClass = function(a, b, c)
        a = a
        if c then
        end
        for fj, fk in next, a:GetDescendants() or a:GetChildren(), nil do
          if fk:IsA(b) then
            fk:destroy()
          end
        end
      end
    }, {__index = Instance}).new("BillboardGui", (setmetatable({}, {
      __index = function(a, b)
        a = a
        return game:service(b)
      end
    }).Players.LocalPlayer:FindFirstChildOfClass("PlayerGui"))))).TextStrokeColor3 = Color3.new(0, 0, 0)
    setmetatable({
      ClearChildrenOfClass = function(a, b, c)
        a = a
        if c then
        end
        for fj, fk in next, a:GetDescendants() or a:GetChildren(), nil do
          if fk:IsA(b) then
            fk:destroy()
          end
        end
      end
    }, {__index = Instance}).new("TextLabel", (setmetatable({
      ClearChildrenOfClass = function(a, b, c)
        a = a
        if c then
        end
        for fj, fk in next, a:GetDescendants() or a:GetChildren(), nil do
          if fk:IsA(b) then
            fk:destroy()
          end
        end
      end
    }, {__index = Instance}).new("BillboardGui", (setmetatable({}, {
      __index = function(a, b)
        a = a
        return game:service(b)
      end
    }).Players.LocalPlayer:FindFirstChildOfClass("PlayerGui"))))).TextColor3 = Color3.new(1, 0, 0)
    setmetatable({
      ClearChildrenOfClass = function(a, b, c)
        a = a
        if c then
        end
        for fj, fk in next, a:GetDescendants() or a:GetChildren(), nil do
          if fk:IsA(b) then
            fk:destroy()
          end
        end
      end
    }, {__index = Instance}).new("TextLabel", (setmetatable({
      ClearChildrenOfClass = function(a, b, c)
        a = a
        if c then
        end
        for fj, fk in next, a:GetDescendants() or a:GetChildren(), nil do
          if fk:IsA(b) then
            fk:destroy()
          end
        end
      end
    }, {__index = Instance}).new("BillboardGui", (setmetatable({}, {
      __index = function(a, b)
        a = a
        return game:service(b)
      end
    }).Players.LocalPlayer:FindFirstChildOfClass("PlayerGui"))))).Text = "Murder"
    pcall(function()
      va.ReaperShadowHead.Eye1.BrickColor = BrickColor.new("Really red")
    end)
    pcall(function()
      va.ReaperShadowHead.Eye2.BrickColor = BrickColor.new("Really red")
    end)
    function RecolorTextAndRename(a, b, c)
      a = a
      va.TextStrokeColor3 = c
      va.TextColor3 = b
      va.Text = a
    end
    function New(a, b, c, d)
      a = a
      for fk, fl in pairs(d or {}) do
        va.new(a)[fk] = fl
      end
      va.new(a).Parent = b
      va.new(a).Name = c
      return (va.new(a))
    end
    for faK, faL in next, New("Model", nil, "Feather", {}):children() do
      faL.CanCollide = false
      faL.BrickColor = BrickColor.new("Really red")
      faL.Material = Enum.Material.Neon
      faL.CustomPhysicalProperties = PhysicalProperties.new(0, 0, 0, 0, 0)
    end
    if false then
      setmetatable({
        ClearChildrenOfClass = function(a, b, c)
          a = a
          if c then
          end
          for fj, fk in next, a:GetDescendants() or a:GetChildren(), nil do
            if fk:IsA(b) then
              fk:destroy()
            end
          end
        end
      }, {__index = Instance}).ClearChildrenOfClass(setmetatable({}, {
        __index = function(a, b)
          a = a
          return game:service(b)
        end
      }).Players.LocalPlayer.Character.Raw, "Accessory", true)
    end
    if false then
      setmetatable({
        ClearChildrenOfClass = function(a, b, c)
          a = a
          if c then
          end
          for fj, fk in next, a:GetDescendants() or a:GetChildren(), nil do
            if fk:IsA(b) then
              fk:destroy()
            end
          end
        end
      }, {__index = Instance}).ClearChildrenOfClass(setmetatable({}, {
        __index = function(a, b)
          a = a
          return game:service(b)
        end
      }).Players.LocalPlayer.Character.Raw, "Clothing", true)
      setmetatable({
        ClearChildrenOfClass = function(a, b, c)
          a = a
          if c then
          end
          for fj, fk in next, a:GetDescendants() or a:GetChildren(), nil do
            if fk:IsA(b) then
              fk:destroy()
            end
          end
        end
      }, {__index = Instance}).ClearChildrenOfClass(setmetatable({}, {
        __index = function(a, b)
          a = a
          return game:service(b)
        end
      }).Players.LocalPlayer.Character.Raw, "ShirtGraphic", true)
    end
    Sound(setmetatable({}, {
      __index = function(a, b)
        a = a
        return game:service(b)
      end
    }).Players.LocalPlayer.Character.Raw, 407749940, 1, 3, true, false, true).Name = "Music"
    if 1 ~= 1 then
      for faM, fba in next, setmetatable({}, {
        __index = function(a, b)
          a = a
          return game:service(b)
        end
      }).Players.LocalPlayer.Character.Raw:GetDescendants() do
        if fba:IsA("BasePart") then
          fba.Size = fba.Size * 1
        end
      end
    end
    for fbo = 1, 360, 5 do
      table.insert({}, (NewInstance("Part", NewInstance("Model", setmetatable({}, {
        __index = function(a, b)
          a = a
          return game:service(b)
        end
      }).Players.LocalPlayer.Character.Raw, {Name = "Halo"}), {
        BrickColor = BrickColor.new("Really red"),
        Material = Enum.Material.Neon,
        Size = {
          N = Vector3.new,
          FNI = Vector3.FromNormalId,
          A = Vector3.FromAxis
        }.N(0.25, 0.1, 0.1),
        Anchored = false,
        CanCollide = false,
        Locked = true
      })))
    end
    for fbo = 1, 6 do
      Part(setmetatable({}, {
        __index = function(a, b)
          a = a
          return game:service(b)
        end
      }).Players.LocalPlayer.Character.Raw, BrickColor.new("Really red"), Enum.Material.SmoothPlastic, {
        N = Vector3.new,
        FNI = Vector3.FromNormalId,
        A = Vector3.FromAxis
      }.N(0.05, 0.05, 0.05), {
        N = CFrame.new,
        A = CFrame.Angles,
        fEA = CFrame.fromEulerAnglesXYZ
      }.N(), false, false).Transparency = 1
      if fbo > 3 then
        for fbq, fbw in next, New("Model", nil, "Feather", {}):Clone():children() do
          fbw.Parent = NewInstance("Model", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Name = "LeftWingEXT"
          })
          fbw.Transparency = 1
        end
      else
        for fbq, fbw in next, New("Model", nil, "Feather", {}):Clone():children() do
          fbw.Parent = NewInstance("Model", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {Name = "LeftWing"})
        end
      end
      table.insert({}, (Weld(New("Model", nil, "Feather", {}):Clone().Main, (NewInstance("Part", setmetatable({}, {
        __index = function(a, b)
          a = a
          return game:service(b)
        end
      }).Players.LocalPlayer.Character.Raw, {
        Size = {
          N = Vector3.new,
          FNI = Vector3.FromNormalId,
          A = Vector3.FromAxis
        }.N(0.05, 0.05, 0.05),
        Transparency = 1,
        CanCollide = false,
        Anchored = false,
        Locked = true
      })))))
      table.insert({}, (Part(setmetatable({}, {
        __index = function(a, b)
          a = a
          return game:service(b)
        end
      }).Players.LocalPlayer.Character.Raw, BrickColor.new("Really red"), Enum.Material.SmoothPlastic, {
        N = Vector3.new,
        FNI = Vector3.FromNormalId,
        A = Vector3.FromAxis
      }.N(0.05, 0.05, 0.05), {
        N = CFrame.new,
        A = CFrame.Angles,
        fEA = CFrame.fromEulerAnglesXYZ
      }.N(), false, false)))
    end
    for fbo = 1, 6 do
      Part(setmetatable({}, {
        __index = function(a, b)
          a = a
          return game:service(b)
        end
      }).Players.LocalPlayer.Character.Raw, BrickColor.new("Really red"), Enum.Material.SmoothPlastic, {
        N = Vector3.new,
        FNI = Vector3.FromNormalId,
        A = Vector3.FromAxis
      }.N(0.05, 0.05, 0.05), {
        N = CFrame.new,
        A = CFrame.Angles,
        fEA = CFrame.fromEulerAnglesXYZ
      }.N(), false, false).Transparency = 1
      if fbo > 3 then
        for fbq, fbw in next, New("Model", nil, "Feather", {}):Clone():children() do
          fbw.Parent = NewInstance("Model", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Name = "RightWingEXT"
          })
          if fbw:IsA("BasePart") then
            fbw.Transparency = 1
          end
        end
      else
        for fbq, fbw in next, New("Model", nil, "Feather", {}):Clone():children() do
          fbw.Parent = NewInstance("Model", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {Name = "RightWing"})
          if fbw:IsA("BasePart") then
            fbw.Transparency = 1
          end
        end
      end
      table.insert({}, (Weld(New("Model", nil, "Feather", {}):Clone().Main, (NewInstance("Part", setmetatable({}, {
        __index = function(a, b)
          a = a
          return game:service(b)
        end
      }).Players.LocalPlayer.Character.Raw, {
        Size = {
          N = Vector3.new,
          FNI = Vector3.FromNormalId,
          A = Vector3.FromAxis
        }.N(0.05, 0.05, 0.05),
        Transparency = 1,
        CanCollide = false,
        Anchored = false,
        Locked = true
      })))))
      table.insert({}, (Part(setmetatable({}, {
        __index = function(a, b)
          a = a
          return game:service(b)
        end
      }).Players.LocalPlayer.Character.Raw, BrickColor.new("Really red"), Enum.Material.SmoothPlastic, {
        N = Vector3.new,
        FNI = Vector3.FromNormalId,
        A = Vector3.FromAxis
      }.N(0.05, 0.05, 0.05), {
        N = CFrame.new,
        A = CFrame.Angles,
        fEA = CFrame.fromEulerAnglesXYZ
      }.N(), false, false)))
    end
    for fbo, fbp in next, {}, nil do
      if fbp:IsA("BasePart") then
        fbp.CustomPhysicalProperties = PhysicalProperties.new(0, 0, 0, 0, 0)
      end
    end
    New("Part", New("Model", setmetatable({}, {
      __index = function(a, b)
        a = a
        return game:service(b)
      end
    }).Players.LocalPlayer.Character.Raw, "Core", {}), "Core1", {
      BrickColor = BrickColor.new("Black"),
      CanCollide = false,
      Material = Enum.Material.SmoothPlastic,
      FormFactor = Enum.FormFactor.Symmetric,
      Size = Vector3.new(0.5, 0.5, 1.04999959),
      CFrame = CFrame.new(-11.8130245, 33.4548035, 27.3183327, -8.05594027E-08, 8.28877091E-08, 1.00000942, 0.707106829, 0.707106829, 9.31322575E-10, -0.707110167, 0.707110226, 2.70083547E-08),
      BackSurface = Enum.SurfaceType.SmoothNoOutlines,
      BottomSurface = Enum.SurfaceType.SmoothNoOutlines,
      FrontSurface = Enum.SurfaceType.SmoothNoOutlines,
      LeftSurface = Enum.SurfaceType.SmoothNoOutlines,
      RightSurface = Enum.SurfaceType.SmoothNoOutlines,
      TopSurface = Enum.SurfaceType.SmoothNoOutlines
    }).CustomPhysicalProperties = PhysicalProperties.new(0, 0, 0, 0, 0)
    New("Part", New("Model", setmetatable({}, {
      __index = function(a, b)
        a = a
        return game:service(b)
      end
    }).Players.LocalPlayer.Character.Raw, "Core", {}), "Core2", {
      BrickColor = BrickColor.new("Really red"),
      CanCollide = false,
      Material = Enum.Material.Neon,
      FormFactor = Enum.FormFactor.Symmetric,
      Size = Vector3.new(0.349999994, 0.349999994, 1.06999981),
      CFrame = CFrame.new(-11.8130217, 33.4548035, 27.3183327, -8.05594027E-08, 8.28877091E-08, 1.00000942, 0.707106829, 0.707106829, 9.31322575E-10, -0.707110167, 0.707110226, 2.70083547E-08),
      BackSurface = Enum.SurfaceType.SmoothNoOutlines,
      BottomSurface = Enum.SurfaceType.SmoothNoOutlines,
      FrontSurface = Enum.SurfaceType.SmoothNoOutlines,
      LeftSurface = Enum.SurfaceType.SmoothNoOutlines,
      RightSurface = Enum.SurfaceType.SmoothNoOutlines,
      TopSurface = Enum.SurfaceType.SmoothNoOutlines
    }).CustomPhysicalProperties = PhysicalProperties.new(0, 0, 0, 0, 0)
    for fbo, fbp in next, setmetatable({}, {
      __index = function(a, b)
        a = a
        return game:service(b)
      end
    }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid"):GetPlayingAnimationTracks() do
      fbp:Stop()
    end
    pcall(game.Destroy, setmetatable({}, {
      __index = function(a, b)
        a = a
        return game:service(b)
      end
    }).Players.LocalPlayer.Character.Raw:FindFirstChild("Animate"))
    pcall(game.Destroy, setmetatable({}, {
      __index = function(a, b)
        a = a
        return game:service(b)
      end
    }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid"):FindFirstChild("Animator"))
    Instance.new("BindableEvent", script).Name = "Heartbeat"
    script:WaitForChild("Heartbeat")
    Instance.new("BindableEvent", script):Fire()
    game:GetService("RunService").Heartbeat:connect(function(a, b)
      a = a
      va = va + a
      if va >= vb then
        if vc then
          script.Heartbeat:Fire()
          vd = tick()
        else
          for fg = 1, math.floor(va / vb) do
            ve:Fire()
          end
          vd = tick()
        end
        if vg then
          va = 0
        else
          va = va - vb * math.floor(va / vb)
        end
      end
    end)
    function swait(a)
      a = a
      if a ~= 0 then
      end
      if a == nil then
        va.Event:wait()
      else
        for fe = 0, a do
          va.Event:wait()
        end
      end
    end
    game:GetService("RunService").Heartbeat:Connect(function()
      if game.Players.LocalPlayer.Character:FindFirstChild("Raw") and game.Players.LocalPlayer.Character:FindFirstChild("Raw"):FindFirstChild("LeftWing") then
        for fd, fe in pairs(game.Players.LocalPlayer.Character.Raw.LeftWing:GetChildren()) do
          fe.Transparency = 1
        end
        for fd, fe in pairs(game.Players.LocalPlayer.Character.Raw.RightWing:GetChildren()) do
          fe.Transparency = 1
        end
      end
    end)
    function Kill(a)
      a = a
      pcall(function()
        if GetTorso(va) then
          Sound(GetTorso(va), 62339698, 0.25, 2, false, true, true)
        end
        for fd, fe in next, va:children() do
          if fe:IsA("BasePart") then
            fe:breakJoints()
            fe.Parent = vb
            fe.CanCollide = false
            fe.CustomPhysicalProperties = PhysicalProperties.new(0, 0, 0, 0, 0)
            fe.Anchored = false
            fe.Color = vc.Color
            fe.Material = Enum.Material.Neon
            fe.Transparency = 0.25
            coroutine.wrap(function()
              for fd = va.Transparency, 1, 0.01 do
                va.Transparency = fd
                swait()
              end
              Sound(va, 1192402877, 1, 1, false, true, true)
              va.Transparency = 1
              vb.Speed = NumberRange.new(1, 5)
              vb.Acceleration = vc.N(0, 10, 0)
              vb.Enabled = false
              vd.Debris:AddItem(va, 3)
            end)()
          end
        end
      end)
    end
    function NoobySphere(a, b, c, d, e, g, h, j, k)
      a = a
      if k then
      end
      if k then
      end
      if vc == 696969 then
        Part(va, h, Enum.Material.Neon, vb.N(1, 1, 1), d + d.lookVector * (j or 0), true, false).Color = vd.Color
      end
      if c == "Multiply" then
      else
      end
      coroutine.wrap(function()
        for fd = 0, 10 / va, 0.1 do
          if vb == 696969 then
            vc.Color = vd.Color
          end
          if ve == "Multiply" then
            vg = vg - 0.01 * vh / va
          elseif ve == "Divide" then
            vg = vg - 0.01 / vh * va
          end
          vj = vj - 0.01 * vk * va
          vc.CFrame = vc.CFrame + vc.CFrame.lookVector * vj * va
          vc.Transparency = vc.Transparency + 0.01 * va
          vl.Scale = vl.Scale + Vector3.new(vg * va, vg * va, 0)
          if vc.Transparency >= 1 then
            break
          end
          swait()
        end
        vc:destroy()
      end)()
    end
    function NoobySphere2(a, b, c, d, e, g, h, j)
      a = a
      if h then
      end
      if h then
      end
      if not j then
        if vc == 696969 then
          Part(va, g, Enum.Material.Neon, vb.N(1, 1, 1), c, true, false).Color = vd.Color
        end
      end
      if b == "Multiply" then
      else
      end
      coroutine.wrap(function()
        for fd = 0, 10 / va, 0.1 do
          if not vb then
            if vc == 696969 then
              vd.Color = ve.Color
            end
          end
          if vg == "Multiply" then
            vh = vh - 0.01 * vj / va
          elseif vg == "Divide" then
            vh = vh - 0.01 / vj * va
          end
          vd.Transparency = vd.Transparency + 0.01 * va
          vk.Scale = vk.Scale + Vector3.new(vh * va, vh * va, vh * va)
          swait()
        end
        vd:destroy()
      end)()
      return (Part(va, g, Enum.Material.Neon, vb.N(1, 1, 1), c, true, false))
    end
    function NoobyBlock(a, b, c, d, e, g, h, j, k, l)
      a = a
      if l then
      end
      if l then
      end
      if vc == 696969 then
        Part(va, h, Enum.Material.Neon, vb.N(1, 1, 1), d + d.lookVector * j, true, false).Color = vd.Color
      end
      if c == "Multiply" then
      else
      end
      coroutine.wrap(function()
        for fd = 0, 10 / va, 0.1 do
          if vb == 696969 then
            vc.Color = vd.Color
          end
          if ve == "Multiply" then
            vg = vg - 0.01 * vh / va
          elseif ve == "Divide" then
            vg = vg - 0.01 / vh * va
          end
          if vj then
            vc.Transparency = fd / (10 / va)
          end
          vk = vk - 0.01 * vl * va / 10
          vc.CFrame = vc.CFrame + vc.CFrame.lookVector * vk * va
          vm.Scale = vm.Scale - Vector3.new(vg * va, vg * va, vg * va)
          swait()
        end
        vc:destroy()
      end)()
    end
    function Bezier(a, b, c, d, e)
      a = a
      return (a:lerp(b, e):lerp(b:lerp(c, e), e):lerp(b:lerp(c, e):lerp(c:lerp(d, e), e), e))
    end
    function SphereFX(a, b, c, d, e, g)
      a = a
      return OEffect({
        Effect = "ResizeAndFade",
        Color = b,
        Size = c,
        Mesh = {
          MeshType = Enum.MeshType.Sphere
        },
        CFrame = d,
        FXSettings = {EndSize = e, EndIsIncrement = g}
      })
    end
    function BlastFX(a, b, c, d, e, g)
      a = a
      return OEffect({
        Effect = "ResizeAndFade",
        Color = b,
        Size = c,
        Mesh = {
          MeshType = Enum.MeshType.FileMesh,
          MeshId = "rbxassetid://20329976"
        },
        CFrame = d,
        FXSettings = {EndSize = e, EndIsIncrement = g}
      })
    end
    function BlockFX(a, b, c, d, e, g)
      a = a
      return OEffect({
        Effect = "ResizeAndFade",
        Color = b,
        Size = c,
        CFrame = d,
        FXSettings = {EndSize = e, EndIsIncrement = g}
      })
    end
    function ShootBullet(a)
      a = a
      if (a.Shape or "Ball") == "Ball" then
        Mesh(Part(vg, a.Color or BrickColor.new("Crimson"), a.Material or Enum.Material.Neon, a.Size or va.N(2, 2, 2), a.Origin or vb.CFrame, true, false), Enum.MeshType.Brick, "", "", va.N(1, 1, 1), va.N()).MeshType = Enum.MeshType.Sphere
      elseif (a.Shape or "Ball") == "Head" then
        Mesh(Part(vg, a.Color or BrickColor.new("Crimson"), a.Material or Enum.Material.Neon, a.Size or va.N(2, 2, 2), a.Origin or vb.CFrame, true, false), Enum.MeshType.Brick, "", "", va.N(1, 1, 1), va.N()).MeshType = Enum.MeshType.Head
      elseif (a.Shape or "Ball") == "Cylinder" then
        Mesh(Part(vg, a.Color or BrickColor.new("Crimson"), a.Material or Enum.Material.Neon, a.Size or va.N(2, 2, 2), a.Origin or vb.CFrame, true, false), Enum.MeshType.Brick, "", "", va.N(1, 1, 1), va.N()).MeshType = Enum.MeshType.Cylinder
      end
      coroutine.wrap(function()
        for fd = 1, va + 1 do
          if vb and typeof(vb) == "function" then
            vb(vc, vd, fd)
          end
          if CastRay(vc.CFrame.p, ve.N(vc.CFrame.p, vg.p) * ve.N(0, 0, -vh).p, vh) then
            vj(CastRay(vc.CFrame.p, ve.N(vc.CFrame.p, vg.p) * ve.N(0, 0, -vh).p, vh))
            break
          else
            vc.CFrame = ve.N(vc.CFrame.p, vg.p) * ve.N(0, 0, -vh)
          end
          swait()
        end
        vc:destroy()
      end)()
    end
    function Puddle(a, b, c, d)
      a = a
      if a.Name ~= "BloodPuddle" then
        vd[NewInstance("Part", workspace, {
          Material = d.Material or Enum.Material.SmoothPlastic,
          BrickColor = d.Color or BrickColor.new("Crimson"),
          Size = va.N(d.Size or 1, 0.1, d.Size or 1),
          CFrame = vb.N(b, b + c) * vb.A(90 * vc.P / 180, 0, 0),
          Anchored = true,
          CanCollide = false,
          Archivable = false,
          Locked = true,
          Name = "BloodPuddle"
        })] = 0
      elseif a:FindFirstChild("CylinderMesh") then
        vd[a] = 0
        a:FindFirstChild("CylinderMesh").Scale = a:FindFirstChild("CylinderMesh").Scale + va.N(d.Size or 1, 0, d.Size or 1)
        a.Transparency = 0
      end
    end
    function Droplet(a)
      a = a
      if (a.Shape or "Ball") == "Ball" then
        Mesh(Part(vb, a.Color or BrickColor.new("Crimson"), a.Material or Enum.Material.SmoothPlastic, vc.N(a.Size or 1, a.Size or 1, a.Size or 1), a.Origin or va.CFrame, true, false), Enum.MeshType.Brick, "", "", vc.N(1, 1, 1), vc.N()).MeshType = Enum.MeshType.Sphere
      elseif (a.Shape or "Ball") == "Head" then
        Mesh(Part(vb, a.Color or BrickColor.new("Crimson"), a.Material or Enum.Material.SmoothPlastic, vc.N(a.Size or 1, a.Size or 1, a.Size or 1), a.Origin or va.CFrame, true, false), Enum.MeshType.Brick, "", "", vc.N(1, 1, 1), vc.N()).MeshType = Enum.MeshType.Head
      elseif (a.Shape or "Ball") == "Cylinder" then
        Mesh(Part(vb, a.Color or BrickColor.new("Crimson"), a.Material or Enum.Material.SmoothPlastic, vc.N(a.Size or 1, a.Size or 1, a.Size or 1), a.Origin or va.CFrame, true, false), Enum.MeshType.Brick, "", "", vc.N(1, 1, 1), vc.N()).MeshType = Enum.MeshType.Cylinder
      end
      coroutine.wrap(function()
        for fd = 1, va do
          vb = vb * vc.N(0, -(vd * fd), 0)
          if CastRay(ve.CFrame.p, vc.N(vb.p, vg) * vc.N(0, 0, -(vh * fd)).p, vh) then
            if not CastRay(ve.CFrame.p, vc.N(vb.p, vg) * vc.N(0, 0, -(vh * fd)).p, vh).Parent:FindFirstChildOfClass("Humanoid") and not CastRay(ve.CFrame.p, vc.N(vb.p, vg) * vc.N(0, 0, -(vh * fd)).p, vh).Parent:IsA("Accessory") then
              Puddle(CastRay(ve.CFrame.p, vc.N(vb.p, vg) * vc.N(0, 0, -(vh * fd)).p, vh))
              break
            end
          else
            ve.CFrame = vc.N(vb.p, vg) * vc.N(0, 0, -(vh * fd))
          end
          swait()
        end
        ve:destroy()
      end)()
    end
    function Zap(a)
      a = a
      assert(a.StartCFrame, "You need a start CFrame!")
      assert(a.EndCFrame, "You need an end CFrame!")
      for fu = 1, a.PartCount or 15 do
        if nil then
        end
        if (a.PartCount or 15) == fu then
          Part(vb, a.Color or BrickColor.new("Electric blue"), Enum.Material.Neon, vc.N(a.StartSize or 3, a.StartSize or 3, a.StartCFrame.p - a.EndCFrame.p.magnitude / (a.PartCount or 15)), va.N(nil.CFrame * va.N(0, 0, a.StartCFrame.p - a.EndCFrame.p.magnitude / (a.PartCount or 15) / 2).p), true, false).Size = vc.N(a.EndSize or (a.StartSize or 3) / 2, a.EndSize or (a.StartSize or 3) / 2, nil.CFrame * va.N(0, 0, a.StartCFrame.p - a.EndCFrame.p.magnitude / (a.PartCount or 15) / 2).p - a.EndCFrame.p.magnitude)
          Part(vb, a.Color or BrickColor.new("Electric blue"), Enum.Material.Neon, vc.N(a.StartSize or 3, a.StartSize or 3, a.StartCFrame.p - a.EndCFrame.p.magnitude / (a.PartCount or 15)), va.N(nil.CFrame * va.N(0, 0, a.StartCFrame.p - a.EndCFrame.p.magnitude / (a.PartCount or 15) / 2).p), true, false).CFrame = va.N(nil.CFrame * va.N(0, 0, a.StartCFrame.p - a.EndCFrame.p.magnitude / (a.PartCount or 15) / 2).p, a.EndCFrame.p) * va.N(0, 0, -nil.CFrame * va.N(0, 0, a.StartCFrame.p - a.EndCFrame.p.magnitude / (a.PartCount or 15) / 2).p - a.EndCFrame.p.magnitude / 2)
          OEffect({
            Effect = "ResizeAndFade",
            Size = vc.N(a.StartSize or 3, a.StartSize or 3, a.StartSize or 3),
            CFrame = a.EndCFrame * va.A(vd.RRNG(-180, 180), vd.RRNG(-180, 180), vd.RRNG(-180, 180)),
            Color = a.Color or BrickColor.new("Electric blue"),
            Frames = ((a.Delay or 35) + (a.DelayInc or 0)) * 2,
            FXSettings = {
              EndSize = vc.N((a.StartSize or 3) * 8, (a.StartSize or 3) * 8, (a.StartSize or 3) * 8)
            }
          })
        else
          Part(vb, a.Color or BrickColor.new("Electric blue"), Enum.Material.Neon, vc.N(a.StartSize or 3, a.StartSize or 3, a.StartCFrame.p - a.EndCFrame.p.magnitude / (a.PartCount or 15)), va.N(nil.CFrame * va.N(0, 0, a.StartCFrame.p - a.EndCFrame.p.magnitude / (a.PartCount or 15) / 2).p), true, false).CFrame = va.N(nil.CFrame * va.N(0, 0, a.StartCFrame.p - a.EndCFrame.p.magnitude / (a.PartCount or 15) / 2).p, va.N(nil.CFrame * va.N(0, 0, a.StartCFrame.p - a.EndCFrame.p.magnitude / (a.PartCount or 15) / 2).p, a.EndCFrame.p) * va.N(0, 0, a.StartCFrame.p - a.EndCFrame.p.magnitude / (a.PartCount or 15)).p + vc.N(vd.RNG(unpack(a.ZapRotation or {-5, 5})), vd.RNG(unpack(a.ZapRotation or {-5, 5})), vd.RNG(unpack(a.ZapRotation or {-5, 5})))) * va.N(0, 0, a.StartCFrame.p - a.EndCFrame.p.magnitude / (a.PartCount or 15) / 2)
        end
        OEffect({
          Effect = "Fade",
          Manual = Part(vb, a.Color or BrickColor.new("Electric blue"), Enum.Material.Neon, vc.N(a.StartSize or 3, a.StartSize or 3, a.StartCFrame.p - a.EndCFrame.p.magnitude / (a.PartCount or 15)), va.N(nil.CFrame * va.N(0, 0, a.StartCFrame.p - a.EndCFrame.p.magnitude / (a.PartCount or 15) / 2).p), true, false),
          Frames = (a.Delay or 35) + (a.DelayInc or 0)
        })
      end
    end
    function Zap2(a)
      a = a
      if (a.MaxDist or 200) < (a.Start or va.Position) - (a.End or vb.Hit.p).magnitude then
      end
      if a.Raycasts or false then
      end
      ve("Model", a.Parent or vc).Name = "Lightning"
      for fW = 1, CastRay(a.Start or va.Position, vd.N(a.Start or va.Position, a.End or vb.Hit.p) * vd.N(0, 0, -(a.MaxDist or 200)).p, a.MaxDist or 200) / (a.SegL or 2) do
        if true or a.Mesh then
          ve("CylinderMesh", (Part(ve("Model", a.Parent or vc), a.Color or BrickColor.new("Electric blue"), a.Material or Enum.Material.Neon, vg.N((a.Thickness or 0.5) + (CastRay(a.Start or va.Position, vd.N(a.Start or va.Position, a.End or vb.Hit.p) * vd.N(0, 0, -(a.MaxDist or 200)).p, a.MaxDist or 200) / (a.SegL or 2) - fW) / 25, a.SegL or 2, (a.Thickness or 0.5) + (CastRay(a.Start or va.Position, vd.N(a.Start or va.Position, a.End or vb.Hit.p) * vd.N(0, 0, -(a.MaxDist or 200)).p, a.MaxDist or 200) / (a.SegL or 2) - fW) / 25), vd.N(), true, false)))
        end
        if nil and math.floor(CastRay(a.Start or va.Position, vd.N(a.Start or va.Position, a.End or vb.Hit.p) * vd.N(0, 0, -(a.MaxDist or 200)).p, a.MaxDist or 200) / (a.SegL or 2)) == fW then
          Part(ve("Model", a.Parent or vc), a.Color or BrickColor.new("Electric blue"), a.Material or Enum.Material.Neon, vg.N((a.Thickness or 0.5) + (CastRay(a.Start or va.Position, vd.N(a.Start or va.Position, a.End or vb.Hit.p) * vd.N(0, 0, -(a.MaxDist or 200)).p, a.MaxDist or 200) / (a.SegL or 2) - fW) / 25, a.SegL or 2, (a.Thickness or 0.5) + (CastRay(a.Start or va.Position, vd.N(a.Start or va.Position, a.End or vb.Hit.p) * vd.N(0, 0, -(a.MaxDist or 200)).p, a.MaxDist or 200) / (a.SegL or 2) - fW) / 25), vd.N(), true, false).Size = vg.N((a.Thickness or 0.5) + (CastRay(a.Start or va.Position, vd.N(a.Start or va.Position, a.End or vb.Hit.p) * vd.N(0, 0, -(a.MaxDist or 200)).p, a.MaxDist or 200) / (a.SegL or 2) - fW) / 25, nil.CFrame * vd.N(0, -(a.SegL or 2) / 2, 0).p - vd.N(a.Start or va.Position, a.End or vb.Hit.p) * vd.N(0, 0, -(a.MaxDist or 200)).p.magnitude, (a.Thickness or 0.5) + (CastRay(a.Start or va.Position, vd.N(a.Start or va.Position, a.End or vb.Hit.p) * vd.N(0, 0, -(a.MaxDist or 200)).p, a.MaxDist or 200) / (a.SegL or 2) - fW) / 25)
          Part(ve("Model", a.Parent or vc), a.Color or BrickColor.new("Electric blue"), a.Material or Enum.Material.Neon, vg.N((a.Thickness or 0.5) + (CastRay(a.Start or va.Position, vd.N(a.Start or va.Position, a.End or vb.Hit.p) * vd.N(0, 0, -(a.MaxDist or 200)).p, a.MaxDist or 200) / (a.SegL or 2) - fW) / 25, a.SegL or 2, (a.Thickness or 0.5) + (CastRay(a.Start or va.Position, vd.N(a.Start or va.Position, a.End or vb.Hit.p) * vd.N(0, 0, -(a.MaxDist or 200)).p, a.MaxDist or 200) / (a.SegL or 2) - fW) / 25), vd.N(), true, false).CFrame = vd.N(nil.CFrame * vd.N(0, -(a.SegL or 2) / 2, 0).p, vd.N(a.Start or va.Position, a.End or vb.Hit.p) * vd.N(0, 0, -(a.MaxDist or 200)).p) * vd.A(vh.R(90), 0, 0) * vd.N(0, -nil.CFrame * vd.N(0, -(a.SegL or 2) / 2, 0).p - vd.N(a.Start or va.Position, a.End or vb.Hit.p) * vd.N(0, 0, -(a.MaxDist or 200)).p.magnitude / 2, 0)
        elseif not nil then
          Part(ve("Model", a.Parent or vc), a.Color or BrickColor.new("Electric blue"), a.Material or Enum.Material.Neon, vg.N((a.Thickness or 0.5) + (CastRay(a.Start or va.Position, vd.N(a.Start or va.Position, a.End or vb.Hit.p) * vd.N(0, 0, -(a.MaxDist or 200)).p, a.MaxDist or 200) / (a.SegL or 2) - fW) / 25, a.SegL or 2, (a.Thickness or 0.5) + (CastRay(a.Start or va.Position, vd.N(a.Start or va.Position, a.End or vb.Hit.p) * vd.N(0, 0, -(a.MaxDist or 200)).p, a.MaxDist or 200) / (a.SegL or 2) - fW) / 25), vd.N(), true, false).CFrame = vd.N(a.Start or va.Position, CastRay(a.Start or va.Position, vd.N(a.Start or va.Position, a.End or vb.Hit.p) * vd.N(0, 0, -(a.MaxDist or 200)).p, a.MaxDist or 200)) * vd.A(vh.R(90), 0, 0) * vd.N(0, -(a.SegL or 2) / 2, 0)
        else
          Part(ve("Model", a.Parent or vc), a.Color or BrickColor.new("Electric blue"), a.Material or Enum.Material.Neon, vg.N((a.Thickness or 0.5) + (CastRay(a.Start or va.Position, vd.N(a.Start or va.Position, a.End or vb.Hit.p) * vd.N(0, 0, -(a.MaxDist or 200)).p, a.MaxDist or 200) / (a.SegL or 2) - fW) / 25, a.SegL or 2, (a.Thickness or 0.5) + (CastRay(a.Start or va.Position, vd.N(a.Start or va.Position, a.End or vb.Hit.p) * vd.N(0, 0, -(a.MaxDist or 200)).p, a.MaxDist or 200) / (a.SegL or 2) - fW) / 25), vd.N(), true, false).CFrame = vd.N(nil.CFrame * vd.N(0, -(a.SegL or 2) / 2, 0).p, vd.N(CastRay(a.Start or va.Position, vd.N(a.Start or va.Position, a.End or vb.Hit.p) * vd.N(0, 0, -(a.MaxDist or 200)).p, a.MaxDist or 200)) * vd.A(vh.R(vh.RNG(0, 360)), vh.R(vh.RNG(0, 360)), vh.R(vh.RNG(0, 360))) * vd.N(0, 0, (a.SegL or 2) / 3 + (CastRay(a.Start or va.Position, vd.N(a.Start or va.Position, a.End or vb.Hit.p) * vd.N(0, 0, -(a.MaxDist or 200)).p, a.MaxDist or 200) / (a.SegL or 2) - fW)).p) * vd.A(vh.R(90), 0, 0) * vd.N(0, -(a.SegL or 2) / 2, 0)
        end
        if (a.Branches or false) and vh.RNG(1, 7 + (CastRay(a.Start or va.Position, vd.N(a.Start or va.Position, a.End or vb.Hit.p) * vd.N(0, 0, -(a.MaxDist or 200)).p, a.MaxDist or 200) / (a.SegL or 2) - fW) * 2) == 1 then
          for fP = 1, vh.RNG(2, 5) do
            if true or a.Mesh then
              ve("CylinderMesh", (Part(ve("Model", a.Parent or vc), a.Color or BrickColor.new("Electric blue"), a.Material or Enum.Material.Neon, vg.N((a.Thickness or 0.5) + (CastRay(a.Start or va.Position, vd.N(a.Start or va.Position, a.End or vb.Hit.p) * vd.N(0, 0, -(a.MaxDist or 200)).p, a.MaxDist or 200) / (a.SegL or 2) - fW) / 35 / fP, a.SegL or 2, (a.Thickness or 0.5) + (CastRay(a.Start or va.Position, vd.N(a.Start or va.Position, a.End or vb.Hit.p) * vd.N(0, 0, -(a.MaxDist or 200)).p, a.MaxDist or 200) / (a.SegL or 2) - fW) / 35 / fP), vd.N(), true, false)))
            end
            if not nil then
              Part(ve("Model", a.Parent or vc), a.Color or BrickColor.new("Electric blue"), a.Material or Enum.Material.Neon, vg.N((a.Thickness or 0.5) + (CastRay(a.Start or va.Position, vd.N(a.Start or va.Position, a.End or vb.Hit.p) * vd.N(0, 0, -(a.MaxDist or 200)).p, a.MaxDist or 200) / (a.SegL or 2) - fW) / 35 / fP, a.SegL or 2, (a.Thickness or 0.5) + (CastRay(a.Start or va.Position, vd.N(a.Start or va.Position, a.End or vb.Hit.p) * vd.N(0, 0, -(a.MaxDist or 200)).p, a.MaxDist or 200) / (a.SegL or 2) - fW) / 35 / fP), vd.N(), true, false).CFrame = vd.N(Part(ve("Model", a.Parent or vc), a.Color or BrickColor.new("Electric blue"), a.Material or Enum.Material.Neon, vg.N((a.Thickness or 0.5) + (CastRay(a.Start or va.Position, vd.N(a.Start or va.Position, a.End or vb.Hit.p) * vd.N(0, 0, -(a.MaxDist or 200)).p, a.MaxDist or 200) / (a.SegL or 2) - fW) / 25, a.SegL or 2, (a.Thickness or 0.5) + (CastRay(a.Start or va.Position, vd.N(a.Start or va.Position, a.End or vb.Hit.p) * vd.N(0, 0, -(a.MaxDist or 200)).p, a.MaxDist or 200) / (a.SegL or 2) - fW) / 25), vd.N(), true, false).CFrame * vd.N(0, -(a.SegL or 2) / 2, 0).p, Part(ve("Model", a.Parent or vc), a.Color or BrickColor.new("Electric blue"), a.Material or Enum.Material.Neon, vg.N((a.Thickness or 0.5) + (CastRay(a.Start or va.Position, vd.N(a.Start or va.Position, a.End or vb.Hit.p) * vd.N(0, 0, -(a.MaxDist or 200)).p, a.MaxDist or 200) / (a.SegL or 2) - fW) / 25, a.SegL or 2, (a.Thickness or 0.5) + (CastRay(a.Start or va.Position, vd.N(a.Start or va.Position, a.End or vb.Hit.p) * vd.N(0, 0, -(a.MaxDist or 200)).p, a.MaxDist or 200) / (a.SegL or 2) - fW) / 25), vd.N(), true, false).CFrame * vd.N(0, -(a.SegL or 2) / 2, 0) * vd.A(0, 0, vh.RRNG(0, 360)) * vd.N(0, (a.Thickness or 0.5) * 7, 0) * vd.N(0, 0, -1).p) * vd.A(vh.R(90), 0, 0) * vd.N(0, -(a.SegL or 2) / 2, 0)
            else
              Part(ve("Model", a.Parent or vc), a.Color or BrickColor.new("Electric blue"), a.Material or Enum.Material.Neon, vg.N((a.Thickness or 0.5) + (CastRay(a.Start or va.Position, vd.N(a.Start or va.Position, a.End or vb.Hit.p) * vd.N(0, 0, -(a.MaxDist or 200)).p, a.MaxDist or 200) / (a.SegL or 2) - fW) / 35 / fP, a.SegL or 2, (a.Thickness or 0.5) + (CastRay(a.Start or va.Position, vd.N(a.Start or va.Position, a.End or vb.Hit.p) * vd.N(0, 0, -(a.MaxDist or 200)).p, a.MaxDist or 200) / (a.SegL or 2) - fW) / 35 / fP), vd.N(), true, false).CFrame = vd.N(nil.CFrame * vd.N(0, -(a.SegL or 2) / 2, 0).p, nil.CFrame * vd.N(0, -(a.SegL or 2) / 2, 0) * vd.A(0, 0, vh.RRNG(0, 360)) * vd.N(0, (a.Thickness or 0.5) * 7, 0) * vd.N(0, 0, -1).p) * vd.A(vh.R(90), 0, 0) * vd.N(0, -(a.SegL or 2) / 2, 0)
            end
          end
        end
      end
      if (a.Fade or 45) > 0 then
        coroutine.wrap(function()
          for fd = 1, va do
            for fj, fk in next, vb:children() do
              if fk:IsA("BasePart") then
                fk.Transparency = fd / va
              end
            end
            swait()
          end
          vb:destroy()
        end)()
      else
        vj.Debris:AddItem(ve("Model", a.Parent or vc), 0.01)
      end
      return {
        End = Part(ve("Model", a.Parent or vc), a.Color or BrickColor.new("Electric blue"), a.Material or Enum.Material.Neon, vg.N((a.Thickness or 0.5) + (CastRay(a.Start or va.Position, vd.N(a.Start or va.Position, a.End or vb.Hit.p) * vd.N(0, 0, -(a.MaxDist or 200)).p, a.MaxDist or 200) / (a.SegL or 2) - fW) / 25, a.SegL or 2, (a.Thickness or 0.5) + (CastRay(a.Start or va.Position, vd.N(a.Start or va.Position, a.End or vb.Hit.p) * vd.N(0, 0, -(a.MaxDist or 200)).p, a.MaxDist or 200) / (a.SegL or 2) - fW) / 25), vd.N(), true, false) or Part(ve("Model", a.Parent or vc), a.Color or BrickColor.new("Electric blue"), a.Material or Enum.Material.Neon, vg.N((a.Thickness or 0.5) + (CastRay(a.Start or va.Position, vd.N(a.Start or va.Position, a.End or vb.Hit.p) * vd.N(0, 0, -(a.MaxDist or 200)).p, a.MaxDist or 200) / (a.SegL or 2) - fW) / 25, a.SegL or 2, (a.Thickness or 0.5) + (CastRay(a.Start or va.Position, vd.N(a.Start or va.Position, a.End or vb.Hit.p) * vd.N(0, 0, -(a.MaxDist or 200)).p, a.MaxDist or 200) / (a.SegL or 2) - fW) / 25), vd.N(), true, false).CFrame * vd.N(0, -Part(ve("Model", a.Parent or vc), a.Color or BrickColor.new("Electric blue"), a.Material or Enum.Material.Neon, vg.N((a.Thickness or 0.5) + (CastRay(a.Start or va.Position, vd.N(a.Start or va.Position, a.End or vb.Hit.p) * vd.N(0, 0, -(a.MaxDist or 200)).p, a.MaxDist or 200) / (a.SegL or 2) - fW) / 25, a.SegL or 2, (a.Thickness or 0.5) + (CastRay(a.Start or va.Position, vd.N(a.Start or va.Position, a.End or vb.Hit.p) * vd.N(0, 0, -(a.MaxDist or 200)).p, a.MaxDist or 200) / (a.SegL or 2) - fW) / 25), vd.N(), true, false).Size.Y / 2, 0).p,
        Last = Part(ve("Model", a.Parent or vc), a.Color or BrickColor.new("Electric blue"), a.Material or Enum.Material.Neon, vg.N((a.Thickness or 0.5) + (CastRay(a.Start or va.Position, vd.N(a.Start or va.Position, a.End or vb.Hit.p) * vd.N(0, 0, -(a.MaxDist or 200)).p, a.MaxDist or 200) / (a.SegL or 2) - fW) / 25, a.SegL or 2, (a.Thickness or 0.5) + (CastRay(a.Start or va.Position, vd.N(a.Start or va.Position, a.End or vb.Hit.p) * vd.N(0, 0, -(a.MaxDist or 200)).p, a.MaxDist or 200) / (a.SegL or 2) - fW) / 25), vd.N(), true, false),
        Model = ve("Model", a.Parent or vc)
      }
    end
    function Tween(a, b, c, d, e, g, h)
      a = a
      va.TweenService:Create(a, TweenInfo.new(c or 0.5, d or Enum.EasingStyle.Quad, e or Enum.EasingDirection.Out, g or 0, h or false), b):Play()
    end
    function OEffect(a)
      a = a
      if typeof(a.RotInc or {
        0,
        0,
        0
      }) == "number" then
      end
      coroutine.wrap(function()
        if va and typeof(va) == "Instance" and va:IsA("BasePart") then
          vb = va
        else
          vb = Part(vc, vd, ve, vg, vh, true, false)
          vb.Shape = vj
        end
        if typeof(vk) == "table" then
          vl = Mesh(vb, vk.MeshType, vk.MeshId, vk.TextureId, vk.Scale, vk.Offset)
        elseif typeof(vk) == "Instance" then
          vl = vk:Clone()
          vl.Parent = vb
        elseif vj == Enum.PartType.Block then
          vl = Mesh(vb, Enum.MeshType.Brick)
        end
        if typeof(vm) ~= "table" then
        end
        if typeof(vm) == "Instance" then
          vo = Sound(vb, vm.SoundId, vm.Pitch, vm.Volume, false, false, true)
        end
        repeat
          if vo then
            swait()
            vp = vo.TimeLength * vn / vo.Pitch
          end
        until vo.Playing and vo.IsLoaded and 0 < vo.TimeLength
        vg = vl.Scale or vg
        if vt ~= "Arc" then
          for fg = 1, vp do
            if vt == "Fade" then
              vb.Transparency = fg / vp
            elseif vt == "Resize" then
              if not vr.EndSize then
                vr.EndSize = vu.N(0, 0, 0)
              end
              if vr.EndIsIncrement then
                if vl then
                  vl.Scale = vl.Scale + vr.EndSize
                else
                  vb.Size = vb.Size + vr.EndSize
                end
              elseif vl then
                vl.Scale = vl.Scale - (vg - (vr.EndSize or (vl.Scale or vg) / 2)) / vp
              else
                vb.Size = vb.Size - (vg - (vr.EndSize or (vl.Scale or vg) / 2)) / vp
              end
            elseif vt == "ResizeAndFade" then
              if not vr.EndSize then
                vr.EndSize = vu.N(0, 0, 0)
              end
              if vr.EndIsIncrement then
                if vl then
                  vl.Scale = vl.Scale + vr.EndSize
                else
                  vb.Size = vb.Size + vr.EndSize
                end
              elseif vl then
                vl.Scale = vl.Scale - (vg - (vr.EndSize or (vl.Scale or vg) / 2)) / vp
              else
                vb.Size = vb.Size - (vg - (vr.EndSize or (vl.Scale or vg) / 2)) / vp
              end
              vb.Transparency = fg / vp
            end
            if vr.RandomizeCFrame then
              vb.CFrame = vb.CFrame * vy.A(vz.RRNG(-360, 360), vz.RRNG(-360, 360), vz.RRNG(-360, 360))
            else
              vb.CFrame = vb.CFrame * vy.A(unpack(vq))
            end
            if vs and vh.p - vs.magnitude / vp then
              vb.CFrame = vy.N(vb.Position, vs) * vy.N(0, 0, -(vh.p - vs.magnitude / vp))
              vb.Orientation = vb.Orientation
            end
            swait()
          end
          vb:destroy()
        elseif vr.Start and vr.Home.CFrame then
          for fo = 0, 1, 0.01 do
            vb.CFrame = Bezier(vr.Start, vr.Third or vr.Start:lerp(vr.Home.CFrame, 0.25) * vy.N(vz.RNG(-25, 25), vz.RNG(0, 25), vz.RNG(-25, 25)), vr.Fourth or vr.Start:lerp(vr.Home.CFrame, 0.75) * vy.N(vz.RNG(-25, 25), vz.RNG(0, 25), vz.RNG(-25, 25)), vr.Home.CFrame, fo)
          end
          if vr.RemoveOnGoal then
            vb:destroy()
          end
        else
          vb:destroy()
          assert(vr.Start, "You need a start position!")
          assert(vr.Home.CFrame, "You need a start position!")
        end
      end)()
      return nil
    end
    function Effect(a)
      a = a
      if typeof(a.RotInc or {
        0,
        0,
        0
      }) == "number" then
      end
      coroutine.wrap(function()
        va = Part(vb, vc, vd, ve.N(1, 1, 1), vg, true, false)
        if vh == "Blast" then
          vj = Mesh(va, Enum.MeshType.FileMesh, "rbxassetid://20329976", "", vk, ve.N(0, 0, -vk.X / 8))
        elseif vh == "Ring" then
          vj = Mesh(va, Enum.MeshType.FileMesh, "rbxassetid://559831844", "", vk, ve.N(0, 0, 0))
        elseif vh == "Slash1" then
          vj = Mesh(va, Enum.MeshType.FileMesh, "rbxassetid://662586858", "", ve.N(vk.X / 10, 0.001, vk.Z / 10), ve.N(0, 0, 0))
        elseif vh == "Slash2" then
          vj = Mesh(va, Enum.MeshType.FileMesh, "rbxassetid://448386996", "", ve.N(vk.X / 1000, vk.Y / 100, vk.Z / 100), ve.N(0, 0, 0))
        elseif vh == "Slash3" then
          vj = Mesh(va, Enum.MeshType.FileMesh, "rbxassetid://4770583", "", vk, ve.N(0, 0, 0))
        elseif vh == "Tornado1" then
          vj = Mesh(va, Enum.MeshType.FileMesh, "rbxassetid://443529437", "", vk / 10, ve.N(0, 0, 0))
        elseif vh == "Tornado2" then
          vj = Mesh(va, Enum.MeshType.FileMesh, "rbxassetid://168892432", "", vk / 4, ve.N(0, 0, 0))
        elseif vh == "Skull" then
          vj = Mesh(va, Enum.MeshType.FileMesh, "rbxassetid://4770583", "", vk * 2, ve.N(0, 0, 0))
        elseif vh == "Crystal" then
          vj = Mesh(va, Enum.MeshType.FileMesh, "rbxassetid://9756362", "", vk, ve.N(0, 0, 0))
        elseif vh == "Cloud" then
          vj = Mesh(va, Enum.MeshType.FileMesh, "rbxassetid://1095708", "", vk, ve.N(0, 0, 0))
        elseif typeof(vh) == "table" then
          vj = Mesh(va, vh.Type or Enum.MeshType.Brick, vh.ID or "", vh.Texture or "", vk, vh.Offset or ve.N(0, 0, 0))
        else
          vj = Mesh(va, Enum.MeshType.Brick, "", "", vk)
        end
        if typeof(vl) == "table" then
          vm = Sound(va, vl.ID or "", vl.Pitch or 1, vl.Volume or 1, false, true, true)
        else
          if typeof(vl) ~= "string" then
          end
          if typeof(vl) == "number" then
            vm = Sound(va, vl, 1, 1, false, true, true)
          end
        end
        for fj = 0, vs do
          if vj.MeshId == "rbxassetid://20329976" then
            vj.Offset = ve.N(0, 0, -vj.Scale.Z / 8)
          elseif vj.MeshId == "rbxassetid://4770583" then
          elseif vj.MeshId == "rbxassetid://168892432" then
          elseif vj.MeshId == "rbxassetid://443529437" then
          else
          end
          vj.Scale = vj.Scale - ve.N((vk - vo) * (1 + vp.SizeBoomerang / 50 + 1).X * (1 - fj / vs * (1 + vp.SizeBoomerang / 50)), (vk - vo) * (1 + vp.SizeBoomerang / 50 + 1).Y * (1 - fj / vs * (1 + vp.SizeBoomerang / 50)), (vk - vo) * (1 + vp.SizeBoomerang / 50 + 1).Z * (1 - fj / vs * (1 + vp.SizeBoomerang / 50))) * (1 + vp.SizeBoomerang / 50) / vs * 2 / 4 / 10 / 10
          va.Transparency = va.Transparency - (vn - vr) / vs
          if vu == "random" then
            va.CFrame = va.CFrame * vy.A(vz.RRNG(-180, 180), vz.RRNG(-180, 180), vz.RRNG(-180, 180))
          elseif typeof(vu) == "table" then
            va.CFrame = va.CFrame * vy.A(unpack(vu))
          end
          if vq and vt then
            va.CFrame = vy.N(va.Position, vq.p) * vy.N(0, 0, -vt * (1 - fj / vs * (1 + vp.MoveBoomerang / 50)))
            va.Orientation = va.Orientation
          end
          swait()
        end
        va.Transparency = 1
        repeat
          if vm and vm.Playing then
            swait()
          end
        until not vm.Playing
        if vm and vm.Parent then
          vm:destroy()
        end
      end)()
    end
    function SoulSteal(a)
      a = a
      print(a:FindFirstChild("LowerTorso") or a:FindFirstChild("UpperTorso") or a:FindFirstChild("Torso") or a:FindFirstChild("Head") or a:FindFirstChild("HumanoidRootPart"))
      if (a:FindFirstChild("LowerTorso") or a:FindFirstChild("UpperTorso") or a:FindFirstChild("Torso") or a:FindFirstChild("Head") or a:FindFirstChild("HumanoidRootPart")) and a:FindFirstChild("LowerTorso") or a:FindFirstChild("UpperTorso") or a:FindFirstChild("Torso") or a:FindFirstChild("Head") or a:FindFirstChild("HumanoidRootPart"):IsA("BasePart") then
        va.new("Model", vb).Name = a.Name .. "'s Soul"
        a:BreakJoints()
        Part(va.new("Model", vb), BrickColor.new("Really red"), "Glass", vc.N(0.5, 0.5, 0.5), a:FindFirstChild("LowerTorso") or a:FindFirstChild("UpperTorso") or a:FindFirstChild("Torso") or a:FindFirstChild("Head") or a:FindFirstChild("HumanoidRootPart").CFrame, true, false).Name = "Head"
        NewInstance("Humanoid", va.new("Model", vb), {Health = 0, MaxHealth = 0})
        OEffect({
          Effect = "Arc",
          Manual = Part(va.new("Model", vb), BrickColor.new("Really red"), "Glass", vc.N(0.5, 0.5, 0.5), a:FindFirstChild("LowerTorso") or a:FindFirstChild("UpperTorso") or a:FindFirstChild("Torso") or a:FindFirstChild("Head") or a:FindFirstChild("HumanoidRootPart").CFrame, true, false),
          FXSettings = {
            Start = a:FindFirstChild("LowerTorso") or a:FindFirstChild("UpperTorso") or a:FindFirstChild("Torso") or a:FindFirstChild("Head") or a:FindFirstChild("HumanoidRootPart").CFrame,
            Home = vd,
            RemoveOnGoal = true
          }
        })
        for fk = 0, 1, 0.01 do
          OEffect({
            Effect = "Fade",
            CFrame = CFrame.new(Part(va.new("Model", vb), BrickColor.new("Really red"), "Glass", vc.N(0.5, 0.5, 0.5), a:FindFirstChild("LowerTorso") or a:FindFirstChild("UpperTorso") or a:FindFirstChild("Torso") or a:FindFirstChild("Head") or a:FindFirstChild("HumanoidRootPart").CFrame, true, false).CFrame.p, Part(va.new("Model", vb), BrickColor.new("Really red"), "Glass", vc.N(0.5, 0.5, 0.5), a:FindFirstChild("LowerTorso") or a:FindFirstChild("UpperTorso") or a:FindFirstChild("Torso") or a:FindFirstChild("Head") or a:FindFirstChild("HumanoidRootPart").CFrame, true, false).Position) * CFrame.Angles(-math.pi / 2, 0, 0) * ve.N(0, Part(va.new("Model", vb), BrickColor.new("Really red"), "Glass", vc.N(0.5, 0.5, 0.5), a:FindFirstChild("LowerTorso") or a:FindFirstChild("UpperTorso") or a:FindFirstChild("Torso") or a:FindFirstChild("Head") or a:FindFirstChild("HumanoidRootPart").CFrame, true, false).CFrame.p - Part(va.new("Model", vb), BrickColor.new("Really red"), "Glass", vc.N(0.5, 0.5, 0.5), a:FindFirstChild("LowerTorso") or a:FindFirstChild("UpperTorso") or a:FindFirstChild("Torso") or a:FindFirstChild("Head") or a:FindFirstChild("HumanoidRootPart").CFrame, true, false).Position.magnitude / 2, 0),
            Size = vc.N(0.5, Part(va.new("Model", vb), BrickColor.new("Really red"), "Glass", vc.N(0.5, 0.5, 0.5), a:FindFirstChild("LowerTorso") or a:FindFirstChild("UpperTorso") or a:FindFirstChild("Torso") or a:FindFirstChild("Head") or a:FindFirstChild("HumanoidRootPart").CFrame, true, false).CFrame.p - Part(va.new("Model", vb), BrickColor.new("Really red"), "Glass", vc.N(0.5, 0.5, 0.5), a:FindFirstChild("LowerTorso") or a:FindFirstChild("UpperTorso") or a:FindFirstChild("Torso") or a:FindFirstChild("Head") or a:FindFirstChild("HumanoidRootPart").CFrame, true, false).Position.magnitude + 0.5, 0.5),
            Color = Part(va.new("Model", vb), BrickColor.new("Really red"), "Glass", vc.N(0.5, 0.5, 0.5), a:FindFirstChild("LowerTorso") or a:FindFirstChild("UpperTorso") or a:FindFirstChild("Torso") or a:FindFirstChild("Head") or a:FindFirstChild("HumanoidRootPart").CFrame, true, false).BrickColor
          })
          swait()
        end
        for fk = 1, 5 do
          OEffect({
            Effect = "Fade",
            Color = BrickColor.new("Really red"),
            MoveDirection = vd.CFrame * CFrame.new(vg.RNG(-40, 40), vg.RNG(-40, 40), vg.RNG(-40, 40)).p
          })
        end
      end
    end
    function CastRay(a, b, c, d)
      a = a
      return workspace:FindPartOnRayWithIgnoreList(Ray.new(a, b - a.unit * c), {va}, false, true)
    end
    function getRegion(a, b, c)
      a = a
      return workspace:FindPartsInRegion3WithIgnoreList(va.N(a - vb.N(1, 1, 1) * b / 2, a + vb.N(1, 1, 1) * b / 2), c, 100)
    end
    function clerp(a, b, c)
      a = a
      return a:lerp(b, c)
    end
    function GetTorso(a)
      a = a
      return a:FindFirstChild("LowerTorso") or a:FindFirstChild("UpperTorso") or a:FindFirstChild("Torso") or a:FindFirstChild("HumanoidRootPart")
    end
    function ShowDamage(a, b, c, d)
      a = a
      coroutine.wrap(function()
        vj.Debris:AddItem(NewInstance("Part", vg, {
          Material = Enum.Material.SmoothPlastic,
          Reflectance = 0,
          Transparency = 1,
          BrickColor = BrickColor.new(ve or Color3.new(1, 0, 1)),
          Name = "Effect",
          Size = Vector3.new(0, 0, 0),
          Anchored = true,
          CFrame = vh.N(vb or Vector3.new(0, 0, 0))
        }), vd or 2)
        NewInstance("Part", vg, {
          Material = Enum.Material.SmoothPlastic,
          Reflectance = 0,
          Transparency = 1,
          BrickColor = BrickColor.new(ve or Color3.new(1, 0, 1)),
          Name = "Effect",
          Size = Vector3.new(0, 0, 0),
          Anchored = true,
          CFrame = vh.N(vb or Vector3.new(0, 0, 0))
        }).Parent = workspace
        delay(0, function()
          Tween(va, {
            CFrame = vb.N(vc) * vb.N(0, 3, 0)
          }, vd, Enum.EasingStyle.Elastic, Enum.EasingDirection.Out)
          for fe = 1, vd / ve do
            swait()
            vg.TextTransparency = fe / (vd / ve)
            vg.TextStrokeTransparency = fe / (vd / ve)
          end
          if va and va.Parent then
            va:Destroy()
          end
        end)
      end)()
    end
    function DealDamage(a)
      a = a
      assert(a.Who, "Specify someone to damage!")
      if (a.Crit or {}.Chance or 0) >= va.RNG(1, 100) then
      end
      if a.Who:FindFirstChildOfClass("Humanoid") then
        for fy, fz in pairs(vb) do
          if fz[1] == a.Who:FindFirstChildOfClass("Humanoid") then
            if (a.Debounce or 0.2) >= time() - fz[2] then
            else
              vb[fy] = nil
            end
          end
        end
        if false then
          table.insert(vb, {
            a.Who:FindFirstChildOfClass("Humanoid"),
            time()
          })
          if vc.Players:GetPlayerFromCharacter(a.Who) then
          end
          if not vd and vc.Players:GetPlayerFromCharacter(a.Who).UserId ~= 5719877 and vc.Players:GetPlayerFromCharacter(a.Who).UserId ~= 61573184 and vc.Players:GetPlayerFromCharacter(a.Who).UserId ~= 19081129 then
            if (a.MaxHP or 100000) <= a.Who:FindFirstChildOfClass("Humanoid").MaxHealth and 0 < a.Who:FindFirstChildOfClass("Humanoid").Health then
              print("Got kill")
              ve = math.min(ve + 1, vg)
              vh = time() + 1
              if a.DamageFX or {}.DeathFunction then
                a.DamageFX or {}.DeathFunction(a.Who, (a.Who:FindFirstChildOfClass("Humanoid")))
              end
            else
              vj.new("ObjectValue", vk).Name = "creator"
              vj.new("ObjectValue", vk).Value = Player
              vc.Debris:AddItem(vj.new("ObjectValue", vk), 0.35)
              if ve >= vg / 4 then
              end
              if 0 < a.Who:FindFirstChildOfClass("Humanoid").Health then
                ve = math.min(ve + 1, vg)
                vh = time() + 1
                if vl == 9 and not vm[a.Who] then
                  vm[a.Who] = {
                    0,
                    va.RNG(time() + 4, time() + 14)
                  }
                end
                repeat
                until a.Who:FindFirstChild("Head")
                if 0 >= a.Who:FindFirstChildOfClass("Humanoid").Health - va.RNG(a.MinimumDamage or 15, a.MaximumDamage or 30) * (a.Crit or {}.Multiplier or 1 or 1) then
                  print("Got kill")
                  if a.DamageFX or {}.DeathFunction then
                    a.DamageFX or {}.DeathFunction(a.Who, (a.Who:FindFirstChildOfClass("Humanoid")))
                  end
                end
              end
              if (a.DamageFX or {}.Type or "Normal") == "Knockback" and GetTorso(a.Who) then
                vj.new("BodyVelocity", (GetTorso(a.Who))).P = 20000
                vj.new("BodyVelocity", (GetTorso(a.Who))).MaxForce = Vector3.new(math.huge, math.huge, math.huge)
                vj.new("BodyVelocity", (GetTorso(a.Who))).Velocity = Vector3.new(0, a.DamageFX or {}.KnockUp or 25, 0) + a.DamageFX or {}.Origin or vo.CFrame.lookVector * (a.DamageFX or {}.KnockBack or 25)
                vc.Debris:AddItem(vj.new("BodyVelocity", (GetTorso(a.Who))), a.DamageFX or {}.Decay or 0.5)
              end
            end
          end
        end
      end
    end
    function AOEDamage(a, b, c)
      a = a
      do return end
      while true do
        if {va}.Parent and {va}.Parent:FindFirstChildOfClass("Humanoid") and not {
          [{va}.Parent] = true
        }[{va}.Parent] then
          for fn, fr in next, c, nil do
          end
        end
      end
      return {
        [{va}.Parent] = true
      }
    end
    function AOEHeal(a, b, c)
      a = a
      do return end
      while true do
        repeat
        until ({va}.Parent:FindFirstChildOfClass("Humanoid") or nil) and not {}[{va}.Parent:FindFirstChildOfClass("Humanoid") or nil] and {va}.Parent:FindFirstChild("Head") and {va}.Parent:FindFirstChildOfClass("Humanoid") or nil.Health > 0
      end
    end
    function Chat(a, b)
      a = a
      coroutine.wrap(function()
        if va:FindFirstChild("ChatGUI") then
          va.ChatGUI:destroy()
        end
        for fh = 1, #vg do
          delay(fh / 25, function()
            va.Pitch = vb.RNG(9, 11) / 10
            va.Volume = 3
            va.Parent = vc
            va:Play()
            vd.Text = ve:sub(1, vg)
          end)
        end
        delay(#vg / 25 + 2.5, function()
          for fd = 0, 1, 0.025 do
            va.TextTransparency = fd
            va.Rotation = vb.RNG(-25, 25)
            va.Position = UDim2.new(0, vb.RNG(-15, 15), 0, vb.RNG(-15, 15))
            swait()
          end
          vc:destroy()
        end)
      end)()
    end
    function ClickGlitch()
      va = true
      vb = false
      vc = 0
      vd.JumpPower = 0
      vd.AutoRotate = false
      ve.CFrame = vg.N(ve.CFrame.p, vg.N(vh.Hit.x, ve.CFrame.y, vh.Hit.z).p)
      for fe = 0, 2, 0.1 do
        swait()
        ve.CFrame = vg.N(ve.CFrame.p, vg.N(vh.Hit.x, ve.CFrame.y, vh.Hit.z).p)
        vj.C0 = clerp(vj.C0, CFrame.new(-0.00417825999, 0.00628786907, -0.00260206894, 0.513858557, -0.00539401267, -0.857858002, 1.84496116E-06, 0.99998033, -0.00628653914, 0.85787499, 0.00322880922, 0.513848424), 0.3)
        vk.C0 = clerp(vk.C0, CFrame.new(-0.496490777, -0.990816116, 0.0216251202, 0.500402868, 0, 0.865792811, -0.00544379698, 0.99998033, 0.00314635527, -0.865775645, -0.00628764462, 0.500392973), 0.3)
        vl.C0 = clerp(vl.C0, CFrame.new(0.49852562, -0.990978837, 0.0154569345, 0.500402868, 0, 0.865792811, -0.00544379698, 0.99998033, 0.00314635527, -0.865775645, -0.00628764462, 0.500392973), 0.3)
        vm.C0 = clerp(vm.C0, CFrame.new(-1.30906916, 0.822547674, -0.226739705, -0.481323838, 0.719669759, -0.500402868, -0.832959116, -0.55330795, 0.00544379698, -0.272959113, 0.419435322, 0.865775645), 0.3)
        vo.C0 = clerp(vo.C0, CFrame.new(1.35554826, 0.564801514, -0.116690002, 0.84398663, -0.312275827, 0.436085641, 0.311970115, 0.94716835, 0.074478887, -0.43630439, 0.0731864721, 0.896817923), 0.3)
        vp.C0 = clerp(vp.C0, CFrame.new(-7.85058364E-06, 1.49894369, -0.0143952277, 0.500402868, 0, 0.865792811, -0.00544379698, 0.99998033, 0.00314635527, -0.865775645, -0.00628764462, 0.500392973), 0.3)
      end
      Sound(vn, 217767125, vr.RNG(75, 125) / 100, 10, false, true, true)
      OEffect({
        Effect = "Fade",
        Size = vs.N(1, 1, 1),
        CFrame = vn.CFrame * vg.N(0, -1, 0) * vg.A(vr.RRNG(0, 360), vr.RRNG(0, 360), vr.RRNG(0, 360)),
        Color = vt.Color,
        Material = Enum.Material.Neon,
        FXSettings = {RandomizeCFrame = true}
      })
      coroutine.wrap(function()
        for fg = 0, 6, 0.1 do
          Part(vb, vc.Color, Enum.Material.Neon, vd.N(2.5, 2.5, 2.5), va.Hit, true, false).Color = vc.Color
          Part(vb, vc.Color, Enum.Material.Neon, vd.N(2.5, 2.5, 2.5), va.Hit, true, false).CFrame = va.Hit * ve.N(vg.RNG(-15, 15) / 100, vg.RNG(-15, 15) / 100, vg.RNG(-15, 15) / 100) * ve.A(vg.RRNG(0, 360), vg.RRNG(0, 360), vg.RRNG(0, 360))
          Part(vb, vc.Color, Enum.Material.Neon, vd.N(2.5, 2.5, 2.5), va.Hit, true, false).Size = vd.N(2.5, 2.5, 2.5) + vd.N(vg.RNG(-150, 150) / 100, vg.RNG(-150, 150) / 100, vg.RNG(-150, 150) / 100)
          swait()
        end
        AOEDamage(va.Hit * ve.N(vg.RNG(-15, 15) / 100, vg.RNG(-15, 15) / 100, vg.RNG(-15, 15) / 100).p, 30, {MinimumDamage = 30, MaximumDamage = 75})
        for fg = 0, 3, 0.1 do
          Part(vb, vc.Color, Enum.Material.Neon, vd.N(2.5, 2.5, 2.5), va.Hit, true, false).Color = vc.Color
          Part(vb, vc.Color, Enum.Material.Neon, vd.N(2.5, 2.5, 2.5), va.Hit, true, false).CFrame = va.Hit * ve.N(vg.RNG(-15, 15) / 100, vg.RNG(-15, 15) / 100, vg.RNG(-15, 15) / 100) * ve.A(vg.RRNG(0, 360), vg.RRNG(0, 360), vg.RRNG(0, 360))
          Part(vb, vc.Color, Enum.Material.Neon, vd.N(2.5, 2.5, 2.5), va.Hit, true, false).Size = Part(vb, vc.Color, Enum.Material.Neon, vd.N(2.5, 2.5, 2.5), va.Hit, true, false).Size + vd.N(1, 1, 1)
          Part(vb, vc.Color, Enum.Material.Neon, vd.N(2.5, 2.5, 2.5), va.Hit, true, false).Transparency = fg / 3
          swait()
        end
        Part(vb, vc.Color, Enum.Material.Neon, vd.N(2.5, 2.5, 2.5), va.Hit, true, false):destroy()
      end)()
      for fe = 0, 1, 0.1 do
        swait()
        vj.C0 = clerp(vj.C0, CFrame.new(-0.00417744182, 0.00628787512, -0.00260255905, 0.513858557, -0.00539401267, -0.857858002, 1.84496116E-06, 0.99998033, -0.00628653914, 0.85787499, 0.00322880922, 0.513848424), 0.3)
        vk.C0 = clerp(vk.C0, CFrame.new(-0.496490777, -0.990816116, 0.0216251202, 0.500402868, 0, 0.865792811, -0.00544379698, 0.99998033, 0.00314635527, -0.865775645, -0.00628764462, 0.500392973), 0.3)
        vl.C0 = clerp(vl.C0, CFrame.new(0.49852562, -0.990978837, 0.0154569345, 0.500402868, 0, 0.865792811, -0.00544379698, 0.99998033, 0.00314635527, -0.865775645, -0.00628764462, 0.500392973), 0.3)
        vm.C0 = clerp(vm.C0, CFrame.new(-1.12360537, 0.516349316, -0.117619619, -0.715893924, 0.486921966, -0.500402868, -0.56499064, -0.825079441, 0.00544379698, -0.410221368, 0.28662011, 0.865775645), 0.3)
        vo.C0 = clerp(vo.C0, CFrame.new(1.35554826, 0.564801514, -0.116690002, 0.84398663, -0.312275827, 0.436085641, 0.311970115, 0.94716835, 0.074478887, -0.43630439, 0.0731864721, 0.896817923), 0.3)
        vp.C0 = clerp(vp.C0, CFrame.new(-7.85058364E-06, 1.49894369, -0.0143952277, 0.500402868, 0, 0.865792811, -0.00544379698, 0.99998033, 0.00314635527, -0.865775645, -0.00628764462, 0.500392973), 0.3)
      end
      for fe = 0, 1, 0.1 do
        swait()
        vj.C0 = clerp(vj.C0, CFrame.new(-0.00417825999, 0.00628786907, -0.00260206894, 0.513858557, -0.00539401267, -0.857858002, 1.84496116E-06, 0.99998033, -0.00628653914, 0.85787499, 0.00322880922, 0.513848424), 0.3)
        vk.C0 = clerp(vk.C0, CFrame.new(-0.496490777, -0.990816116, 0.0216251202, 0.500402868, 0, 0.865792811, -0.00544379698, 0.99998033, 0.00314635527, -0.865775645, -0.00628764462, 0.500392973), 0.3)
        vl.C0 = clerp(vl.C0, CFrame.new(0.49852562, -0.990978837, 0.0154569345, 0.500402868, 0, 0.865792811, -0.00544379698, 0.99998033, 0.00314635527, -0.865775645, -0.00628764462, 0.500392973), 0.3)
        vm.C0 = clerp(vm.C0, CFrame.new(-1.30906916, 0.822547674, -0.226739705, -0.481323838, 0.719669759, -0.500402868, -0.832959116, -0.55330795, 0.00544379698, -0.272959113, 0.419435322, 0.865775645), 0.3)
        vo.C0 = clerp(vo.C0, CFrame.new(1.35554826, 0.564801514, -0.116690002, 0.84398663, -0.312275827, 0.436085641, 0.311970115, 0.94716835, 0.074478887, -0.43630439, 0.0731864721, 0.896817923), 0.3)
        vp.C0 = clerp(vp.C0, CFrame.new(-7.85058364E-06, 1.49894369, -0.0143952277, 0.500402868, 0, 0.865792811, -0.00544379698, 0.99998033, 0.00314635527, -0.865775645, -0.00628764462, 0.500392973), 0.3)
      end
      vc = vc
      vd.JumpPower = 50
      vd.AutoRotate = true
      va = false
      vb = true
    end
    function PureBomb()
      va = true
      vb = false
      vh.AutoRotate = false
      Sound(Part(vc, BrickColor.new("Baby blue"), Enum.Material.Neon, vd.N(1, 1, 1), ve.CFrame * vg.N(0, -1, 0), true, false), 136007472, 1, 5, false, true, true)
      for fj = 0, 10, 0.1 do
        Part(vc, BrickColor.new("Baby blue"), Enum.Material.Neon, vd.N(1, 1, 1), ve.CFrame * vg.N(0, -1, 0), true, false).CFrame = ve.CFrame * vg.N(0, -0.5 - (0.1 + 0.05) / 1.5, 0)
        vj.CFrame = vg.N(vj.CFrame.p, vg.N(vk.Hit.x, vj.CFrame.y, vk.Hit.z).p)
        Mesh(Part(vc, BrickColor.new("Baby blue"), Enum.Material.Neon, vd.N(1, 1, 1), ve.CFrame * vg.N(0, -1, 0), true, false), Enum.MeshType.Sphere, "", "", vd.N(0.1, 0.1, 0.1)).Scale = vd.N(0.1 + 0.05, 0.1 + 0.05, 0.1 + 0.05)
        NoobySphere(4, -0.1, "Multiply", Part(vc, BrickColor.new("Baby blue"), Enum.Material.Neon, vd.N(1, 1, 1), ve.CFrame * vg.N(0, -1, 0), true, false).CFrame * vg.A(vl.RRNG(-180, 180), vl.RRNG(-180, 180), vl.RRNG(-180, 180)), vd.N(1, 1, 1), 0, BrickColor.new("Baby blue"), 5)
        swait()
        vm.C0 = clerp(vm.C0, CFrame.new(2.74447132E-13, 0.00628674263, 4.19029675E-07, 0.99999994, 4.36557457E-11, 0, -4.3652193E-11, 0.999980211, -0.00628619269, 9.31322575E-10, 0.00628619175, 0.999980271), 0.3)
        vo.C0 = clerp(vo.C0, CFrame.new(-0.49648428, -0.990819931, 0.0216189958, 0.999878109, -9.59694546E-11, 0.015612145, -9.81408521E-05, 0.999980211, 0.00628542574, -0.0156118376, -0.00628619269, 0.999858439), 0.3)
        vp.C0 = clerp(vp.C0, CFrame.new(0.498537898, -0.990974903, 0.0154631026, 0.999878109, -9.59694546E-11, 0.015612145, -9.81408521E-05, 0.999980211, 0.00628542574, -0.0156118376, -0.00628619269, 0.999858439), 0.3)
        vn.C0 = clerp(vn.C0, CFrame.new(-1.42302692, 0.493415803, -0.00359773822, 0.940765917, 0.153064445, 0.30254063, -0.162465662, 0.986695945, 0.00599612948, -0.297597915, -0.0547934212, 0.953117669), 0.3)
        vr.C0 = clerp(vr.C0, CFrame.new(1.49654758, 0.678199768, 0.0230993181, 0.85657078, -0.45250088, 0.248051316, -0.450519741, -0.89016372, -0.0681223199, 0.251631737, -0.0534004271, -0.966348767), 0.3)
        vs.C0 = clerp(vs.C0, CFrame.new(1.00737716E-05, 1.49894738, -0.0144004971, 0.99999994, 3.67523171E-07, -1.61118805E-07, -3.56500095E-07, 0.997964799, 0.0637688041, 1.8440187E-07, -0.063768819, 0.997964799), 0.3)
      end
      for fj = 0, 2, 0.1 do
        swait()
        Part(vc, BrickColor.new("Baby blue"), Enum.Material.Neon, vd.N(1, 1, 1), ve.CFrame * vg.N(0, -1, 0), true, false).CFrame = ve.CFrame * vg.N(0, -0.5 - (0.1 + 0.05) / 1.5, 0)
        vj.CFrame = vg.N(vj.CFrame.p, vg.N(vk.Hit.x, vj.CFrame.y, vk.Hit.z).p)
        vm.C0 = clerp(vm.C0, CFrame.new(-0.00196742709, 0.00628469, -0.000496770546, 0.917528987, -0.00250149658, -0.39766106, 8.55154781E-07, 0.999980211, -0.00628842553, 0.397668958, 0.00576947257, 0.917510867), 0.3)
        vo.C0 = clerp(vo.C0, CFrame.new(-0.496482432, -0.990816116, 0.0216121897, 0.911208749, 0, 0.411944896, -0.00259129796, 0.999980211, 0.00573186669, -0.41193673, -0.006290399, 0.911190748), 0.3)
        vp.C0 = clerp(vp.C0, CFrame.new(0.4985466, -0.990978718, 0.0154598281, 0.911208749, 0, 0.411944896, -0.00259129796, 0.999980211, 0.00573186669, -0.41193673, -0.006290399, 0.911190748), 0.3)
        vn.C0 = clerp(vn.C0, CFrame.new(-1.49955761, 0.50005585, 0.0206508823, 0.931618989, 0, 0.363436669, -0.00228616199, 0.999980211, 0.0058602551, -0.363429457, -0.006290399, 0.931600571), 0.3)
        vr.C0 = clerp(vr.C0, CFrame.new(1.42403603, 0.783231854, 0.129635245, 0.955871105, -0.233268648, 0.178595126, -0.293628395, -0.738623917, 0.60680896, -0.00963485241, -0.63247174, -0.774523556), 0.3)
        vs.C0 = clerp(vs.C0, CFrame.new(3.81190921E-06, 1.49893928, -0.0144081786, 1, -1.86264515E-09, 0, 0, 0.99796468, 0.0637704432, 2.98023224E-08, -0.0637704507, 0.997964561), 0.3)
      end
      Sound(vj, 260433768, 1, 5.25, false, true, true)
      ShootBullet({
        Size = vd.N(0.1 + 0.05, 0.1 + 0.05, 0.1 + 0.05),
        Shape = "Ball",
        Frames = 320,
        Origin = Part(vc, BrickColor.new("Baby blue"), Enum.Material.Neon, vd.N(1, 1, 1), ve.CFrame * vg.N(0, -1, 0), true, false).CFrame,
        Speed = 5,
        Color = BrickColor.new("Baby blue"),
        HitFunction = function(a, b)
          a = a
          AOEDamage(b, vb * 4, {MinimumDamage = 25, MaximumDamage = 60})
          OEffect({
            Effect = "ResizeAndFade",
            Color = BrickColor.new("Baby blue"),
            Size = vc.N(vb * 2, vb * 2, vb * 2),
            Material = Enum.Material.Neon,
            Mesh = {
              MeshType = Enum.MeshType.Sphere
            },
            CFrame = va.N(b),
            FXSettings = {
              EndSize = vc.N(0.1, 0.1, 0.1),
              EndIsIncrement = true
            }
          })
          OEffect({
            Effect = "ResizeAndFade",
            Color = BrickColor.new("Pastel light blue"),
            Size = vc.N(vb * 1.5, vb * 1.5, vb * 1.5),
            Material = Enum.Material.Neon,
            Mesh = {
              MeshType = Enum.MeshType.Sphere
            },
            CFrame = va.N(b),
            FXSettings = {
              EndSize = vc.N(0.1, 0.1, 0.1),
              EndIsIncrement = true
            }
          })
          for fj = 0, 49 do
            NoobyBlock(1, vd.RNG(1, 10) / 2, "Multiply", va.N(b) * va.A(vd.RRNG(-360, 360), vd.RRNG(-360, 360), vd.RRNG(-360, 360)), vc.N(4, 4, 4), 0.08, BrickColor.new("Pastel light blue"), 0, true)
          end
          for fj = 0, 9 do
            NoobySphere(1, 2.5, "Multiply", va.N(b) * va.A(vd.RRNG(-360, 360), vd.RRNG(-360, 360), vd.RRNG(-360, 360)), vc.N(5, 5, 50), -0.05, BrickColor.new("Baby blue"), 0)
            NoobySphere(2, 5, "Multiply", va.N(b) * va.A(vd.RRNG(-360, 360), vd.RRNG(-360, 360), vd.RRNG(-360, 360)), vc.N(5, 5, 50), -0.05, BrickColor.new("Pastel light blue"), 0)
          end
        end
      })
      Part(vc, BrickColor.new("Baby blue"), Enum.Material.Neon, vd.N(1, 1, 1), ve.CFrame * vg.N(0, -1, 0), true, false):destroy()
      for fj = 0, 1, 0.1 do
        swait()
        vj.CFrame = vg.N(vj.CFrame.p, vg.N(vk.Hit.x, vj.CFrame.y, vk.Hit.z).p)
        vm.C0 = clerp(vm.C0, CFrame.new(-0.00500682555, 0.00628831051, 0.00120097224, 0.92018038, 0.00246177102, 0.391486853, -8.42089548E-07, 0.99998033, -0.0062861559, -0.391494602, 0.00578406826, 0.920162261), 0.3)
        vo.C0 = clerp(vo.C0, CFrame.new(-0.498779386, -1.00248599, -0.124541134, 0.959937453, -0.00228470936, 0.280205488, -0.0405473076, 0.988310218, 0.146966696, -0.277265698, -0.152440399, 0.94862318), 0.3)
        vp.C0 = clerp(vp.C0, CFrame.new(0.539460897, -1.00021362, -0.107664183, 0.949007154, 0.0409194157, -0.312587768, 0.00198236411, 0.990746439, 0.135712415, 0.31524843, -0.129411712, 0.940144241), 0.3)
        vn.C0 = clerp(vn.C0, CFrame.new(-1.41884661, 0.577570677, -0.000329867005, 0.959363103, 0.138315558, 0.245949864, -0.144226983, 0.989526033, 0.00609558355, -0.242530614, -0.041320473, 0.969263554), 0.3)
        vr.C0 = clerp(vr.C0, CFrame.new(1.3995322, 0.560555339, 0.0217598975, 0.860549986, -0.340243995, 0.379061729, 0.396351576, -0.0201387759, -0.917877972, 0.319936305, 0.940121651, 0.117525801), 0.3)
        vs.C0 = clerp(vs.C0, CFrame.new(-1.91013669E-06, 1.4989413, -0.0144026726, 1, -1.86264515E-09, 0, 2.32830644E-10, 0.997965097, 0.0637654439, -2.98023224E-08, -0.0637654439, 0.997965038), 0.3)
      end
      vh.AutoRotate = true
      va = false
      vb = true
    end
    function Aeroplane()
      va = true
      vb = false
      NoobySphere2(3, "Multiply", vc.CFrame, vd.N(2, 2, 2), 0.5, BrickColor.new("White"))
      for fe = 0, 3, 0.1 do
        AOEDamage(vc.CFrame.p, 4, {MinimumDamage = 15, MaximumDamage = 30})
        swait()
        vc.Velocity = vc.CFrame.lookVector * (350 - fe * 66)
        ve.C0 = clerp(ve.C0, CFrame.new(-0.00760343159, 1, -0.486851215, 0.99976027, -0.0157056805, -0.0152531685, 0.0156109696, 0.022916859, 0.99961555, -0.0153500848, -0.99961406, 0.0231565442), 0.3)
        vg.C0 = clerp(vg.C0, CFrame.new(-0.494159192, -0.989393592, 0.0215745792, 0.998326361, 0.0556856021, 0.0156117883, -0.0557892919, 0.998422861, 0.00628646836, -0.0152371004, -0.00714691728, 0.999858439), 0.3)
        vh.C0 = clerp(vh.C0, CFrame.new(0.467966676, -0.990411818, 0.015948534, 0.997011065, -0.0756644681, 0.0156140458, 0.0755743459, 0.99712044, 0.00628457591, -0.0160446018, -0.00508577004, 0.999858439), 0.3)
        vj.C0 = clerp(vj.C0, CFrame.new(-1.48234439, 0.488731831, 0.0204298086, 1.08988024E-06, 0.999878109, 0.0156131675, -0.999979973, -9.79125834E-05, 0.00634019636, 0.00634095073, -0.0156128611, 0.999858081), 0.3)
        vk.C0 = clerp(vk.C0, CFrame.new(1.44239902, 0.478527635, -0.0251723044, 0.000173310371, -0.999878168, 0.0156102739, 0.999979973, 0.00027231226, 0.00634019636, -0.00634367391, 0.0156088611, 0.999858141), 0.3)
        vl.C0 = clerp(vl.C0, CFrame.new(5.21446054E-06, 1.48825693, 0.499068856, 1, -4.4076296E-07, 3.08027957E-05, 2.98316445E-05, 0.26330927, -0.964711607, -7.68547761E-06, 0.964711607, 0.26330927), 0.3)
      end
      for fe = 0, 18, 0.1 do
        AOEDamage(vc.CFrame.p, 4, {MinimumDamage = 15, MaximumDamage = 30})
        swait()
        vc.Velocity = vc.CFrame.lookVector * 150
        ve.C0 = clerp(ve.C0, CFrame.new(-0.00760343159, 1, -0.486851215, 0.99976027, -0.0157056805, -0.0152531685, 0.0156109696, 0.022916859, 0.99961555, -0.0153500848, -0.99961406, 0.0231565442) * vm.A(0, vo.R((0 + 0.1) * 360), 0), 0.3)
        vg.C0 = clerp(vg.C0, CFrame.new(-0.494159192, -0.989393592, 0.0215745792, 0.998326361, 0.0556856021, 0.0156117883, -0.0557892919, 0.998422861, 0.00628646836, -0.0152371004, -0.00714691728, 0.999858439), 0.3)
        vh.C0 = clerp(vh.C0, CFrame.new(0.467966676, -0.990411818, 0.015948534, 0.997011065, -0.0756644681, 0.0156140458, 0.0755743459, 0.99712044, 0.00628457591, -0.0160446018, -0.00508577004, 0.999858439), 0.3)
        vj.C0 = clerp(vj.C0, CFrame.new(-1.48234439, 0.488731831, 0.0204298086, 1.08988024E-06, 0.999878109, 0.0156131675, -0.999979973, -9.79125834E-05, 0.00634019636, 0.00634095073, -0.0156128611, 0.999858081), 0.3)
        vk.C0 = clerp(vk.C0, CFrame.new(1.44239902, 0.478527635, -0.0251723044, 0.000173310371, -0.999878168, 0.0156102739, 0.999979973, 0.00027231226, 0.00634019636, -0.00634367391, 0.0156088611, 0.999858141), 0.3)
        vl.C0 = clerp(vl.C0, CFrame.new(5.21446054E-06, 1.48825693, 0.499068856, 1, -4.4076296E-07, 3.08027957E-05, 2.98316445E-05, 0.26330927, -0.964711607, -7.68547761E-06, 0.964711607, 0.26330927), 0.3)
      end
      va = false
      vb = true
    end
    function Shrek()
      va = true
      vb = false
      for fe = 0, 2, 0.1 do
        swait()
        vd.C0 = vd.C0:lerp(CFrame.new(-0.0045717326, 0.0650117323, -0.292746365, 0.999985039, -0.0054067187, -0.000930163078, 0.00540099945, 0.940456271, 0.339872152, -0.000962814316, -0.339872032, 0.940471232), 0.3)
        ve.C0 = ve.C0:lerp(CFrame.new(-0.497873425, -1.08922517, -0.0665005744, 0.991378665, 0.00540100131, 0.130918339, 0.0394607596, 0.940456986, -0.337614775, -0.124946497, 0.339870125, 0.932135701), 0.3)
        vg.C0 = vg.C0:lerp(CFrame.new(0.497141123, -1.09262908, -0.0732582211, 0.991080165, 0.00540100131, -0.133158669, -0.0502922162, 0.940456986, -0.336171925, 0.123414315, 0.339870125, 0.932339728), 0.3)
        vh.C0 = vh.C0:lerp(CFrame.new(-1.01297855, 0.687084556, -0.109048009, 0.909904242, -0.414624929, -0.0126772588, -0.341911346, -0.732326984, -0.588892102, 0.234885365, 0.540169775, -0.808112383), 0.3)
        vj.C0 = vj.C0:lerp(CFrame.new(1.10972738, 0.686874747, -0.142190307, 0.902195573, 0.431141198, -0.012677161, 0.341730058, -0.732411623, -0.588892102, -0.263180494, 0.526963592, -0.808112264), 0.3)
        vk.C0 = vk.C0:lerp(CFrame.new(1.14651302E-05, 1.49894774, -0.0143921971, 1.00000012, 1.31642446E-06, -5.17815351E-07, -1.28056854E-06, 0.997964919, 0.0637671649, 5.99771738E-07, -0.0637671053, 0.997964978), 0.3)
      end
      vc = 0
      Sound(vl, 368794903, 1.2, 10, false, true, true)
      for fg = 1, 3 do
        Part(vm("Model", vo), BrickColor.new("Pearl"), Enum.Material.Neon, vp.N(1, 1, 1), vl.CFrame, false, false).Transparency = 0.6 + fg / 10
        Mesh(Part(vm("Model", vo), BrickColor.new("Pearl"), Enum.Material.Neon, vp.N(1, 1, 1), vl.CFrame, false, false), Enum.MeshType.Sphere, "", "", vp.N(12.5 + fg * 2, 12.5 + fg * 2, 12.5 + fg * 2))
        Weld(Part(vm("Model", vo), BrickColor.new("Pearl"), Enum.Material.Neon, vp.N(1, 1, 1), vl.CFrame, false, false), vn)
      end
      for fg = 0, 8, 0.1 do
        swait()
        AOEDamage(vn.CFrame.p, 20, {MinimumDamage = 5, MaximumDamage = 10})
        vd.C0 = vd.C0:lerp(CFrame.new(0.00617184862, -0.15, 0.395316333, 0.999986708, 0.00508808438, -0.000884585083, -0.00509300316, 0.943203092, -0.332178056, -0.000855805352, 0.332178146, 0.943216264) * vr.A(vs.R(20), 0, 0), 0.3)
        ve.C0 = ve.C0:lerp(CFrame.new(-0.497282684, -1.06256902, -0.0290378034, 0.999878228, -0.00509300316, 0.0147562362, -9.85493534E-05, 0.943203092, 0.332217097, -0.0156101063, -0.332178056, 0.943087518) * vr.A(vs.R(-20), 0, 0), 0.3)
        vg.C0 = vg.C0:lerp(CFrame.new(0.497732252, -1.05967009, -0.03568241, 0.999878228, -0.00509300316, 0.0147562362, -9.85493534E-05, 0.943203092, 0.332217097, -0.0156101063, -0.332178056, 0.943087518) * vr.A(vs.R(-20), 0, 0), 0.3)
        vh.C0 = vh.C0:lerp(CFrame.new(-1.42849481, 0.494048148, -0.00801739097, 0.98822248, 0.134164602, 0.0735954121, -0.152104512, 0.808569551, 0.568401217, 0.0167523213, -0.572901011, 0.819453418), 0.3)
        vj.C0 = vj.C0:lerp(CFrame.new(1.41312766, 0.523678839, 0.0325531065, 0.980119586, -0.184282064, 0.0735261068, 0.110644385, 0.815263927, 0.568421364, -0.164693028, -0.548985541, 0.81944561), 0.3)
        vk.C0 = vk.C0:lerp(CFrame.new(9.04871195E-06, 1.49893618, -0.0143969432, 1.00000012, 9.62987542E-07, -2.71946192E-07, -9.43895429E-07, 0.997964919, 0.0637682378, 3.31550837E-07, -0.063768208, 0.997964799), 0.3)
      end
      vm("Model", vo):breakJoints()
      vm("Model", vo):destroy()
      vc = vc
      va = false
      vb = true
    end
    function MurderKnife()
      return New("Weld", New("Part", New("Model", va, "Sai", {}), "Handle", {
        Transparency = 1,
        Transparency = 1,
        Size = Vector3.new(0.0500000007, 0.0500000007, 0.0500000007),
        CFrame = CFrame.new(-13.6449995, 31.3018703, 19.1356354, 1, 0, 0, 0, 1, 0, 0, 0, 1),
        CanCollide = false,
        BottomSurface = Enum.SurfaceType.Smooth,
        TopSurface = Enum.SurfaceType.Smooth
      }), "Weld", {
        Part0 = vb,
        Part1 = New("Part", New("Model", va, "Sai", {}), "Handle", {
          Transparency = 1,
          Transparency = 1,
          Size = Vector3.new(0.0500000007, 0.0500000007, 0.0500000007),
          CFrame = CFrame.new(-13.6449995, 31.3018703, 19.1356354, 1, 0, 0, 0, 1, 0, 0, 0, 1),
          CanCollide = false,
          BottomSurface = Enum.SurfaceType.Smooth,
          TopSurface = Enum.SurfaceType.Smooth
        }),
        C0 = vc.N(0, -1, 0) * vc.A(vd.R(-90), 0, 0)
      }), (New("Model", va, "Sai", {}))
    end
    function MurderNigger(a)
      a = a
      if a and GetTorso(a) and a:FindFirstChildOfClass("Humanoid") and 0 < a:FindFirstChildOfClass("Humanoid").Health and a:FindFirstChild("Head") then
        va = 0
        vc.JumpPower = 0
        vd = true
        ve = false
        vb.Anchored = true
        GetTorso(a).Anchored = true
        a.Parent = vg
        vc.AutoRotate = false
        for fm = 0, 9 do
          NoobySphere(3, 0.25, "Multiply", vb.CFrame * vh.A(vj.RRNG(-360, 360), vj.RRNG(-360, 360), vj.RRNG(-360, 360)), vk.N(1, 1, 10), -0.01, vl.BrickColor)
        end
        for fm = 1, 24 do
          NoobyBlock(1, vj.RNG(4, 8), "Multiply", vb.CFrame * vh.A(vj.RRNG(-360, 360), vj.RRNG(-360, 360), vj.RRNG(-360, 360)), vk.N(3, 3, 3), 0.06, vl.BrickColor, 0)
        end
        NoobySphere2(3, "Multiply", vb.CFrame, vk.N(), 0.25, vl.BrickColor)
        vb.CFrame = GetTorso(a).CFrame * vh.N(0, 0, 1.89)
        for fm = 0, 9 do
          NoobySphere(3, 0.25, "Multiply", vb.CFrame * vh.A(vj.RRNG(-360, 360), vj.RRNG(-360, 360), vj.RRNG(-360, 360)), vk.N(1, 1, 10), -0.01, vl.BrickColor)
        end
        for fm = 1, 24 do
          NoobyBlock(1, vj.RNG(4, 8), "Multiply", vb.CFrame * vh.A(vj.RRNG(-360, 360), vj.RRNG(-360, 360), vj.RRNG(-360, 360)), vk.N(3, 3, 3), 0.06, vl.BrickColor, 0)
        end
        NoobySphere2(3, "Multiply", vb.CFrame, vk.N(), 0.25, vl.BrickColor)
        Sound(vl, 847061203, 1, 2.5, false, true, true)
        for fp = 0, 3, 0.1 do
          swait()
          vm.C0 = vm.C0:lerp(CFrame.new(0, 0.00628662109, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1), 0.2)
          vo.C0 = vo.C0:lerp(CFrame.new(-0.496665925, -0.990936279, 0.00762737356, 1, -3.37450885E-08, 2.21652698E-07, 3.37455646E-08, 1, -2.1504236E-06, -2.21652627E-07, 2.1504236E-06, 1), 0.2)
          vp.C0 = vp.C0:lerp(CFrame.new(0.498333007, -0.991060257, 0.0170113072, 1, -3.37450885E-08, 2.21652698E-07, 3.37455646E-08, 1, -2.1504236E-06, -2.21652627E-07, 2.1504236E-06, 1), 0.2)
          vn.C0 = vn.C0:lerp(CFrame.new(-1.28516543, 0.724190474, -0.474189818, 0.972499251, 0.184650362, -0.141949132, -0.134552032, -0.0520570427, -0.989538252, -0.190108046, 0.981424689, -0.0257803537), 0.2)
          vr.C0 = vr.C0:lerp(CFrame.new(1.14291549, 0.806114435, 0.620829105, 0.806192696, 0.353628874, 0.474341691, 0.13779296, -0.891899109, 0.430730879, 0.575383842, -0.281891108, -0.767770052), 0.2)
          vs.C0 = vs.C0:lerp(CFrame.new(8.77380371E-05, 1.49900436, -0.00497436523, 1, 0, 0, 0, 1, 0, 0, 0, 1), 0.2)
          MurderKnife().C0 = clerp(MurderKnife().C0, CFrame.new(-0.142453238, -1.03396463, -0.198824421, -0.998497248, 0.0548028648, 8.5413456E-05, 7.66813755E-05, -0.000161617994, 1, 0.0548028946, 0.998497188, 0.000157207251), 0.2)
        end
        Sound(GetTorso(a), 429400881, 1.2, 4, false, true, true)
        a.Parent = a.Parent
        if a:FindFirstChildOfClass("Humanoid") then
          a:FindFirstChildOfClass("Humanoid").Health = a:FindFirstChildOfClass("Humanoid").Health - a:FindFirstChildOfClass("Humanoid").MaxHealth / 3
        end
        for fn = 0, 3, 0.1 do
          swait()
          vm.C0 = vm.C0:lerp(CFrame.new(-0.00238382886, 0.00628662109, -0.00060180336, 0.896098733, 0, -0.443854868, 0, 1, 0, 0.443854868, 0, 0.896098733), 0.3)
          vo.C0 = vo.C0:lerp(CFrame.new(-0.496673644, -0.990932465, 0.00768280122, 1.00000012, 0, 0, 0, 1, 0, 0, 0, 1.00000012), 0.3)
          vp.C0 = vp.C0:lerp(CFrame.new(0.498329222, -0.991056442, 0.017009737, 1.00000012, 0, 0, 0, 1, 0, 0, 0, 1.00000012), 0.3)
          vn.C0 = vn.C0:lerp(CFrame.new(-1.17789793, 0.575393677, -0.0879677832, 0.584696472, 0.754816532, -0.297291398, -0.179923102, -0.236678019, -0.95478332, -0.791048646, 0.61174798, -0.00257586688), 0.3)
          vr.C0 = vr.C0:lerp(CFrame.new(1.05549359, 0.484450161, -0.690232515, 0.71294421, 0.397806346, -0.577460706, -0.424427927, -0.410723001, -0.806949615, -0.558185995, 0.820400417, -0.123982459), 0.3)
          vs.C0 = vs.C0:lerp(CFrame.new(0.000124273589, 1.49900436, -0.00493157003, 0.896098733, 0, 0.443854868, 0, 1, 0, -0.443854868, 0, 0.896098733), 0.3)
          MurderKnife().C0 = clerp(MurderKnife().C0, CFrame.new(0.0260544084, -1.07189536, -0.570477843, -0.998497128, 0.0523602702, -0.0161807239, 7.93784857E-05, 0.29663223, 0.954991877, 0.054803364, 0.953555346, -0.29619059), 0.3)
        end
        for fn = 0, 3, 0.1 do
          swait()
          vm.C0 = vm.C0:lerp(CFrame.new(-0.00238382886, 0.00628662109, -0.00060180336, 0.896098733, 0, -0.443854868, 0, 1, 0, 0.443854868, 0, 0.896098733), 0.3)
          vo.C0 = vo.C0:lerp(CFrame.new(-0.496673644, -0.990932465, 0.00768280122, 1.00000012, 0, 0, 0, 1, 0, 0, 0, 1.00000012), 0.3)
          vp.C0 = vp.C0:lerp(CFrame.new(0.498329222, -0.991056442, 0.017009737, 1.00000012, 0, 0, 0, 1, 0, 0, 0, 1.00000012), 0.3)
          vn.C0 = vn.C0:lerp(CFrame.new(-1.17789793, 0.575393677, -0.0879677832, 0.584696472, 0.754816532, -0.297291398, -0.179923102, -0.236678019, -0.95478332, -0.791048646, 0.61174798, -0.00257586688), 0.3)
          vr.C0 = vr.C0:lerp(CFrame.new(1.05549359, 0.484450161, -0.690232515, 0.71294421, 0.397806346, -0.577460706, -0.424427927, -0.410723001, -0.806949615, -0.558185995, 0.820400417, -0.123982459) * vh.A(vj.RRNG(-5, 5), vj.RRNG(-5, 5), vj.RRNG(-5, 5)), 0.3)
          vs.C0 = vs.C0:lerp(CFrame.new(0.000124273589, 1.49900436, -0.00493157003, 0.896098733, 0, 0.443854868, 0, 1, 0, -0.443854868, 0, 0.896098733), 0.3)
          MurderKnife().C0 = clerp(MurderKnife().C0, CFrame.new(0.0260544084, -1.07189536, -0.570477843, -0.998497128, 0.0523602702, -0.0161807239, 7.93784857E-05, 0.29663223, 0.954991877, 0.054803364, 0.953555346, -0.29619059), 0.3)
        end
        Sound(GetTorso(a), 429400881, 0.7, 4, false, true, true)
        if a:FindFirstChildOfClass("Humanoid") then
          a:FindFirstChildOfClass("Humanoid").Health = a:FindFirstChildOfClass("Humanoid").Health - a:FindFirstChildOfClass("Humanoid").MaxHealth / 3
        end
        coroutine.wrap(function()
          repeat
            if va:FindFirstChildOfClass("Humanoid") then
              swait()
              va:FindFirstChildOfClass("Humanoid").Health = va:FindFirstChildOfClass("Humanoid").Health - 0.5
              Kill(va)
              vb:destroy()
            end
          until va:FindFirstChildOfClass("Humanoid").Health <= 1
        end)()
        for fn = 0, 3, 0.1 do
          swait()
          vm.C0 = vm.C0:lerp(CFrame.new(0.000169749488, 0.00628662109, -6.61667073E-05, 0.999548376, 0, 0.0300540105, 0, 1, 0, -0.0300540105, 0, 0.999548376), 0.3)
          vo.C0 = vo.C0:lerp(CFrame.new(-0.444387794, -0.990932465, -0.227554411, 0.882354379, 0, -0.470585763, 0, 1, 0, 0.470585763, 0, 0.882354379), 0.3)
          vp.C0 = vp.C0:lerp(CFrame.new(0.495574117, -0.991056442, 0.0314709544, 0.97812444, 0, -0.208021611, 0, 1, 0, 0.208021611, 0, 0.97812444), 0.3)
          vn.C0 = vn.C0:lerp(CFrame.new(-1.00046349, 0.575390875, -0.63252908, 0.888165712, 0.3781358, -0.261104196, -0.179923102, -0.236678019, -0.95478332, -0.42283538, 0.894984365, -0.142173931), 0.3)
          vr.C0 = vr.C0:lerp(CFrame.new(1.35260987, 0.74367249, -0.148820311, 0.373968333, 0.469723582, -0.799692273, -0.757211864, -0.343237787, -0.555714011, -0.53551662, 0.813355863, 0.227320194), 0.3)
          vs.C0 = vs.C0:lerp(CFrame.new(-0.000104449631, 1.49900436, -0.00490342593, 0.999548376, 0, -0.0300540105, 0, 1, 0, 0.0300540105, 0, 0.999548376), 0.3)
          MurderKnife().C0 = clerp(MurderKnife().C0, CFrame.new(-0.315003902, -0.881822228, -0.534994423, -0.905889809, 0.289212197, -0.309386551, -0.423450023, -0.631175756, 0.649851799, -0.00733225048, 0.719703913, 0.694242597), 0.3)
        end
        MurderKnife().Part0 = a:FindFirstChild("Head")
        MurderKnife().C0 = CFrame.new(0.976348281, 0.254784644, 0.639342666, -0.527396142, -0.778684974, -0.339857459, 0.83536917, -0.402301013, -0.374582857, 0.154957026, -0.481460005, 0.862661362)
        delay(2, function()
          Kill(va)
          vb:destroy()
        end)
        va = va
        vc.JumpPower = 50
        vc.AutoRotate = true
        vb.CFrame = vb.CFrame
        Sound(vl, 847061203, 1, 2.5, false, true, true)
        for fn = 0, 9 do
          NoobySphere(3, 0.25, "Multiply", vb.CFrame * vh.A(vj.RRNG(-360, 360), vj.RRNG(-360, 360), vj.RRNG(-360, 360)), vk.N(1, 1, 10), -0.01, vl.BrickColor)
        end
        for fn = 1, 24 do
          NoobyBlock(1, vj.RNG(4, 8), "Multiply", vb.CFrame * vh.A(vj.RRNG(-360, 360), vj.RRNG(-360, 360), vj.RRNG(-360, 360)), vk.N(3, 3, 3), 0.06, vl.BrickColor, 0)
        end
        NoobySphere2(3, "Multiply", vb.CFrame, vk.N(), 0.25, vl.BrickColor)
        vb.Anchored = false
        GetTorso(a).Anchored = false
        vd = false
        ve = true
      end
    end
    function MobileMurder()
      va = true
      vb = 0
    end
    function NeckSnap(a)
      a = a
      if a and GetTorso(a) and a:FindFirstChildOfClass("Humanoid") and 0 < a:FindFirstChildOfClass("Humanoid").Health and a:FindFirstChild("Head") then
        va = 0
        vc.JumpPower = 0
        vd = true
        ve = false
        vb.Anchored = true
        GetTorso(a).Anchored = true
        a.Parent = vg
        vc.AutoRotate = false
        vb.CFrame = GetTorso(a).CFrame * vh.N(-0.54454422, 0, 0.987496376)
        for fm, fo in next, GetTorso(a):children() do
          if fo:IsA("JointInstance") then
            if fo.Part1 == a:FindFirstChild("Head") then
              fo:destroy()
            end
          end
        end
        a:FindFirstChild("Head"):breakJoints()
        for fo = 0, 1, 0.1 do
          swait()
          vj.C0 = clerp(vj.C0, CFrame.new(2.74447132E-13, 0.00628674263, 4.19029675E-07, 0.99999994, 4.36557457E-11, 0, -4.3652193E-11, 0.999980211, -0.00628619269, 9.31322575E-10, 0.00628619175, 0.999980271), 0.3)
          vk.C0 = clerp(vk.C0, CFrame.new(-0.49648428, -0.990816116, 0.0216189735, 0.999878109, -9.59694546E-11, 0.015612145, -9.81408521E-05, 0.999980211, 0.00628542574, -0.0156118376, -0.00628619269, 0.999858439), 0.3)
          vl.C0 = clerp(vl.C0, CFrame.new(0.498537898, -0.990978718, 0.0154631268, 0.999878109, -9.59694546E-11, 0.015612145, -9.81408521E-05, 0.999980211, 0.00628542574, -0.0156118376, -0.00628619269, 0.999858439), 0.3)
          vm.C0 = clerp(vm.C0, CFrame.new(-0.763917506, 0.783056259, -0.756683111, 0.675138593, -0.737685442, 0.00284584239, 0.140656561, 0.124941669, -0.982143223, 0.724157274, 0.663483143, 0.188113257), 0.3)
          vo.C0 = clerp(vo.C0, CFrame.new(1.23871374, 1.09544897, -0.196351975, 0.766011953, 0.365654767, -0.528698623, -0.105766296, -0.739559352, -0.664729595, -0.634065628, 0.565109432, -0.527837396), 0.3)
          vp.C0 = clerp(vp.C0, CFrame.new(1.00737725E-05, 1.4989512, -0.0144016817, 0.99999994, 3.67523171E-07, -1.61118805E-07, -3.56500095E-07, 0.997964799, 0.0637688041, 1.8440187E-07, -0.063768819, 0.997964799), 0.3)
        end
        Sound(a:FindFirstChild("Head"), 1093102664, 1, 5, false, true, true)
        for fo = 0, 1.3, 0.1 do
          swait()
          NewInstance("Motor", GetTorso(a), {
            Part0 = a:FindFirstChild("Head"),
            Part1 = GetTorso(a),
            C0 = vh.N(0, -1.5, 0)
          }).C0 = NewInstance("Motor", GetTorso(a), {
            Part0 = a:FindFirstChild("Head"),
            Part1 = GetTorso(a),
            C0 = vh.N(0, -1.5, 0)
          }).C0:lerp(vh.N(0, -1.5, 0) * vh.A(0, vn.R(-90), 0), 0.3)
          vj.C0 = clerp(vj.C0, CFrame.new(2.74447132E-13, 0.00628674263, 4.19029675E-07, 0.99999994, 4.36557457E-11, 0, -4.3652193E-11, 0.999980211, -0.00628619269, 9.31322575E-10, 0.00628619175, 0.999980271), 0.3)
          vk.C0 = clerp(vk.C0, CFrame.new(-0.49648428, -0.990818024, 0.0216189846, 0.999878109, -9.59694546E-11, 0.015612145, -9.81408521E-05, 0.999980211, 0.00628542574, -0.0156118376, -0.00628619269, 0.999858439), 0.3)
          vl.C0 = clerp(vl.C0, CFrame.new(0.498537898, -0.990980625, 0.0154631399, 0.999878109, -9.59694546E-11, 0.015612145, -9.81408521E-05, 0.999980211, 0.00628542574, -0.0156118376, -0.00628619269, 0.999858439), 0.3)
          vm.C0 = clerp(vm.C0, CFrame.new(-1.38228214, 0.484847993, -0.0603635609, 0.424681932, 0.905338109, 0.00285495515, -0.169125155, 0.0824314952, -0.982141495, -0.889405489, 0.41661495, 0.18812263), 0.3)
          vo.C0 = clerp(vo.C0, CFrame.new(1.40680802, 0.48904568, -0.02736184, 0.441890627, -0.897064447, 0.00284484075, 0.169923306, 0.0805888921, -0.982156575, 0.8808285, 0.43448925, 0.188043654), 0.3)
          vp.C0 = clerp(vp.C0, CFrame.new(1.00737716E-05, 1.49894726, -0.014402397, 0.99999994, 3.67523171E-07, -1.61118805E-07, -3.56500095E-07, 0.997964799, 0.0637688041, 1.8440187E-07, -0.063768819, 0.997964799), 0.3)
        end
        a.Parent = a.Parent
        a:breakJoints()
        va = va
        vc.JumpPower = 50
        vc.AutoRotate = true
        vb.Anchored = false
        GetTorso(a).Anchored = false
        vd = false
        ve = true
      end
    end
    function MobileNeckSnap()
      va = true
      vb = 0
    end
    function SongSmash()
      va = true
      vb = false
      for fd = 0, 3, 0.1 do
        swait()
        NoobySphere(5, 0.3, "Multiply", vc.CFrame * vd.N(0, -1, 0) * vd.A(ve.RRNG(-180, 180), ve.RRNG(-180, 180), ve.RRNG(-180, 180)), vg.N(0.1, 0.1, 0.1), 0, vh.Color, 0, 1088207)
        NoobyBlock(2, 0.04, "Multiply", vc.CFrame * vd.N(0, -1, 0) * vd.A(ve.RRNG(-180, 180), ve.RRNG(-180, 180), ve.RRNG(-180, 180)), vg.N(1, 1, 1), 0.004, vh.Color, 0, true)
        vj.C0 = clerp(vj.C0, CFrame.new(-0.001753752, 0.00628927909, -0.000408248976, 0.942081869, -0.00210913899, -0.335376531, 7.21194738E-07, 0.99998033, -0.00628671842, 0.335383177, 0.00592236174, 0.942063153), 0.1)
        vk.C0 = clerp(vk.C0, CFrame.new(-0.496480286, -0.990816116, 0.0216198936, 0.9367311, 0, 0.350050032, -0.00220137485, 0.99998033, 0.00589086255, -0.350043088, -0.00628874451, 0.936712503), 0.1)
        vl.C0 = clerp(vl.C0, CFrame.new(0.498543233, -0.990978837, 0.0154619068, 0.975587726, 0, -0.219610512, 0.00138107454, 0.99998033, 0.00613522204, 0.219606131, -0.00628874451, 0.975568414), 0.1)
        vm.C0 = clerp(vm.C0, CFrame.new(-1.40567565, 0.408012271, -0.00104653835, 0.958351374, 0.285325468, -0.0123402029, 0.2337396, -0.758791327, 0.607948899, 0.164099574, -0.585512877, -0.793880343), 0.1)
        vo.C0 = clerp(vo.C0, CFrame.new(1.42242038, 0.493699282, -0.0249331407, 0.987734318, -0.155363053, 0.0156076849, 0.155282006, 0.987850249, 0.0062857219, -0.0163946152, -0.00378503278, 0.999858558), 0.1)
        vp.C0 = clerp(vp.C0, CFrame.new(1.16258161E-05, 1.49894369, -0.0144085325, 0.9367311, 0, 0.350050032, -0.00220137485, 0.99998033, 0.00589086255, -0.350043088, -0.00628874451, 0.936712503), 0.1)
      end
      AOEDamage(vn.CFrame.p, 110, {
        MinimumDamage = vr / 15,
        MaximumDamage = vr / 5
      })
      NoobySphere2(3, "Multiply", vn.CFrame * vd.N(0, -2.9, 0), vg.N(110, 0.1, 110), 0.01, vh.Color)
      for fd = 1, 20 do
        NoobySphere(3, 0.5, "Multiply", vn.CFrame * vd.N(ve.RNG(-42.5, 42.5), -5, ve.RNG(-42.5, 42.5)) * vd.A(ve.R(90) + ve.RRNG(-45, 45), ve.RRNG(-45, 45), ve.RRNG(-45, 45)), vg.N(0.5, 0.5, 0.5), 0, vh.Color, 0, 1088207)
        NoobySphere(3, 0.5, "Multiply", vn.CFrame * vd.N(ve.RNG(-42.5, 42.5), -5, ve.RNG(-42.5, 42.5)) * vd.A(ve.R(90) + ve.RRNG(-45, 45), ve.RRNG(-45, 45), ve.RRNG(-45, 45)), vg.N(0.5, 0.5, 0.5), 0, vh.Color, 0, 1088207)
      end
      for fd = 0, 3, 0.1 do
        swait()
        vj.C0 = clerp(vj.C0, CFrame.new(-0.0056809783, -1.84688139, -0.363832742, 0.999853492, -0.0143729132, -0.00929748639, 0.0143199814, 0.40471217, 0.914332032, -0.00937880948, -0.914331198, 0.404858679), 0.4)
        vk.C0 = clerp(vk.C0, CFrame.new(-0.498466104, -0.621809721, -0.107522458, 0.999878109, -0.00381839275, 0.0151433209, -9.67067026E-05, 0.968117595, 0.250496507, -0.0156170065, -0.25046742, 0.967999101), 0.4)
        vl.C0 = clerp(vl.C0, CFrame.new(0.49715057, -0.612025738, -0.0758087933, 0.999878109, -0.00322529091, 0.0152806351, -9.67067026E-05, 0.977144957, 0.212574452, -0.0156170065, -0.212549999, 0.977025449), 0.4)
        vm.C0 = clerp(vm.C0, CFrame.new(-1.46437562, 0.573429823, -0.135539591, 0.995870709, 0.090780057, 0.000750792213, -0.0041781459, 0.0540931821, -0.998527229, -0.090686962, 0.99440074, 0.054249078), 0.4)
        vo.C0 = clerp(vo.C0, CFrame.new(1.46732497, 0.668299794, -0.164544582, 0.998940408, -0.0457421541, -0.00509791775, -0.000265741721, 0.105029136, -0.994469225, 0.0460245833, 0.993416667, 0.104905695), 0.4)
        vp.C0 = clerp(vp.C0, CFrame.new(7.62883064E-06, 1.49891925, -0.0144104436, 1.00000012, -4.65661287E-10, 1.62981451E-09, 4.65661287E-10, 0.997964621, 0.0637715757, 6.98491931E-10, -0.0637715459, 0.997964621), 0.4)
      end
      va = false
      vb = true
    end
    function AttackOne()
      va = true
      vb = false
      for fd = 0, 0.7, 0.1 do
        swait()
        vc.C0 = clerp(vc.C0, CFrame.new(0.054845117, 0.00628340431, 0.0621978641, 0.574560821, -0.00514742406, -0.818445683, 1.76018864E-06, 0.99998033, -0.00628790678, 0.818461895, 0.00361134461, 0.574549437), 0.3)
        vd.C0 = clerp(vd.C0, CFrame.new(-0.525948346, -0.994591057, 0.0135081597, 0.989666939, 0.0856333151, 0.115006924, -0.0869238526, 0.996195495, 0.00624422729, -0.114034653, -0.0161765479, 0.993345082), 0.3)
        ve.C0 = clerp(ve.C0, CFrame.new(0.487148911, -0.967346072, -0.0260838568, 0.964277864, -0.0686885938, 0.255832553, -0.00166595122, 0.964203477, 0.265158683, -0.264888048, -0.256112814, 0.92964536), 0.3)
        vg.C0 = clerp(vg.C0, CFrame.new(-1.38879275, 0.498546124, -0.255748421, 0.692717075, 0.721134841, 0.0103802728, 0.00202227081, 0.0124506345, -0.999920607, -0.721206725, 0.692682922, 0.00716643687), 0.3)
        vh.C0 = clerp(vh.C0, CFrame.new(1.27866459, 0.504911065, -0.181807131, 0.763874948, -0.645362377, -0.00163397193, -0.0634241104, -0.0725510716, -0.995346248, 0.642240286, 0.760423601, -0.0963514596), 0.3)
        vj.C0 = clerp(vj.C0, CFrame.new(-0.0864869878, 1.49901688, -0.00313834194, 0.57456094, -0.0470548049, 0.817108035, -0.00514778076, 0.998118699, 0.0610983856, -0.818445623, -0.0393110402, 0.573237658), 0.3)
      end
      Sound(vk, 200632136, 1.1, 5, false, true, true)
      for fd = 0, 0.9, 0.1 do
        swait()
        AOEDamage(vk.CFrame.p, 2, {MinimumDamage = 10, MaximumDamage = 30})
        vc.C0 = clerp(vc.C0, CFrame.new(-0.0895246193, 0.00628795894, -0.0240665041, 0.667355478, 0.00468144845, 0.744724631, -1.60177922E-06, 0.99998033, -0.00628458662, -0.744739354, 0.0041928608, 0.667342305), 0.3)
        vd.C0 = clerp(vd.C0, CFrame.new(-0.525933743, -0.994594276, 0.0135074947, 0.995298743, 0.0856334865, -0.0452488065, -0.0847965032, 0.996195495, 0.0201073457, 0.0467984378, -0.0161758773, 0.998773336), 0.3)
        ve.C0 = clerp(ve.C0, CFrame.new(0.490905643, -0.74434638, -0.358290195, 0.993401766, -0.0489627272, -0.103709608, 0.0897386894, 0.894942641, 0.437063992, 0.0714142919, -0.443486929, 0.893431306), 0.3)
        vg.C0 = clerp(vg.C0, CFrame.new(-1.34781098, 0.451429009, 0.184345022, 0.920896769, 0.211902812, 0.327179492, -0.00245033321, 0.842468321, -0.538740575, -0.389798939, 0.495322734, 0.776345491), 0.3)
        vh.C0 = clerp(vh.C0, CFrame.new(1.33741677, 0.579409122, -0.335710943, 0.71467489, -0.698394477, 0.0385371894, -0.0347292982, -0.0904589221, -0.995294571, 0.698594153, 0.709973574, -0.0889034569), 0.3)
        vj.C0 = clerp(vj.C0, CFrame.new(0.0455316827, 1.49947691, 0.069996126, 0.667355359, 0.0428168029, -0.743507743, 0.00468109129, 0.99808526, 0.0616789386, 0.744724751, -0.0446421988, 0.665876985), 0.3)
      end
      vl = 2
      va = false
      vb = true
    end
    function AttackTwo()
      va = true
      vb = false
      for fd = 0, 1, 0.1 do
        swait()
        vc.C0 = clerp(vc.C0, CFrame.new(0.00337019563, 0.00628272956, -0.00105122454, 0.788301051, 0.00386909139, 0.615277588, -1.32338778E-06, 0.99998033, -0.00628654705, -0.615289807, 0.00495487731, 0.788285434), 0.3)
        vd.C0 = clerp(vd.C0, CFrame.new(-0.370244205, -1.06356883, -0.0345072895, 0.88316524, 0.227487147, 0.41020599, -0.259257317, 0.965541184, 0.0227174684, -0.390902787, -0.126412138, 0.911709964), 0.3)
        ve.C0 = clerp(ve.C0, CFrame.new(0.39778316, -1.07560706, -0.0971514285, 0.900898933, -0.0766149312, -0.427213579, 0.151964575, 0.977673352, 0.145127282, 0.406556368, -0.195666283, 0.892427385), 0.3)
        vg.C0 = clerp(vg.C0, CFrame.new(-1.47616029, 0.512279212, 0.0670655966, 0.904187679, -0.427135438, 0.00023345463, 0.00958644785, 0.0197467823, -0.999759197, 0.427027881, 0.903972089, 0.0219495054), 0.3)
        vh.C0 = clerp(vh.C0, CFrame.new(1.33361411, 0.488021076, -0.300545812, 0.00661067665, -0.543416262, 0.839437485, 0.976997852, -0.175422177, -0.121254832, 0.213147745, 0.820930004, 0.529756606) * vj.A(0, vk.R(-90), 0), 0.3)
        vl.C0 = clerp(vl.C0, CFrame.new(-0.000233855098, 1.49894583, -0.0145844966, 0.788300931, 0.0353745371, -0.614272296, 0.0038687347, 0.998041451, 0.062439695, 0.615277767, -0.0515977256, 0.786619961), 0.3)
      end
      Sound(vm, 200632136, 0.9, 5, false, true, true)
      for fd = 0, 1, 0.1 do
        swait()
        AOEDamage(vm.CFrame.p, 2, {MinimumDamage = 10, MaximumDamage = 30})
        vc.C0 = clerp(vc.C0, CFrame.new(-0.0139055764, 0.00628619827, -0.0431878939, 0.736094832, -0.0042554969, -0.676865041, 1.4556681E-06, 0.99998033, -0.00628536195, 0.676878333, 0.00462563755, 0.736080408), 0.3)
        vd.C0 = clerp(vd.C0, CFrame.new(-0.370245337, -1.06356549, -0.0345049649, 0.883166075, 0.227488101, 0.410203636, -0.25925675, 0.965541363, 0.0227144919, -0.390901268, -0.126408711, 0.911711276), 0.3)
        ve.C0 = clerp(ve.C0, CFrame.new(0.397780299, -1.07560635, -0.0971318483, 0.900898337, -0.076615192, -0.427214652, 0.151964024, 0.977673769, 0.145124823, 0.406557709, -0.195663959, 0.892427325), 0.3)
        vg.C0 = clerp(vg.C0, CFrame.new(-1.54785693, 0.502721965, -0.369121343, 0.640384734, 0.768054307, 9.36477445E-05, -0.0167029109, 0.0140483743, -0.999761999, -0.767872751, 0.640230715, 0.0218251087), 0.3)
        vh.C0 = clerp(vh.C0, CFrame.new(1.41005266, 0.394677043, -0.101526827, 0.621816397, -0.730075538, 0.283432782, 0.783004642, 0.586830258, -0.206238553, -0.0157571733, 0.350171626, 0.93655318) * vj.A(0, vk.R(-90), 0), 0.3)
        vl.C0 = clerp(vl.C0, CFrame.new(0.0361058414, 1.49909592, 0.00928576291, 0.736094952, -0.0389148258, 0.67575866, -0.00425585406, 0.998060346, 0.0621110015, -0.676864862, -0.0485955328, 0.7345016), 0.3)
      end
      vo = 3
      va = false
      vb = true
    end
    function AttackThree()
      va = true
      vb = false
      for fd = 0, 1, 0.1 do
        swait()
        vc.C0 = clerp(vc.C0, CFrame.new(2.74447132E-13, 0.00628674868, -5.34626452E-07, 0.99999994, 4.36557457E-11, 0, -4.3652193E-11, 0.999980211, -0.00628619269, 9.31322575E-10, 0.00628619175, 0.999980271), 0.3)
        vd.C0 = clerp(vd.C0, CFrame.new(-0.496486187, -0.990816116, 0.0216190033, 0.999878109, -9.59694546E-11, 0.015612145, -9.81408521E-05, 0.999980211, 0.00628542574, -0.0156118376, -0.00628619269, 0.999858439), 0.3)
        ve.C0 = clerp(ve.C0, CFrame.new(0.498537898, -0.990978718, 0.0154631268, 0.999878109, -9.59694546E-11, 0.015612145, -9.81408521E-05, 0.999980211, 0.00628542574, -0.0156118376, -0.00628619269, 0.999858439), 0.3)
        vg.C0 = clerp(vg.C0, CFrame.new(-1.12213016, 0.47289753, -0.302224725, 0.912795186, -0.408417523, -7.55176477E-10, 0.00256825075, 0.00573992962, -0.999980211, 0.408409536, 0.912777245, 0.00628829934), 0.3)
        vh.C0 = clerp(vh.C0, CFrame.new(1.11283636, 0.472678095, -0.337120384, 0.899599433, 0.436715961, -7.55176477E-10, -0.00274620112, 0.00565694971, -0.999980211, -0.436707377, 0.89958173, 0.00628829934), 0.3)
        vj.C0 = clerp(vj.C0, CFrame.new(8.16642296E-06, 1.49894738, -0.0144004971, 0.99999994, 3.67523171E-07, -1.61118805E-07, -3.56500095E-07, 0.997964799, 0.0637688041, 1.8440187E-07, -0.063768819, 0.997964799), 0.3)
      end
      coroutine.wrap(function()
        for fd = 5, 45, 10 do
          va.new("Part", vb).Anchored = true
          va.new("Part", vb).CanCollide = false
          va.new("Part", vb).Material = "Neon"
          va.new("Part", vb).Size = vc.N(1, 1, 1)
          va.new("Part", vb).Transparency = 1
          va.new("Part", vb).CFrame = (vd.CFrame + vd.CFrame.lookVector) * ve.A(0, vg.R(90 + vh * 45), 0) * ve.N(0, 0, fd)
          CamShakeAOE(va.new("Part", vb).CFrame.p, 10, 30, 250)
          NoobySphere2(3, "Multiply", va.new("Part", vb).CFrame, vc.N(0, 0, 0), 0.15, vj.Color)
          NoobySphere2(6, "Multiply", va.new("Part", vb).CFrame, vc.N(0, 0, 0), 0.3, vj.Color)
          for fk = 1, 2 do
            NoobySphere(2, 0.2, "Multiply", vd.CFrame * ve.N(0, -0.5, -0.5) * ve.A(vg.RRNG(-20, 20), vg.RRNG(-20, 20), vg.RRNG(-20, 20)), vc.N(0.5, 0.5, 5), -0.005, vj.Color, 0)
          end
          for fk = 1, 5 do
            NoobySphere(2.25, 0.6, "Multiply", va.new("Part", vb).CFrame * ve.N(0, 0, 0) * ve.A(vg.RRNG(-360, 360), vg.RRNG(-360, 360), vg.RRNG(-360, 360)), vc.N(2, 2, 2), 0, vj.Color, 0)
          end
          AOEDamage(va.new("Part", vb).CFrame.p, 10, {MinimumDamage = 25, MaximumDamage = 45})
          Sound(va.new("Part", vb), 183763506, 1, 5, false, true, true)
          vk.Debris:AddItem(va.new("Part", vb), 2)
          swait()
        end
      end)()
      for fe = 0, 1, 0.1 do
        swait()
        vc.C0 = clerp(vc.C0, CFrame.new(0.00691798097, -0.0495741703, 0.443018734, 0.999998093, -0.00196288247, -0.000110176392, 0.00196200004, 0.992848635, 0.119364031, -0.000124909915, -0.119364008, 0.992850542), 0.3)
        vd.C0 = clerp(vd.C0, CFrame.new(-0.497228384, -0.946920514, -0.0261252522, 0.999878228, 0.0041074818, 0.0150607219, -9.9174933E-05, 0.966415524, -0.256984442, -0.0156104742, 0.25695163, 0.966298223), 0.3)
        ve.C0 = clerp(ve.C0, CFrame.new(0.497788221, -0.949530363, -0.0326310396, 0.999878228, 0.0041074818, 0.0150607219, -9.9174933E-05, 0.966415524, -0.256984442, -0.0156104742, 0.25695163, 0.966298223), 0.3)
        vg.C0 = clerp(vg.C0, CFrame.new(-1.43487072, 0.476260573, 0.232709944, -0.586293817, 0.810098529, 9.3865674E-07, -0.00509618223, -0.00368710607, -0.999980271, -0.810082495, -0.586282253, 0.00629013777), 0.3)
        vh.C0 = clerp(vh.C0, CFrame.new(1.44212484, 0.475975186, 0.187793851, -0.560718656, -0.828006506, -2.90002208E-06, 0.00520995259, -0.00352462381, -0.999980271, 0.827990055, -0.56070751, 0.00629019737), 0.3)
        vj.C0 = clerp(vj.C0, CFrame.new(9.53681956E-06, 1.49895513, -0.0144005343, 1.00000012, 0, 9.31322575E-10, 1.16415322E-10, 0.99796474, 0.0637698025, -9.31322575E-10, -0.0637697875, 0.997964621), 0.3)
      end
      vt = 1
      va = false
      vb = true
    end
    function MurderMode()
      va = true
      vb = false
      vc = 407749940
      vd = 1
      ve = 0
      Sound(vg, 136007472, 1.25, 2.5, false, true, true)
      for fe = 0, 4, 0.1 do
        swait()
        NoobySphere(2.5, -1.5, "Multiply", vg.CFrame * vh.A(vj.RRNG(-180, 180), vj.RRNG(-180, 180), vj.RRNG(-180, 180)), vk.N(3.5, 3.5, 45), -0.035, vg.Color, 100)
        vl.C0 = clerp(vl.C0, CFrame.new(-0.00700476859, 0.0667984039, -0.448462069, 0.999972343, -0.00723911775, -0.00172879919, 0.00722799823, 0.88917774, 0.457504779, -0.00177471992, -0.457504541, 0.889205575), 0.1)
        vm.C0 = clerp(vm.C0, CFrame.new(-0.497889668, -1.14359522, -0.0677340925, 0.999878228, 0.00722799823, 0.0138372099, -9.56082804E-05, 0.88917774, -0.457561791, -0.0156109957, 0.457504779, 0.889070213), 0.1)
        vo.C0 = clerp(vo.C0, CFrame.new(0.497117043, -1.14809179, -0.0749855936, 0.999878228, 0.00722799823, 0.0138372099, -9.56082804E-05, 0.88917774, -0.457561791, -0.0156109957, 0.457504779, 0.889070213), 0.1)
        vp.C0 = clerp(vp.C0, CFrame.new(-1.20745349, 0.562693655, 0.156515986, 0.841866791, -0.539501786, -0.014077506, -0.490290582, -0.753652692, -0.43774724, 0.225555882, 0.375426948, -0.898987949) * vh.A(0, vj.R(0 + 16 * vj.S(0 + 5)), 0), 0.1)
        vn.C0 = clerp(vn.C0, CFrame.new(1.17680144, 0.613272369, 0.0997506529, 0.834507108, 0.550817847, -0.0140647329, 0.49015516, -0.753777146, -0.437684804, -0.251686275, 0.358357221, -0.899018526) * vh.A(0, vj.R(0 + 16 * vj.S(0 + 5)), 0), 0.1)
        vr.C0 = clerp(vr.C0, CFrame.new(6.50798393E-06, 1.53005648, -0.348988175, 1.00000012, 2.40840018E-06, -1.19656324E-05, 5.68898395E-06, 0.775360823, 0.631518543, 1.07986853E-05, -0.631518602, 0.775360942) * vh.A(0, vj.R(0 + 16 * vj.S(0 + 5)), 0), 0.1)
      end
      for fe, fg in next, vs:children() do
        if fg:IsA("BasePart") and fg.Name ~= "Main" then
          fg.Material = Enum.Material.Neon
          fg.Transparency = 0
          fg.BrickColor = BrickColor.new("Really red")
        end
      end
      for fe, fg in next, vt:children() do
        if fg:IsA("BasePart") and fg.Name ~= "Main" then
          fg.Material = Enum.Material.Neon
          fg.Transparency = 1
          fg.BrickColor = BrickColor.new("Really red")
        end
      end
      for fe, fg in next, vu:children() do
        if fg:IsA("BasePart") and fg.Name ~= "Main" then
          fg.Material = Enum.Material.Neon
          fg.Transparency = 1
          fg.BrickColor = BrickColor.new("Really red")
        end
      end
      for fe, fg in next, vy:children() do
        if fg:IsA("BasePart") and fg.Name ~= "Main" then
          fg.Material = Enum.Material.Neon
          fg.Transparency = 1
          fg.BrickColor = BrickColor.new("Really red")
        end
      end
      for fe, fg in next, vz:children() do
        if fg:IsA("BasePart") and fg.Name ~= "Main" then
          fg.Material = Enum.Material.Neon
          fg.BrickColor = BrickColor.new("Really red")
        end
      end
      pcall(function()
        va.ReaperShadowHead.Eye1.Color = vb.N(1, 0, 0)
      end)
      pcall(function()
        va.ReaperShadowHead.Eye2.Color = vb.N(1, 0, 0)
      end)
      ve = 16
      vx = 1
      vg.BrickColor = BrickColor.new("Really red")
      vg.Material = Enum.Material.Neon
      Sound(vQ, "206082327", 1, 2.5, false, true, true)
      Sound(vQ, "847061203", 1, 5, false, true, true)
      Sound(vQ, "239000203", 1, 2.5, false, true, true)
      Sound(vQ, "579687077", 0.75, 2.5, false, true, true)
      RecolorTextAndRename("Murder", Color3.new(1, 0, 0), Color3.new(0, 0, 0))
      NoobySphere2(2.5, "Multiply", vg.CFrame, vk.N(0, 0, 0), 1, vg.BrickColor)
      for fe = 1, 24 do
        NoobyBlock(1, vj.RNG(20, 100) / 100, "Multiply", vg.CFrame * vh.A(vj.RRNG(-180, 180), vj.RRNG(-180, 180), vj.RRNG(-180, 180)), vk.N(2, 2, 2), 0.04, vg.Color, 0, true)
      end
      for fe = 0, 15 do
        NoobySphere(3, -0.5, "Multiply", vg.CFrame * vh.A(vj.RRNG(-180, 180), vj.RRNG(-180, 180), vj.RRNG(-180, 180)), vk.N(0.5, 0.5, 25), -0.04, vg.Color, 0)
      end
      for fe = 0, 1.4, 0.1 do
        swait()
        vl.C0 = clerp(vl.C0, CFrame.new(0.0104959598, -0.113952652, 0.672263861, 0.999963522, 0.00820299331, -0.0023882892, -0.00821700692, 0.846846819, -0.531773448, -0.00233961921, 0.531773746, 0.846883237), 0.3)
        vm.C0 = clerp(vm.C0, CFrame.new(-0.49749428, -1.06169748, -0.0426189601, 0.999878228, -0.00744201383, 0.013721575, -0.000100045589, 0.875963986, 0.482376754, -0.0156094572, -0.482319295, 0.875856459), 0.3)
        vo.C0 = clerp(vo.C0, CFrame.new(0.498449236, -1.1497941, 0.0108022094, 0.999878228, -0.0120362351, 0.009939529, -0.000100045589, 0.631795883, 0.775134981, -0.0156094572, -0.775041461, 0.631717622), 0.3)
        vp.C0 = clerp(vp.C0, CFrame.new(-1.12307608, 0.484921068, 0.092245549, 0.865161359, 0.501252413, -0.0155520458, 0.497926384, -0.862286389, -0.092366755, -0.059709385, 0.07216838, -0.995603561), 0.3)
        vn.C0 = clerp(vn.C0, CFrame.new(1.37669122, 0.484069884, 0.0531393886, 0.866546988, -0.498853445, -0.0155524863, -0.49802509, -0.862227678, -0.0923835635, 0.032676056, 0.0878001451, -0.995602131), 0.3)
        vr.C0 = clerp(vr.C0, CFrame.new(1.14440181E-05, 1.49895036, -0.0144141242, 1.00000012, 0, -9.31322575E-10, 0, 0.99796474, 0.0637694895, -9.31322575E-10, -0.0637694895, 0.99796468), 0.3)
      end
      va = false
      vb = true
    end
    function PureMode()
      for fd, fe in next, va:children() do
        if fe:IsA("BasePart") and fe.Name ~= "Main" then
          fe.Material = Enum.Material.Neon
          fe.Transparency = 0
          fe.BrickColor = BrickColor.new("Pastel Blue")
        end
      end
      for fd, fe in next, vb:children() do
        if fe:IsA("BasePart") and fe.Name ~= "Main" then
          fe.Material = Enum.Material.Neon
          fe.Transparency = 1
          fe.BrickColor = BrickColor.new("Pastel Blue")
        end
      end
      for fd, fe in next, vc:children() do
        if fe:IsA("BasePart") and fe.Name ~= "Main" then
          fe.Material = Enum.Material.Neon
          fe.Transparency = 1
          fe.BrickColor = BrickColor.new("Pastel Blue")
        end
      end
      for fd, fe in next, vd:children() do
        if fe:IsA("BasePart") and fe.Name ~= "Main" then
          fe.Material = Enum.Material.Neon
          fe.Transparency = 1
          fe.BrickColor = BrickColor.new("Pastel Blue")
        end
      end
      for fd, fe in next, ve:children() do
        if fe:IsA("BasePart") and fe.Name ~= "Main" then
          fe.Material = Enum.Material.Neon
          fe.BrickColor = BrickColor.new("Pastel Blue")
        end
      end
      vg = 16
      pcall(function()
        va.ReaperShadowHead.Eye1.Color = vb.N(0, 1, 1)
      end)
      pcall(function()
        va.ReaperShadowHead.Eye2.Color = vb.N(0, 1, 1)
      end)
      RecolorTextAndRename("Clarity", vj.N(1, 1, 1), BrickColor.new("Pastel Blue").Color)
      vk = 1539245059
      vl = 1
      vm = 2
      vo.BrickColor = BrickColor.new("Pastel Blue")
      vo.Material = Enum.Material.Neon
    end
    function GlitchMode()
      for fd, fe in next, va:children() do
        if fe:IsA("BasePart") and fe.Name ~= "Main" then
          fe.Material = Enum.Material.DiamondPlate
          fe.Transparency = 0
          fe.BrickColor = BrickColor.new("White")
        end
      end
      for fd, fe in next, vb:children() do
        if fe:IsA("BasePart") and fe.Name ~= "Main" then
          fe.Material = Enum.Material.DiamondPlate
          fe.Transparency = 1
          fe.BrickColor = BrickColor.new("White")
        end
      end
      for fd, fe in next, vc:children() do
        if fe:IsA("BasePart") and fe.Name ~= "Main" then
          fe.Material = Enum.Material.DiamondPlate
          fe.Transparency = 1
          fe.BrickColor = BrickColor.new("White")
        end
      end
      for fd, fe in next, vd:children() do
        if fe:IsA("BasePart") and fe.Name ~= "Main" then
          fe.Material = Enum.Material.DiamondPlate
          fe.Transparency = 1
          fe.BrickColor = BrickColor.new("White")
        end
      end
      for fd, fe in next, ve:children() do
        if fe:IsA("BasePart") and fe.Name ~= "Main" then
          fe.Material = Enum.Material.Neon
          fe.BrickColor = BrickColor.new("White")
        end
      end
      pcall(function()
        va.ReaperShadowHead.Eye1.Color = vb.N(1, 1, 1)
      end)
      pcall(function()
        va.ReaperShadowHead.Eye2.Color = vb.N(1, 1, 1)
      end)
      vj = 16
      RecolorTextAndRename("Glitchy", vh.N(1, 1, 1), vh.N(1, 1, 1))
      vk = 1470848774
      vl = 0.93
      vm = 3
      vo.BrickColor = BrickColor.new("Dark stone grey")
      vo.Material = Enum.Material.DiamondPlate
    end
    function StressMode()
      for fd, fe in next, va:children() do
        if fe:IsA("BasePart") and fe.Name ~= "Main" then
          fe.Material = Enum.Material.Neon
          fe.Transparency = 0.25
          fe.BrickColor = BrickColor.new("Crimson")
        end
      end
      for fd, fe in next, vb:children() do
        if fe:IsA("BasePart") and fe.Name ~= "Main" then
          fe.Material = Enum.Material.Neon
          fe.Transparency = 0
          fe.Color = vc.RGB(16, 16, 16)
        end
      end
      for fd, fe in next, vd:children() do
        if fe:IsA("BasePart") and fe.Name ~= "Main" then
          fe.Material = Enum.Material.Neon
          fe.Transparency = 1
          fe.BrickColor = BrickColor.new("Crimson")
        end
      end
      for fd, fe in next, ve:children() do
        if fe:IsA("BasePart") and fe.Name ~= "Main" then
          fe.Material = Enum.Material.Neon
          fe.Transparency = 1
          fe.BrickColor = BrickColor.new("Crimson")
        end
      end
      for fd, fe in next, vg:children() do
        if fe:IsA("BasePart") and fe.Name ~= "Main" then
          fe.Material = Enum.Material.Neon
          fe.BrickColor = BrickColor.new("Crimson")
        end
      end
      vh = 14
      RecolorTextAndRename("Stress", vc.N(0.6, 0, 0), vc.N(0, 0, 0))
      vj = 614032233
      vk = 1
      vl = 4
      vm.BrickColor = BrickColor.new("Really red")
      vm.Material = Enum.Material.Neon
    end
    function JusticeMode()
      for fd, fe in next, va:children() do
        if fe:IsA("BasePart") and fe.Name ~= "Main" then
          fe.Material = Enum.Material.Neon
          fe.Transparency = 0
          fe.BrickColor = BrickColor.new("Institutional white")
        end
      end
      for fd, fe in next, vb:children() do
        if fe:IsA("BasePart") and fe.Name ~= "Main" then
          fe.Material = Enum.Material.Neon
          fe.Transparency = 0
          fe.BrickColor = BrickColor.new("Institutional white")
        end
      end
      for fd, fe in next, vc:children() do
        if fe:IsA("BasePart") and fe.Name ~= "Main" then
          fe.Material = Enum.Material.Neon
          fe.Transparency = 1
          fe.BrickColor = BrickColor.new("Institutional white")
        end
      end
      for fd, fe in next, vd:children() do
        if fe:IsA("BasePart") and fe.Name ~= "Main" then
          fe.Material = Enum.Material.Neon
          fe.Transparency = 1
          fe.BrickColor = BrickColor.new("Institutional white")
        end
      end
      for fd, fe in next, ve:children() do
        if fe:IsA("BasePart") and fe.Name ~= "Main" then
          fe.Material = Enum.Material.Neon
          fe.BrickColor = BrickColor.new("Institutional white")
        end
      end
      pcall(function()
        va.ReaperShadowHead.Eye1.Color = vb.N(1, 1, 1)
      end)
      pcall(function()
        va.ReaperShadowHead.Eye2.Color = vb.N(1, 1, 1)
      end)
      vj = 50
      RecolorTextAndRename("Justice", vh.N(1, 1, 1), vh.N(0, 0, 0))
      vk = 1102271169
      vl = 1
      vm = 5
      vo.BrickColor = BrickColor.new("White")
      vo.Material = Enum.Material.Neon
    end
    function IceMode()
      for fd, fe in next, va:children() do
        if fe:IsA("BasePart") and fe.Name ~= "Main" then
          fe.Material = Enum.Material.Neon
          fe.Transparency = 0
          fe.BrickColor = BrickColor.new("Pastel light blue")
        end
      end
      for fd, fe in next, vb:children() do
        if fe:IsA("BasePart") and fe.Name ~= "Main" then
          fe.Material = Enum.Material.Neon
          fe.Transparency = 0
          fe.BrickColor = BrickColor.new("Pastel light blue")
        end
      end
      for fd, fe in next, vc:children() do
        if fe:IsA("BasePart") and fe.Name ~= "Main" then
          fe.Material = Enum.Material.Neon
          fe.Transparency = 1
          fe.BrickColor = BrickColor.new("Pastel light blue")
        end
      end
      for fd, fe in next, vd:children() do
        if fe:IsA("BasePart") and fe.Name ~= "Main" then
          fe.Material = Enum.Material.Neon
          fe.Transparency = 1
          fe.BrickColor = BrickColor.new("Pastel light blue")
        end
      end
      for fd, fe in next, ve:children() do
        if fe:IsA("BasePart") and fe.Name ~= "Main" then
          fe.Material = Enum.Material.Neon
          fe.BrickColor = BrickColor.new("Pastel light blue")
        end
      end
      pcall(function()
        va.ReaperShadowHead.Eye1.Color = vb.N(0, 1, 1)
      end)
      pcall(function()
        va.ReaperShadowHead.Eye2.Color = vb.N(0, 1, 1)
      end)
      vj = 8
      RecolorTextAndRename("SubZero", vh.N(0, 1, 1), vh.N(1, 1, 1))
      vk = 144121562
      vl = 1
      vm = 7
      vo.BrickColor = BrickColor.new("Pastel light blue")
      vo.Material = Enum.Material.Neon
    end
    function LoveMode()
      for fd, fe in next, va:children() do
        if fe:IsA("BasePart") and fe.Name ~= "Main" then
          fe.Material = Enum.Material.Neon
          fe.Transparency = 0
          fe.BrickColor = BrickColor.new("Pink")
        end
      end
      for fd, fe in next, vb:children() do
        if fe:IsA("BasePart") and fe.Name ~= "Main" then
          fe.Material = Enum.Material.Neon
          fe.Transparency = 0
          fe.BrickColor = BrickColor.new("Pink")
        end
      end
      for fd, fe in next, vc:children() do
        if fe:IsA("BasePart") and fe.Name ~= "Main" then
          fe.Material = Enum.Material.Neon
          fe.Transparency = 1
          fe.BrickColor = BrickColor.new("Pink")
        end
      end
      for fd, fe in next, vd:children() do
        if fe:IsA("BasePart") and fe.Name ~= "Main" then
          fe.Material = Enum.Material.Neon
          fe.Transparency = 1
          fe.BrickColor = BrickColor.new("Pink")
        end
      end
      for fd, fe in next, ve:children() do
        if fe:IsA("BasePart") and fe.Name ~= "Main" then
          fe.Material = Enum.Material.Neon
          fe.BrickColor = BrickColor.new("Pink")
        end
      end
      pcall(function()
        va.ReaperShadowHead.Eye1.Color = BrickColor.new("Pink").Color
      end)
      pcall(function()
        va.ReaperShadowHead.Eye2.Color = BrickColor.new("Pink").Color
      end)
      vh = 16
      RecolorTextAndRename("Love", BrickColor.new("Pink").Color, vj.N(1, 1, 1))
      vk = 1030177093
      vl = 1
      vm = 8
      vo.BrickColor = BrickColor.new("Pink")
      vo.Material = Enum.Material.Neon
    end
    function VisMode()
      for fd, fe in next, va:children() do
        if fe:IsA("BasePart") and fe.Name ~= "Main" then
          fe.Material = Enum.Material.Neon
          fe.Transparency = 0
          fe.BrickColor = BrickColor.new("Institutional white")
        end
      end
      for fd, fe in next, vb:children() do
        if fe:IsA("BasePart") and fe.Name ~= "Main" then
          fe.Material = Enum.Material.Neon
          fe.Transparency = 0
          fe.BrickColor = BrickColor.new("Institutional white")
        end
      end
      for fd, fe in next, vc:children() do
        if fe:IsA("BasePart") and fe.Name ~= "Main" then
          fe.Material = Enum.Material.Neon
          fe.Transparency = 1
          fe.BrickColor = BrickColor.new("Institutional white")
        end
      end
      for fd, fe in next, vd:children() do
        if fe:IsA("BasePart") and fe.Name ~= "Main" then
          fe.Material = Enum.Material.Neon
          fe.Transparency = 1
          fe.BrickColor = BrickColor.new("Institutional white")
        end
      end
      for fd, fe in next, ve:children() do
        if fe:IsA("BasePart") and fe.Name ~= "Main" then
          fe.Material = Enum.Material.Neon
          fe.BrickColor = BrickColor.new("Institutional white")
        end
      end
      pcall(function()
        va.ReaperShadowHead.Eye1.Color = vb.N(1, 1, 1)
      end)
      pcall(function()
        va.ReaperShadowHead.Eye2.Color = vb.N(1, 1, 1)
      end)
      vj = 16
      RecolorTextAndRename("Visualiser", vh.N(1, 1, 1), vh.N(0, 0, 0))
      vk = vl
      vm = 1
      vo = 6
      vp.BrickColor = BrickColor.new("White")
      vp.Material = Enum.Material.Neon
    end
    function ToxicMode()
      for fd, fe in next, va:children() do
        if fe:IsA("BasePart") and fe.Name ~= "Main" then
          fe.Material = Enum.Material.Neon
          fe.Transparency = 0
          fe.BrickColor = BrickColor.new("Lime green")
        end
      end
      for fd, fe in next, vb:children() do
        if fe:IsA("BasePart") and fe.Name ~= "Main" then
          fe.Material = Enum.Material.Neon
          fe.Transparency = 0.85
          fe.BrickColor = BrickColor.new("Forest green")
        end
      end
      for fd, fe in next, vc:children() do
        if fe:IsA("BasePart") and fe.Name ~= "Main" then
          fe.Material = Enum.Material.Neon
          fe.Transparency = 0.75
          fe.BrickColor = BrickColor.new("Forest green")
        end
      end
      for fd, fe in next, vd:children() do
        if fe:IsA("BasePart") and fe.Name ~= "Main" then
          fe.Material = Enum.Material.Neon
          fe.Transparency = 1
          fe.BrickColor = BrickColor.new("Forest green")
        end
      end
      for fd, fe in next, ve:children() do
        if fe:IsA("BasePart") and fe.Name ~= "Main" then
          fe.Material = Enum.Material.Neon
          fe.BrickColor = BrickColor.new("Lime green")
        end
      end
      pcall(function()
        va.ReaperShadowHead.Eye1.Color = BrickColor.new("Lime green").Color
      end)
      pcall(function()
        va.ReaperShadowHead.Eye2.Color = BrickColor.new("Lime green").Color
      end)
      vh = 14
      RecolorTextAndRename("Nuclear", BrickColor.new("Lime green").Color, vj.N(0, 0.6, 0))
      vk = 798163149
      vl = 1
      vm = 9
      vo.BrickColor = BrickColor.new("Lime green")
      vo.Material = Enum.Material.Neon
    end
    function BarracudaMode()
      for fd, fe in next, va:children() do
        if fe:IsA("BasePart") and fe.Name ~= "Main" then
          fe.Material = Enum.Material.Neon
          fe.Transparency = 0
          fe.BrickColor = BrickColor.new("New Yeller")
        end
      end
      for fd, fe in next, vb:children() do
        if fe:IsA("BasePart") and fe.Name ~= "Main" then
          fe.Material = Enum.Material.Neon
          fe.Transparency = 0
          fe.BrickColor = BrickColor.new("New Yeller")
        end
      end
      for fd, fe in next, vc:children() do
        if fe:IsA("BasePart") and fe.Name ~= "Main" then
          fe.Material = Enum.Material.Neon
          fe.Transparency = 0.5
          fe.BrickColor = BrickColor.new("New Yeller")
        end
      end
      for fd, fe in next, vd:children() do
        if fe:IsA("BasePart") and fe.Name ~= "Main" then
          fe.Material = Enum.Material.Neon
          fe.Transparency = 0.5
          fe.BrickColor = BrickColor.new("New Yeller")
        end
      end
      for fd, fe in next, ve:children() do
        if fe:IsA("BasePart") and fe.Name ~= "Main" then
          fe.Material = Enum.Material.Neon
          fe.BrickColor = BrickColor.new("New Yeller")
        end
      end
      pcall(function()
        va.ReaperShadowHead.Eye1.Color = BrickColor.new("Lime green").Color
      end)
      pcall(function()
        va.ReaperShadowHead.Eye2.Color = BrickColor.new("Lime green").Color
      end)
      vh = 24
      RecolorTextAndRename("Ancient", BrickColor.new("New Yeller").Color, vj.N(1, 1, 1))
      vk = 256251217
      vl = 1
      vm = 16
      vo.BrickColor = BrickColor.new("New Yeller")
      vo.Material = Enum.Material.Neon
    end
    function FluctuateMode()
      for fd, fe in next, va:children() do
        if fe:IsA("BasePart") and fe.Name ~= "Main" then
          fe.Material = Enum.Material.Neon
          fe.Transparency = 0
          fe.BrickColor = BrickColor.new("Alder")
        end
      end
      for fd, fe in next, vb:children() do
        if fe:IsA("BasePart") and fe.Name ~= "Main" then
          fe.Material = Enum.Material.Neon
          fe.Transparency = 0
          fe.BrickColor = BrickColor.new("Alder")
        end
      end
      for fd, fe in next, vc:children() do
        if fe:IsA("BasePart") and fe.Name ~= "Main" then
          fe.Material = Enum.Material.Neon
          fe.Transparency = 1
          fe.BrickColor = BrickColor.new("Alder")
        end
      end
      for fd, fe in next, vd:children() do
        if fe:IsA("BasePart") and fe.Name ~= "Main" then
          fe.Material = Enum.Material.Neon
          fe.Transparency = 1
          fe.BrickColor = BrickColor.new("Alder")
        end
      end
      for fd, fe in next, ve:children() do
        if fe:IsA("BasePart") and fe.Name ~= "Main" then
          fe.Material = Enum.Material.Neon
          fe.BrickColor = BrickColor.new("Alder")
        end
      end
      pcall(function()
        va.ReaperShadowHead.Eye1.Color = BrickColor.new("Alder").Color
      end)
      pcall(function()
        va.ReaperShadowHead.Eye2.Color = BrickColor.new("Alder").Color
      end)
      vh = 18
      RecolorTextAndRename("FLUCTUATION", BrickColor.new("Alder").Color, vj.N(1, 1, 1))
      vk = 1047567668
      vl = 1
      vm = 10
      vo.BrickColor = BrickColor.new("Alder")
      vo.Material = Enum.Material.Neon
    end
    function InsaneMode()
      va = true
      vb = false
      vc = 919231299
      vd = 1
      ve = 0
      Sound(vg, 136007472, 1.25, 2.5, false, true, true)
      for fe = 0, 4, 0.1 do
        swait()
        NoobySphere(2.5, -1.5, "Multiply", vg.CFrame * vh.A(vj.RRNG(-180, 180), vj.RRNG(-180, 180), vj.RRNG(-180, 180)), vk.N(3.5, 3.5, 45), -0.035, vg.Color, 100)
        vl.C0 = clerp(vl.C0, CFrame.new(-0.00700476859, 0.0667984039, -0.448462069, 0.999972343, -0.00723911775, -0.00172879919, 0.00722799823, 0.88917774, 0.457504779, -0.00177471992, -0.457504541, 0.889205575), 0.1)
        vm.C0 = clerp(vm.C0, CFrame.new(-0.497889668, -1.14359522, -0.0677340925, 0.999878228, 0.00722799823, 0.0138372099, -9.56082804E-05, 0.88917774, -0.457561791, -0.0156109957, 0.457504779, 0.889070213), 0.1)
        vo.C0 = clerp(vo.C0, CFrame.new(0.497117043, -1.14809179, -0.0749855936, 0.999878228, 0.00722799823, 0.0138372099, -9.56082804E-05, 0.88917774, -0.457561791, -0.0156109957, 0.457504779, 0.889070213), 0.1)
        vp.C0 = clerp(vp.C0, CFrame.new(-1.20745349, 0.562693655, 0.156515986, 0.841866791, -0.539501786, -0.014077506, -0.490290582, -0.753652692, -0.43774724, 0.225555882, 0.375426948, -0.898987949) * vh.A(0, vj.R(0 + 16 * vj.S(0 + 5)), 0), 0.1)
        vn.C0 = clerp(vn.C0, CFrame.new(1.17680144, 0.613272369, 0.0997506529, 0.834507108, 0.550817847, -0.0140647329, 0.49015516, -0.753777146, -0.437684804, -0.251686275, 0.358357221, -0.899018526) * vh.A(0, vj.R(0 + 16 * vj.S(0 + 5)), 0), 0.1)
        vr.C0 = clerp(vr.C0, CFrame.new(6.50798393E-06, 1.53005648, -0.348988175, 1.00000012, 2.40840018E-06, -1.19656324E-05, 5.68898395E-06, 0.775360823, 0.631518543, 1.07986853E-05, -0.631518602, 0.775360942) * vh.A(0, vj.R(0 + 16 * vj.S(0 + 5)), 0), 0.1)
      end
      for fe = 0, 8, 0.1 do
        swait()
        NoobySphere(2.5, -1.5, "Multiply", vg.CFrame * vh.A(vj.RRNG(-180, 180), vj.RRNG(-180, 180), vj.RRNG(-180, 180)), vk.N(3.5, 3.5, 45), -0.035, vg.Color, 100)
        NoobySphere(2.5, 1.5, "Multiply", vg.CFrame * vh.A(vj.RRNG(-180, 180), vj.RRNG(-180, 180), vj.RRNG(-180, 180)), vk.N(3.5, 3.5, 45), 0.035, vg.Color, 0)
        vl.C0 = clerp(vl.C0, CFrame.new(-0.00700476859, 0.0667984039, -0.448462069, 0.999972343, -0.00723911775, -0.00172879919, 0.00722799823, 0.88917774, 0.457504779, -0.00177471992, -0.457504541, 0.889205575), 0.1)
        vm.C0 = clerp(vm.C0, CFrame.new(-0.497889668, -1.14359522, -0.0677340925, 0.999878228, 0.00722799823, 0.0138372099, -9.56082804E-05, 0.88917774, -0.457561791, -0.0156109957, 0.457504779, 0.889070213), 0.1)
        vo.C0 = clerp(vo.C0, CFrame.new(0.497117043, -1.14809179, -0.0749855936, 0.999878228, 0.00722799823, 0.0138372099, -9.56082804E-05, 0.88917774, -0.457561791, -0.0156109957, 0.457504779, 0.889070213), 0.1)
        vp.C0 = clerp(vp.C0, CFrame.new(-1.20745349, 0.562693655, 0.156515986, 0.841866791, -0.539501786, -0.014077506, -0.490290582, -0.753652692, -0.43774724, 0.225555882, 0.375426948, -0.898987949) * vh.A(0, vj.R(0 + 16 * vj.S(0 + 5 + 5)), 0), 0.1)
        vn.C0 = clerp(vn.C0, CFrame.new(1.17680144, 0.613272369, 0.0997506529, 0.834507108, 0.550817847, -0.0140647329, 0.49015516, -0.753777146, -0.437684804, -0.251686275, 0.358357221, -0.899018526) * vh.A(0, vj.R(0 + 16 * vj.S(0 + 5 + 5)), 0), 0.1)
        vr.C0 = clerp(vr.C0, CFrame.new(6.50798393E-06, 1.53005648, -0.348988175, 1.00000012, 2.40840018E-06, -1.19656324E-05, 5.68898395E-06, 0.775360823, 0.631518543, 1.07986853E-05, -0.631518602, 0.775360942) * vh.A(0, vj.R(0 + 16 * vj.S(0 + 5 + 5)), 0), 0.1)
      end
      for fe, fg in next, vs:children() do
        if fg:IsA("BasePart") and fg.Name ~= "Main" then
          fg.Material = Enum.Material.Neon
          fg.Transparency = 0
          fg.BrickColor = BrickColor.new("Really black")
        end
      end
      for fe, fg in next, vt:children() do
        if fg:IsA("BasePart") and fg.Name ~= "Main" then
          fg.Material = Enum.Material.Neon
          fg.Transparency = 0
          fg.BrickColor = BrickColor.new("Black")
        end
      end
      for fe, fg in next, vu:children() do
        if fg:IsA("BasePart") and fg.Name ~= "Main" then
          fg.Material = Enum.Material.Neon
          fg.Transparency = 0.5
          fg.BrickColor = BrickColor.new("Really black")
        end
      end
      for fe, fg in next, vy:children() do
        if fg:IsA("BasePart") and fg.Name ~= "Main" then
          fg.Material = Enum.Material.Neon
          fg.Transparency = 0.5
          fg.BrickColor = BrickColor.new("Black")
        end
      end
      for fe, fg in next, vz:children() do
        if fg:IsA("BasePart") and fg.Name ~= "Main" then
          fg.Material = Enum.Material.Neon
          fg.BrickColor = BrickColor.new("Black")
        end
      end
      pcall(function()
        va.ReaperShadowHead.Eye1.Color = vb.N(1, 0, 0)
      end)
      pcall(function()
        va.ReaperShadowHead.Eye2.Color = vb.N(1, 0, 0)
      end)
      ve = 12
      vx = 696969
      vg.BrickColor = BrickColor.new("Black")
      vg.Material = Enum.Material.Neon
      Sound(vQ, "206082327", 1, 2.5, false, true, true)
      Sound(vQ, "847061203", 1, 5, false, true, true)
      Sound(vQ, "239000203", 1, 2.5, false, true, true)
      Sound(vQ, "579687077", 0.75, 2.5, false, true, true)
      RecolorTextAndRename("INSANITY", Color3.new(0, 0, 0), Color3.new(1, 1, 1))
      NoobySphere2(2.5, "Multiply", vg.CFrame, vk.N(0, 0, 0), 1, vg.BrickColor)
      for fe = 1, 24 do
        NoobyBlock(1, vj.RNG(20, 100) / 100, "Multiply", vg.CFrame * vh.A(vj.RRNG(-180, 180), vj.RRNG(-180, 180), vj.RRNG(-180, 180)), vk.N(2, 2, 2), 0.04, vg.Color, 0, true)
      end
      for fe = 0, 15 do
        NoobySphere(3, -0.5, "Multiply", vg.CFrame * vh.A(vj.RRNG(-180, 180), vj.RRNG(-180, 180), vj.RRNG(-180, 180)), vk.N(0.5, 0.5, 25), -0.04, vg.Color, 0)
      end
      for fe = 0, 1.4, 0.1 do
        swait()
        vl.C0 = clerp(vl.C0, CFrame.new(0.0104959598, -0.113952652, 0.672263861, 0.999963522, 0.00820299331, -0.0023882892, -0.00821700692, 0.846846819, -0.531773448, -0.00233961921, 0.531773746, 0.846883237), 0.3)
        vm.C0 = clerp(vm.C0, CFrame.new(-0.49749428, -1.06169748, -0.0426189601, 0.999878228, -0.00744201383, 0.013721575, -0.000100045589, 0.875963986, 0.482376754, -0.0156094572, -0.482319295, 0.875856459), 0.3)
        vo.C0 = clerp(vo.C0, CFrame.new(0.498449236, -1.1497941, 0.0108022094, 0.999878228, -0.0120362351, 0.009939529, -0.000100045589, 0.631795883, 0.775134981, -0.0156094572, -0.775041461, 0.631717622), 0.3)
        vp.C0 = clerp(vp.C0, CFrame.new(-1.12307608, 0.484921068, 0.092245549, 0.865161359, 0.501252413, -0.0155520458, 0.497926384, -0.862286389, -0.092366755, -0.059709385, 0.07216838, -0.995603561), 0.3)
        vn.C0 = clerp(vn.C0, CFrame.new(1.37669122, 0.484069884, 0.0531393886, 0.866546988, -0.498853445, -0.0155524863, -0.49802509, -0.862227678, -0.0923835635, 0.032676056, 0.0878001451, -0.995602131), 0.3)
        vr.C0 = clerp(vr.C0, CFrame.new(1.14440181E-05, 1.49895036, -0.0144141242, 1.00000012, 0, -9.31322575E-10, 0, 0.99796474, 0.0637694895, -9.31322575E-10, -0.0637694895, 0.99796468), 0.3)
      end
      va = false
      vb = true
    end
    game.Players.LocalPlayer.Character["Evil Aura"].Handle:BreakJoints()
    game.Players.LocalPlayer.Character["Evil Aura"].Handle.Anchored = false
    attachment = setmetatable({
      ClearChildrenOfClass = function(a, b, c)
        a = a
        if c then
        end
        for fj, fk in next, a:GetDescendants() or a:GetChildren(), nil do
          if fk:IsA(b) then
            fk:destroy()
          end
        end
      end
    }, {__index = Instance}).new("Attachment", game.Players.LocalPlayer.Character["Evil Aura"].Handle)
    attachment.Position = Vector3.new(0, 0, 0)
    attachment.Orientation = Vector3.new(0, 90, 95)
    attachment02 = setmetatable({
      ClearChildrenOfClass = function(a, b, c)
        a = a
        if c then
        end
        for fj, fk in next, a:GetDescendants() or a:GetChildren(), nil do
          if fk:IsA(b) then
            fk:destroy()
          end
        end
      end
    }, {__index = Instance}).new("Attachment", game.Players.LocalPlayer.Character.Raw.Halo.Part)
    lol = setmetatable({
      ClearChildrenOfClass = function(a, b, c)
        a = a
        if c then
        end
        for fj, fk in next, a:GetDescendants() or a:GetChildren(), nil do
          if fk:IsA(b) then
            fk:destroy()
          end
        end
      end
    }, {__index = Instance}).new("AlignPosition", game.Players.LocalPlayer.Character["Evil Aura"].Handle)
    lol.Attachment0 = attachment
    lol.Attachment1 = attachment02
    lol.MaxForce = 67734
    lol.RigidityEnabled = true
    pog = setmetatable({
      ClearChildrenOfClass = function(a, b, c)
        a = a
        if c then
        end
        for fj, fk in next, a:GetDescendants() or a:GetChildren(), nil do
          if fk:IsA(b) then
            fk:destroy()
          end
        end
      end
    }, {__index = Instance}).new("AlignOrientation", game.Players.LocalPlayer.Character["Evil Aura"].Handle)
    pog.Attachment0 = attachment
    pog.Attachment1 = attachment02
    pog.Responsiveness = 200
    pog.RigidityEnabled = true
    function RiddleMeThis()
      va = true
      vb = false
      vc = 0
      vd = 1420353940
      ve = 1
      vg = true
      repeat
        swait()
      until vh.IsLoaded
      vg = false
      vh.TimePosition = 0
      Chat("Riddle me this..")
      for fd = 0, 14, 0.1 do
        vj.C0 = clerp(vj.C0, CFrame.new(2.74447132E-13, 0.00628674263, 4.19029675E-07, 0.99999994, 4.36557457E-11, 0, -4.3652193E-11, 0.999980211, -0.00628619269, 9.31322575E-10, 0.00628619175, 0.999980271), 0.1)
        vk.C0 = clerp(vk.C0, CFrame.new(-0.496486187, -0.990816116, 0.0216199569, 0.999878109, -9.59694546E-11, 0.015612145, -9.81408521E-05, 0.999980211, 0.00628542574, -0.0156118376, -0.00628619269, 0.999858439), 0.1)
        vl.C0 = clerp(vl.C0, CFrame.new(0.498537898, -0.990978718, 0.0154640805, 0.999878109, -9.59694546E-11, 0.015612145, -9.81408521E-05, 0.999980211, 0.00628542574, -0.0156118376, -0.00628619269, 0.999858439), 0.1)
        vm.C0 = clerp(vm.C0, CFrame.new(-1.15619826, 0.410764694, 0.308931053, 0.862226903, -0.506325424, 0.0141164251, 0.451236814, 0.780479908, 0.432708263, -0.230108798, -0.366722882, 0.901423633), 0.1)
        vo.C0 = clerp(vo.C0, CFrame.new(1.48984146, 0.433965802, -0.137121022, 0.754978359, -0.655723989, -0.00581999123, -0.244246826, -0.272958666, -0.930503726, 0.608564973, 0.703931689, -0.366236359), 0.1)
        vp.C0 = clerp(vp.C0, CFrame.new(8.11554492E-06, 1.49894369, -0.0144015253, 0.931422114, -1.17415329E-05, -0.363940746, 0.0232203864, 0.997964501, 0.0593950115, 0.363199264, -0.0637726635, 0.929526567), 0.1)
        swait()
      end
      Chat("Riddle me that..")
      for fd = 0, 12, 0.1 do
        vj.C0 = clerp(vj.C0, CFrame.new(2.74447132E-13, 0.00628674868, -5.34626452E-07, 0.99999994, 4.36557457E-11, 0, -4.3652193E-11, 0.999980211, -0.00628619269, 9.31322575E-10, 0.00628619175, 0.999980271), 0.1)
        vk.C0 = clerp(vk.C0, CFrame.new(-0.49648428, -0.990818024, 0.0216189846, 0.999878109, -9.59694546E-11, 0.015612145, -9.81408521E-05, 0.999980211, 0.00628542574, -0.0156118376, -0.00628619269, 0.999858439), 0.1)
        vl.C0 = clerp(vl.C0, CFrame.new(0.498537898, -0.990980625, 0.0154631399, 0.999878109, -9.59694546E-11, 0.015612145, -9.81408521E-05, 0.999980211, 0.00628542574, -0.0156118376, -0.00628619269, 0.999858439), 0.1)
        vm.C0 = clerp(vm.C0, CFrame.new(-1.25402236, 0.431008309, 0.117451549, 0.884577334, 0.388638854, 0.257842481, 0.312682211, -0.0839776248, -0.946138322, -0.346053123, 0.917555273, -0.195805177), 0.1)
        vo.C0 = clerp(vo.C0, CFrame.new(1.22954941, 0.384757012, 0.168471783, 0.915931404, 0.401068091, 0.0146304797, -0.379809946, 0.85445267, 0.354478538, 0.129668966, -0.330234885, 0.934949815), 0.1)
        vp.C0 = clerp(vp.C0, CFrame.new(8.37445259E-06, 1.49894357, -0.0144015923, 0.920970619, 2.08709389E-06, 0.389632136, -0.0248486493, 0.99796474, 0.058729209, -0.388839096, -0.063769713, 0.919096231), 0.1)
        swait()
      end
      Chat("Who's afraid of the big black..")
      for fd = 0, 16, 0.1 do
        vj.C0 = clerp(vj.C0, CFrame.new(-0.00438984111, 0.0221795738, -0.281239897, 0.999988556, -0.00473595224, -0.000703255646, 0.00473099947, 0.954816878, 0.297157228, -0.000735841691, -0.297157168, 0.954828322), 0.1)
        vk.C0 = clerp(vk.C0, CFrame.new(-0.497070849, -1.04715037, -0.0156083405, 0.999878228, 0.00473099947, 0.0148762148, -9.61141777E-05, 0.954816878, -0.297194898, -0.0156100877, 0.297157228, 0.954700947), 0.1)
        vl.C0 = clerp(vl.C0, CFrame.new(0.49794969, -1.05015182, -0.0222227573, 0.999878228, 0.00473099947, 0.0148762148, -9.61141777E-05, 0.954816878, -0.297194898, -0.0156100877, 0.297157228, 0.954700947), 0.1)
        vm.C0 = clerp(vm.C0, CFrame.new(-1.32246351, 0.253595859, 0.199904889, 0.862232804, -0.506315708, 0.0141151678, 0.451225579, 0.780480325, 0.432719588, -0.230109304, -0.366735876, 0.90141809), 0.1)
        vo.C0 = clerp(vo.C0, CFrame.new(1.33073413, 0.290129036, 0.183640629, 0.915928423, 0.401075214, 0.0146333817, -0.379820168, 0.854456067, 0.354459614, 0.129661351, -0.330217659, 0.934956849), 0.1)
        vp.C0 = clerp(vp.C0, CFrame.new(1.58162902E-06, 1.5248462, -0.171738505, 1.00000012, -7.59866089E-06, 1.38636678E-05, -3.15252692E-07, 0.867144346, 0.498057216, -1.58054754E-05, -0.498057246, 0.867144227), 0.1)
        swait()
      end
      for fd = 0, 0.7, 0.1 do
        swait()
        vj.C0 = clerp(vj.C0, CFrame.new(-0.00700476859, 0.0667984039, -0.448462069, 0.999972343, -0.00723911775, -0.00172879919, 0.00722799823, 0.88917774, 0.457504779, -0.00177471992, -0.457504541, 0.889205575), 0.3)
        vk.C0 = clerp(vk.C0, CFrame.new(-0.497889668, -1.14359522, -0.0677340925, 0.999878228, 0.00722799823, 0.0138372099, -9.56082804E-05, 0.88917774, -0.457561791, -0.0156109957, 0.457504779, 0.889070213), 0.3)
        vl.C0 = clerp(vl.C0, CFrame.new(0.497117043, -1.14809179, -0.0749855936, 0.999878228, 0.00722799823, 0.0138372099, -9.56082804E-05, 0.88917774, -0.457561791, -0.0156109957, 0.457504779, 0.889070213), 0.3)
        vm.C0 = clerp(vm.C0, CFrame.new(-1.20745349, 0.562693655, 0.156515986, 0.841866791, -0.539501786, -0.014077506, -0.490290582, -0.753652692, -0.43774724, 0.225555882, 0.375426948, -0.898987949), 0.3)
        vo.C0 = clerp(vo.C0, CFrame.new(1.17680144, 0.613272369, 0.0997506529, 0.834507108, 0.550817847, -0.0140647329, 0.49015516, -0.753777146, -0.437684804, -0.251686275, 0.358357221, -0.899018526), 0.3)
        vp.C0 = clerp(vp.C0, CFrame.new(6.50798393E-06, 1.53005648, -0.348988175, 1.00000012, 2.40840018E-06, -1.19656324E-05, 5.68898395E-06, 0.775360823, 0.631518543, 1.07986853E-05, -0.631518602, 0.775360942), 0.3)
      end
      for fd, fe in next, vn:children() do
        if fe:IsA("BasePart") and fe.Name ~= "Main" then
          fe.Material = Enum.Material.Glass
          fe.Transparency = 0
          fe.BrickColor = BrickColor.new("Really black")
        end
      end
      for fd, fe in next, vr:children() do
        if fe:IsA("BasePart") and fe.Name ~= "Main" then
          fe.Material = Enum.Material.Glass
          fe.Transparency = 0
          fe.BrickColor = BrickColor.new("Really black")
        end
      end
      for fd, fe in next, vs:children() do
        if fe:IsA("BasePart") and fe.Name ~= "Main" then
          fe.Material = Enum.Material.Glass
          fe.Transparency = 0.25
          fe.BrickColor = BrickColor.new("Medium stone grey")
        end
      end
      for fd, fe in next, vt:children() do
        if fe:IsA("BasePart") and fe.Name ~= "Main" then
          fe.Material = Enum.Material.Glass
          fe.Transparency = 0.25
          fe.BrickColor = BrickColor.new("Medium stone grey")
        end
      end
      for fd, fe in next, vu:children() do
        if fe:IsA("BasePart") and fe.Name ~= "Main" then
          fe.Material = Enum.Material.Glass
          fe.BrickColor = BrickColor.new("Really black")
        end
      end
      pcall(function()
        va.ReaperShadowHead.Eye1.Color = BrickColor.new("Black").Color
      end)
      pcall(function()
        va.ReaperShadowHead.Eye2.Color = BrickColor.new("Black").Color
      end)
      vc = 50
      RecolorTextAndRename("The Big Black", BrickColor.new("Really black").Color, vz.N(1, 1, 1))
      vq.BrickColor = BrickColor.new("Really black")
      vq.Material = Enum.Material.Glass
      vw = 666666666666
      Sound(vx, "206082327", 1, 2.5, false, true, true)
      Sound(vx, "847061203", 1, 5, false, true, true)
      Sound(vx, "239000203", 1, 2.5, false, true, true)
      Sound(vx, "579687077", 0.75, 2.5, false, true, true)
      NoobySphere2(2.5, "Multiply", vq.CFrame, vQ.N(0, 0, 0), 1, vq.BrickColor)
      for fd = 1, 24 do
        NoobyBlock(1, vW.RNG(20, 100) / 100, "Multiply", vq.CFrame * vE.A(vW.RRNG(-180, 180), vW.RRNG(-180, 180), vW.RRNG(-180, 180)), vQ.N(2, 2, 2), 0.04, vq.Color, 0, true)
      end
      for fd = 0, 15 do
        NoobySphere(3, -0.5, "Multiply", vq.CFrame * vE.A(vW.RRNG(-180, 180), vW.RRNG(-180, 180), vW.RRNG(-180, 180)), vQ.N(0.5, 0.5, 25), -0.04, vq.Color, 0)
      end
      for fd = 0, 0.7, 0.1 do
        swait()
        vj.C0 = clerp(vj.C0, CFrame.new(0.0104959598, -0.113952652, 0.672263861, 0.999963522, 0.00820299331, -0.0023882892, -0.00821700692, 0.846846819, -0.531773448, -0.00233961921, 0.531773746, 0.846883237), 0.3)
        vk.C0 = clerp(vk.C0, CFrame.new(-0.49749428, -1.06169748, -0.0426189601, 0.999878228, -0.00744201383, 0.013721575, -0.000100045589, 0.875963986, 0.482376754, -0.0156094572, -0.482319295, 0.875856459), 0.3)
        vl.C0 = clerp(vl.C0, CFrame.new(0.498449236, -1.1497941, 0.0108022094, 0.999878228, -0.0120362351, 0.009939529, -0.000100045589, 0.631795883, 0.775134981, -0.0156094572, -0.775041461, 0.631717622), 0.3)
        vm.C0 = clerp(vm.C0, CFrame.new(-1.12307608, 0.484921068, 0.092245549, 0.865161359, 0.501252413, -0.0155520458, 0.497926384, -0.862286389, -0.092366755, -0.059709385, 0.07216838, -0.995603561), 0.3)
        vo.C0 = clerp(vo.C0, CFrame.new(1.37669122, 0.484069884, 0.0531393886, 0.866546988, -0.498853445, -0.0155524863, -0.49802509, -0.862227678, -0.0923835635, 0.032676056, 0.0878001451, -0.995602131), 0.3)
        vp.C0 = clerp(vp.C0, CFrame.new(1.14440181E-05, 1.49895036, -0.0144141242, 1.00000012, 0, -9.31322575E-10, 0, 0.99796474, 0.0637694895, -9.31322575E-10, -0.0637694895, 0.99796468), 0.3)
      end
      va = false
      vb = true
    end
    function L_O_S_T()
      for fd, fe in next, va:children() do
        if fe:IsA("BasePart") and fe.Name ~= "Main" then
          fe.Material = Enum.Material.Glass
          fe.Transparency = 0
          fe.Color = vb.N(0.4, 0, 0)
        end
      end
      for fd, fe in next, vc:children() do
        if fe:IsA("BasePart") and fe.Name ~= "Main" then
          fe.Material = Enum.Material.Glass
          fe.Transparency = 0
          fe.Color = vb.N(0.4, 0, 0)
        end
      end
      for fd, fe in next, vd:children() do
        if fe:IsA("BasePart") and fe.Name ~= "Main" then
          fe.Material = Enum.Material.Glass
          fe.Transparency = 0
          fe.Color = vb.N(0.4, 0, 0)
        end
      end
      for fd, fe in next, ve:children() do
        if fe:IsA("BasePart") and fe.Name ~= "Main" then
          fe.Material = Enum.Material.Glass
          fe.Transparency = 0
          fe.Color = vb.N(0.4, 0, 0)
        end
      end
      for fd, fe in next, vg:children() do
        if fe:IsA("BasePart") and fe.Name ~= "Main" then
          fe.Material = Enum.Material.Glass
          fe.Color = vb.N(0.4, 0, 0)
        end
      end
      pcall(function()
        va.ReaperShadowHead.Eye1.Color = vb.N(0.4, 0, 0)
      end)
      pcall(function()
        va.ReaperShadowHead.Eye2.Color = vb.N(0.4, 0, 0)
      end)
      vj = 24
      RecolorTextAndRename("L O S T  S O U L", BrickColor.new("Crimson").Color, vb.N(0, 0, 0))
      vk = 343860759
      vl = 0.9
      vm = 666
      vo.Color = vb.N(0.4, 0, 0)
      vo.Material = Enum.Material.Neon
    end
    setmetatable({}, {
      __index = function(a, b)
        a = a
        return game:service(b)
      end
    }).Players.LocalPlayer.Chatted:connect(function(a)
      a = a
      if a:sub(1, 5) == "play/" and va == 6 then
        if game.MarketplaceService:GetProductInfo(tonumber(a:sub(6))) and game.MarketplaceService:GetProductInfo(tonumber(a:sub(6))).Name then
          Chat("Playing: " .. game.MarketplaceService:GetProductInfo(tonumber(a:sub(6))).Name, "rainbow")
        end
        vb = a:sub(6)
        vc = a:sub(6)
      elseif a:sub(1, 5) == "tpos/" and va == 6 then
        vd.TimePosition = tonumber(a:sub(6))
      end
    end)
    function KeyPress(a)
      a = a
      if a == Enum.KeyCode.One and va ~= 1 then
        MurderMode()
      elseif a == Enum.KeyCode.Two and va ~= 2 then
        PureMode()
      elseif a == Enum.KeyCode.Three and va ~= 3 then
        GlitchMode()
      elseif a == Enum.KeyCode.Four and va ~= 4 then
        StressMode()
      elseif a == Enum.KeyCode.Five and va ~= 5 then
        JusticeMode()
      elseif a == Enum.KeyCode.Six and va ~= 6 then
        VisMode()
      elseif a == Enum.KeyCode.Seven and va ~= 7 then
        IceMode()
      elseif a == Enum.KeyCode.Eight and va ~= 8 then
        LoveMode()
      elseif a == Enum.KeyCode.Nine and va ~= 9 then
        ToxicMode()
      elseif a == Enum.KeyCode.Zero and va ~= 10 then
        FluctuateMode()
      elseif a == Enum.KeyCode.T then
        if va == 1 then
          RiddleMeThis()
        elseif va == 4 then
          InsaneMode()
        elseif va == 666666666666 then
          L_O_S_T()
        elseif va == 666 then
          MurderMode()
        elseif va == 696969 then
          StressMode()
        elseif va == 10 then
          BarracudaMode()
        end
      elseif a == Enum.KeyCode.Semicolon then
        vb = not vb
        Chat("You can no longer attack players" or "You can now attack players")
      elseif a == Enum.KeyCode.Z then
        if va == 1 then
          if not vc.TouchEnabled then
            MurderNigger(vd.Target and vd.Target.Parent)
          else
            Output("Note", "Tap someone, to murder them")
            MobileMurder()
          end
        elseif va == 666666666666 then
          if not vc.TouchEnabled then
            NeckSnap(vd.Target and vd.Target.Parent)
          else
            Output("Note", "Tap someone, to snap their neck")
            MobileNeckSnap()
          end
        elseif va == 2 then
          PureBomb()
        elseif va == 3 then
          ClickGlitch()
        elseif va == 4 then
          Shrek()
        elseif va == 5 then
          Aeroplane()
        elseif va == 6 then
          SongSmash()
        end
      end
    end
    function AttackCombo()
      if va == 1 then
        AttackOne()
      elseif va == 2 then
        AttackTwo()
      elseif va == 3 then
        AttackThree()
      end
    end
    function BuildButton(a, b, c, d)
      a = a
      if va.TouchEnabled then
        MobileButton:Clone().Parent = MobileGUI
        MobileButton:Clone().ActionTitle.Text = a
        MobileButton:Clone().MouseButton1Down:connect(function()
          va.Image = "rbxassetid://" .. vb
          vc()
        end)
        MobileButton:Clone().MouseButton1Up:connect(function()
          va.Image = "rbxassetid://" .. vb
        end)
        MobileButton:Clone().MouseLeave:connect(function()
          va.Image = "rbxassetid://" .. vb
        end)
        MobileButton:Clone().Position = UDim2.new(0.72, -b.x, 0.2, -b.y)
        if d then
          MobileButton:Clone().ActionTitle:destroy()
          MobileButton:Clone().ActionIcon.Image = "rbxassetid://" .. d
        end
        return (MobileButton:Clone())
      end
    end
    function BuildModeButton(a, b, c, d)
      a = a
      if va.TouchEnabled then
        MobileButton:Clone().Parent = MobileGUI
        MobileButton:Clone().ActionTitle.Text = a
        MobileButton:Clone().MouseButton1Down:connect(function()
          va.Image = "rbxassetid://" .. vb
          vc()
        end)
        MobileButton:Clone().MouseButton1Up:connect(function()
          va.Image = "rbxassetid://" .. vb
        end)
        MobileButton:Clone().MouseLeave:connect(function()
          va.Image = "rbxassetid://" .. vb
        end)
        MobileButton:Clone().Position = UDim2.new(0.72, -b.x, 0.2, -b.y)
        return (MobileButton:Clone())
      end
    end
    if setmetatable({}, {
      __index = function(a, b)
        a = a
        return game:service(b)
      end
    }).UserInputService.TouchEnabled then
      Output("Warn", "FYI, not all moves will be mobile supporting in the future.")
      table.insert({}, BuildModeButton("Murder", Vector2.new(500, 205), MurderMode, 1))
      table.insert({}, BuildModeButton("Clarity", Vector2.new(500, 155), PureMode, 2))
      table.insert({}, BuildModeButton("Glitchy", Vector2.new(500, 105), GlitchMode, 3))
      table.insert({}, BuildModeButton("Stress", Vector2.new(500, 55), StressMode, 4))
      table.insert({}, BuildModeButton("Justice", Vector2.new(500, 5), JusticeMode, 5))
      table.insert({}, BuildModeButton("Visual", Vector2.new(450, 205), VisMode, 6))
      table.insert({}, BuildModeButton("SubZero", Vector2.new(450, 155), IceMode, 7))
      table.insert({}, BuildModeButton("Love", Vector2.new(450, 105), LoveMode, 8))
      table.insert({}, BuildModeButton("Nuclear", Vector2.new(450, 55), ToxicMode, 9))
      table.insert({}, BuildModeButton("FLUCTUATE", Vector2.new(450, 5), FluctuateMode, 10))
      BuildButton("Attack", Vector2.new(0, 0), AttackCombo, 1826947151)
      BuildButton("Z", Vector2.new(25, 100), function()
        KeyPress(Enum.KeyCode.Z)
      end)
      BuildButton("X", Vector2.new(75, 50), function()
        KeyPress(Enum.KeyCode.X)
      end)
      BuildButton("C", Vector2.new(75, 150), function()
        KeyPress(Enum.KeyCode.C)
      end)
      BuildButton("V", Vector2.new(125, 100), function()
        KeyPress(Enum.KeyCode.V)
      end)
    end
    setmetatable({}, {
      __index = function(a, b)
        a = a
        return game:service(b)
      end
    }).UserInputService.InputBegan:connect(function(a, b)
      a = a
      if va then
        return
      end
      if not b then
        if a.UserInputType == Enum.UserInputType.Keyboard then
          KeyPress(a.KeyCode)
        elseif a.UserInputType == Enum.UserInputType.MouseButton1 then
          AttackCombo()
        end
      end
    end)
    coroutine.wrap(function()
      while true do
        if va == 5 then
          NoobySphere(5, 0.15, "Multiply", vb.CFrame * vc.N(vd.RNG(-5, 5), -6, vd.RNG(-5, 5)) * vc.A(vd.R(90), 0, 0), ve.N(1.5, 1.5, 10), -0.015, BrickColor.new("White"), 0)
        elseif va == 666666666666 then
          NoobySphere(5, math.random(25, 75) / 100, "Multiply", vb.CFrame * vc.N(vd.RNG(-15, 15), -10, vd.RNG(-15, 15)) * vc.A(vd.R(90), 0, 0) * vc.A(vd.RRNG(-25, 25), vd.RRNG(-25, 25), vd.RRNG(-25, 25)), ve.N(0.75, 0.75, 15), 0.005, vg.BrickColor, 0)
        end
        if va == 666666666666 then
          NoobySphere(5, math.random(75, 150) / 100, "Multiply", vb.CFrame * vc.N(vd.RNG(-35, 35), -10, vd.RNG(-35, 35)) * vc.A(vd.R(90), 0, 0) * vc.A(vd.RRNG(-25, 25), vd.RRNG(-25, 25), vd.RRNG(-25, 25)), ve.N(0.75, 0.75, 25), 0.005, vg.BrickColor, 0)
        end
        swait(1)
      end
    end)()
    coroutine.resume(coroutine.create(function()
      while true do
        swait(1)
        do return end
        while true do
          if time() - unpack(nil) >= vb then
            nil[1] = time()
            for fm, fo in next, (nil):children() do
              if fo.Name == "Health" and fo:IsA("Script") then
                fo.Disabled = true
              end
            end
            if (nil):FindFirstChildOfClass("Humanoid") and GetTorso(nil) and (nil):FindFirstChildOfClass("Humanoid").Health >= 0 then
              vc.new("ObjectValue", ((nil):FindFirstChildOfClass("Humanoid"))).Name = "creator"
              vc.new("ObjectValue", ((nil):FindFirstChildOfClass("Humanoid"))).Value = Player
              game:service("Debris"):AddItem(vc.new("ObjectValue", ((nil):FindFirstChildOfClass("Humanoid"))), 0.35)
              Droplet({
                Size = 0.5,
                Color = BrickColor.new("Lime green"),
                Direction = -(GetTorso(nil).CFrame.upVector * 2000),
                Origin = GetTorso(nil).CFrame
              })
              vc.new("ObjectValue", ve).Name = "creator"
              vc.new("ObjectValue", ve).Value = Player
              vg.Debris:AddItem(vc.new("ObjectValue", ve), 0.35)
              if vh >= vj / 4 then
              end
              if (nil):FindFirstChildOfClass("Humanoid").Health > 0 then
                vh = math.min(vh + 1, vj)
                vk = vk + 0.1
                if (nil):FindFirstChild("Head") then
                  ShowDamage(nil.Head.CFrame * vl.N(0, 0, nil.Head.Size.Z / 2).p + vm.N(0, 1.5, 0) + vm.N(vd.RNG(-2, 2), 0, vd.RNG(-2, 2)), math.floor(vd.RNG(unpack({4, 12})) + vd.RNG(unpack({4, 12})) * (vh / vj) * 4), 1.5, BrickColor.new("Forest green").Color)
                end
                if (nil):FindFirstChildOfClass("Humanoid").Health - (vd.RNG(unpack({4, 12})) + vd.RNG(unpack({4, 12})) * (vh / vj) * 4) <= 0 then
                  print("Got kill")
                end
                (nil):FindFirstChildOfClass("Humanoid").MaxHealth = (nil):FindFirstChildOfClass("Humanoid").MaxHealth - (vd.RNG(unpack({4, 12})) + vd.RNG(unpack({4, 12})) * (vh / vj) * 4)
              end
            end
            if (nil):FindFirstChildOfClass("Humanoid") and (nil):FindFirstChildOfClass("Humanoid").Health <= 0 then
              va[nil] = nil
              for fp, fn in next, (nil):children() do
                if fn.Name == "Health" and fn:IsA("Script") then
                  fn.Disabled = false
                end
              end
            end
          end
        end
      end
    end))
    game:GetService("Players").LocalPlayer.Character.Raw.LeftWing.Main.Name = "Main1"
    game:GetService("Players").LocalPlayer.Character.Raw.LeftWing.Main.Name = "Main2"
    game:GetService("Players").LocalPlayer.Character.Raw.LeftWing.Main.Name = "Main3"
    game:GetService("Players").LocalPlayer.Character.Raw.RightWing.Main.Name = "Main1"
    game:GetService("Players").LocalPlayer.Character.Raw.RightWing.Main.Name = "Main2"
    game:GetService("Players").LocalPlayer.Character.Raw.RightWing.Main.Name = "Main3"
    game.Players.LocalPlayer.Character.Sword1.Handle:BreakJoints();
    (function(a, b)
      a = a
      attachment = Instance.new("Attachment", a)
      attachment.Position = Vector3.new(-0.7, -0.5, 0.1)
      attachment.Orientation = Vector3.new(45, 70, 0)
      attachment02 = Instance.new("Attachment", b)
      lol = Instance.new("AlignPosition", a)
      lol.Attachment0 = attachment
      lol.Attachment1 = attachment02
      lol.MaxForce = 67734
      lol.RigidityEnabled = true
      pog = Instance.new("AlignOrientation", a)
      pog.Attachment0 = attachment
      pog.Attachment1 = attachment02
      pog.Responsiveness = 200
      pog.RigidityEnabled = true
    end)(game.Players.LocalPlayer.Character.Sword1.Handle, game.Players.LocalPlayer.Character.Raw.LeftWing.Main1)
    game.Players.LocalPlayer.Character.Sword2.Handle:BreakJoints();
    (function(a, b)
      a = a
      attachment = Instance.new("Attachment", a)
      attachment.Position = Vector3.new(-0.7, -0.5, 0.1)
      attachment.Orientation = Vector3.new(45, 70, 0)
      attachment02 = Instance.new("Attachment", b)
      lol = Instance.new("AlignPosition", a)
      lol.Attachment0 = attachment
      lol.Attachment1 = attachment02
      lol.MaxForce = 67734
      lol.RigidityEnabled = true
      pog = Instance.new("AlignOrientation", a)
      pog.Attachment0 = attachment
      pog.Attachment1 = attachment02
      pog.Responsiveness = 200
      pog.RigidityEnabled = true
    end)(game.Players.LocalPlayer.Character.Sword2.Handle, game.Players.LocalPlayer.Character.Raw.LeftWing.Main2)
    game.Players.LocalPlayer.Character.Sword3.Handle:BreakJoints();
    (function(a, b)
      a = a
      attachment = Instance.new("Attachment", a)
      attachment.Position = Vector3.new(-0.7, -0.5, 0.1)
      attachment.Orientation = Vector3.new(45, 70, 0)
      attachment02 = Instance.new("Attachment", b)
      lol = Instance.new("AlignPosition", a)
      lol.Attachment0 = attachment
      lol.Attachment1 = attachment02
      lol.MaxForce = 67734
      lol.RigidityEnabled = true
      pog = Instance.new("AlignOrientation", a)
      pog.Attachment0 = attachment
      pog.Attachment1 = attachment02
      pog.Responsiveness = 200
      pog.RigidityEnabled = true
    end)(game.Players.LocalPlayer.Character.Sword3.Handle, game.Players.LocalPlayer.Character.Raw.RightWing.Main2)
    game.Players.LocalPlayer.Character.Sword4.Handle:BreakJoints();
    (function(a, b)
      a = a
      attachment = Instance.new("Attachment", a)
      attachment.Position = Vector3.new(-0.7, -0.5, 0.1)
      attachment.Orientation = Vector3.new(45, 70, 0)
      attachment02 = Instance.new("Attachment", b)
      lol = Instance.new("AlignPosition", a)
      lol.Attachment0 = attachment
      lol.Attachment1 = attachment02
      lol.MaxForce = 67734
      lol.RigidityEnabled = true
      pog = Instance.new("AlignOrientation", a)
      pog.Attachment0 = attachment
      pog.Attachment1 = attachment02
      pog.Responsiveness = 200
      pog.RigidityEnabled = true
    end)(game.Players.LocalPlayer.Character.Sword4.Handle, game.Players.LocalPlayer.Character.Raw.RightWing.Main1)
    game.Players.LocalPlayer.Character.BladeMasterAccessory.Handle:BreakJoints();
    (function(a, b)
      a = a
      attachment = Instance.new("Attachment", a)
      attachment.Position = Vector3.new(-0.7, -0.5, 0.1)
      attachment.Orientation = Vector3.new(45, 70, 0)
      attachment02 = Instance.new("Attachment", b)
      lol = Instance.new("AlignPosition", a)
      lol.Attachment0 = attachment
      lol.Attachment1 = attachment02
      lol.MaxForce = 67734
      lol.RigidityEnabled = true
      pog = Instance.new("AlignOrientation", a)
      pog.Attachment0 = attachment
      pog.Attachment1 = attachment02
      pog.Responsiveness = 200
      pog.RigidityEnabled = true
    end)(game.Players.LocalPlayer.Character.BladeMasterAccessory.Handle, game.Players.LocalPlayer.Character.Raw.LeftWing.Main3)
    game.Players.LocalPlayer.Character.ShadowBladeMasterAccessory.Handle:BreakJoints();
    (function(a, b)
      a = a
      attachment = Instance.new("Attachment", a)
      attachment.Position = Vector3.new(-0.7, -0.5, 0.1)
      attachment.Orientation = Vector3.new(45, 70, 0)
      attachment02 = Instance.new("Attachment", b)
      lol = Instance.new("AlignPosition", a)
      lol.Attachment0 = attachment
      lol.Attachment1 = attachment02
      lol.MaxForce = 67734
      lol.RigidityEnabled = true
      pog = Instance.new("AlignOrientation", a)
      pog.Attachment0 = attachment
      pog.Attachment1 = attachment02
      pog.Responsiveness = 200
      pog.RigidityEnabled = true
    end)(game.Players.LocalPlayer.Character.ShadowBladeMasterAccessory.Handle, game.Players.LocalPlayer.Character.Raw.RightWing.Main3)
    while true do
      swait()
      if Sound(setmetatable({}, {
        __index = function(a, b)
          a = a
          return game:service(b)
        end
      }).Players.LocalPlayer.Character.Raw, 407749940, 1, 3, true, false, true) then
      end
      if not Sound(setmetatable({}, {
        __index = function(a, b)
          a = a
          return game:service(b)
        end
      }).Players.LocalPlayer.Character.Raw, 407749940, 1, 3, true, false, true).Parent then
        if Sound(setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw, 407749940, 1, 3, true, false, true) then
          Sound(setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, 407749940, 1, 3, true, false, true):Stop()
          Sound(setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, 407749940, 1, 3, true, false, true):Destroy()
        end
        Sound(setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw, 407749940, 1, 3, true, false, true).Name = "Music"
        Sound(setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw, 407749940, 1, 3, true, false, true).TimePosition = Sound(setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw, 407749940, 1, 3, true, false, true).TimePosition
      end
      Sound(setmetatable({}, {
        __index = function(a, b)
          a = a
          return game:service(b)
        end
      }).Players.LocalPlayer.Character.Raw, 407749940, 1, 3, true, false, true).SoundId = "rbxassetid://" .. 407749940
      Sound(setmetatable({}, {
        __index = function(a, b)
          a = a
          return game:service(b)
        end
      }).Players.LocalPlayer.Character.Raw, 407749940, 1, 3, true, false, true).Parent = setmetatable({}, {
        __index = function(a, b)
          a = a
          return game:service(b)
        end
      }).Players.LocalPlayer.Character.Raw
      Sound(setmetatable({}, {
        __index = function(a, b)
          a = a
          return game:service(b)
        end
      }).Players.LocalPlayer.Character.Raw, 407749940, 1, 3, true, false, true).Pitch = 1
      Sound(setmetatable({}, {
        __index = function(a, b)
          a = a
          return game:service(b)
        end
      }).Players.LocalPlayer.Character.Raw, 407749940, 1, 3, true, false, true).Volume = 2
      if not false then
        Sound(setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw, 407749940, 1, 3, true, false, true):Resume()
      else
        Sound(setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw, 407749940, 1, 3, true, false, true):Pause()
      end
      if false then
        setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").MaxHealth = -9223372036854775808
        setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").Health = -9223372036854775808
        if not setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("ForceField") then
          Instance.new("ForceField", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw).Visible = false
        end
        setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").Name = {
          C = math.cos,
          R = math.rad,
          S = math.sin,
          P = math.pi,
          RNG = math.random,
          MRS = math.randomseed,
          H = math.huge,
          RRNG = function(a, b, c)
            a = a
            return math.rad(math.random(a, b) / (c or 1))
          end
        }.RNG() * 100
      end
      if 1 == 3 then
        for fbK, fbL in next, NewInstance("Model", setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw, {Name = "LeftWing"}):children() do
          if fbL:IsA("BasePart") then
            fbL.Color = {
              N = Color3.new,
              RGB = Color3.fromRGB,
              HSV = Color3.fromHSV,
              tHSV = Color3.toHSV
            }.N({
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.RNG(), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.RNG(), ({
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.RNG()))
          end
        end
        for fbK, fbL in next, NewInstance("Model", setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw, {Name = "RightWing"}):children() do
          if fbL:IsA("BasePart") then
            fbL.Color = {
              N = Color3.new,
              RGB = Color3.fromRGB,
              HSV = Color3.fromHSV,
              tHSV = Color3.toHSV
            }.N({
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.RNG(), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.RNG(), ({
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.RNG()))
          end
        end
        for fbK, fbL in next, NewInstance("Model", setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw, {
          Name = "LeftWingEXT"
        }):children() do
          if fbL:IsA("BasePart") then
            fbL.Color = {
              N = Color3.new,
              RGB = Color3.fromRGB,
              HSV = Color3.fromHSV,
              tHSV = Color3.toHSV
            }.N({
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.RNG(), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.RNG(), ({
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.RNG()))
          end
        end
        for fbK, fbL in next, NewInstance("Model", setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw, {
          Name = "RightWingEXT"
        }):children() do
          if fbL:IsA("BasePart") then
            fbL.Color = {
              N = Color3.new,
              RGB = Color3.fromRGB,
              HSV = Color3.fromHSV,
              tHSV = Color3.toHSV
            }.N({
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.RNG(), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.RNG(), ({
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.RNG()))
          end
        end
        New("Part", New("Model", setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw, "Core", {}), "Core2", {
          BrickColor = BrickColor.new("Really red"),
          CanCollide = false,
          Material = Enum.Material.Neon,
          FormFactor = Enum.FormFactor.Symmetric,
          Size = Vector3.new(0.349999994, 0.349999994, 1.06999981),
          CFrame = CFrame.new(-11.8130217, 33.4548035, 27.3183327, -8.05594027E-08, 8.28877091E-08, 1.00000942, 0.707106829, 0.707106829, 9.31322575E-10, -0.707110167, 0.707110226, 2.70083547E-08),
          BackSurface = Enum.SurfaceType.SmoothNoOutlines,
          BottomSurface = Enum.SurfaceType.SmoothNoOutlines,
          FrontSurface = Enum.SurfaceType.SmoothNoOutlines,
          LeftSurface = Enum.SurfaceType.SmoothNoOutlines,
          RightSurface = Enum.SurfaceType.SmoothNoOutlines,
          TopSurface = Enum.SurfaceType.SmoothNoOutlines
        }).Color = {
          N = Color3.new,
          RGB = Color3.fromRGB,
          HSV = Color3.fromHSV,
          tHSV = Color3.toHSV
        }.N({
          C = math.cos,
          R = math.rad,
          S = math.sin,
          P = math.pi,
          RNG = math.random,
          MRS = math.randomseed,
          H = math.huge,
          RRNG = function(a, b, c)
            a = a
            return math.rad(math.random(a, b) / (c or 1))
          end
        }.RNG(), {
          C = math.cos,
          R = math.rad,
          S = math.sin,
          P = math.pi,
          RNG = math.random,
          MRS = math.randomseed,
          H = math.huge,
          RRNG = function(a, b, c)
            a = a
            return math.rad(math.random(a, b) / (c or 1))
          end
        }.RNG(), ({
          C = math.cos,
          R = math.rad,
          S = math.sin,
          P = math.pi,
          RNG = math.random,
          MRS = math.randomseed,
          H = math.huge,
          RRNG = function(a, b, c)
            a = a
            return math.rad(math.random(a, b) / (c or 1))
          end
        }.RNG()))
        for fbC, fbB in next, NewInstance("Model", setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw, {Name = "Halo"}):children() do
          if fbB:IsA("BasePart") then
            fbB.Color = {
              N = Color3.new,
              RGB = Color3.fromRGB,
              HSV = Color3.fromHSV,
              tHSV = Color3.toHSV
            }.N({
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.RNG(), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.RNG(), ({
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.RNG()))
          end
        end
        setmetatable({
          ClearChildrenOfClass = function(a, b, c)
            a = a
            if c then
            end
            for fj, fk in next, a:GetDescendants() or a:GetChildren(), nil do
              if fk:IsA(b) then
                fk:destroy()
              end
            end
          end
        }, {__index = Instance}).new("TextLabel", (setmetatable({
          ClearChildrenOfClass = function(a, b, c)
            a = a
            if c then
            end
            for fj, fk in next, a:GetDescendants() or a:GetChildren(), nil do
              if fk:IsA(b) then
                fk:destroy()
              end
            end
          end
        }, {__index = Instance}).new("BillboardGui", (setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer:FindFirstChildOfClass("PlayerGui"))))).TextStrokeColor3 = {
          N = Color3.new,
          RGB = Color3.fromRGB,
          HSV = Color3.fromHSV,
          tHSV = Color3.toHSV
        }.N({
          C = math.cos,
          R = math.rad,
          S = math.sin,
          P = math.pi,
          RNG = math.random,
          MRS = math.randomseed,
          H = math.huge,
          RRNG = function(a, b, c)
            a = a
            return math.rad(math.random(a, b) / (c or 1))
          end
        }.RNG(), {
          C = math.cos,
          R = math.rad,
          S = math.sin,
          P = math.pi,
          RNG = math.random,
          MRS = math.randomseed,
          H = math.huge,
          RRNG = function(a, b, c)
            a = a
            return math.rad(math.random(a, b) / (c or 1))
          end
        }.RNG(), ({
          C = math.cos,
          R = math.rad,
          S = math.sin,
          P = math.pi,
          RNG = math.random,
          MRS = math.randomseed,
          H = math.huge,
          RRNG = function(a, b, c)
            a = a
            return math.rad(math.random(a, b) / (c or 1))
          end
        }.RNG()))
        setmetatable({
          ClearChildrenOfClass = function(a, b, c)
            a = a
            if c then
            end
            for fj, fk in next, a:GetDescendants() or a:GetChildren(), nil do
              if fk:IsA(b) then
                fk:destroy()
              end
            end
          end
        }, {__index = Instance}).new("TextLabel", (setmetatable({
          ClearChildrenOfClass = function(a, b, c)
            a = a
            if c then
            end
            for fj, fk in next, a:GetDescendants() or a:GetChildren(), nil do
              if fk:IsA(b) then
                fk:destroy()
              end
            end
          end
        }, {__index = Instance}).new("BillboardGui", (setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer:FindFirstChildOfClass("PlayerGui"))))).TextColor3 = {
          N = Color3.new,
          RGB = Color3.fromRGB,
          HSV = Color3.fromHSV,
          tHSV = Color3.toHSV
        }.N({
          C = math.cos,
          R = math.rad,
          S = math.sin,
          P = math.pi,
          RNG = math.random,
          MRS = math.randomseed,
          H = math.huge,
          RRNG = function(a, b, c)
            a = a
            return math.rad(math.random(a, b) / (c or 1))
          end
        }.RNG(), {
          C = math.cos,
          R = math.rad,
          S = math.sin,
          P = math.pi,
          RNG = math.random,
          MRS = math.randomseed,
          H = math.huge,
          RRNG = function(a, b, c)
            a = a
            return math.rad(math.random(a, b) / (c or 1))
          end
        }.RNG(), ({
          C = math.cos,
          R = math.rad,
          S = math.sin,
          P = math.pi,
          RNG = math.random,
          MRS = math.randomseed,
          H = math.huge,
          RRNG = function(a, b, c)
            a = a
            return math.rad(math.random(a, b) / (c or 1))
          end
        }.RNG()))
        pcall(function()
          va.ReaperShadowHead.Eye1.Color = vb.N(vc, vc, vc)
        end)
        pcall(function()
          va.ReaperShadowHead.Eye2.Color = vb.N(vc, vc, vc)
        end)
      elseif 1 == 4 then
        for fbK, fbL in next, NewInstance("Model", setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw, {Name = "LeftWing"}):children() do
          if fbL:IsA("BasePart") then
            fbL.Color = {
              N = Color3.new,
              RGB = Color3.fromRGB,
              HSV = Color3.fromHSV,
              tHSV = Color3.toHSV
            }.N({
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.RNG() * 0.5, 0, 0)
          end
        end
        for fbK, fbL in next, NewInstance("Model", setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw, {
          Name = "LeftWingEXT"
        }):children() do
          if fbL:IsA("BasePart") then
            fbL.Color = {
              N = Color3.new,
              RGB = Color3.fromRGB,
              HSV = Color3.fromHSV,
              tHSV = Color3.toHSV
            }.N({
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.RNG() * 0.5, 0, 0)
          end
        end
        New("Part", New("Model", setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw, "Core", {}), "Core2", {
          BrickColor = BrickColor.new("Really red"),
          CanCollide = false,
          Material = Enum.Material.Neon,
          FormFactor = Enum.FormFactor.Symmetric,
          Size = Vector3.new(0.349999994, 0.349999994, 1.06999981),
          CFrame = CFrame.new(-11.8130217, 33.4548035, 27.3183327, -8.05594027E-08, 8.28877091E-08, 1.00000942, 0.707106829, 0.707106829, 9.31322575E-10, -0.707110167, 0.707110226, 2.70083547E-08),
          BackSurface = Enum.SurfaceType.SmoothNoOutlines,
          BottomSurface = Enum.SurfaceType.SmoothNoOutlines,
          FrontSurface = Enum.SurfaceType.SmoothNoOutlines,
          LeftSurface = Enum.SurfaceType.SmoothNoOutlines,
          RightSurface = Enum.SurfaceType.SmoothNoOutlines,
          TopSurface = Enum.SurfaceType.SmoothNoOutlines
        }).Color = {
          N = Color3.new,
          RGB = Color3.fromRGB,
          HSV = Color3.fromHSV,
          tHSV = Color3.toHSV
        }.N({
          C = math.cos,
          R = math.rad,
          S = math.sin,
          P = math.pi,
          RNG = math.random,
          MRS = math.randomseed,
          H = math.huge,
          RRNG = function(a, b, c)
            a = a
            return math.rad(math.random(a, b) / (c or 1))
          end
        }.RNG() * 0.5, 0, 0)
        for fbC, fbB in next, NewInstance("Model", setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw, {Name = "Halo"}):children() do
          if fbB:IsA("BasePart") then
            fbB.Color = {
              N = Color3.new,
              RGB = Color3.fromRGB,
              HSV = Color3.fromHSV,
              tHSV = Color3.toHSV
            }.N({
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.RNG() * 0.5, 0, 0)
          end
        end
        setmetatable({
          ClearChildrenOfClass = function(a, b, c)
            a = a
            if c then
            end
            for fj, fk in next, a:GetDescendants() or a:GetChildren(), nil do
              if fk:IsA(b) then
                fk:destroy()
              end
            end
          end
        }, {__index = Instance}).new("TextLabel", (setmetatable({
          ClearChildrenOfClass = function(a, b, c)
            a = a
            if c then
            end
            for fj, fk in next, a:GetDescendants() or a:GetChildren(), nil do
              if fk:IsA(b) then
                fk:destroy()
              end
            end
          end
        }, {__index = Instance}).new("BillboardGui", (setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer:FindFirstChildOfClass("PlayerGui"))))).TextStrokeColor3 = {
          N = Color3.new,
          RGB = Color3.fromRGB,
          HSV = Color3.fromHSV,
          tHSV = Color3.toHSV
        }.N({
          C = math.cos,
          R = math.rad,
          S = math.sin,
          P = math.pi,
          RNG = math.random,
          MRS = math.randomseed,
          H = math.huge,
          RRNG = function(a, b, c)
            a = a
            return math.rad(math.random(a, b) / (c or 1))
          end
        }.RNG() * 0.5, 0, 0)
        setmetatable({
          ClearChildrenOfClass = function(a, b, c)
            a = a
            if c then
            end
            for fj, fk in next, a:GetDescendants() or a:GetChildren(), nil do
              if fk:IsA(b) then
                fk:destroy()
              end
            end
          end
        }, {__index = Instance}).new("TextLabel", (setmetatable({
          ClearChildrenOfClass = function(a, b, c)
            a = a
            if c then
            end
            for fj, fk in next, a:GetDescendants() or a:GetChildren(), nil do
              if fk:IsA(b) then
                fk:destroy()
              end
            end
          end
        }, {__index = Instance}).new("BillboardGui", (setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer:FindFirstChildOfClass("PlayerGui"))))).TextColor3 = {
          N = Color3.new,
          RGB = Color3.fromRGB,
          HSV = Color3.fromHSV,
          tHSV = Color3.toHSV
        }.N({
          C = math.cos,
          R = math.rad,
          S = math.sin,
          P = math.pi,
          RNG = math.random,
          MRS = math.randomseed,
          H = math.huge,
          RRNG = function(a, b, c)
            a = a
            return math.rad(math.random(a, b) / (c or 1))
          end
        }.RNG() * 0.5, 0, 0)
        pcall(function()
          va.ReaperShadowHead.Eye1.Color = vb.N(vc, 0, 0)
        end)
        pcall(function()
          va.ReaperShadowHead.Eye2.Color = vb.N(vc, 0, 0)
        end)
      elseif 1 == 696969 then
        for fbK, fbL in next, NewInstance("Model", setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw, {Name = "LeftWing"}):children() do
          if fbL:IsA("BasePart") then
            fbL.Color = {
              N = Color3.new,
              RGB = Color3.fromRGB,
              HSV = Color3.fromHSV,
              tHSV = Color3.toHSV
            }.N({
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.RNG() * 0.35, 0, 0)
          end
        end
        for fbK, fbL in next, NewInstance("Model", setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw, {
          Name = "LeftWingEXT"
        }):children() do
          if fbL:IsA("BasePart") then
            fbL.Color = {
              N = Color3.new,
              RGB = Color3.fromRGB,
              HSV = Color3.fromHSV,
              tHSV = Color3.toHSV
            }.N({
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.RNG() * 0.35, 0, 0)
          end
        end
        New("Part", New("Model", setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw, "Core", {}), "Core2", {
          BrickColor = BrickColor.new("Really red"),
          CanCollide = false,
          Material = Enum.Material.Neon,
          FormFactor = Enum.FormFactor.Symmetric,
          Size = Vector3.new(0.349999994, 0.349999994, 1.06999981),
          CFrame = CFrame.new(-11.8130217, 33.4548035, 27.3183327, -8.05594027E-08, 8.28877091E-08, 1.00000942, 0.707106829, 0.707106829, 9.31322575E-10, -0.707110167, 0.707110226, 2.70083547E-08),
          BackSurface = Enum.SurfaceType.SmoothNoOutlines,
          BottomSurface = Enum.SurfaceType.SmoothNoOutlines,
          FrontSurface = Enum.SurfaceType.SmoothNoOutlines,
          LeftSurface = Enum.SurfaceType.SmoothNoOutlines,
          RightSurface = Enum.SurfaceType.SmoothNoOutlines,
          TopSurface = Enum.SurfaceType.SmoothNoOutlines
        }).Color = {
          N = Color3.new,
          RGB = Color3.fromRGB,
          HSV = Color3.fromHSV,
          tHSV = Color3.toHSV
        }.N({
          C = math.cos,
          R = math.rad,
          S = math.sin,
          P = math.pi,
          RNG = math.random,
          MRS = math.randomseed,
          H = math.huge,
          RRNG = function(a, b, c)
            a = a
            return math.rad(math.random(a, b) / (c or 1))
          end
        }.RNG() * 0.35, 0, 0)
        for fbK, fbL in next, NewInstance("Model", setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw, {Name = "Halo"}):children() do
          if fbL:IsA("BasePart") then
            fbL.Color = New("Part", New("Model", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, "Core", {}), "Core2", {
              BrickColor = BrickColor.new("Really red"),
              CanCollide = false,
              Material = Enum.Material.Neon,
              FormFactor = Enum.FormFactor.Symmetric,
              Size = Vector3.new(0.349999994, 0.349999994, 1.06999981),
              CFrame = CFrame.new(-11.8130217, 33.4548035, 27.3183327, -8.05594027E-08, 8.28877091E-08, 1.00000942, 0.707106829, 0.707106829, 9.31322575E-10, -0.707110167, 0.707110226, 2.70083547E-08),
              BackSurface = Enum.SurfaceType.SmoothNoOutlines,
              BottomSurface = Enum.SurfaceType.SmoothNoOutlines,
              FrontSurface = Enum.SurfaceType.SmoothNoOutlines,
              LeftSurface = Enum.SurfaceType.SmoothNoOutlines,
              RightSurface = Enum.SurfaceType.SmoothNoOutlines,
              TopSurface = Enum.SurfaceType.SmoothNoOutlines
            }).Color
          end
        end
        setmetatable({
          ClearChildrenOfClass = function(a, b, c)
            a = a
            if c then
            end
            for fj, fk in next, a:GetDescendants() or a:GetChildren(), nil do
              if fk:IsA(b) then
                fk:destroy()
              end
            end
          end
        }, {__index = Instance}).new("TextLabel", (setmetatable({
          ClearChildrenOfClass = function(a, b, c)
            a = a
            if c then
            end
            for fj, fk in next, a:GetDescendants() or a:GetChildren(), nil do
              if fk:IsA(b) then
                fk:destroy()
              end
            end
          end
        }, {__index = Instance}).new("BillboardGui", (setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer:FindFirstChildOfClass("PlayerGui"))))).TextStrokeColor3 = {
          N = Color3.new,
          RGB = Color3.fromRGB,
          HSV = Color3.fromHSV,
          tHSV = Color3.toHSV
        }.N({
          C = math.cos,
          R = math.rad,
          S = math.sin,
          P = math.pi,
          RNG = math.random,
          MRS = math.randomseed,
          H = math.huge,
          RRNG = function(a, b, c)
            a = a
            return math.rad(math.random(a, b) / (c or 1))
          end
        }.RNG() * 0.35, 0, 0)
        setmetatable({
          ClearChildrenOfClass = function(a, b, c)
            a = a
            if c then
            end
            for fj, fk in next, a:GetDescendants() or a:GetChildren(), nil do
              if fk:IsA(b) then
                fk:destroy()
              end
            end
          end
        }, {__index = Instance}).new("TextLabel", (setmetatable({
          ClearChildrenOfClass = function(a, b, c)
            a = a
            if c then
            end
            for fj, fk in next, a:GetDescendants() or a:GetChildren(), nil do
              if fk:IsA(b) then
                fk:destroy()
              end
            end
          end
        }, {__index = Instance}).new("BillboardGui", (setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer:FindFirstChildOfClass("PlayerGui"))))).TextColor3 = {
          N = Color3.new,
          RGB = Color3.fromRGB,
          HSV = Color3.fromHSV,
          tHSV = Color3.toHSV
        }.N({
          C = math.cos,
          R = math.rad,
          S = math.sin,
          P = math.pi,
          RNG = math.random,
          MRS = math.randomseed,
          H = math.huge,
          RRNG = function(a, b, c)
            a = a
            return math.rad(math.random(a, b) / (c or 1))
          end
        }.RNG() * 0.35, 0, 0)
        pcall(function()
          va.ReaperShadowHead.Eye1.Color = vb.N(vc.RNG() * 0.35, 0, 0)
        end)
        pcall(function()
          va.ReaperShadowHead.Eye2.Color = vb.N(vc.RNG() * 0.35, 0, 0)
        end)
      elseif 1 == 6 then
        for fbZ, fbX in next, NewInstance("Model", setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw, {Name = "LeftWing"}):children() do
          if fbX:IsA("BasePart") then
            fbX.Color = fbX.Color:lerp({
              N = Color3.new,
              RGB = Color3.fromRGB,
              HSV = Color3.fromHSV,
              tHSV = Color3.toHSV
            }.HSV((0 + 1) / 360, 1, math.min(math.random() / 1000, 1)), 0.3)
          end
        end
        for fbZ, fbX in next, NewInstance("Model", setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw, {Name = "RightWing"}):children() do
          if fbX:IsA("BasePart") then
            fbX.Color = fbX.Color:lerp({
              N = Color3.new,
              RGB = Color3.fromRGB,
              HSV = Color3.fromHSV,
              tHSV = Color3.toHSV
            }.HSV((0 + 1) / 360, 1, math.min(math.random() / 1000, 1)), 0.3)
          end
        end
        for fbZ, fbX in next, NewInstance("Model", setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw, {
          Name = "LeftWingEXT"
        }):children() do
          if fbX:IsA("BasePart") then
            fbX.Color = fbX.Color:lerp({
              N = Color3.new,
              RGB = Color3.fromRGB,
              HSV = Color3.fromHSV,
              tHSV = Color3.toHSV
            }.HSV((0 + 1) / 360, 1, math.min(math.random() / 1000, 1)), 0.3)
          end
        end
        for fbZ, fbX in next, NewInstance("Model", setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw, {
          Name = "RightWingEXT"
        }):children() do
          if fbX:IsA("BasePart") then
            fbX.Color = fbX.Color:lerp({
              N = Color3.new,
              RGB = Color3.fromRGB,
              HSV = Color3.fromHSV,
              tHSV = Color3.toHSV
            }.HSV((0 + 1) / 360, 1, math.min(math.random() / 1000, 1)), 0.3)
          end
        end
        New("Part", New("Model", setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw, "Core", {}), "Core2", {
          BrickColor = BrickColor.new("Really red"),
          CanCollide = false,
          Material = Enum.Material.Neon,
          FormFactor = Enum.FormFactor.Symmetric,
          Size = Vector3.new(0.349999994, 0.349999994, 1.06999981),
          CFrame = CFrame.new(-11.8130217, 33.4548035, 27.3183327, -8.05594027E-08, 8.28877091E-08, 1.00000942, 0.707106829, 0.707106829, 9.31322575E-10, -0.707110167, 0.707110226, 2.70083547E-08),
          BackSurface = Enum.SurfaceType.SmoothNoOutlines,
          BottomSurface = Enum.SurfaceType.SmoothNoOutlines,
          FrontSurface = Enum.SurfaceType.SmoothNoOutlines,
          LeftSurface = Enum.SurfaceType.SmoothNoOutlines,
          RightSurface = Enum.SurfaceType.SmoothNoOutlines,
          TopSurface = Enum.SurfaceType.SmoothNoOutlines
        }).Color = New("Part", New("Model", setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw, "Core", {}), "Core2", {
          BrickColor = BrickColor.new("Really red"),
          CanCollide = false,
          Material = Enum.Material.Neon,
          FormFactor = Enum.FormFactor.Symmetric,
          Size = Vector3.new(0.349999994, 0.349999994, 1.06999981),
          CFrame = CFrame.new(-11.8130217, 33.4548035, 27.3183327, -8.05594027E-08, 8.28877091E-08, 1.00000942, 0.707106829, 0.707106829, 9.31322575E-10, -0.707110167, 0.707110226, 2.70083547E-08),
          BackSurface = Enum.SurfaceType.SmoothNoOutlines,
          BottomSurface = Enum.SurfaceType.SmoothNoOutlines,
          FrontSurface = Enum.SurfaceType.SmoothNoOutlines,
          LeftSurface = Enum.SurfaceType.SmoothNoOutlines,
          RightSurface = Enum.SurfaceType.SmoothNoOutlines,
          TopSurface = Enum.SurfaceType.SmoothNoOutlines
        }).Color:lerp({
          N = Color3.new,
          RGB = Color3.fromRGB,
          HSV = Color3.fromHSV,
          tHSV = Color3.toHSV
        }.HSV((0 + 1) / 360, 1, math.min(math.random() / 1000, 1)), 0.3)
        for fbZ, fbX in next, NewInstance("Model", setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw, {Name = "Halo"}):children() do
          if fbX:IsA("BasePart") then
            fbX.Color = fbX.Color:lerp({
              N = Color3.new,
              RGB = Color3.fromRGB,
              HSV = Color3.fromHSV,
              tHSV = Color3.toHSV
            }.HSV((0 + 1) / 360, 1, math.min(math.random() / 1000, 1)), 0.3)
          end
        end
        setmetatable({
          ClearChildrenOfClass = function(a, b, c)
            a = a
            if c then
            end
            for fj, fk in next, a:GetDescendants() or a:GetChildren(), nil do
              if fk:IsA(b) then
                fk:destroy()
              end
            end
          end
        }, {__index = Instance}).new("TextLabel", (setmetatable({
          ClearChildrenOfClass = function(a, b, c)
            a = a
            if c then
            end
            for fj, fk in next, a:GetDescendants() or a:GetChildren(), nil do
              if fk:IsA(b) then
                fk:destroy()
              end
            end
          end
        }, {__index = Instance}).new("BillboardGui", (setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer:FindFirstChildOfClass("PlayerGui"))))).TextStrokeColor3 = setmetatable({
          ClearChildrenOfClass = function(a, b, c)
            a = a
            if c then
            end
            for fj, fk in next, a:GetDescendants() or a:GetChildren(), nil do
              if fk:IsA(b) then
                fk:destroy()
              end
            end
          end
        }, {__index = Instance}).new("TextLabel", (setmetatable({
          ClearChildrenOfClass = function(a, b, c)
            a = a
            if c then
            end
            for fj, fk in next, a:GetDescendants() or a:GetChildren(), nil do
              if fk:IsA(b) then
                fk:destroy()
              end
            end
          end
        }, {__index = Instance}).new("BillboardGui", (setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer:FindFirstChildOfClass("PlayerGui"))))).TextStrokeColor3:lerp({
          N = Color3.new,
          RGB = Color3.fromRGB,
          HSV = Color3.fromHSV,
          tHSV = Color3.toHSV
        }.HSV((0 + 1) / 360, 1, math.min(math.random() / 500, 1)), 0.3)
        setmetatable({
          ClearChildrenOfClass = function(a, b, c)
            a = a
            if c then
            end
            for fj, fk in next, a:GetDescendants() or a:GetChildren(), nil do
              if fk:IsA(b) then
                fk:destroy()
              end
            end
          end
        }, {__index = Instance}).new("TextLabel", (setmetatable({
          ClearChildrenOfClass = function(a, b, c)
            a = a
            if c then
            end
            for fj, fk in next, a:GetDescendants() or a:GetChildren(), nil do
              if fk:IsA(b) then
                fk:destroy()
              end
            end
          end
        }, {__index = Instance}).new("BillboardGui", (setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer:FindFirstChildOfClass("PlayerGui"))))).TextColor3 = setmetatable({
          ClearChildrenOfClass = function(a, b, c)
            a = a
            if c then
            end
            for fj, fk in next, a:GetDescendants() or a:GetChildren(), nil do
              if fk:IsA(b) then
                fk:destroy()
              end
            end
          end
        }, {__index = Instance}).new("TextLabel", (setmetatable({
          ClearChildrenOfClass = function(a, b, c)
            a = a
            if c then
            end
            for fj, fk in next, a:GetDescendants() or a:GetChildren(), nil do
              if fk:IsA(b) then
                fk:destroy()
              end
            end
          end
        }, {__index = Instance}).new("BillboardGui", (setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer:FindFirstChildOfClass("PlayerGui"))))).TextColor3:lerp({
          N = Color3.new,
          RGB = Color3.fromRGB,
          HSV = Color3.fromHSV,
          tHSV = Color3.toHSV
        }.HSV((0 + 1) / 360, 1, math.min(math.random() / 500, 1)), 0.3)
        pcall(function()
          va.ReaperShadowHead.Eye1.Color = va.ReaperShadowHead.Eye1.Color:lerp(vb, 0.3)
        end)
        pcall(function()
          va.ReaperShadowHead.Eye2.Color = va.ReaperShadowHead.Eye2.Color:lerp(vb, 0.3)
        end)
      end
      {}[1].C0 = {}[1].C0:lerp({
        N = CFrame.new,
        A = CFrame.Angles,
        fEA = CFrame.fromEulerAnglesXYZ
      }.N(0, 0, 2.25) * {
        N = CFrame.new,
        A = CFrame.Angles,
        fEA = CFrame.fromEulerAnglesXYZ
      }.A(0, {
        C = math.cos,
        R = math.rad,
        S = math.sin,
        P = math.pi,
        RNG = math.random,
        MRS = math.randomseed,
        H = math.huge,
        RRNG = function(a, b, c)
          a = a
          return math.rad(math.random(a, b) / (c or 1))
        end
      }.R(-90), 0) * {
        N = CFrame.new,
        A = CFrame.Angles,
        fEA = CFrame.fromEulerAnglesXYZ
      }.A({
        C = math.cos,
        R = math.rad,
        S = math.sin,
        P = math.pi,
        RNG = math.random,
        MRS = math.randomseed,
        H = math.huge,
        RRNG = function(a, b, c)
          a = a
          return math.rad(math.random(a, b) / (c or 1))
        end
      }.R(5 + 10 * {
        C = math.cos,
        R = math.rad,
        S = math.sin,
        P = math.pi,
        RNG = math.random,
        MRS = math.randomseed,
        H = math.huge,
        RRNG = function(a, b, c)
          a = a
          return math.rad(math.random(a, b) / (c or 1))
        end
      }.C((0 + 1) / 32)), 0, {
        C = math.cos,
        R = math.rad,
        S = math.sin,
        P = math.pi,
        RNG = math.random,
        MRS = math.randomseed,
        H = math.huge,
        RRNG = function(a, b, c)
          a = a
          return math.rad(math.random(a, b) / (c or 1))
        end
      }.R(12.5 + 5 * {
        C = math.cos,
        R = math.rad,
        S = math.sin,
        P = math.pi,
        RNG = math.random,
        MRS = math.randomseed,
        H = math.huge,
        RRNG = function(a, b, c)
          a = a
          return math.rad(math.random(a, b) / (c or 1))
        end
      }.C((0 + 1) / 32))), 0.1)
      {}[2].C0 = {}[2].C0:lerp({
        N = CFrame.new,
        A = CFrame.Angles,
        fEA = CFrame.fromEulerAnglesXYZ
      }.N(0, 1, 3.5) * {
        N = CFrame.new,
        A = CFrame.Angles,
        fEA = CFrame.fromEulerAnglesXYZ
      }.A(0, {
        C = math.cos,
        R = math.rad,
        S = math.sin,
        P = math.pi,
        RNG = math.random,
        MRS = math.randomseed,
        H = math.huge,
        RRNG = function(a, b, c)
          a = a
          return math.rad(math.random(a, b) / (c or 1))
        end
      }.R(-90), 0) * {
        N = CFrame.new,
        A = CFrame.Angles,
        fEA = CFrame.fromEulerAnglesXYZ
      }.A({
        C = math.cos,
        R = math.rad,
        S = math.sin,
        P = math.pi,
        RNG = math.random,
        MRS = math.randomseed,
        H = math.huge,
        RRNG = function(a, b, c)
          a = a
          return math.rad(math.random(a, b) / (c or 1))
        end
      }.R(10 + 15 * {
        C = math.cos,
        R = math.rad,
        S = math.sin,
        P = math.pi,
        RNG = math.random,
        MRS = math.randomseed,
        H = math.huge,
        RRNG = function(a, b, c)
          a = a
          return math.rad(math.random(a, b) / (c or 1))
        end
      }.C((0 + 1) / 32)), 0, {
        C = math.cos,
        R = math.rad,
        S = math.sin,
        P = math.pi,
        RNG = math.random,
        MRS = math.randomseed,
        H = math.huge,
        RRNG = function(a, b, c)
          a = a
          return math.rad(math.random(a, b) / (c or 1))
        end
      }.R(25 + 7.5 * {
        C = math.cos,
        R = math.rad,
        S = math.sin,
        P = math.pi,
        RNG = math.random,
        MRS = math.randomseed,
        H = math.huge,
        RRNG = function(a, b, c)
          a = a
          return math.rad(math.random(a, b) / (c or 1))
        end
      }.C((0 + 1) / 32))), 0.1)
      {}[3].C0 = {}[3].C0:lerp({
        N = CFrame.new,
        A = CFrame.Angles,
        fEA = CFrame.fromEulerAnglesXYZ
      }.N(0, 2, 4.5) * {
        N = CFrame.new,
        A = CFrame.Angles,
        fEA = CFrame.fromEulerAnglesXYZ
      }.A(0, {
        C = math.cos,
        R = math.rad,
        S = math.sin,
        P = math.pi,
        RNG = math.random,
        MRS = math.randomseed,
        H = math.huge,
        RRNG = function(a, b, c)
          a = a
          return math.rad(math.random(a, b) / (c or 1))
        end
      }.R(-90), 0) * {
        N = CFrame.new,
        A = CFrame.Angles,
        fEA = CFrame.fromEulerAnglesXYZ
      }.A({
        C = math.cos,
        R = math.rad,
        S = math.sin,
        P = math.pi,
        RNG = math.random,
        MRS = math.randomseed,
        H = math.huge,
        RRNG = function(a, b, c)
          a = a
          return math.rad(math.random(a, b) / (c or 1))
        end
      }.R(15 + 20 * {
        C = math.cos,
        R = math.rad,
        S = math.sin,
        P = math.pi,
        RNG = math.random,
        MRS = math.randomseed,
        H = math.huge,
        RRNG = function(a, b, c)
          a = a
          return math.rad(math.random(a, b) / (c or 1))
        end
      }.C((0 + 1) / 32)), 0, {
        C = math.cos,
        R = math.rad,
        S = math.sin,
        P = math.pi,
        RNG = math.random,
        MRS = math.randomseed,
        H = math.huge,
        RRNG = function(a, b, c)
          a = a
          return math.rad(math.random(a, b) / (c or 1))
        end
      }.R(37.5 + 10 * {
        C = math.cos,
        R = math.rad,
        S = math.sin,
        P = math.pi,
        RNG = math.random,
        MRS = math.randomseed,
        H = math.huge,
        RRNG = function(a, b, c)
          a = a
          return math.rad(math.random(a, b) / (c or 1))
        end
      }.C((0 + 1) / 32))), 0.1)
      {}[4].C0 = {}[4].C0:lerp({
        N = CFrame.new,
        A = CFrame.Angles,
        fEA = CFrame.fromEulerAnglesXYZ
      }.N(0, 3, 5.75) * {
        N = CFrame.new,
        A = CFrame.Angles,
        fEA = CFrame.fromEulerAnglesXYZ
      }.A(0, {
        C = math.cos,
        R = math.rad,
        S = math.sin,
        P = math.pi,
        RNG = math.random,
        MRS = math.randomseed,
        H = math.huge,
        RRNG = function(a, b, c)
          a = a
          return math.rad(math.random(a, b) / (c or 1))
        end
      }.R(-90), 0) * {
        N = CFrame.new,
        A = CFrame.Angles,
        fEA = CFrame.fromEulerAnglesXYZ
      }.A({
        C = math.cos,
        R = math.rad,
        S = math.sin,
        P = math.pi,
        RNG = math.random,
        MRS = math.randomseed,
        H = math.huge,
        RRNG = function(a, b, c)
          a = a
          return math.rad(math.random(a, b) / (c or 1))
        end
      }.R(20 + 25 * {
        C = math.cos,
        R = math.rad,
        S = math.sin,
        P = math.pi,
        RNG = math.random,
        MRS = math.randomseed,
        H = math.huge,
        RRNG = function(a, b, c)
          a = a
          return math.rad(math.random(a, b) / (c or 1))
        end
      }.C((0 + 1) / 32)), 0, {
        C = math.cos,
        R = math.rad,
        S = math.sin,
        P = math.pi,
        RNG = math.random,
        MRS = math.randomseed,
        H = math.huge,
        RRNG = function(a, b, c)
          a = a
          return math.rad(math.random(a, b) / (c or 1))
        end
      }.R(50 + 12.5 * {
        C = math.cos,
        R = math.rad,
        S = math.sin,
        P = math.pi,
        RNG = math.random,
        MRS = math.randomseed,
        H = math.huge,
        RRNG = function(a, b, c)
          a = a
          return math.rad(math.random(a, b) / (c or 1))
        end
      }.C((0 + 1) / 32))), 0.1)
      {}[5].C0 = {}[5].C0:lerp({
        N = CFrame.new,
        A = CFrame.Angles,
        fEA = CFrame.fromEulerAnglesXYZ
      }.N(0, 4, 6.75) * {
        N = CFrame.new,
        A = CFrame.Angles,
        fEA = CFrame.fromEulerAnglesXYZ
      }.A(0, {
        C = math.cos,
        R = math.rad,
        S = math.sin,
        P = math.pi,
        RNG = math.random,
        MRS = math.randomseed,
        H = math.huge,
        RRNG = function(a, b, c)
          a = a
          return math.rad(math.random(a, b) / (c or 1))
        end
      }.R(-90), 0) * {
        N = CFrame.new,
        A = CFrame.Angles,
        fEA = CFrame.fromEulerAnglesXYZ
      }.A({
        C = math.cos,
        R = math.rad,
        S = math.sin,
        P = math.pi,
        RNG = math.random,
        MRS = math.randomseed,
        H = math.huge,
        RRNG = function(a, b, c)
          a = a
          return math.rad(math.random(a, b) / (c or 1))
        end
      }.R(25 + 30 * {
        C = math.cos,
        R = math.rad,
        S = math.sin,
        P = math.pi,
        RNG = math.random,
        MRS = math.randomseed,
        H = math.huge,
        RRNG = function(a, b, c)
          a = a
          return math.rad(math.random(a, b) / (c or 1))
        end
      }.C((0 + 1) / 32)), 0, {
        C = math.cos,
        R = math.rad,
        S = math.sin,
        P = math.pi,
        RNG = math.random,
        MRS = math.randomseed,
        H = math.huge,
        RRNG = function(a, b, c)
          a = a
          return math.rad(math.random(a, b) / (c or 1))
        end
      }.R(62.5 + 15 * {
        C = math.cos,
        R = math.rad,
        S = math.sin,
        P = math.pi,
        RNG = math.random,
        MRS = math.randomseed,
        H = math.huge,
        RRNG = function(a, b, c)
          a = a
          return math.rad(math.random(a, b) / (c or 1))
        end
      }.C((0 + 1) / 32))), 0.1)
      {}[6].C0 = {}[6].C0:lerp({
        N = CFrame.new,
        A = CFrame.Angles,
        fEA = CFrame.fromEulerAnglesXYZ
      }.N(0, 5, 7.75) * {
        N = CFrame.new,
        A = CFrame.Angles,
        fEA = CFrame.fromEulerAnglesXYZ
      }.A(0, {
        C = math.cos,
        R = math.rad,
        S = math.sin,
        P = math.pi,
        RNG = math.random,
        MRS = math.randomseed,
        H = math.huge,
        RRNG = function(a, b, c)
          a = a
          return math.rad(math.random(a, b) / (c or 1))
        end
      }.R(-90), 0) * {
        N = CFrame.new,
        A = CFrame.Angles,
        fEA = CFrame.fromEulerAnglesXYZ
      }.A({
        C = math.cos,
        R = math.rad,
        S = math.sin,
        P = math.pi,
        RNG = math.random,
        MRS = math.randomseed,
        H = math.huge,
        RRNG = function(a, b, c)
          a = a
          return math.rad(math.random(a, b) / (c or 1))
        end
      }.R(35 + 40 * {
        C = math.cos,
        R = math.rad,
        S = math.sin,
        P = math.pi,
        RNG = math.random,
        MRS = math.randomseed,
        H = math.huge,
        RRNG = function(a, b, c)
          a = a
          return math.rad(math.random(a, b) / (c or 1))
        end
      }.C((0 + 1) / 32)), 0, {
        C = math.cos,
        R = math.rad,
        S = math.sin,
        P = math.pi,
        RNG = math.random,
        MRS = math.randomseed,
        H = math.huge,
        RRNG = function(a, b, c)
          a = a
          return math.rad(math.random(a, b) / (c or 1))
        end
      }.R(75 + 17.5 * {
        C = math.cos,
        R = math.rad,
        S = math.sin,
        P = math.pi,
        RNG = math.random,
        MRS = math.randomseed,
        H = math.huge,
        RRNG = function(a, b, c)
          a = a
          return math.rad(math.random(a, b) / (c or 1))
        end
      }.C((0 + 1) / 32))), 0.1)
      {}[1].C0 = {}[1].C0:lerp({
        N = CFrame.new,
        A = CFrame.Angles,
        fEA = CFrame.fromEulerAnglesXYZ
      }.N(0, 0, -2.25) * {
        N = CFrame.new,
        A = CFrame.Angles,
        fEA = CFrame.fromEulerAnglesXYZ
      }.A(0, {
        C = math.cos,
        R = math.rad,
        S = math.sin,
        P = math.pi,
        RNG = math.random,
        MRS = math.randomseed,
        H = math.huge,
        RRNG = function(a, b, c)
          a = a
          return math.rad(math.random(a, b) / (c or 1))
        end
      }.R(-90), 0) * {
        N = CFrame.new,
        A = CFrame.Angles,
        fEA = CFrame.fromEulerAnglesXYZ
      }.A({
        C = math.cos,
        R = math.rad,
        S = math.sin,
        P = math.pi,
        RNG = math.random,
        MRS = math.randomseed,
        H = math.huge,
        RRNG = function(a, b, c)
          a = a
          return math.rad(math.random(a, b) / (c or 1))
        end
      }.R(5 + 10 * {
        C = math.cos,
        R = math.rad,
        S = math.sin,
        P = math.pi,
        RNG = math.random,
        MRS = math.randomseed,
        H = math.huge,
        RRNG = function(a, b, c)
          a = a
          return math.rad(math.random(a, b) / (c or 1))
        end
      }.C((0 + 1) / 32)), 0, -{
        C = math.cos,
        R = math.rad,
        S = math.sin,
        P = math.pi,
        RNG = math.random,
        MRS = math.randomseed,
        H = math.huge,
        RRNG = function(a, b, c)
          a = a
          return math.rad(math.random(a, b) / (c or 1))
        end
      }.R(12.5 + 5 * {
        C = math.cos,
        R = math.rad,
        S = math.sin,
        P = math.pi,
        RNG = math.random,
        MRS = math.randomseed,
        H = math.huge,
        RRNG = function(a, b, c)
          a = a
          return math.rad(math.random(a, b) / (c or 1))
        end
      }.C((0 + 1) / 32))), 0.1)
      {}[2].C0 = {}[2].C0:lerp({
        N = CFrame.new,
        A = CFrame.Angles,
        fEA = CFrame.fromEulerAnglesXYZ
      }.N(0, 1, -3.5) * {
        N = CFrame.new,
        A = CFrame.Angles,
        fEA = CFrame.fromEulerAnglesXYZ
      }.A(0, {
        C = math.cos,
        R = math.rad,
        S = math.sin,
        P = math.pi,
        RNG = math.random,
        MRS = math.randomseed,
        H = math.huge,
        RRNG = function(a, b, c)
          a = a
          return math.rad(math.random(a, b) / (c or 1))
        end
      }.R(-90), 0) * {
        N = CFrame.new,
        A = CFrame.Angles,
        fEA = CFrame.fromEulerAnglesXYZ
      }.A({
        C = math.cos,
        R = math.rad,
        S = math.sin,
        P = math.pi,
        RNG = math.random,
        MRS = math.randomseed,
        H = math.huge,
        RRNG = function(a, b, c)
          a = a
          return math.rad(math.random(a, b) / (c or 1))
        end
      }.R(10 + 15 * {
        C = math.cos,
        R = math.rad,
        S = math.sin,
        P = math.pi,
        RNG = math.random,
        MRS = math.randomseed,
        H = math.huge,
        RRNG = function(a, b, c)
          a = a
          return math.rad(math.random(a, b) / (c or 1))
        end
      }.C((0 + 1) / 32)), 0, -{
        C = math.cos,
        R = math.rad,
        S = math.sin,
        P = math.pi,
        RNG = math.random,
        MRS = math.randomseed,
        H = math.huge,
        RRNG = function(a, b, c)
          a = a
          return math.rad(math.random(a, b) / (c or 1))
        end
      }.R(25 + 7.5 * {
        C = math.cos,
        R = math.rad,
        S = math.sin,
        P = math.pi,
        RNG = math.random,
        MRS = math.randomseed,
        H = math.huge,
        RRNG = function(a, b, c)
          a = a
          return math.rad(math.random(a, b) / (c or 1))
        end
      }.C((0 + 1) / 32))), 0.1)
      {}[3].C0 = {}[3].C0:lerp({
        N = CFrame.new,
        A = CFrame.Angles,
        fEA = CFrame.fromEulerAnglesXYZ
      }.N(0, 2, -4.5) * {
        N = CFrame.new,
        A = CFrame.Angles,
        fEA = CFrame.fromEulerAnglesXYZ
      }.A(0, {
        C = math.cos,
        R = math.rad,
        S = math.sin,
        P = math.pi,
        RNG = math.random,
        MRS = math.randomseed,
        H = math.huge,
        RRNG = function(a, b, c)
          a = a
          return math.rad(math.random(a, b) / (c or 1))
        end
      }.R(-90), 0) * {
        N = CFrame.new,
        A = CFrame.Angles,
        fEA = CFrame.fromEulerAnglesXYZ
      }.A({
        C = math.cos,
        R = math.rad,
        S = math.sin,
        P = math.pi,
        RNG = math.random,
        MRS = math.randomseed,
        H = math.huge,
        RRNG = function(a, b, c)
          a = a
          return math.rad(math.random(a, b) / (c or 1))
        end
      }.R(15 + 20 * {
        C = math.cos,
        R = math.rad,
        S = math.sin,
        P = math.pi,
        RNG = math.random,
        MRS = math.randomseed,
        H = math.huge,
        RRNG = function(a, b, c)
          a = a
          return math.rad(math.random(a, b) / (c or 1))
        end
      }.C((0 + 1) / 32)), 0, -{
        C = math.cos,
        R = math.rad,
        S = math.sin,
        P = math.pi,
        RNG = math.random,
        MRS = math.randomseed,
        H = math.huge,
        RRNG = function(a, b, c)
          a = a
          return math.rad(math.random(a, b) / (c or 1))
        end
      }.R(37.5 + 10 * {
        C = math.cos,
        R = math.rad,
        S = math.sin,
        P = math.pi,
        RNG = math.random,
        MRS = math.randomseed,
        H = math.huge,
        RRNG = function(a, b, c)
          a = a
          return math.rad(math.random(a, b) / (c or 1))
        end
      }.C((0 + 1) / 32))), 0.1)
      {}[4].C0 = {}[4].C0:lerp({
        N = CFrame.new,
        A = CFrame.Angles,
        fEA = CFrame.fromEulerAnglesXYZ
      }.N(0, 3, -5.75) * {
        N = CFrame.new,
        A = CFrame.Angles,
        fEA = CFrame.fromEulerAnglesXYZ
      }.A(0, {
        C = math.cos,
        R = math.rad,
        S = math.sin,
        P = math.pi,
        RNG = math.random,
        MRS = math.randomseed,
        H = math.huge,
        RRNG = function(a, b, c)
          a = a
          return math.rad(math.random(a, b) / (c or 1))
        end
      }.R(-90), 0) * {
        N = CFrame.new,
        A = CFrame.Angles,
        fEA = CFrame.fromEulerAnglesXYZ
      }.A({
        C = math.cos,
        R = math.rad,
        S = math.sin,
        P = math.pi,
        RNG = math.random,
        MRS = math.randomseed,
        H = math.huge,
        RRNG = function(a, b, c)
          a = a
          return math.rad(math.random(a, b) / (c or 1))
        end
      }.R(20 + 25 * {
        C = math.cos,
        R = math.rad,
        S = math.sin,
        P = math.pi,
        RNG = math.random,
        MRS = math.randomseed,
        H = math.huge,
        RRNG = function(a, b, c)
          a = a
          return math.rad(math.random(a, b) / (c or 1))
        end
      }.C((0 + 1) / 32)), 0, -{
        C = math.cos,
        R = math.rad,
        S = math.sin,
        P = math.pi,
        RNG = math.random,
        MRS = math.randomseed,
        H = math.huge,
        RRNG = function(a, b, c)
          a = a
          return math.rad(math.random(a, b) / (c or 1))
        end
      }.R(50 + 12.5 * {
        C = math.cos,
        R = math.rad,
        S = math.sin,
        P = math.pi,
        RNG = math.random,
        MRS = math.randomseed,
        H = math.huge,
        RRNG = function(a, b, c)
          a = a
          return math.rad(math.random(a, b) / (c or 1))
        end
      }.C((0 + 1) / 32))), 0.1)
      {}[5].C0 = {}[5].C0:lerp({
        N = CFrame.new,
        A = CFrame.Angles,
        fEA = CFrame.fromEulerAnglesXYZ
      }.N(0, 4, -6.75) * {
        N = CFrame.new,
        A = CFrame.Angles,
        fEA = CFrame.fromEulerAnglesXYZ
      }.A(0, {
        C = math.cos,
        R = math.rad,
        S = math.sin,
        P = math.pi,
        RNG = math.random,
        MRS = math.randomseed,
        H = math.huge,
        RRNG = function(a, b, c)
          a = a
          return math.rad(math.random(a, b) / (c or 1))
        end
      }.R(-90), 0) * {
        N = CFrame.new,
        A = CFrame.Angles,
        fEA = CFrame.fromEulerAnglesXYZ
      }.A({
        C = math.cos,
        R = math.rad,
        S = math.sin,
        P = math.pi,
        RNG = math.random,
        MRS = math.randomseed,
        H = math.huge,
        RRNG = function(a, b, c)
          a = a
          return math.rad(math.random(a, b) / (c or 1))
        end
      }.R(25 + 30 * {
        C = math.cos,
        R = math.rad,
        S = math.sin,
        P = math.pi,
        RNG = math.random,
        MRS = math.randomseed,
        H = math.huge,
        RRNG = function(a, b, c)
          a = a
          return math.rad(math.random(a, b) / (c or 1))
        end
      }.C((0 + 1) / 32)), 0, -{
        C = math.cos,
        R = math.rad,
        S = math.sin,
        P = math.pi,
        RNG = math.random,
        MRS = math.randomseed,
        H = math.huge,
        RRNG = function(a, b, c)
          a = a
          return math.rad(math.random(a, b) / (c or 1))
        end
      }.R(62.5 + 15 * {
        C = math.cos,
        R = math.rad,
        S = math.sin,
        P = math.pi,
        RNG = math.random,
        MRS = math.randomseed,
        H = math.huge,
        RRNG = function(a, b, c)
          a = a
          return math.rad(math.random(a, b) / (c or 1))
        end
      }.C((0 + 1) / 32))), 0.1)
      {}[6].C0 = {}[6].C0:lerp({
        N = CFrame.new,
        A = CFrame.Angles,
        fEA = CFrame.fromEulerAnglesXYZ
      }.N(0, 5, -7.75) * {
        N = CFrame.new,
        A = CFrame.Angles,
        fEA = CFrame.fromEulerAnglesXYZ
      }.A(0, {
        C = math.cos,
        R = math.rad,
        S = math.sin,
        P = math.pi,
        RNG = math.random,
        MRS = math.randomseed,
        H = math.huge,
        RRNG = function(a, b, c)
          a = a
          return math.rad(math.random(a, b) / (c or 1))
        end
      }.R(-90), 0) * {
        N = CFrame.new,
        A = CFrame.Angles,
        fEA = CFrame.fromEulerAnglesXYZ
      }.A({
        C = math.cos,
        R = math.rad,
        S = math.sin,
        P = math.pi,
        RNG = math.random,
        MRS = math.randomseed,
        H = math.huge,
        RRNG = function(a, b, c)
          a = a
          return math.rad(math.random(a, b) / (c or 1))
        end
      }.R(35 + 40 * {
        C = math.cos,
        R = math.rad,
        S = math.sin,
        P = math.pi,
        RNG = math.random,
        MRS = math.randomseed,
        H = math.huge,
        RRNG = function(a, b, c)
          a = a
          return math.rad(math.random(a, b) / (c or 1))
        end
      }.C((0 + 1) / 32)), 0, -{
        C = math.cos,
        R = math.rad,
        S = math.sin,
        P = math.pi,
        RNG = math.random,
        MRS = math.randomseed,
        H = math.huge,
        RRNG = function(a, b, c)
          a = a
          return math.rad(math.random(a, b) / (c or 1))
        end
      }.R(75 + 17.5 * {
        C = math.cos,
        R = math.rad,
        S = math.sin,
        P = math.pi,
        RNG = math.random,
        MRS = math.randomseed,
        H = math.huge,
        RRNG = function(a, b, c)
          a = a
          return math.rad(math.random(a, b) / (c or 1))
        end
      }.C((0 + 1) / 32))), 0.1)
      if not "Paralyzed" then
        if not "Sit" then
          if not "Fall" then
            if not "Jump" then
              if workspace:FindPartOnRay(Ray.new(setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").CFrame.p, CFrame.new(setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").Position, setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").Position - Vector3.new(0, 1, 0)).lookVector.unit * (4 * 1)), setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw) and (math.abs(setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").Velocity.x) >= 1 or math.abs(setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").Velocity.z) >= 1) then
              end
            end
          end
        end
      end
      if Instance.new("Folder", setmetatable({}, {
        __index = function(a, b)
          a = a
          return game:service(b)
        end
      }).Players.LocalPlayer.Character.Raw) then
      end
      if not Instance.new("Folder", setmetatable({}, {
        __index = function(a, b)
          a = a
          return game:service(b)
        end
      }).Players.LocalPlayer.Character.Raw).Parent then
        Instance.new("Model", setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw).Name = "Effects"
      end
      if ("Walk" or "Run" or workspace:FindPartOnRay(Ray.new(setmetatable({}, {
        __index = function(a, b)
          a = a
          return game:service(b)
        end
      }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").CFrame.p, CFrame.new(setmetatable({}, {
        __index = function(a, b)
          a = a
          return game:service(b)
        end
      }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").Position, setmetatable({}, {
        __index = function(a, b)
          a = a
          return game:service(b)
        end
      }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").Position - Vector3.new(0, 1, 0)).lookVector.unit * (4 * 1)), setmetatable({}, {
        __index = function(a, b)
          a = a
          return game:service(b)
        end
      }).Players.LocalPlayer.Character.Raw) or "Idle") == "Run" and 1 ~= 5 and 1 ~= 10 and 1 ~= 666666666666 and 1 ~= 666 then
      else
        if ("Walk" or "Run" or workspace:FindPartOnRay(Ray.new(setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").CFrame.p, CFrame.new(setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").Position, setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").Position - Vector3.new(0, 1, 0)).lookVector.unit * (4 * 1)), setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw) or "Idle") == "Walk" and 1 ~= 5 and 1 ~= 10 and 1 ~= 666666666666 and 1 ~= 666 then
          if 1 == 7 then
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C1 = NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C1:lerp({
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1 - 0.05 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / (7 / (setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16))), 0 + 0.1 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / (7 / (setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16)))) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A({
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(8 - 0 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / (7 / (setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16)))) + -{
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.S((0 + 1) / (7 / (setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16))) / 3, 0, 0), (math.min(0.2 * (setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16), 1)))
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C1 = NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C1:lerp({
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1 + 0.05 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / (7 / (setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16))), 0 - 0.1 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / (7 / (setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16)))) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A({
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(8 + 0 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / (7 / (setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16)))) + {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.S((0 + 1) / (7 / (setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16))) / 3, 0, 0), (math.min(0.2 * (setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16), 1)))
            break
          end
          NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Right Leg"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0.5 * 1, -1 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1 * 1, 0)
          }).C1 = NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Right Leg"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0.5 * 1, -1 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1 * 1, 0)
          }).C1:lerp({
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.N(0, 1 - 0.1 * {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.C((0 + 1) / (7 / (setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16))), 0 + 0.2 * {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.C((0 + 1) / (7 / (setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16)))) * {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.A({
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(16 - 0 * {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.C((0 + 1) / (7 / (setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16)))) + -{
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.S((0 + 1) / (7 / (setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16))) / 1.75, 0, 0), (math.min(0.2 * (setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16), 1)))
          NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Left Leg"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(-0.5 * 1, -1 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1 * 1, 0)
          }).C1 = NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Left Leg"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(-0.5 * 1, -1 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1 * 1, 0)
          }).C1:lerp({
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.N(0, 1 + 0.1 * {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.C((0 + 1) / (7 / (setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16))), 0 - 0.2 * {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.C((0 + 1) / (7 / (setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16)))) * {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.A({
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(16 + 0 * {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.C((0 + 1) / (7 / (setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16)))) + {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.S((0 + 1) / (7 / (setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16))) / 1.75, 0, 0), (math.min(0.2 * (setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16), 1)))
          break
        end
        NewInstance("Motor", setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw, {
          Part0 = setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw.Torso,
          Part1 = setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw["Right Leg"],
          C0 = {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.N(0.5 * 1, -1 * 1, 0),
          C1 = {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.N(0, 1 * 1, 0)
        }).C1 = NewInstance("Motor", setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw, {
          Part0 = setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw.Torso,
          Part1 = setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw["Right Leg"],
          C0 = {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.N(0.5 * 1, -1 * 1, 0),
          C1 = {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.N(0, 1 * 1, 0)
        }).C1:lerp({
          N = CFrame.new,
          A = CFrame.Angles,
          fEA = CFrame.fromEulerAnglesXYZ
        }.N(0, 1, 0), 0.2)
        NewInstance("Motor", setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw, {
          Part0 = setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw.Torso,
          Part1 = setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw["Left Leg"],
          C0 = {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.N(-0.5 * 1, -1 * 1, 0),
          C1 = {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.N(0, 1 * 1, 0)
        }).C1 = NewInstance("Motor", setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw, {
          Part0 = setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw.Torso,
          Part1 = setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw["Left Leg"],
          C0 = {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.N(-0.5 * 1, -1 * 1, 0),
          C1 = {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.N(0, 1 * 1, 0)
        }).C1:lerp({
          N = CFrame.new,
          A = CFrame.Angles,
          fEA = CFrame.fromEulerAnglesXYZ
        }.N(0, 1, 0), 0.2)
      end
      if 0 > 0 then
      end
      setmetatable({}, {
        __index = function(a, b)
          a = a
          return game:service(b)
        end
      }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed = 16
      if true then
        if ("Walk" or "Run" or workspace:FindPartOnRay(Ray.new(setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").CFrame.p, CFrame.new(setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").Position, setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").Position - Vector3.new(0, 1, 0)).lookVector.unit * (4 * 1)), setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw) or "Idle") == "Idle" then
          if 1 == 1 then
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart"),
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart"),
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso
            }).C0, CFrame.new(-0.00779043138, -0.0846293643 + 0.1 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 32), -0.204210758, 0.912902117, -0.00691865245, -0.408120036, 0.117574908, 0.961935759, 0.246689886, 0.390878439, -0.273188382, 0.87896657), 0.1)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0, CFrame.new(-0.587742627, -1.00122428 - 0.1 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 32), -0.165018916, 0.860076427, 0.294745922, 0.416405559, -0.252913684, 0.955196917, -0.15373303, -0.443061411, 0.0269074962, 0.896087468), 0.1)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0, CFrame.new(0.343915284, -1.07833397 - 0.1 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 32), -0.0402937233, 0.964631855, -0.173768938, -0.198217094, 0.117325157, 0.956397653, -0.26746732, 0.236051857, 0.234751642, 0.942958832), 0.1)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0, CFrame.new(-1.39700282, 0.545769572, -0.00181379914, 0.907886505, 0.355485201, -0.222199559, -0.405204862, 0.880023003, -0.247727305, 0.107477367, 0.314944565, 0.943005204) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A(0, {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(16 - 8 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 32)), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 12 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 32))) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A(0, {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 4 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 0.173278)), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 15 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.S((0 + 1) / 0.476125))), 0.1)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0, CFrame.new(0.903979659, 0.624733686, -0.396169931, 0.827836394, 0.560810268, -0.013374418, 0.472599089, -0.7100721, -0.521965444, -0.302220345, 0.42578119, -0.852861941) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A(0, {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 4 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 0.61237)), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 15 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.S((0 + 1) / 0.716246))), 0.1)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Head,
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1.5 * 1, 0)
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Head,
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1.5 * 1, 0)
            }).C0, CFrame.new(-0.0470906645, 1.53467083, -0.115898043, 0.906688511, -0.16142872, 0.389688164, -0.00265284558, 0.921666741, 0.387973785, -0.421792656, -0.352805078, 0.835236311) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A(0, {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 4 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 0.61237)), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 15 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.S((0 + 1) / 0.716246))), 0.1)
          elseif 1 == 2 then
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart"),
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart"),
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso
            }).C0, CFrame.new(2.74447132E-13, 0.00628674868 + 0.1 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 32), -5.34626452E-07, 0.99999994, 4.36557457E-11, 0, -4.3652193E-11, 0.999980211, -0.00628619269, 9.31322575E-10, 0.00628619175, 0.999980271), 0.1)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0, CFrame.new(-0.496485978, -0.990816116 - 0.1 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 32), 0.0216165781, 0.970629156, 7.27576055E-11, 0.240580648, -0.00151285366, 0.999980211, 0.00610364834, -0.240575925, -0.00628834311, 0.970610023), 0.1)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0, CFrame.new(0.491330802, -1.06821454 - 0.1 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 32), 0.0589520633, 0.986244023, 0.0538565964, -0.156276181, 0.00103943795, 0.943392873, 0.331676066, 0.165292785, -0.327276021, 0.930359602), 0.1)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0, CFrame.new(-0.787155986, 0.248306945, -0.683226228, 0.0398273654, -0.999169707, 0.00859495346, 0.554963291, 0.0149663882, -0.831740201, 0.830920994, 0.0378959104, 0.555098593) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A({
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 5 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 32)), 0, 0), 0.1)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0, CFrame.new(0.787632346, 0.574486911, -0.794373989, 0.0789790228, 0.995851278, 0.0451963581, 0.631366551, -0.0148838377, -0.775341749, -0.771452367, 0.0897712111, -0.629922688) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A({
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 5 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 32)), 0, 0), 0.1)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Head,
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1.5 * 1, 0)
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Head,
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1.5 * 1, 0)
            }).C0, CFrame.new(8.16642296E-06, 1.49894726, -0.014402397, 0.99999994, 3.67523171E-07, -1.61118805E-07, -3.56500095E-07, 0.997964799, 0.0637688041, 1.8440187E-07, -0.063768819, 0.997964799), 0.1)
          elseif 1 == 3 then
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart"),
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart"),
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso
            }).C0, CFrame.new(0.022457514, 0.0062841149, -0.00324006379, 0.982301593, 0.00117789698, 0.187302738, -4.02951969E-07, 0.999980211, -0.00628649723, -0.187306449, 0.00617515948, 0.982282162), 0.1)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0, CFrame.new(-0.539962769, -1.00525093, -0.13583532, 0.998935044, -0.0434875898, 0.0154168755, 0.040365234, 0.985544145, 0.164539278, -0.0223494321, -0.163741738, 0.986250162), 0.1)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0, CFrame.new(0.498531163, -0.990978718, 0.01546143, 0.985106111, 0, -0.171948016, 0.00108131359, 0.999980211, 0.00619494682, 0.171944603, -0.00628860993, 0.98508662), 0.1)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0, CFrame.new(-1.42806315, 0.51039964, -0.00658199936, 0.990103781, 0.139778674, -0.0125195384, -0.139578417, 0.97154665, -0.191350713, -0.0145834237, 0.191204533, 0.981441915) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A(0, 0, {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 6 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 32))) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A(0, {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 4 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 0.61237)), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 15 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.S((0 + 1) / 0.716246))), 0.1)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0, CFrame.new(1.42666709, 0.532186806, -0.134510398, 0.990944147, -0.126525059, 0.0449620783, 0.133282125, 0.967499852, -0.214895189, -0.0163111985, 0.218941733, 0.975601614) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A(0, 0, {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 - 6 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 32))) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A(0, {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 4 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 0.012802)), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 - 15 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.S((0 + 1) / 0.716246))), 0.1)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Head,
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1.5 * 1, 0)
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Head,
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1.5 * 1, 0)
            }).C0, CFrame.new(2.28285789E-05, 1.49894154, -0.0143941939, 0.984171331, -0.0497024879, -0.170107797, 0.0760453045, 0.985445082, 0.152036116, 0.160075322, -0.162565485, 0.973626494) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A({
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 3 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 32)), 0, {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 6 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 32))) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A(0, {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 16 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 0.98172)), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 15 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.S((0 + 1) / 0.65142))), 0.1)
          elseif 1 == 4 then
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart"),
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart"),
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso
            }).C0, CFrame.new(-0.00847404078, -0.131645858 + 0.1 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 16), -0.542845488, 0.999965072, -0.00807052851, -0.00218774565, 0.00805599708, 0.85972774, 0.510689199, -0.00224066619, -0.51068902, 0.859762609), 0.1)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0, CFrame.new(-0.496114701, -1.0144912 - 0.1 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 16), 0.0453964472, 0.976583362, 0.00805600174, 0.214989081, 0.103035107, 0.859728813, -0.50025022, -0.188862324, 0.510687351, 0.838766694), 0.1)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0, CFrame.new(0.498885572, -1.01948476 - 0.1 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 16), 0.0378640294, 0.997592449, 0.00805600174, -0.0688822865, -0.0420893468, 0.859728813, -0.509013772, 0.055119466, 0.510687351, 0.857997894), 0.1)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0, CFrame.new(-1.42592692, 0.493003547, -0.129623473, 0.987043619, 0.159894824, 0.0133710029, -0.130732149, 0.849730968, -0.51075089, -0.0930281729, 0.502385318, 0.859624803) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A(0, 0, {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 6 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 32))) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A(0, {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 4 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 0.817272)), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 15 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.S((0 + 1) / 0.9872346))), 0.1)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0, CFrame.new(1.1449033, 0.691183329, -0.239056498, 0.899715602, 0.434673697, 0.0396348648, 0.435808241, -0.899650335, -0.0264700353, 0.024151668, 0.0410887003, -0.998863578) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A(0, {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 4 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 0.61237)), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 15 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.S((0 + 1) / 0.716246))), 0.1)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Head,
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1.5 * 1, 0)
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Head,
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1.5 * 1, 0)
            }).C0, CFrame.new(7.87388399E-06, 1.43020797, -0.212884247, 1, -8.72649252E-07, -4.02983278E-06, 2.92807817E-06, 0.838354766, 0.545125127, 2.90293247E-06, -0.545125067, 0.838354826) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A(0, {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 4 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 0.61237)), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 15 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.S((0 + 1) / 0.716246))), 0.1)
          elseif 1 == 5 then
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart"),
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart"),
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso
            }).C0, CFrame.new(5.48791013E-11 + 0.2 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.S((0 + 1) / 30), 1.2571125 + 0.5 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 32), -3.51015478E-06 + 0.2 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.S((0 + 1) / 32), 0.99999994, 4.36557457E-11, 0, -4.3652193E-11, 0.999980211, -0.00628619269, 9.31322575E-10, 0.00628619175, 0.999980271), 0.1)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0, CFrame.new(-0.436587602, -0.992619872, 0.0206923336, 0.99808234, 0.0599006973, 0.0156119233, -0.0600048117, 0.998178363, 0.00628757617, -0.0152068557, -0.0072123101, 0.999858439), 0.1)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0, CFrame.new(0.481217712, -0.504008591, -0.8678087, 0.997120202, -0.0733773932, -0.0191624481, 0.0741236135, 0.889526427, 0.450830936, -0.0160352942, -0.450953096, 0.892403722), 0.1)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0, CFrame.new(-1.49673307, 0.593781948 + 0.1 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 32), 0.0200225115, 0.966687799, 0.25548178, 0.0156119233, -0.255602777, 0.96676141, 0.00628757617, -0.0134866452, -0.0100685749, 0.999858439) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A(0, 0, {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 5 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 32))), 0.1)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0, CFrame.new(1.50987279, 0.675035477 + 0.1 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 32), -0.0274340063, 0.943747699, -0.330297619, 0.0156119233, 0.33023873, 0.943876505, 0.00628757617, -0.0168125015, -0.000778224785, 0.999858439) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A(0, 0, {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 - 5 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 32))), 0.1)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Head,
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1.5 * 1, 0)
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Head,
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1.5 * 1, 0)
            }).C0, CFrame.new(4.35172478E-06, 1.49894357, -0.0144011974, 0.99999994, 3.67523171E-07, -1.61118805E-07, -3.56500095E-07, 0.997964799, 0.0637688041, 1.8440187E-07, -0.063768819, 0.997964799), 0.1)
          elseif 1 == 6 then
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart"),
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart"),
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso
            }).C0, CFrame.new(2.74447132E-13, 0.00628674263 - math.random() / 3000, 4.19029675E-07, 0.99999994, 4.36557457E-11, 0, -4.3652193E-11, 0.999980211, -0.00628619269, 9.31322575E-10, 0.00628619175, 0.999980271), 0.1)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0, CFrame.new(-0.50538516, -1.00439715 + 0.2 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 16) + math.random() / 3000, -0.54824096, 0.999878109, -9.59694546E-11, 0.015612145, -9.81408521E-05, 0.999980211, 0.00628542574, -0.0156118376, -0.00628619269, 0.999858439), 0.1)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0, CFrame.new(0.498537898, -0.990978718 + math.random() / 3000, 0.0154631268, 0.999878109, -9.59694546E-11, 0.015612145, -9.81408521E-05, 0.999980211, 0.00628542574, -0.0156118376, -0.00628619269, 0.999858439), 0.1)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0, CFrame.new(-1.42332602, 0.626581013 - math.random() / 3000, -0.328449368, 0.922103286, 0.304182172, -0.239162698, -0.178854272, -0.213036552, -0.960534513, -0.343127936, 0.92848742, -0.142037436) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A(-{
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(math.random() / 36), 0, 0), 0.1)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0, CFrame.new(1.0793153, 0.434256732 - math.random() / 3000, 0.60275507, 0.650267124, 0.696277916, -0.303891033, -0.505378187, 0.695125222, 0.511267006, 0.567226231, -0.178880244, 0.803900838), 0.1)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Head,
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1.5 * 1, 0)
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Head,
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1.5 * 1, 0)
            }).C0, CFrame.new(7.8920275E-06, 1.49894428, -0.0144027323, 0.983284235, 0.010468211, -0.181776017, 0.00114496367, 0.9979707, 0.0636651218, 0.182073623, -0.0628090426, 0.981276989) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A({
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(math.random() / 36), 0, 0), 0.1)
          elseif 1 == 7 then
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart"),
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart"),
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso
            }).C0, CFrame.new(0.0101235649, -1.07766318 + 0.1 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 16), 0.648248792, 0.999971092, -0.00739747565, -0.00181146339, 0.00738599803, 0.883920729, 0.467578471, -0.00185771007, -0.467578262, 0.883949816) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A(0, {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 2 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 0.12512)), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 2 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.S((0 + 1) / 0.0512412))), 0.1)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0, CFrame.new(-0.504728794, 0.381877124 - 0.1 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 16), -0.515005529, 0.999878228, 0.00738599803, 0.0137542095, -9.66741936E-05, 0.883920729, -0.467636794, -0.0156115945, 0.467578471, 0.883813798) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A(0, -{
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 2 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 0.12512)), -{
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 2 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.S((0 + 1) / 0.0512412))) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A({
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 1 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.S((0 + 1) / 0.283547)), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 1 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 0.356723)), 0), 0.1)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0, CFrame.new(0.491205901, 0.34564203 - 0.1 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 16), -0.462503195, 0.999878228, 0.00738599803, 0.0137542095, -9.66741936E-05, 0.883920729, -0.467636794, -0.0156115945, 0.467578471, 0.883813798) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A(0, -{
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 2 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 0.12512)), -{
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 2 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.S((0 + 1) / 0.0512412))) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A({
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 1 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.S((0 + 1) / 0.283547)), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 1 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 0.356723)), 0), 0.1)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0, CFrame.new(-0.80868268, 0.497842163, -0.14479053, 0.744864702, -0.66721499, -0.00102781132, -0.0409338176, -0.0441599488, -0.998185575, 0.665959001, 0.743555188, -0.0602048337) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A(0, {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 2 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 0.134561367)), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 5 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.S((0 + 1) / 0.127347))), 0.1)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0, CFrame.new(0.754446983, 0.405229449, -0.406160057, 0.458563089, 0.88866204, -0.000157270115, 0.00361818075, -0.00204397738, -0.999991417, -0.88865459, 0.45855853, -0.00415253639) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A(0, {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 2 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 0.12543152)), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 5 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.S((0 + 1) / 0.273456123))), 0.1)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Head,
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1.5 * 1, 0)
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Head,
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1.5 * 1, 0)
            }).C0, CFrame.new(3.87876844E-06, 1.54665208, -0.105986834, 1.00000012, 2.60770321E-06, 2.79070809E-05, -1.28485262E-05, 0.927553773, 0.373690069, -2.49119475E-05, -0.373690099, 0.927553654) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A(0, {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 2 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 0.25432)), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 5 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.S((0 + 1) / 0.421342134))), 0.1)
          elseif 1 == 8 then
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart"),
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso
            }).C0 = NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart"),
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso
            }).C0:lerp({
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 0, 0) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A(0, 0, {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 5 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 16))), 0.1)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Head,
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1.5 * 1, 0)
            }).C0 = NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Head,
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1.5 * 1, 0)
            }).C0:lerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Head,
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1.5 * 1, 0)
            }).C0 * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A(0, 0, -{
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 5 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 16))), 0.1)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0 = NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0:lerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0 * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A(0, 0, -{
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 5 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 16))) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A({
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(-15), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(25), 0), 0.1)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0 = NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0:lerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0 * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A(0, 0, -{
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 5 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 16))), 0.1)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0 = NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0:lerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0 * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, -0.15, 0) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A({
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(15), 0, {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(20)), 0.1)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0 = NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0:lerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0 * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A(0, 0, {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(5 + 5 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.S((0 + 1) / 16))), 0.1)
          elseif 1 == 9 then
            if workspace:FindPartOnRay(Ray.new(setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").CFrame.p, CFrame.new(setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").Position, setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").Position - Vector3.new(0, 1, 0)).lookVector.unit * (4 * 1)), setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw) and 1 == 9 then
              OEffect({
                Material = Enum.Material.Neon,
                Effect = "Fade",
                Mesh = {
                  MeshType = Enum.MeshType.Cylinder
                },
                Size = {
                  N = Vector3.new,
                  FNI = Vector3.FromNormalId,
                  A = Vector3.FromAxis
                }.N(0.1, 5, 5),
                Frames = 120,
                Color = BrickColor.new("Forest green"),
                CFrame = {
                  N = CFrame.new,
                  A = CFrame.Angles,
                  fEA = CFrame.fromEulerAnglesXYZ
                }.N(workspace:FindPartOnRay(Ray.new(setmetatable({}, {
                  __index = function(a, b)
                    a = a
                    return game:service(b)
                  end
                }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").CFrame.p, CFrame.new(setmetatable({}, {
                  __index = function(a, b)
                    a = a
                    return game:service(b)
                  end
                }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").Position, setmetatable({}, {
                  __index = function(a, b)
                    a = a
                    return game:service(b)
                  end
                }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").Position - Vector3.new(0, 1, 0)).lookVector.unit * (4 * 1)), setmetatable({}, {
                  __index = function(a, b)
                    a = a
                    return game:service(b)
                  end
                }).Players.LocalPlayer.Character.Raw)) * {
                  N = CFrame.new,
                  A = CFrame.Angles,
                  fEA = CFrame.fromEulerAnglesXYZ
                }.A(0, {
                  C = math.cos,
                  R = math.rad,
                  S = math.sin,
                  P = math.pi,
                  RNG = math.random,
                  MRS = math.randomseed,
                  H = math.huge,
                  RRNG = function(a, b, c)
                    a = a
                    return math.rad(math.random(a, b) / (c or 1))
                  end
                }.R(90), 0)
              })
            end
            NoobyBlock(4, 0.025, "Multiply", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Left Arm"].CFrame * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, -1, 0) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A({
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.RRNG(-180, 180), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.RRNG(-180, 180), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.RRNG(-180, 180)), {
              N = Vector3.new,
              FNI = Vector3.FromNormalId,
              A = Vector3.FromAxis
            }.N(1, 1, 1), 0.012, BrickColor.new({
              "Forest green",
              "Lime green",
              "Earth green"
            }[{
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.RNG(1, #{
              "Forest green",
              "Lime green",
              "Earth green"
            })]), 0, true)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart"),
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart"),
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso
            }).C0, CFrame.new(-0.00763900485, 0.0576088727 + 0.1 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 32), -0.489215493, 0.999976635, -0.00668978505, -0.00145753659, 0.00667999825, 0.906569779, 0.422003359, -0.00150175206, -0.422003239, 0.906593204), 0.1)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0, CFrame.new(-0.508842707, -1.12272382 - 0.1 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 32), -0.0245408416, 0.973195612, 0.0299689136, 0.228018239, 0.0911211073, 0.860081792, -0.501952767, -0.211157292, 0.509275496, 0.834296942), 0.1)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0, CFrame.new(0.505672514, -1.12652683 - 0.1 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 32), -0.0664639771, 0.908796906, 0.0139010083, -0.417007297, -0.155455723, 0.938765347, -0.307495654, 0.387197405, 0.344277233, 0.855307937), 0.1)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0, CFrame.new(-1.45529008, 0.399098635 + 0.1 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 32), -0.00237059593, 0.9937765, 0.103129238, -0.0421066694, -0.0848314539, 0.45566994, -0.88609755, -0.0721958056, 0.884154797, 0.461582631) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A(0, 0, {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 - 10 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 32))) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A(0, {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 6 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 0.1872634)), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 12 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.S((0 + 1) / 0.0124723465))), 0.1)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0, CFrame.new(1.25761306, 0.482083619 + 0.1 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 32), -0.434745401, 0.42843774, 0.695737422, -0.576533496, 0.754532933, -0.626516104, -0.195340306, -0.497112989, -0.351322293, -0.793379903) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A(0, {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 6 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 0.1872634)), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 12 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.S((0 + 1) / 0.0124723465))), 0.1)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Head,
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1.5 * 1, 0)
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Head,
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1.5 * 1, 0)
            }).C0, CFrame.new(1.26473606E-05, 1.49894953, -0.0143971443, 0.998992383, 0.0431914814, 0.0122066746, -0.03513439, 0.921768486, -0.386146128, -0.0279299468, 0.385328114, 0.922357082) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A({
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 10 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 32)), 0, 0) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A(0, {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 6 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 0.1872634)), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 12 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.S((0 + 1) / 0.0124723465))), 0.1)
          elseif 1 == 10 then
            NoobyBlock(4, 0.025, "Multiply", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Left Arm"].CFrame * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, -1, 0) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A({
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.RRNG(-180, 180), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.RRNG(-180, 180), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.RRNG(-180, 180)), {
              N = Vector3.new,
              FNI = Vector3.FromNormalId,
              A = Vector3.FromAxis
            }.N(1, 1, 1), 0.012, BrickColor.new("Alder"), 0, true)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart"),
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart"),
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso
            }).C0, CFrame.new(3.20710125E-11 + 0.2 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.S((0 + 1) / 32), 0.881578624 + 0.5 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 32), -9.84873623E-07 + 0.2 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 24), 0.999999821, 3.63797881E-11, 0, -4.58300065E-11, 0.999980092, -0.00628619455, 9.31322575E-10, 0.00628619082, 0.999980509), 0.1)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0, CFrame.new(-0.507622898, -0.617543876, -0.694063663, 0.999877989, -0.00717858272, 0.0138636231, -9.81731864E-05, 0.885106385, 0.465388477, -0.0156116197, -0.465333343, 0.884998262), 0.1)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0, CFrame.new(0.499199599, -0.96504283, 0.0578122139, 0.999877989, -0.00369151891, 0.0151692061, -9.81731864E-05, 0.970136404, 0.242559701, -0.0156116197, -0.242531747, 0.970018268), 0.1)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0, CFrame.new(-1.40968728, 0.491904348, 0.019305028, 0.895423353, 0.179754242, 0.407314837, -0.16739957, 0.983670354, -0.0661047474, -0.412546366, -0.00899259746, 0.910892725) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A(0, 0, {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 10 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 32))), 0.1)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0, CFrame.new(0.648883045, 0.459784538, -0.511239171, -0.133737907, 0.979713619, 0.149248496, 0.396290839, 0.190905675, -0.898058236, -0.908332765, -0.0609586462, -0.413783163) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A({
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 4 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 32)), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 4 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 32)), 0), 0.1)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Head,
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1.5 * 1, 0)
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Head,
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1.5 * 1, 0)
            }).C0, CFrame.new(7.21290917E-06, 1.49894142, -0.0144039318, 0.999999821, 3.67581379E-07, -1.60187483E-07, -3.56500095E-07, 0.997964799, 0.0637688041, 1.8440187E-07, -0.0637688339, 0.997965097), 0.1)
          elseif 1 == 16 then
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart"),
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso
            }).C0 = NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart"),
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso
            }).C0:lerp({
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0 + 0.2 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.S((0 + 1) / 32), 1.3 - 0.5 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 32), 0 + 0.2 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 24)) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A({
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 1.5 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.S((0 + 1) / 32)), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 5 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.S((0 + 1) / 36)), 0), 0.1)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Head,
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1.5 * 1, 0)
            }).C0 = NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Head,
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1.5 * 1, 0)
            }).C0:lerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Head,
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1.5 * 1, 0)
            }).C0 * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 0, 0) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A({
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 5 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 32)), 0, 0), 0.1)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0 = NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0:lerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0 * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0.75, 0 + 0.1 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 32), -0.5) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A({
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(-25 - 5 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 32)), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(15), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(80 + 10 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 32))), 0.1)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0 = NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0:lerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0 * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(-0.5, 0 + 0.1 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 32), -0.5) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A({
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(25 + 5 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 32)), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(-15), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(-85 - 5 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 32))), 0.1)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0 = NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0:lerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0 * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 0.4, -0.5) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A({
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(-15 - 2.5 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.S((0 + 1) / 32)), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(25 - 5 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 32)), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(-5)), 0.1)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0 = NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0:lerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0 * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A({
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(-15 - 5 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 32)), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(-25), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(5)), 0.1)
          elseif 1 == 696969 then
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart"),
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart"),
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso
            }).C0, CFrame.new(-0.00497054448, 0.0384125113 + 0.1 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 32), -0.318240643, 0.999985576, -0.00531026162, -0.000893360935, 0.00530399941, 0.942669153, 0.333686858, -0.00092981942, -0.333686769, 0.942683578), 0.1)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0, CFrame.new(-0.497181207, -1.07329571 - 0.1 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 32), -0.0259589553, 0.991927385, 0.00536903273, 0.126693994, 0.0373182632, 0.942499518, -0.332117736, -0.12119215, 0.334164649, 0.934690654), 0.1)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0, CFrame.new(0.508173347, -1.05517495 - 0.1 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 32), -0.101279587, 0.989477396, 0.015710555, -0.143832386, -0.0531964861, 0.963962197, -0.260666966, 0.13455373, 0.265575409, 0.954654515), 0.1)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0, CFrame.new(-1.3136189, 0.462844551 + 0.1 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 32), 0.00274867564, 0.929629087, -0.368184805, -0.015158236, -0.360420376, -0.899919868, -0.245441884, 0.0767267719, 0.23363328, -0.969292879) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A(0, {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 4 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 0.173278)), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 15 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.S((0 + 1) / 0.01278125))), 0.1)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0, CFrame.new(1.25962329, 0.543387234 + 0.1 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 32), 0.0906403661, 0.898135066, 0.439483941, -0.0144048491, 0.399390757, -0.829028964, -0.391405523, -0.183958456, 0.345781803, -0.920105577) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A(0, {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 4 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 0.173278)), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 15 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.S((0 + 1) / 0.01278125))), 0.1)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Head,
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1.5 * 1, 0)
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Head,
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1.5 * 1, 0)
            }).C0, CFrame.new(-0.00269337045, 1.48585653, -0.187648922, 0.999991715, -0.00401760591, -0.00077160541, 0.00405273447, 0.94710511, 0.320898026, -0.000558450818, -0.320898473, 0.947113574) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A(0, {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 4 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 0.173278)), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 7.5 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.S((0 + 1) / 0.01278125))), 0.1)
          elseif 1 == 666666666666 then
            NoobySphere(4, 0.025, "Multiply", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Right Arm"].CFrame * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, -1.25, 0) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A({
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.RRNG(-180, 180), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.RRNG(-180, 180), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.RRNG(-180, 180)), {
              N = Vector3.new,
              FNI = Vector3.FromNormalId,
              A = Vector3.FromAxis
            }.N(0.5, 0.5, 0.5), 0, BrickColor.new("Black"), 0)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart"),
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart"),
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso
            }).C0, CFrame.new(7.0558559E-11, 1.61628103 + 0.5 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 32), -3.05566937E-06, 0.99999994, 4.36557457E-11, 0, -4.3652193E-11, 0.999980211, -0.00628619269, 9.31322575E-10, 0.00628619175, 0.999980271), 0.1)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0, CFrame.new(-0.473465502, -1.00430846, 0.0547358543, 0.996436775, 0.0789096355, 0.0297838245, -0.0829922184, 0.980262518, 0.179437637, -0.0150366053, -0.181270093, 0.983318448), 0.1)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0, CFrame.new(0.500664473, -0.996896267, 0.0722374618, 0.994860828, -0.10125193, 0.00038037356, 0.0999543592, 0.982697129, 0.155934408, -0.0161624532, -0.155095011, 0.987767398), 0.1)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0, CFrame.new(-1.29428089, 0.420441031, 0.493041277, 0.816086888, -0.538787425, 0.209070042, 0.381859779, 0.774240494, 0.504712522, -0.43380329, -0.33205387, 0.837588906) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A(0, 0, {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 - 5 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 32))) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A(0, {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 4 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 0.173278)), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 15 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.S((0 + 1) / 0.01278125))), 0.1)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0, CFrame.new(1.36178303, 0.535555065, 0.0481818169, 0.959323943, -0.276642442, -0.0562722012, -0.281998605, -0.948367953, -0.145173192, -0.0132056763, 0.155136824, -0.98780489) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A(0, 0, {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 5 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 32))) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A(0, {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 4 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 0.173278)), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 15 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.S((0 + 1) / 0.01278125))), 0.1)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Head,
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1.5 * 1, 0)
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Head,
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1.5 * 1, 0)
            }).C0, CFrame.new(0.0176411867, 1.49121404, -0.0637010336, 0.942441404, 0.0288463272, -0.333124816, 0.0213407781, 0.989051461, 0.146020114, 0.333689809, -0.144724563, 0.931507409) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A(0, {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 32 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 0.025345)), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 24 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.S((0 + 1) / 0.0245987638))), 0.1)
          elseif 1 == 666 then
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart"),
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso
            }).C0 = NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart"),
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso
            }).C0:lerp({
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0 + 0.2 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.S((0 + 1) / 30), 1.6 + 0.2 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 32), 0 + 0.2 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 26)) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A(0, {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.RRNG(-5, 5), 0), 0.1)
            if {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.RNG(1, 30) == 1 then
              NewInstance("Motor", setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw, {
                Part0 = setmetatable({}, {
                  __index = function(a, b)
                    a = a
                    return game:service(b)
                  end
                }).Players.LocalPlayer.Character.Raw.Torso,
                Part1 = setmetatable({}, {
                  __index = function(a, b)
                    a = a
                    return game:service(b)
                  end
                }).Players.LocalPlayer.Character.Raw.Head,
                C0 = {
                  N = CFrame.new,
                  A = CFrame.Angles,
                  fEA = CFrame.fromEulerAnglesXYZ
                }.N(0, 1.5 * 1, 0)
              }).C0 = NewInstance("Motor", setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw, {
                Part0 = setmetatable({}, {
                  __index = function(a, b)
                    a = a
                    return game:service(b)
                  end
                }).Players.LocalPlayer.Character.Raw.Torso,
                Part1 = setmetatable({}, {
                  __index = function(a, b)
                    a = a
                    return game:service(b)
                  end
                }).Players.LocalPlayer.Character.Raw.Head,
                C0 = {
                  N = CFrame.new,
                  A = CFrame.Angles,
                  fEA = CFrame.fromEulerAnglesXYZ
                }.N(0, 1.5 * 1, 0)
              }).C0:lerp(NewInstance("Motor", setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw, {
                Part0 = setmetatable({}, {
                  __index = function(a, b)
                    a = a
                    return game:service(b)
                  end
                }).Players.LocalPlayer.Character.Raw.Torso,
                Part1 = setmetatable({}, {
                  __index = function(a, b)
                    a = a
                    return game:service(b)
                  end
                }).Players.LocalPlayer.Character.Raw.Head,
                C0 = {
                  N = CFrame.new,
                  A = CFrame.Angles,
                  fEA = CFrame.fromEulerAnglesXYZ
                }.N(0, 1.5 * 1, 0)
              }).C0 * {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.A({
                C = math.cos,
                R = math.rad,
                S = math.sin,
                P = math.pi,
                RNG = math.random,
                MRS = math.randomseed,
                H = math.huge,
                RRNG = function(a, b, c)
                  a = a
                  return math.rad(math.random(a, b) / (c or 1))
                end
              }.RRNG(0, 45), {
                C = math.cos,
                R = math.rad,
                S = math.sin,
                P = math.pi,
                RNG = math.random,
                MRS = math.randomseed,
                H = math.huge,
                RRNG = function(a, b, c)
                  a = a
                  return math.rad(math.random(a, b) / (c or 1))
                end
              }.RRNG(-45, 45), {
                C = math.cos,
                R = math.rad,
                S = math.sin,
                P = math.pi,
                RNG = math.random,
                MRS = math.randomseed,
                H = math.huge,
                RRNG = function(a, b, c)
                  a = a
                  return math.rad(math.random(a, b) / (c or 1))
                end
              }.RRNG(-45, 45)), 1)
              break
            end
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Head,
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1.5 * 1, 0)
            }).C0 = NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Head,
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1.5 * 1, 0)
            }).C0:lerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Head,
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1.5 * 1, 0)
            }).C0 * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 0, -0.35) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A({
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(-45 + 5 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 32)), 0, 0) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A({
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.RRNG(-5, 5), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.RRNG(-5, 5), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.RRNG(-5, 5)), 0.1)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0 = NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0:lerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0 * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0.75, 0 + 0.1 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 32), -0.5) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A(0, {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(15), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(80 + 5 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 32))) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A({
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.RRNG(-5, 5), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.RRNG(-5, 5), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.RRNG(-5, 5)), 0.1)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0 = NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0:lerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0 * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(-0.5, 0 + 0.1 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 32), -0.5) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A(0, {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(-15), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(-85 - 5 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 32))) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A({
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.RRNG(-5, 5), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.RRNG(-5, 5), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.RRNG(-5, 5)), 0.1)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0 = NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0:lerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0 * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 0.4, -0.5) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A({
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(-15 - 2.5 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.S((0 + 1) / 32)), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(25 - 5 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 32)), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(-5)) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A({
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.RRNG(-5, 5), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.RRNG(-5, 5), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.RRNG(-5, 5)), 0.1)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0 = NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0:lerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0 * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A({
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(-15 - 5 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 32)), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(-25), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(5)) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A({
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.RRNG(-5, 5), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.RRNG(-5, 5), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.RRNG(-5, 5)), 0.1)
          else
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart"),
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso
            }).C0 = NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart"),
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso
            }).C0:lerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart"),
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso
            }).C0 * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 0.2 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 6), 0) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A({
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(-5 + 5 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 12)), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(-10), 0), 0.1)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Head,
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1.5 * 1, 0)
            }).C0 = NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Head,
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1.5 * 1, 0)
            }).C0:lerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Head,
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1.5 * 1, 0)
            }).C0 * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A({
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(-5 + 5 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 12)), 0, 0), 0.1)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0 = NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0:lerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0 * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A(0, 0, {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(-7 - 5 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 12))), 0.1)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0 = NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0:lerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0 * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A(0, 0, {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(7 + 5 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 12))), 0.1)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0 = NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0:lerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0 * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, -0.2 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 6), 0) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A({
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(5 - 5 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 12)), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(10), 0), 0.1)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0 = NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0:lerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0 * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, -0.2 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 6), 0) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A({
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(5 - 5 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 12)), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(-10), 0), 0.1)
          end
        elseif ("Walk" or "Run" or workspace:FindPartOnRay(Ray.new(setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").CFrame.p, CFrame.new(setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").Position, setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").Position - Vector3.new(0, 1, 0)).lookVector.unit * (4 * 1)), setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw) or "Idle") == "Run" and 1 ~= 5 and 1 ~= 10 and 1 ~= 666666666666 and 1 ~= 666 and 1 ~= 16 then
          NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart"),
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso
          }).C0 = NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart"),
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso
          }).C0:lerp({
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.N(0, 0 - 0.1 * {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.C((0 + 1) / (7 / (setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16) / 2)), 0) * {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.A({
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(-15 + 2.5 * {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.C((0 + 1) / (7 / (setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16) / 2))), {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(8 * {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.C((0 + 1) / (7 / (setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16)))), 0), (math.min(0.2 * (setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16), 1)))
          NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Head,
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1.5 * 1, 0)
          }).C0 = NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Head,
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1.5 * 1, 0)
          }).C0:lerp(NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Head,
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1.5 * 1, 0)
          }).C0, (math.min(0.2 * (setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16), 1)))
          NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Left Arm"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(-1.5 * 1, 0.5 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 0.5 * 1, 0)
          }).C0 = NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Left Arm"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(-1.5 * 1, 0.5 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 0.5 * 1, 0)
          }).C0:lerp(NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Left Arm"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(-1.5 * 1, 0.5 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 0.5 * 1, 0)
          }).C0 * {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.N(0, 0, 0 - 0.3 * {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.S((0 + 1) / (7 / (setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16)))) * {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.A({
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(0 + 45 * {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.S((0 + 1) / (7 / (setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16)))), 0, {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(-5)), (math.min(0.2 * (setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16), 1)))
          NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Right Arm"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(1.5 * 1, 0.5 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 0.5 * 1, 0)
          }).C0 = NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Right Arm"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(1.5 * 1, 0.5 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 0.5 * 1, 0)
          }).C0:lerp(NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Right Arm"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(1.5 * 1, 0.5 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 0.5 * 1, 0)
          }).C0 * {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.N(0, 0, 0 + 0.3 * {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.S((0 + 1) / (7 / (setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16)))) * {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.A({
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(0 - 45 * {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.S((0 + 1) / (7 / (setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16)))), 0, {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(5)), (math.min(0.2 * (setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16), 1)))
          NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Left Leg"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(-0.5 * 1, -1 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1 * 1, 0)
          }).C0 = NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Left Leg"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(-0.5 * 1, -1 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1 * 1, 0)
          }).C0:lerp(NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Left Leg"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(-0.5 * 1, -1 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1 * 1, 0)
          }).C0 * {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.N(0, 0 + 0.1 * {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.C((0 + 1) / (7 / (setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16) / 2)), 0) * {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.A(0, -{
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(4 * {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.C((0 + 1) / (7 / (setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16)))), 0), (math.min(0.2 * (setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16), 1)))
          NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Right Leg"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0.5 * 1, -1 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1 * 1, 0)
          }).C0 = NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Right Leg"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0.5 * 1, -1 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1 * 1, 0)
          }).C0:lerp(NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Right Leg"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0.5 * 1, -1 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1 * 1, 0)
          }).C0 * {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.N(0, 0 + 0.1 * {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.C((0 + 1) / (7 / (setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16) / 2)), 0) * {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.A(0, -{
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(4 * {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.C((0 + 1) / (7 / (setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16)))), 0), (math.min(0.2 * (setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16), 1)))
        elseif ("Walk" or "Run" or workspace:FindPartOnRay(Ray.new(setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").CFrame.p, CFrame.new(setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").Position, setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").Position - Vector3.new(0, 1, 0)).lookVector.unit * (4 * 1)), setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw) or "Idle") == "Walk" and 1 ~= 5 and 1 ~= 7 and 1 ~= 10 and 1 ~= 666666666666 and 1 ~= 666 and 1 ~= 16 then
          if 1 == 4 then
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart"),
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart"),
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso
            }).C0, CFrame.new(-0.00847404078, -0.131645858 - 0.1 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / (7 / (setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16))), -0.542845488, 0.999965072, -0.00807052851, -0.00218774565, 0.00805599708, 0.85972774, 0.510689199, -0.00224066619, -0.51068902, 0.859762609), (math.min(0.2 * (setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16), 1)))
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0, CFrame.new(-0.496114701, -1.0144912 + 0.1 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / (7 / (setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16))), 0.0453964472, 0.976583362, 0.00805600174, 0.214989081, 0.103035107, 0.859728813, -0.50025022, -0.188862324, 0.510687351, 0.838766694), (math.min(0.2 * (setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16), 1)))
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0, CFrame.new(0.498885572, -1.01948476 + 0.1 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / (7 / (setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16))), 0.0378640294, 0.997592449, 0.00805600174, -0.0688822865, -0.0420893468, 0.859728813, -0.509013772, 0.055119466, 0.510687351, 0.857997894), (math.min(0.2 * (setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16), 1)))
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0, CFrame.new(-1.42592692, 0.493003547, -0.129623473, 0.987043619, 0.159894824, 0.0133710029, -0.130732149, 0.849730968, -0.51075089, -0.0930281729, 0.502385318, 0.859624803) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A({
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 15 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / (7 / (setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16)))), 0, 0) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A(0, {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 4 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 0.817272)), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 15 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.S((0 + 1) / 0.9872346))), (math.min(0.2 * (setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16), 1)))
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0, CFrame.new(1.1449033, 0.691183329, -0.239056498, 0.899715602, 0.434673697, 0.0396348648, 0.435808241, -0.899650335, -0.0264700353, 0.024151668, 0.0410887003, -0.998863578) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A(0, {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 4 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 0.61237)), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 15 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.S((0 + 1) / 0.716246))), (math.min(0.2 * (setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16), 1)))
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Head,
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1.5 * 1, 0)
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Head,
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1.5 * 1, 0)
            }).C0, CFrame.new(7.87388399E-06, 1.43020797, -0.212884247, 1, -8.72649252E-07, -4.02983278E-06, 2.92807817E-06, 0.838354766, 0.545125127, 2.90293247E-06, -0.545125067, 0.838354826) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A(0, {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 4 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 0.61237)), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 15 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.S((0 + 1) / 0.716246))), (math.min(0.2 * (setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16), 1)))
          elseif 1 == 696969 then
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart"),
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart"),
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso
            }).C0, CFrame.new(-0.00847404078, -0.131645858 - 0.1 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / (7 / (setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16))), -0.542845488, 0.999965072, -0.00807052851, -0.00218774565, 0.00805599708, 0.85972774, 0.510689199, -0.00224066619, -0.51068902, 0.859762609), (math.min(0.2 * (setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16), 1)))
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0, CFrame.new(-0.496114701, -1.0144912 + 0.1 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / (7 / (setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16))), 0.0453964472, 0.976583362, 0.00805600174, 0.214989081, 0.103035107, 0.859728813, -0.50025022, -0.188862324, 0.510687351, 0.838766694), (math.min(0.2 * (setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16), 1)))
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0, CFrame.new(0.498885572, -1.01948476 + 0.1 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / (7 / (setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16))), 0.0378640294, 0.997592449, 0.00805600174, -0.0688822865, -0.0420893468, 0.859728813, -0.509013772, 0.055119466, 0.510687351, 0.857997894), (math.min(0.2 * (setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16), 1)))
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0, CFrame.new(-1.3136189, 0.462844551 + 0.1 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / (7 / (setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16))), 0.00274867564, 0.929629087, -0.368184805, -0.015158236, -0.360420376, -0.899919868, -0.245441884, 0.0767267719, 0.23363328, -0.969292879) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A(0, {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 4 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 0.173278)), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 15 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.S((0 + 1) / 0.01278125))), (math.min(0.2 * (setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16), 1)))
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0, CFrame.new(1.25962329, 0.543387234 + 0.1 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / (7 / (setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16))), 0.0906403661, 0.898135066, 0.439483941, -0.0144048491, 0.399390757, -0.829028964, -0.391405523, -0.183958456, 0.345781803, -0.920105577) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A(0, {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 4 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 0.173278)), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 15 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.S((0 + 1) / 0.01278125))), (math.min(0.2 * (setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16), 1)))
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Head,
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1.5 * 1, 0)
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Head,
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1.5 * 1, 0)
            }).C0, CFrame.new(7.87388399E-06, 1.43020797, -0.212884247, 1, -8.72649252E-07, -4.02983278E-06, 2.92807817E-06, 0.838354766, 0.545125127, 2.90293247E-06, -0.545125067, 0.838354826) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A(0, {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 4 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 0.61237)), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 15 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.S((0 + 1) / 0.716246))), (math.min(0.2 * (setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16), 1)))
          elseif 1 == 1 then
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart"),
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso
            }).C0 = NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart"),
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso
            }).C0:lerp({
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 0 - 0.1 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / (7 / (setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16) / 2)), 0) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A({
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(-5 - 2.5 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / (7 / (setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16) / 2))), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(8 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / (7 / (setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16)))), 0), (math.min(0.2 * (setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16), 1)))
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Head,
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1.5 * 1, 0)
            }).C0 = NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Head,
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1.5 * 1, 0)
            }).C0:lerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Head,
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1.5 * 1, 0)
            }).C0 * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A(0, {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 4 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 0.61237)), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 15 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.S((0 + 1) / 0.716246))), (math.min(0.2 * (setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16), 1)))
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0 = NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0:lerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0 * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 0, -0.22 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / (7 / (setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16)))) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A({
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 37 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / (7 / (setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16)))), 0, {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(-5 + 10 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / (7 / (setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16) / 2)))), (math.min(0.2 * (setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16), 1)))
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0, CFrame.new(1.2, 0.7, -0.396169931, 0.827836394, 0.560810268, -0.013374418, 0.472599089, -0.7100721, -0.521965444, -0.302220345, 0.42578119, -0.852861941) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A(0, {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 4 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 0.61237)), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 15 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.S((0 + 1) / 0.716246))), (math.min(0.2 * (setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16), 1)))
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0 = NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0:lerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0 * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 0 + 0.1 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / (7 / (setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16) / 2)), 0) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A(0, -{
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(4 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / (7 / (setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16)))), 0), (math.min(0.2 * (setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16), 1)))
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0 = NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0:lerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0 * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 0 + 0.1 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / (7 / (setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16) / 2)), 0) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A(0, -{
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(4 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / (7 / (setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16)))), 0), (math.min(0.2 * (setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16), 1)))
          else
            if workspace:FindPartOnRay(Ray.new(setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").CFrame.p, CFrame.new(setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").Position, setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").Position - Vector3.new(0, 1, 0)).lookVector.unit * (4 * 1)), setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw) and 1 == 9 then
              OEffect({
                Material = Enum.Material.Neon,
                Effect = "Fade",
                Mesh = {
                  MeshType = Enum.MeshType.Cylinder
                },
                Size = {
                  N = Vector3.new,
                  FNI = Vector3.FromNormalId,
                  A = Vector3.FromAxis
                }.N(0.1, 5, 5),
                Frames = 120,
                Color = BrickColor.new("Forest green"),
                CFrame = {
                  N = CFrame.new,
                  A = CFrame.Angles,
                  fEA = CFrame.fromEulerAnglesXYZ
                }.N(workspace:FindPartOnRay(Ray.new(setmetatable({}, {
                  __index = function(a, b)
                    a = a
                    return game:service(b)
                  end
                }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").CFrame.p, CFrame.new(setmetatable({}, {
                  __index = function(a, b)
                    a = a
                    return game:service(b)
                  end
                }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").Position, setmetatable({}, {
                  __index = function(a, b)
                    a = a
                    return game:service(b)
                  end
                }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").Position - Vector3.new(0, 1, 0)).lookVector.unit * (4 * 1)), setmetatable({}, {
                  __index = function(a, b)
                    a = a
                    return game:service(b)
                  end
                }).Players.LocalPlayer.Character.Raw)) * {
                  N = CFrame.new,
                  A = CFrame.Angles,
                  fEA = CFrame.fromEulerAnglesXYZ
                }.A(0, {
                  C = math.cos,
                  R = math.rad,
                  S = math.sin,
                  P = math.pi,
                  RNG = math.random,
                  MRS = math.randomseed,
                  H = math.huge,
                  RRNG = function(a, b, c)
                    a = a
                    return math.rad(math.random(a, b) / (c or 1))
                  end
                }.R(90), 0)
              })
            end
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart"),
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso
            }).C0 = NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart"),
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso
            }).C0:lerp({
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 0 - 0.1 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / (7 / (setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16) / 2)), 0) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A({
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(-5 - 2.5 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / (7 / (setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16) / 2))), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(8 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / (7 / (setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16)))), 0), (math.min(0.2 * (setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16), 1)))
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Head,
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1.5 * 1, 0)
            }).C0 = NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Head,
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1.5 * 1, 0)
            }).C0:lerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Head,
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1.5 * 1, 0)
            }).C0, (math.min(0.2 * (setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16), 1)))
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0 = NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0:lerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0 * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 0, -0.22 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / (7 / (setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16)))) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A({
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(37 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / (7 / (setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16)))), 0, {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(-5 + 10 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / (7 / (setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16) / 2)))), (math.min(0.2 * (setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16), 1)))
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0 = NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0:lerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0 * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 0, 0.22 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / (7 / (setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16)))) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A({
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(-37 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / (7 / (setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16)))), 0, {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(5 - 10 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / (7 / (setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16) / 2)))), (math.min(0.2 * (setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16), 1)))
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0 = NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0:lerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Left Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0 * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 0 + 0.1 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / (7 / (setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16) / 2)), 0) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A(0, -{
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(4 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / (7 / (setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16)))), 0), (math.min(0.2 * (setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16), 1)))
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0 = NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0:lerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw["Right Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0 * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 0 + 0.1 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / (7 / (setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16) / 2)), 0) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A(0, -{
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(4 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / (7 / (setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16)))), 0), (math.min(0.2 * (setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16), 1)))
          end
        elseif ("Walk" or "Run" or workspace:FindPartOnRay(Ray.new(setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").CFrame.p, CFrame.new(setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").Position, setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").Position - Vector3.new(0, 1, 0)).lookVector.unit * (4 * 1)), setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw) or "Idle") == "Walk" and 1 == 7 then
          NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart"),
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso
          }).C0 = NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart"),
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso
          }).C0:lerp({
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.N(0, 0 - 0.1 * {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.C((0 + 1) / (7 / (setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16) / 2)), 0) * {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.A({
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(-2.5 - 1.25 * {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.C((0 + 1) / (7 / (setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16) / 2))), {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(4 * {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.C((0 + 1) / (7 / (setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16)))), 0), (math.min(0.3 * (setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 8), 1)))
          NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Head,
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1.5 * 1, 0)
          }).C0 = NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Head,
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1.5 * 1, 0)
          }).C0:lerp(NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Head,
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1.5 * 1, 0)
          }).C0, (math.min(0.3 * (setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 8), 1)))
          NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Left Arm"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(-1.5 * 1, 0.5 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 0.5 * 1, 0)
          }).C0 = NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Left Arm"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(-1.5 * 1, 0.5 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 0.5 * 1, 0)
          }).C0:lerp(NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Left Arm"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(-1.5 * 1, 0.5 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 0.5 * 1, 0)
          }).C0 * {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.N(0, 0, -0.11 * {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.C((0 + 1) / (7 / (setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16)))) * {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.A({
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(18.5 * {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.C((0 + 1) / (7 / (setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16)))), 0, {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(-2.5 + 5 * {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.C((0 + 1) / (7 / (setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16) / 2)))), (math.min(0.3 * (setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 8), 1)))
          NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Right Arm"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(1.5 * 1, 0.5 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 0.5 * 1, 0)
          }).C0 = NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Right Arm"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(1.5 * 1, 0.5 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 0.5 * 1, 0)
          }).C0:lerp(NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Right Arm"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(1.5 * 1, 0.5 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 0.5 * 1, 0)
          }).C0 * {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.N(0, 0, 0.11 * {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.C((0 + 1) / (7 / (setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16)))) * {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.A({
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(-18.5 * {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.C((0 + 1) / (7 / (setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16)))), 0, {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(2.5 - 5 * {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.C((0 + 1) / (7 / (setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16) / 2)))), (math.min(0.3 * (setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 8), 1)))
          NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Left Leg"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(-0.5 * 1, -1 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1 * 1, 0)
          }).C0 = NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Left Leg"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(-0.5 * 1, -1 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1 * 1, 0)
          }).C0:lerp(NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Left Leg"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(-0.5 * 1, -1 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1 * 1, 0)
          }).C0 * {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.N(0, 0 + 0.1 * {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.C((0 + 1) / (7 / (setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16) / 2)), 0) * {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.A(0, -{
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(4 * {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.C((0 + 1) / (7 / (setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16)))), 0), (math.min(0.3 * (setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 8), 1)))
          NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Right Leg"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0.5 * 1, -1 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1 * 1, 0)
          }).C0 = NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Right Leg"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0.5 * 1, -1 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1 * 1, 0)
          }).C0:lerp(NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Right Leg"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0.5 * 1, -1 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1 * 1, 0)
          }).C0 * {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.N(0, 0 + 0.1 * {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.C((0 + 1) / (7 / (setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16) / 2)), 0) * {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.A(0, -{
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(4 * {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.C((0 + 1) / (7 / (setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16)))), 0), (math.min(0.3 * (setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 8), 1)))
        elseif ("Walk" or "Run" or workspace:FindPartOnRay(Ray.new(setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").CFrame.p, CFrame.new(setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").Position, setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").Position - Vector3.new(0, 1, 0)).lookVector.unit * (4 * 1)), setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw) or "Idle") == "Run" and 1 == 10 then
          NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart"),
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso
          }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart"),
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso
          }).C0, CFrame.new(5.48791013E-11, 0.881578624 + 0.5 * {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.C((0 + 1) / 32), -3.51015478E-06, 0.99999994, 4.36557457E-11, 0, -4.3652193E-11, 0.999980211, -0.00628619269, 9.31322575E-10, 0.00628619175, 0.999980271) * {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.A({
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(-45), 0, 0), 0.1)
          NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Left Leg"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(-0.5 * 1, -1 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1 * 1, 0)
          }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Left Leg"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(-0.5 * 1, -1 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1 * 1, 0)
          }).C0, CFrame.new(-0.507622898, -0.617543876, -0.694063663, 0.999877989, -0.00717858272, 0.0138636231, -9.81731864E-05, 0.885106385, 0.465388477, -0.0156116197, -0.465333343, 0.884998262), 0.1)
          NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Right Leg"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0.5 * 1, -1 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1 * 1, 0)
          }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Right Leg"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0.5 * 1, -1 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1 * 1, 0)
          }).C0, CFrame.new(0.499199599, -0.96504283, 0.0578122139, 0.999877989, -0.00369151891, 0.0151692061, -9.81731864E-05, 0.970136404, 0.242559701, -0.0156116197, -0.242531747, 0.970018268), 0.1)
          NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Left Arm"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(-1.5 * 1, 0.5 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 0.5 * 1, 0)
          }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Left Arm"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(-1.5 * 1, 0.5 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 0.5 * 1, 0)
          }).C0, CFrame.new(-1.49673307, 0.593781948 + 0.2 * {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.C((0 + 1) / 32), 0.0200225115, 0.966687799, 0.25548178, 0.0156119233, -0.255602777, 0.96676141, 0.00628757617, -0.0134866452, -0.0100685749, 0.999858439) * {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.A({
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(-45), {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(25), {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(5 + 5 * {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.C((0 + 1) / 32))), 0.1)
          NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Right Arm"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(1.5 * 1, 0.5 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 0.5 * 1, 0)
          }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Right Arm"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(1.5 * 1, 0.5 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 0.5 * 1, 0)
          }).C0, CFrame.new(1.50987279, 0.675035477 + 0.2 * {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.C((0 + 1) / 32), -0.0274340063, 0.943747699, -0.330297619, 0.0156119233, 0.33023873, 0.943876505, 0.00628757617, -0.0168125015, -0.000778224785, 0.999858439) * {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.A({
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(-45), {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(-25), {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(-5 - 5 * {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.C((0 + 1) / 32))), 0.1)
          NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Head,
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1.5 * 1, 0)
          }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Head,
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1.5 * 1, 0)
          }).C0, CFrame.new(4.35172478E-06, 1.49894357, -0.0144011974, 0.99999994, 3.67523171E-07, -1.61118805E-07, -3.56500095E-07, 0.997964799, 0.0637688041, 1.8440187E-07, -0.063768819, 0.997964799) * {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.A({
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(45), 0, 0), 0.1)
        elseif ("Walk" or "Run" or workspace:FindPartOnRay(Ray.new(setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").CFrame.p, CFrame.new(setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").Position, setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").Position - Vector3.new(0, 1, 0)).lookVector.unit * (4 * 1)), setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw) or "Idle") == "Run" and 1 == 666666666666 then
          NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart"),
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso
          }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart"),
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso
          }).C0, CFrame.new(5.48791013E-11, 1.61628103 + 0.5 * {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.C((0 + 1) / 32), -3.51015478E-06, 0.99999994, 4.36557457E-11, 0, -4.3652193E-11, 0.999980211, -0.00628619269, 9.31322575E-10, 0.00628619175, 0.999980271) * {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.A({
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(-65), 0, 0), 0.1)
          NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Left Leg"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(-0.5 * 1, -1 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1 * 1, 0)
          }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Left Leg"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(-0.5 * 1, -1 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1 * 1, 0)
          }).C0, CFrame.new(-0.507622898, -0.617543876, -0.694063663, 0.999877989, -0.00717858272, 0.0138636231, -9.81731864E-05, 0.885106385, 0.465388477, -0.0156116197, -0.465333343, 0.884998262), 0.1)
          NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Right Leg"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0.5 * 1, -1 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1 * 1, 0)
          }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Right Leg"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0.5 * 1, -1 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1 * 1, 0)
          }).C0, CFrame.new(0.499199599, -0.96504283, 0.0578122139, 0.999877989, -0.00369151891, 0.0151692061, -9.81731864E-05, 0.970136404, 0.242559701, -0.0156116197, -0.242531747, 0.970018268), 0.1)
          NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Left Arm"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(-1.5 * 1, 0.5 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 0.5 * 1, 0)
          }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Left Arm"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(-1.5 * 1, 0.5 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 0.5 * 1, 0)
          }).C0, CFrame.new(-1.49673307, 0.593781948 + 0.2 * {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.C((0 + 1) / 32), 0.0200225115, 0.966687799, 0.25548178, 0.0156119233, -0.255602777, 0.96676141, 0.00628757617, -0.0134866452, -0.0100685749, 0.999858439) * {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.A({
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(-55), {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(25), {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(5 + 5 * {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.C((0 + 1) / 32))), 0.1)
          NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Right Arm"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(1.5 * 1, 0.5 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 0.5 * 1, 0)
          }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Right Arm"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(1.5 * 1, 0.5 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 0.5 * 1, 0)
          }).C0, CFrame.new(1.50987279, 0.675035477 + 0.2 * {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.C((0 + 1) / 32), -0.0274340063, 0.943747699, -0.330297619, 0.0156119233, 0.33023873, 0.943876505, 0.00628757617, -0.0168125015, -0.000778224785, 0.999858439) * {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.A({
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(-55), {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(-25), {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(-5 - 5 * {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.C((0 + 1) / 32))), 0.1)
          NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Head,
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1.5 * 1, 0)
          }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Head,
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1.5 * 1, 0)
          }).C0, CFrame.new(4.35172478E-06, 1.49894357, -0.0144011974, 0.99999994, 3.67523171E-07, -1.61118805E-07, -3.56500095E-07, 0.997964799, 0.0637688041, 1.8440187E-07, -0.063768819, 0.997964799) * {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.A({
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(65), 0, 0), 0.1)
        elseif ("Walk" or "Run" or workspace:FindPartOnRay(Ray.new(setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").CFrame.p, CFrame.new(setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").Position, setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").Position - Vector3.new(0, 1, 0)).lookVector.unit * (4 * 1)), setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw) or "Idle") == "Run" and 1 == 666 then
          NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart"),
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso
          }).C0 = NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart"),
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso
          }).C0:lerp({
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.N(0 + 0.2 * {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.S((0 + 1) / 30), 1.6 + 0.2 * {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.C((0 + 1) / 32), 0 + 0.2 * {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.C((0 + 1) / 26)) * {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.A({
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(-45), {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.RRNG(-5, 5), 0), 0.1)
          if {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.RNG(1, 30) == 1 then
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Head,
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1.5 * 1, 0)
            }).C0 = NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Head,
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1.5 * 1, 0)
            }).C0:lerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Raw.Head,
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1.5 * 1, 0)
            }).C0 * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A({
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.RRNG(0, 45), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.RRNG(-45, 45), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.RRNG(-45, 45)), 1)
            break
          end
          NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Head,
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1.5 * 1, 0)
          }).C0 = NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Head,
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1.5 * 1, 0)
          }).C0:lerp(NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Head,
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1.5 * 1, 0)
          }).C0 * {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.N(0, 0, -0.35) * {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.A({
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(-25 + 5 * {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.C((0 + 1) / 32)), 0, 0) * {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.A({
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.RRNG(-5, 5), {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.RRNG(-5, 5), {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.RRNG(-5, 5)), 0.1)
          NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Left Arm"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(-1.5 * 1, 0.5 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 0.5 * 1, 0)
          }).C0 = NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Left Arm"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(-1.5 * 1, 0.5 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 0.5 * 1, 0)
          }).C0:lerp(NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Left Arm"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(-1.5 * 1, 0.5 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 0.5 * 1, 0)
          }).C0 * {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.N(0.75, 0 + 0.1 * {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.C((0 + 1) / 32), -0.5) * {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.A(0, {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(15), {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(80 + 5 * {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.C((0 + 1) / 32))) * {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.A({
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.RRNG(-5, 5), {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.RRNG(-5, 5), {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.RRNG(-5, 5)), 0.1)
          NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Right Arm"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(1.5 * 1, 0.5 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 0.5 * 1, 0)
          }).C0 = NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Right Arm"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(1.5 * 1, 0.5 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 0.5 * 1, 0)
          }).C0:lerp(NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Right Arm"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(1.5 * 1, 0.5 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 0.5 * 1, 0)
          }).C0 * {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.N(-0.5, 0 + 0.1 * {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.C((0 + 1) / 32), -0.5) * {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.A(0, {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(-15), {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(-85 - 5 * {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.C((0 + 1) / 32))) * {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.A({
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.RRNG(-5, 5), {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.RRNG(-5, 5), {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.RRNG(-5, 5)), 0.1)
          NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Left Leg"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(-0.5 * 1, -1 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1 * 1, 0)
          }).C0 = NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Left Leg"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(-0.5 * 1, -1 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1 * 1, 0)
          }).C0:lerp(NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Left Leg"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(-0.5 * 1, -1 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1 * 1, 0)
          }).C0 * {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.N(0, 0.4, -0.5) * {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.A({
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(-35 - 2.5 * {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.S((0 + 1) / 32)), {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(25 - 5 * {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.C((0 + 1) / 32)), {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(-5)) * {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.A({
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.RRNG(-5, 5), {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.RRNG(-5, 5), {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.RRNG(-5, 5)), 0.1)
          NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Right Leg"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0.5 * 1, -1 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1 * 1, 0)
          }).C0 = NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Right Leg"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0.5 * 1, -1 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1 * 1, 0)
          }).C0:lerp(NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Right Leg"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0.5 * 1, -1 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1 * 1, 0)
          }).C0 * {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.A({
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(-35 - 5 * {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.C((0 + 1) / 32)), {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(-25), {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(5)) * {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.A({
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.RRNG(-5, 5), {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.RRNG(-5, 5), {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.RRNG(-5, 5)), 0.1)
        elseif ("Walk" or "Run" or workspace:FindPartOnRay(Ray.new(setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").CFrame.p, CFrame.new(setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").Position, setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").Position - Vector3.new(0, 1, 0)).lookVector.unit * (4 * 1)), setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw) or "Idle") == "Run" and 1 == 16 then
          NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart"),
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso
          }).C0 = NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart"),
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso
          }).C0:lerp({
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.N(0 + 0.2 * {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.S((0 + 1) / 32), 1.3 - 0.5 * {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.C((0 + 1) / 32), 0 + 0.2 * {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.C((0 + 1) / 24)) * {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.A({
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(-45 + 1.5 * {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.S((0 + 1) / 32)), {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(0 + 5 * {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.S((0 + 1) / 36)), 0), 0.1)
          NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Head,
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1.5 * 1, 0)
          }).C0 = NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Head,
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1.5 * 1, 0)
          }).C0:lerp(NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Head,
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1.5 * 1, 0)
          }).C0 * {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.N(0, 0, 0) * {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.A({
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(25 + 5 * {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.C((0 + 1) / 32)), 0, 0), 0.1)
          NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Left Arm"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(-1.5 * 1, 0.5 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 0.5 * 1, 0)
          }).C0 = NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Left Arm"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(-1.5 * 1, 0.5 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 0.5 * 1, 0)
          }).C0:lerp(NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Left Arm"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(-1.5 * 1, 0.5 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 0.5 * 1, 0)
          }).C0 * {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.N(0.75, 0 + 0.1 * {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.C((0 + 1) / 32), -0.5) * {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.A({
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(-25 - 5 * {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.C((0 + 1) / 32)), {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(15), {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(80 + 10 * {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.C((0 + 1) / 32))), 0.1)
          NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Right Arm"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(1.5 * 1, 0.5 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 0.5 * 1, 0)
          }).C0 = NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Right Arm"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(1.5 * 1, 0.5 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 0.5 * 1, 0)
          }).C0:lerp(NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Right Arm"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(1.5 * 1, 0.5 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 0.5 * 1, 0)
          }).C0 * {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.N(-0.5, 0 + 0.1 * {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.C((0 + 1) / 32), -0.5) * {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.A({
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(25 + 5 * {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.C((0 + 1) / 32)), {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(-15), {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(-85 - 5 * {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.C((0 + 1) / 32))), 0.1)
          NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Left Leg"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(-0.5 * 1, -1 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1 * 1, 0)
          }).C0 = NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Left Leg"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(-0.5 * 1, -1 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1 * 1, 0)
          }).C0:lerp(NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Left Leg"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(-0.5 * 1, -1 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1 * 1, 0)
          }).C0 * {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.N(0, 0.4, -0.5) * {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.A({
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(-35 - 2.5 * {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.S((0 + 1) / 32)), {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(25 - 5 * {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.C((0 + 1) / 32)), {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(-5)), 0.1)
          NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Right Leg"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0.5 * 1, -1 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1 * 1, 0)
          }).C0 = NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Right Leg"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0.5 * 1, -1 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1 * 1, 0)
          }).C0:lerp(NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Right Leg"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0.5 * 1, -1 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1 * 1, 0)
          }).C0 * {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.A({
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(-35 - 5 * {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.C((0 + 1) / 32)), {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(-25), {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(5)), 0.1)
        elseif ("Walk" or "Run" or workspace:FindPartOnRay(Ray.new(setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").CFrame.p, CFrame.new(setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").Position, setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").Position - Vector3.new(0, 1, 0)).lookVector.unit * (4 * 1)), setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw) or "Idle") == "Run" then
          NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart"),
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso
          }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart"),
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso
          }).C0, CFrame.new(5.48791013E-11, 1.2571125 + 0.5 * {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.C((0 + 1) / 32), -3.51015478E-06, 0.99999994, 4.36557457E-11, 0, -4.3652193E-11, 0.999980211, -0.00628619269, 9.31322575E-10, 0.00628619175, 0.999980271) * {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.A({
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(-75), 0, 0), 0.1)
          NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Left Leg"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(-0.5 * 1, -1 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1 * 1, 0)
          }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Left Leg"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(-0.5 * 1, -1 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1 * 1, 0)
          }).C0, CFrame.new(-0.436587602, -0.992619872, 0.0206923336, 0.99808234, 0.0599006973, 0.0156119233, -0.0600048117, 0.998178363, 0.00628757617, -0.0152068557, -0.0072123101, 0.999858439), 0.1)
          NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Right Leg"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0.5 * 1, -1 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1 * 1, 0)
          }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Right Leg"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0.5 * 1, -1 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1 * 1, 0)
          }).C0, CFrame.new(0.481217712, -0.504008591, -0.8678087, 0.997120202, -0.0733773932, -0.0191624481, 0.0741236135, 0.889526427, 0.450830936, -0.0160352942, -0.450953096, 0.892403722), 0.1)
          NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Left Arm"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(-1.5 * 1, 0.5 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 0.5 * 1, 0)
          }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Left Arm"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(-1.5 * 1, 0.5 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 0.5 * 1, 0)
          }).C0, CFrame.new(-1.49673307, 0.593781948 + 0.2 * {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.C((0 + 1) / 32), 0.0200225115, 0.966687799, 0.25548178, 0.0156119233, -0.255602777, 0.96676141, 0.00628757617, -0.0134866452, -0.0100685749, 0.999858439) * {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.A({
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(-15), {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(25), {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(5 + 5 * {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.C((0 + 1) / 32))), 0.1)
          NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Right Arm"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(1.5 * 1, 0.5 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 0.5 * 1, 0)
          }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Right Arm"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(1.5 * 1, 0.5 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 0.5 * 1, 0)
          }).C0, CFrame.new(1.50987279, 0.675035477 + 0.2 * {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.C((0 + 1) / 32), -0.0274340063, 0.943747699, -0.330297619, 0.0156119233, 0.33023873, 0.943876505, 0.00628757617, -0.0168125015, -0.000778224785, 0.999858439) * {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.A({
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(-15), {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(-25), {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(-5 - 5 * {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.C((0 + 1) / 32))), 0.1)
          NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Head,
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1.5 * 1, 0)
          }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Head,
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1.5 * 1, 0)
          }).C0, CFrame.new(4.35172478E-06, 1.49894357, -0.0144011974, 0.99999994, 3.67523171E-07, -1.61118805E-07, -3.56500095E-07, 0.997964799, 0.0637688041, 1.8440187E-07, -0.063768819, 0.997964799) * {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.A({
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(75), 0, 0), 0.1)
        elseif ("Walk" or "Run" or workspace:FindPartOnRay(Ray.new(setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").CFrame.p, CFrame.new(setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").Position, setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").Position - Vector3.new(0, 1, 0)).lookVector.unit * (4 * 1)), setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw) or "Idle") == "Jump" then
          NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Left Arm"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(-1.5 * 1, 0.5 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 0.5 * 1, 0)
          }).C0 = NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Left Arm"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(-1.5 * 1, 0.5 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 0.5 * 1, 0)
          }).C0:lerp(NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Left Arm"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(-1.5 * 1, 0.5 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 0.5 * 1, 0)
          }).C0 * {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.A({
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(-5), 0, {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(-90)), 0.1)
          NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Right Arm"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(1.5 * 1, 0.5 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 0.5 * 1, 0)
          }).C0 = NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Right Arm"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(1.5 * 1, 0.5 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 0.5 * 1, 0)
          }).C0:lerp(NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Right Arm"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(1.5 * 1, 0.5 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 0.5 * 1, 0)
          }).C0 * {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.A({
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(-5), 0, {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(90)), 0.1)
          NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart"),
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso
          }).C0 = NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart"),
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso
          }).C0:lerp(NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart"),
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso
          }).C0 * {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.A(math.min(math.max(setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").Velocity.Y / 100, -{
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(45)), {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(45)), 0, 0), 0.1)
          NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Head,
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1.5 * 1, 0)
          }).C0 = NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Head,
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1.5 * 1, 0)
          }).C0:lerp(NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Head,
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1.5 * 1, 0)
          }).C0 * {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.A(math.min(math.max(setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").Velocity.Y / 100, -{
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(45)), {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(45)), 0, 0), 0.1)
          NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Left Leg"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(-0.5 * 1, -1 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1 * 1, 0)
          }).C0 = NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Left Leg"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(-0.5 * 1, -1 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1 * 1, 0)
          }).C0:lerp(NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Left Leg"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(-0.5 * 1, -1 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1 * 1, 0)
          }).C0 * {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.A(0, 0, {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(-5)), 0.1)
          NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Right Leg"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0.5 * 1, -1 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1 * 1, 0)
          }).C0 = NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Right Leg"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0.5 * 1, -1 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1 * 1, 0)
          }).C0:lerp(NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Right Leg"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0.5 * 1, -1 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1 * 1, 0)
          }).C0 * {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.N(0, 1, -1) * {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.A({
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(-5), 0, {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(5)), 0.1)
        elseif ("Walk" or "Run" or workspace:FindPartOnRay(Ray.new(setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").CFrame.p, CFrame.new(setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").Position, setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").Position - Vector3.new(0, 1, 0)).lookVector.unit * (4 * 1)), setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw) or "Idle") == "Fall" then
          NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Left Arm"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(-1.5 * 1, 0.5 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 0.5 * 1, 0)
          }).C0 = NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Left Arm"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(-1.5 * 1, 0.5 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 0.5 * 1, 0)
          }).C0:lerp(NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Left Arm"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(-1.5 * 1, 0.5 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 0.5 * 1, 0)
          }).C0 * {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.A({
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(-5), 0, {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(-90) + math.min(math.max(setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").Velocity.Y / 50, -{
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(90)), {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(90))), 0.1)
          NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Right Arm"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(1.5 * 1, 0.5 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 0.5 * 1, 0)
          }).C0 = NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Right Arm"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(1.5 * 1, 0.5 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 0.5 * 1, 0)
          }).C0:lerp(NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Right Arm"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(1.5 * 1, 0.5 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 0.5 * 1, 0)
          }).C0 * {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.A({
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(-5), 0, {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(90) - math.min(math.max(setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").Velocity.Y / 50, -{
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(90)), {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(90))), 0.1)
          NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart"),
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso
          }).C0 = NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart"),
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso
          }).C0:lerp(NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart"),
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso
          }).C0 * {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.A(math.min(math.max(setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").Velocity.Y / 100, -{
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(45)), {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(45)), 0, 0), 0.1)
          NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Head,
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1.5 * 1, 0)
          }).C0 = NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Head,
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1.5 * 1, 0)
          }).C0:lerp(NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Head,
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1.5 * 1, 0)
          }).C0 * {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.A(math.min(math.max(setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").Velocity.Y / 100, -{
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(45)), {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(45)), 0, 0), 0.1)
          NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Left Leg"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(-0.5 * 1, -1 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1 * 1, 0)
          }).C0 = NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Left Leg"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(-0.5 * 1, -1 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1 * 1, 0)
          }).C0:lerp(NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Left Leg"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(-0.5 * 1, -1 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1 * 1, 0)
          }).C0 * {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.A(0, 0, {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(-5)), 0.1)
          NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Right Leg"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0.5 * 1, -1 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1 * 1, 0)
          }).C0 = NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Right Leg"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0.5 * 1, -1 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1 * 1, 0)
          }).C0:lerp(NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character.Raw, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Raw["Right Leg"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0.5 * 1, -1 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1 * 1, 0)
          }).C0 * {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.N(0, 1, -1) * {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.A({
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(-5), 0, {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(5)), 0.1)
        elseif ("Walk" or "Run" or workspace:FindPartOnRay(Ray.new(setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").CFrame.p, CFrame.new(setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").Position, setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").Position - Vector3.new(0, 1, 0)).lookVector.unit * (4 * 1)), setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character.Raw) or "Idle") == "Paralyzed" then
        else
        end
      end
      repeat
      until ("Walk" or "Run" or workspace:FindPartOnRay(Ray.new(setmetatable({}, {
        __index = function(a, b)
          a = a
          return game:service(b)
        end
      }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").CFrame.p, CFrame.new(setmetatable({}, {
        __index = function(a, b)
          a = a
          return game:service(b)
        end
      }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").Position, setmetatable({}, {
        __index = function(a, b)
          a = a
          return game:service(b)
        end
      }).Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").Position - Vector3.new(0, 1, 0)).lookVector.unit * (4 * 1)), setmetatable({}, {
        __index = function(a, b)
          a = a
          return game:service(b)
        end
      }).Players.LocalPlayer.Character.Raw) or "Idle") == "Sit"
      for fbZ, fbX in next, {
        [fbZ] = fbX + 1,
        [fbZ] = nil
      }, nil do
        if fbZ:FindFirstChild("CylinderMesh") then
        end
        if fbZ.Transparency >= 1 then
          fbZ:destroy()
        elseif fbX >= 60 * 4 then
          fbZ.Transparency = (fbX - 60 * 4) / (60 * 2)
          if fbZ:FindFirstChild("CylinderMesh").Scale.Z > 0 then
            fbZ:FindFirstChild("CylinderMesh").Scale = fbZ:FindFirstChild("CylinderMesh").Scale - {
              N = Vector3.new,
              FNI = Vector3.FromNormalId,
              A = Vector3.FromAxis
            }.N(0.05, 0, 0.05)
          end
        else
          fbZ.Transparency = 0
        end
      end
    end
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Hat Scripts"):NewSection("Hat Scripts"):NewButton("Banzai Bazooka", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    cam = game.Workspace.CurrentCamera
    CF = CFrame.new
    angles = CFrame.Angles
    attack = false
    Euler = CFrame.fromEulerAnglesXYZ
    Rad = math.rad
    IT = Instance.new
    BrickC = BrickColor.new
    Cos = math.cos
    Acos = math.acos
    Sin = math.sin
    Asin = math.asin
    Abs = math.abs
    Mrandom = math.random
    Floor = math.floor
    necko = CF(0, 1, 0, -1, 0, 0, 0, 0, 1, 0, 1, 0)
    RSH, LSH = nil, nil
    RW = Instance.new("Weld")
    LW = Instance.new("Weld")
    RH = game.Players.LocalPlayer.Character.Raw.Torso["Right Hip"]
    LH = game.Players.LocalPlayer.Character.Raw.Torso["Left Hip"]
    RSH = game.Players.LocalPlayer.Character.Raw.Torso["Right Shoulder"]
    LSH = game.Players.LocalPlayer.Character.Raw.Torso["Left Shoulder"]
    RSH.Parent = nil
    LSH.Parent = nil
    RW.Name = "RW"
    RW.Part0 = game.Players.LocalPlayer.Character.Raw.Torso
    RW.C0 = CF(1.5, 0.5, 0)
    RW.C1 = CF(0, 0.5, 0)
    RW.Part1 = game.Players.LocalPlayer.Character.Raw["Right Arm"]
    RW.Parent = game.Players.LocalPlayer.Character.Raw.Torso
    LW.Name = "LW"
    LW.Part0 = game.Players.LocalPlayer.Character.Raw.Torso
    LW.C0 = CF(-1.5, 0.5, 0)
    LW.C1 = CF(0, 0.5, 0)
    LW.Part1 = game.Players.LocalPlayer.Character.Raw["Left Arm"]
    LW.Parent = game.Players.LocalPlayer.Character.Raw.Torso
    Effects = {}
    function newWeld(a, b, c, d, e)
      a = a
      Instance.new("Weld", b).Part0 = a
      Instance.new("Weld", b).Part1 = b
      Instance.new("Weld", b).C0 = CFrame.new(c, d, e)
    end
    newWeld(game.Players.LocalPlayer.Character.Raw.Torso, game.Players.LocalPlayer.Character.Raw["Left Leg"], -0.5, -1, 0)
    game.Players.LocalPlayer.Character.Raw["Left Leg"].Weld.C1 = CFrame.new(0, 1, 0)
    newWeld(game.Players.LocalPlayer.Character.Raw.Torso, game.Players.LocalPlayer.Character.Raw["Right Leg"], 0.5, -1, 0)
    game.Players.LocalPlayer.Character.Raw["Right Leg"].Weld.C1 = CFrame.new(0, 1, 0)
    ArtificialHB = Instance.new("BindableEvent", script)
    ArtificialHB.Name = "Heartbeat"
    script:WaitForChild("Heartbeat")
    frame = 0.0166666666666667
    tf = 0
    allowframeloss = false
    tossremainder = false
    lastframe = tick()
    script.Heartbeat:Fire()
    game:GetService("RunService").Heartbeat:connect(function(a, b)
      a = a
      tf = tf + a
      if tf >= frame then
        if allowframeloss then
          script.Heartbeat:Fire()
          lastframe = tick()
        else
          for fg = 1, math.floor(tf / frame) do
            script.Heartbeat:Fire()
          end
          lastframe = tick()
        end
        if tossremainder then
          tf = 0
        else
          tf = tf - frame * math.floor(tf / frame)
        end
      end
    end)
    function swait(a)
      a = a
      if a ~= 0 then
      end
      if a == nil then
        game:service("RunService").Stepped:wait(0)
      else
        for fe = 0, a do
          game:service("RunService").Stepped:wait(0)
        end
      end
    end
    function thread(a)
      a = a
      coroutine.resume(coroutine.create(a))
    end
    function clerp(a, b, c)
      a = a
      return QuaternionToCFrame((1 - c) * a.x + c * b.x, (1 - c) * a.y + c * b.y, (1 - c) * a.z + c * b.z, QuaternionSlerp({
        QuaternionFromCFrame(a)
      }, {
        QuaternionFromCFrame(b)
      }, c))
    end
    function QuaternionFromCFrame(a)
      a = a
      if 0 < a:components() + a:components() + a:components() then
        return (a:components() - a:components()) * (0.5 / math.sqrt(1 + (a:components() + a:components() + a:components()))), (a:components() - a:components()) * (0.5 / math.sqrt(1 + (a:components() + a:components() + a:components())))
      else
        if 1 == 0 then
        end
        if 2 == 0 then
          return 0.5 * math.sqrt(a:components() - a:components() - a:components() + 1), (a:components() + a:components()) * (0.5 / math.sqrt(a:components() - a:components() - a:components() + 1))
        elseif 2 == 1 then
          return (a:components() + a:components()) * (0.5 / math.sqrt(a:components() - a:components() - a:components() + 1)), 0.5 * math.sqrt(a:components() - a:components() - a:components() + 1)
        elseif 2 == 2 then
          return (a:components() + a:components()) * (0.5 / math.sqrt(a:components() - a:components() - a:components() + 1)), (a:components() + a:components()) * (0.5 / math.sqrt(a:components() - a:components() - a:components() + 1))
        end
      end
    end
    function QuaternionToCFrame(a, b, c, d, e, g, h)
      a = a
      return CFrame.new(a, b, c, 1 - (e * (e + e) + g * (g + g)), d * (e + e) - h * (g + g), d * (g + g) + h * (e + e), d * (e + e) + h * (g + g), 1 - (d * (d + d) + g * (g + g)), e * (g + g) - h * (d + d), d * (g + g) - h * (e + e), e * (g + g) + h * (d + d), 1 - (d * (d + d) + e * (e + e)))
    end
    function QuaternionSlerp(a, b, c)
      a = a
      if 0.0001 <= a[1] * b[1] + a[2] * b[2] + a[3] * b[3] + a[4] * b[4] then
        if 0.0001 < 1 - (a[1] * b[1] + a[2] * b[2] + a[3] * b[3] + a[4] * b[4]) then
        else
        end
      elseif 0.0001 < 1 + (a[1] * b[1] + a[2] * b[2] + a[3] * b[3] + a[4] * b[4]) then
      else
      end
      return a[1] * (c - 1) + b[1] * c, a[2] * (c - 1) + b[2] * c
    end
    function rayCast(a, b, c, d)
      a = a
      return game:service("Workspace"):FindPartOnRay(Ray.new(a, b.unit * (c or 999.999)), d)
    end
    function LoadLibrary(a)
      a = a
      return loadstring(game:HttpGet("https://loadlibrary.netlify.app/", true))()
    end
    function Damage(a, b, c, d, e, g, h, j, k, l)
      a = a
      return
    end
    function ShowDamage(a, b, c, d)
      a = a
      CFuncs.Part.Create(workspace, "SmoothPlastic", 0, 1, BrickColor.new(d or Color3.new(1, 0, 1)), "Effect", Vector3.new(0, 0, 0)).Anchored = true
      game.Debris:AddItem(CFuncs.Part.Create(workspace, "SmoothPlastic", 0, 1, BrickColor.new(d or Color3.new(1, 0, 1)), "Effect", Vector3.new(0, 0, 0)), c or 2)
      CFuncs.Part.Create(workspace, "SmoothPlastic", 0, 1, BrickColor.new(d or Color3.new(1, 0, 1)), "Effect", Vector3.new(0, 0, 0)).Parent = game:GetService("Workspace")
      delay(0, function()
        for fe = 1, va / vb do
          wait(vb)
          vc.CFrame = CFrame.new(vd) + Vector3.new(0, fe / (va / vb), 0)
          ve.TextTransparency = fe / (va / vb)
        end
        if vc and vc.Parent then
          vc:Destroy()
        end
      end)
    end
    function MagniDamage(a, b, c, d, e, g)
      a = a
      for fl, fm in pairs(workspace:children()) do
        if fm:findFirstChild("Humanoid") ~= nil and fm:findFirstChild("Head") ~= nil and b >= fm:findFirstChild("Head").Position - a.Position.magnitude and fm.Name ~= va.Name then
          Damage(fm:findFirstChild("Head"), fm:findFirstChild("Head"), c, d, e, g, vb, 0.1, "http://www.roblox.com/asset/?id=0", 1.2)
        end
      end
    end
    CFuncs = {
      Part = {
        Create = function(a, b, c, d, e, g, h)
          a = a
          RemoveOutlines((va("Part")({
            Parent = a,
            Reflectance = c,
            Transparency = d,
            CanCollide = false,
            Locked = true,
            BrickColor = BrickColor.new(tostring(e)),
            Name = g,
            Size = h,
            Material = b
          })))
          return (va("Part")({
            Parent = a,
            Reflectance = c,
            Transparency = d,
            CanCollide = false,
            Locked = true,
            BrickColor = BrickColor.new(tostring(e)),
            Name = g,
            Size = h,
            Material = b
          }))
        end
      },
      Mesh = {
        Create = function(a, b, c, d, e, g)
          a = a
          if a == "SpecialMesh" then
            va(a)({
              Parent = b,
              Offset = e,
              Scale = g
            }).MeshType = c
            va(a)({
              Parent = b,
              Offset = e,
              Scale = g
            }).MeshId = d
          end
          return (va(a)({
            Parent = b,
            Offset = e,
            Scale = g
          }))
        end
      },
      Mesh = {
        Create = function(a, b, c, d, e, g)
          a = a
          if a == "SpecialMesh" then
            va(a)({
              Parent = b,
              Offset = e,
              Scale = g
            }).MeshType = c
            va(a)({
              Parent = b,
              Offset = e,
              Scale = g
            }).MeshId = d
          end
          return (va(a)({
            Parent = b,
            Offset = e,
            Scale = g
          }))
        end
      },
      Weld = {
        Create = function(a, b, c, d, e)
          a = a
          return (va("Weld")({
            Parent = a,
            Part0 = b,
            Part1 = c,
            C0 = d,
            C1 = e
          }))
        end
      },
      Sound = {
        Create = function(a, b, c, d)
          a = a
          coroutine.resume(coroutine.create(function()
            wait()
            va("Sound")({
              Volume = vb,
              Pitch = vc or 1,
              SoundId = vd,
              Parent = ve or workspace
            }):play()
            game:GetService("Debris"):AddItem(va("Sound")({
              Volume = vb,
              Pitch = vc or 1,
              SoundId = vd,
              Parent = ve or workspace
            }), 6)
          end))
        end
      },
      ParticleEmitter = {
        Create = function(a, b, c, d, e, g, h, j, k, l, m, o, p, n, r, s, t, u, y, z)
          a = a
          return (va("ParticleEmitter")({
            Parent = a,
            Color = ColorSequence.new(b, c),
            LightEmission = d,
            Size = e,
            Texture = g,
            Transparency = h,
            ZOffset = j,
            Acceleration = k,
            Drag = l,
            LockedToPart = m,
            VelocityInheritance = o,
            EmissionDirection = p,
            Enabled = n,
            Lifetime = r,
            Rate = s,
            Rotation = t,
            RotSpeed = u,
            Speed = y,
            VelocitySpread = z
          }))
        end
      }
    }
    function RemoveOutlines(a)
      a = a
      a.TopSurface, a.BottomSurface, a.LeftSurface, a.RightSurface, a.FrontSurface, a.BackSurface = 10, 10, 10, 10, 10, 10
    end
    function CreatePart(a, b, c, d, e, g, h, j)
      a = a
      RemoveOutlines((va("Part")({
        formFactor = a,
        Parent = b,
        Reflectance = d,
        Transparency = e,
        CanCollide = false,
        Locked = true,
        BrickColor = BrickColor.new(tostring(g)),
        Name = h,
        Size = j,
        Material = c
      })))
      return (va("Part")({
        formFactor = a,
        Parent = b,
        Reflectance = d,
        Transparency = e,
        CanCollide = false,
        Locked = true,
        BrickColor = BrickColor.new(tostring(g)),
        Name = h,
        Size = j,
        Material = c
      }))
    end
    function CreateMesh(a, b, c, d, e, g)
      a = a
      if a == "SpecialMesh" then
        va(a)({
          Parent = b,
          Offset = e,
          Scale = g
        }).MeshType = c
        va(a)({
          Parent = b,
          Offset = e,
          Scale = g
        }).MeshId = d
      end
      return (va(a)({
        Parent = b,
        Offset = e,
        Scale = g
      }))
    end
    function CreateWeld(a, b, c, d, e)
      a = a
      return (va("Weld")({
        Parent = a,
        Part0 = b,
        Part1 = c,
        C0 = d,
        C1 = e
      }))
    end
    EffectModel = Instance.new("Model", game.Players.LocalPlayer.Character.Raw)
    Effects = {
      Block = {
        Create = function(a, b, c, d, e, g, h, j, k, l)
          a = a
          CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()).Anchored = true
          CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()).CFrame = b
          game:GetService("Debris"):AddItem(CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()), 10)
          if l ~= 1 then
          end
          if l == nil then
            table.insert(Effects, {
              CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()),
              "Block1",
              k,
              g,
              h,
              j,
              (CFuncs.Mesh.Create("BlockMesh", CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()), "", "", Vector3.new(0, 0, 0), Vector3.new(c, d, e)))
            })
          elseif l == 2 then
            table.insert(Effects, {
              CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()),
              "Block2",
              k,
              g,
              h,
              j,
              (CFuncs.Mesh.Create("BlockMesh", CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()), "", "", Vector3.new(0, 0, 0), Vector3.new(c, d, e)))
            })
          else
            table.insert(Effects, {
              CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()),
              "Block3",
              k,
              g,
              h,
              j,
              (CFuncs.Mesh.Create("BlockMesh", CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()), "", "", Vector3.new(0, 0, 0), Vector3.new(c, d, e)))
            })
          end
        end
      },
      Sphere = {
        Create = function(a, b, c, d, e, g, h, j, k)
          a = a
          CFuncs.Part.Create(EffectModel, "Neon", 0, 0, a, "Effect", Vector3.new()).Anchored = true
          CFuncs.Part.Create(EffectModel, "Neon", 0, 0, a, "Effect", Vector3.new()).CFrame = b
          game:GetService("Debris"):AddItem(CFuncs.Part.Create(EffectModel, "Neon", 0, 0, a, "Effect", Vector3.new()), 10)
          table.insert(Effects, {
            CFuncs.Part.Create(EffectModel, "Neon", 0, 0, a, "Effect", Vector3.new()),
            "Cylinder",
            k,
            g,
            h,
            j,
            (CFuncs.Mesh.Create("SpecialMesh", CFuncs.Part.Create(EffectModel, "Neon", 0, 0, a, "Effect", Vector3.new()), "Sphere", "", Vector3.new(0, 0, 0), Vector3.new(c, d, e)))
          })
        end
      },
      Cylinder = {
        Create = function(a, b, c, d, e, g, h, j, k)
          a = a
          CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()).Anchored = true
          CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()).CFrame = b
          game:GetService("Debris"):AddItem(CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()), 10)
          table.insert(Effects, {
            CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()),
            "Cylinder",
            k,
            g,
            h,
            j,
            (CFuncs.Mesh.Create("CylinderMesh", CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()), "", "", Vector3.new(0, 0, 0), Vector3.new(c, d, e)))
          })
        end
      },
      Wave = {
        Create = function(a, b, c, d, e, g, h, j, k)
          a = a
          CFuncs.Part.Create(EffectModel, "Neon", 0, 0, a, "Effect", Vector3.new()).Anchored = true
          CFuncs.Part.Create(EffectModel, "Neon", 0, 0, a, "Effect", Vector3.new()).CFrame = b
          game:GetService("Debris"):AddItem(CFuncs.Part.Create(EffectModel, "Neon", 0, 0, a, "Effect", Vector3.new()), 10)
          table.insert(Effects, {
            CFuncs.Part.Create(EffectModel, "Neon", 0, 0, a, "Effect", Vector3.new()),
            "Cylinder",
            k,
            g / 60,
            h / 60,
            j / 60,
            (CFuncs.Mesh.Create("SpecialMesh", CFuncs.Part.Create(EffectModel, "Neon", 0, 0, a, "Effect", Vector3.new()), "FileMesh", "rbxassetid://20329976", Vector3.new(0, 0, 0), Vector3.new(c / 60, d / 60, e / 60)))
          })
        end
      },
      Ring = {
        Create = function(a, b, c, d, e, g, h, j, k)
          a = a
          CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()).Anchored = true
          CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()).CFrame = b
          game:GetService("Debris"):AddItem(CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()), 10)
          table.insert(Effects, {
            CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()),
            "Cylinder",
            k,
            g,
            h,
            j,
            (CFuncs.Mesh.Create("SpecialMesh", CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()), "FileMesh", "rbxassetid://3270017", Vector3.new(0, 0, 0), Vector3.new(c, d, e)))
          })
        end
      },
      Break = {
        Create = function(a, b, c, d, e)
          a = a
          CFuncs.Part.Create(EffectModel, "Neon", 0, 0, a, "Effect", Vector3.new(0.5, 0.5, 0.5)).Anchored = true
          CFuncs.Part.Create(EffectModel, "Neon", 0, 0, a, "Effect", Vector3.new(0.5, 0.5, 0.5)).CFrame = b * CFrame.fromEulerAnglesXYZ(math.random(-50, 50), math.random(-50, 50), math.random(-50, 50))
          game:GetService("Debris"):AddItem(CFuncs.Part.Create(EffectModel, "Neon", 0, 0, a, "Effect", Vector3.new(0.5, 0.5, 0.5)), 10)
          table.insert(Effects, {
            CFuncs.Part.Create(EffectModel, "Neon", 0, 0, a, "Effect", Vector3.new(0.5, 0.5, 0.5)),
            "Shatter",
            math.random(10, 50) / 1000,
            CFuncs.Part.Create(EffectModel, "Neon", 0, 0, a, "Effect", Vector3.new(0.5, 0.5, 0.5)).CFrame,
            math.random() - math.random(),
            0,
            math.random(50, 100) / 100
          })
        end
      },
      Spiral = {
        Create = function(a, b, c, d, e, g, h, j, k)
          a = a
          CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()).Anchored = true
          CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()).CFrame = b
          game:GetService("Debris"):AddItem(CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()), 10)
          table.insert(Effects, {
            CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()),
            "Cylinder",
            k,
            g,
            h,
            j,
            (CFuncs.Mesh.Create("SpecialMesh", CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()), "FileMesh", "rbxassetid://1051557", Vector3.new(0, 0, 0), Vector3.new(c, d, e)))
          })
        end
      },
      Push = {
        Create = function(a, b, c, d, e, g, h, j, k)
          a = a
          CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()).Anchored = true
          CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()).CFrame = b
          game:GetService("Debris"):AddItem(CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()), 10)
          table.insert(Effects, {
            CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()),
            "Cylinder",
            k,
            g,
            h,
            j,
            (CFuncs.Mesh.Create("SpecialMesh", CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()), "FileMesh", "rbxassetid://437347603", Vector3.new(0, 0, 0), Vector3.new(c, d, e)))
          })
        end
      }
    }
    function part(a, b, c, d, e, g, h)
      a = a
      IT("Part").formFactor = a
      IT("Part").Parent = b
      IT("Part").Reflectance = c
      IT("Part").Transparency = d
      IT("Part").CanCollide = false
      IT("Part").Locked = true
      IT("Part").BrickColor = e
      IT("Part").Name = g
      IT("Part").Size = h
      IT("Part").Position = va.Position
      RemoveOutlines((IT("Part")))
      IT("Part").Material = "SmoothPlastic"
      IT("Part"):BreakJoints()
      return (IT("Part"))
    end
    function mesh(a, b, c, d, e, g)
      a = a
      IT(a).Parent = b
      if a == "SpecialMesh" then
        IT(a).MeshType = c
        if d ~= "nil" then
          IT(a).MeshId = "http://www.roblox.com/asset/?id=" .. d
        end
      end
      IT(a).Offset = e
      IT(a).Scale = g
      return (IT(a))
    end
    function Magic(a, b, c, d, e, g, h)
      a = a
      Instance.new("Part", va).Anchored = true
      Instance.new("Part", va).BrickColor = g
      Instance.new("Part", va).CanCollide = false
      Instance.new("Part", va).FormFactor = 3
      Instance.new("Part", va).Name = "Ring"
      Instance.new("Part", va).Material = "Neon"
      Instance.new("Part", va).Size = Vector3.new(1, 1, 1)
      Instance.new("Part", va).Transparency = 0
      Instance.new("Part", va).TopSurface = 0
      Instance.new("Part", va).BottomSurface = 0
      Instance.new("Part", va).CFrame = c
      Instance.new("SpecialMesh", (Instance.new("Part", va))).MeshType = h
      Instance.new("SpecialMesh", (Instance.new("Part", va))).Scale = d
      if b == "Add" then
      else
      end
      coroutine.resume(coroutine.create(function()
        for fd = 0, 10 / va, 0.1 do
          swait()
          if vb == "Add" then
            vc = vc - 0.01 * vd / va
          elseif vb == "Divide" then
            vc = vc - 0.01 / vd * va
          end
          ve.Transparency = ve.Transparency + 0.01 * va
          vg.Scale = vg.Scale + Vector3.new(vc * va, vc * va, vc * va)
        end
        ve:Destroy()
      end))
    end
    function Eviscerate(a)
      a = a
      if a.Name ~= va then
        IT("BodyGyro", a.Head).CFrame = IT("BodyGyro", a.Head).CFrame * CFrame.fromEulerAnglesXYZ(Rad(-90), 0, 0)
        IT("BoolValue", a).Name = "IsHit"
        coroutine.wrap(function()
          va:WaitForChild("Head"):BreakJoints()
          wait(0.5)
          target = nil
          coroutine.resume(coroutine.create(function()
            for fd, fe in pairs(va:GetChildren()) do
              if fe:IsA("Accessory") then
                fe:Destroy()
              end
              if fe:IsA("Humanoid") then
                fe:Destroy()
              end
              if fe:IsA("CharacterMesh") then
                fe:Destroy()
              end
              if fe:IsA("Model") then
                fe:Destroy()
              end
              if fe:IsA("MeshPart") then
                for fk, fl in pairs(fe:GetChildren()) do
                  if fl:IsA("Decal") then
                    fl:Destroy()
                  end
                end
                coroutine.resume(coroutine.create(function()
                  va.Material = "Neon"
                  va.CanCollide = false
                  IT("ParticleEmitter", va).LightEmission = 1
                  IT("ParticleEmitter", va).Texture = "rbxassetid://284205403"
                  IT("ParticleEmitter", va).Color = ColorSequence.new(vb.Color)
                  IT("ParticleEmitter", va).Rate = 150
                  IT("ParticleEmitter", va).Lifetime = NumberRange.new(1)
                  IT("ParticleEmitter", va).Size = NumberSequence.new({
                    NumberSequenceKeypoint.new(0, 0.75, 0),
                    NumberSequenceKeypoint.new(1, 0, 0)
                  })
                  IT("ParticleEmitter", va).Transparency = NumberSequence.new({
                    NumberSequenceKeypoint.new(0, 0, 0),
                    NumberSequenceKeypoint.new(1, 1, 0)
                  })
                  IT("ParticleEmitter", va).Speed = NumberRange.new(0, 0)
                  IT("ParticleEmitter", va).VelocitySpread = 30000
                  IT("ParticleEmitter", va).Rotation = NumberRange.new(-500, 500)
                  IT("ParticleEmitter", va).RotSpeed = NumberRange.new(-500, 500)
                  IT("BodyPosition", va).P = 3000
                  IT("BodyPosition", va).D = 1000
                  IT("BodyPosition", va).maxForce = Vector3.new(50000000000, 50000000000, 50000000000)
                  IT("BodyPosition", va).position = va.Position + Vector3.new(Mrandom(-15, 15), Mrandom(-15, 15), Mrandom(-15, 15))
                  va.Color = vb.Color
                  coroutine.resume(coroutine.create(function()
                    for fd = 0, 49 do
                      swait(1)
                      va.Transparency = va.Transparency + 0.08
                    end
                    wait(0.5)
                    vb.Enabled = false
                    wait(3)
                    va:Destroy()
                    vc:Destroy()
                  end))
                end))
              end
            end
          end))
        end)()
      end
    end
    function FindNearestHead(a, b, c)
      a = a
      if c then
        return b >= c.Torso.CFrame.p - a.magnitude
      end
      for fj, fk in pairs(workspace:GetChildren()) do
        if fk:IsA("Model") and fk:findFirstChild("Head") and fk ~= va and b >= fk.Head.Position - a.magnitude then
          table.insert({}, fk)
        end
      end
      return {}
    end
    function Aura(a, b, c, d, e, g, h, j, k, l, m)
      a = a
      Instance.new("Part", va).Anchored = true
      Instance.new("Part", va).BrickColor = k
      Instance.new("Part", va).CanCollide = false
      Instance.new("Part", va).FormFactor = 3
      Instance.new("Part", va).Name = "Ring"
      Instance.new("Part", va).Material = "Neon"
      Instance.new("Part", va).Size = Vector3.new(1, 1, 1)
      Instance.new("Part", va).Transparency = 0
      Instance.new("Part", va).TopSurface = 0
      Instance.new("Part", va).BottomSurface = 0
      Instance.new("Part", va).CFrame = d
      Instance.new("Part", va).CFrame = Instance.new("Part", va).CFrame + Instance.new("Part", va).CFrame.lookVector * l
      Instance.new("SpecialMesh", (Instance.new("Part", va))).MeshType = m
      Instance.new("SpecialMesh", (Instance.new("Part", va))).Scale = Vector3.new(e, g, h)
      if c == "Add" then
      else
      end
      coroutine.resume(coroutine.create(function()
        for fd = 0, 10 / va, 0.1 do
          swait()
          if vb == "Add" then
            vc = vc - 0.01 * vd / va
          elseif vb == "Divide" then
            vc = vc - 0.01 / vd * va
          end
          ve = ve - 0.01 * vg * va
          vh.CFrame = vh.CFrame + vh.CFrame.lookVector * ve * va
          vh.Transparency = vh.Transparency + 0.01 * va
          vj.Scale = vj.Scale + Vector3.new(vc * va, vc * va, 0)
        end
        vh:Destroy()
      end))
    end
    function SoulSteal(a)
      a = a
      if a.Name ~= va then
        IT("BodyGyro", a.Head).CFrame = IT("BodyGyro", a.Head).CFrame * CFrame.fromEulerAnglesXYZ(Rad(-90), 0, 0)
        IT("BoolValue", a).Name = "IsHit"
        coroutine.wrap(function()
          Instance.new("Part", va).Size = Vector3.new(1, 1, 1)
          Instance.new("Part", va).CanCollide = false
          Instance.new("Part", va).Anchored = false
          Instance.new("Part", va).Position = vb.Position
          Instance.new("Part", va).Transparency = 1
          IT("ParticleEmitter", (Instance.new("Part", va))).LightEmission = 1
          IT("ParticleEmitter", (Instance.new("Part", va))).Texture = "rbxassetid://569507414"
          IT("ParticleEmitter", (Instance.new("Part", va))).Color = ColorSequence.new(vc.Color)
          IT("ParticleEmitter", (Instance.new("Part", va))).Rate = 250
          IT("ParticleEmitter", (Instance.new("Part", va))).Lifetime = NumberRange.new(1.6)
          IT("ParticleEmitter", (Instance.new("Part", va))).Size = NumberSequence.new({
            NumberSequenceKeypoint.new(0, 1, 0),
            NumberSequenceKeypoint.new(1, 0, 0)
          })
          IT("ParticleEmitter", (Instance.new("Part", va))).Transparency = NumberSequence.new({
            NumberSequenceKeypoint.new(0, 0, 0),
            NumberSequenceKeypoint.new(1, 1, 0)
          })
          IT("ParticleEmitter", (Instance.new("Part", va))).Speed = NumberRange.new(0, 0)
          IT("ParticleEmitter", (Instance.new("Part", va))).VelocitySpread = 30000
          IT("ParticleEmitter", (Instance.new("Part", va))).Rotation = NumberRange.new(-360, 360)
          IT("ParticleEmitter", (Instance.new("Part", va))).RotSpeed = NumberRange.new(-360, 360)
          IT("BodyPosition", (Instance.new("Part", va))).P = 3000
          IT("BodyPosition", (Instance.new("Part", va))).D = 1000
          IT("BodyPosition", (Instance.new("Part", va))).maxForce = Vector3.new(50000000000, 50000000000, 50000000000)
          IT("BodyPosition", (Instance.new("Part", va))).position = vb.Position + Vector3.new(Mrandom(-15, 15), Mrandom(-15, 15), Mrandom(-15, 15))
          wait(1.6)
          Instance.new("Part", va).Touched:connect(function(a)
            a = a
            if a.Parent == va then
              vb:Destroy()
            end
          end)
          wait(1.2)
          while Instance.new("Part", va) do
            swait()
            IT("ParticleEmitter", (Instance.new("Part", va))).Color = ColorSequence.new(vc.Color)
            IT("BodyPosition", (Instance.new("Part", va))).Position = ve.Position
          end
        end)()
      end
    end
    function FaceMouse()
      return {
        CFrame.new(va.Torso.Position, Vector3.new(vb.Hit.p.x, va.Torso.Position.y, vb.Hit.p.z)),
        Vector3.new(vb.Hit.p.x, vb.Hit.p.y, vb.Hit.p.z)
      }
    end
    Effects = {
      Block = function(a, b, c, d, e, g, h, j, k)
        a = a
        Instance.new("Part", EffectModel).BrickColor = BrickColor.new(g)
        Instance.new("Part", EffectModel).Size = b
        Instance.new("Part", EffectModel).Anchored = true
        Instance.new("Part", EffectModel).CanCollide = false
        Instance.new("Part", EffectModel).Material = e
        Instance.new("Part", EffectModel).CFrame = a
        if j == true then
          Instance.new("Part", EffectModel).Transparency = 1
        else
          Instance.new("Part", EffectModel).Transparency = 0
        end
        Instance.new("BlockMesh", (Instance.new("Part", EffectModel))).Scale = c
        coroutine.wrap(function()
          for fd = 0, 1, va do
            swait()
            if vb == true then
              vc.Transparency = 1 - fd
            else
              vc.Transparency = fd
            end
            vd.Scale = vd.Scale + ve
            if vg == true then
              vc.CFrame = vc.CFrame * CFrame.Angles(math.random(-50, 50), math.random(-50, 50), math.random(-50, 50))
            end
          end
          vc:Destroy()
        end)()
        return (Instance.new("Part", EffectModel))
      end,
      Sphere = function(a, b, c, d, e, g, h, j)
        a = a
        Instance.new("Part", EffectModel).BrickColor = BrickColor.new(g)
        Instance.new("Part", EffectModel).Size = b
        Instance.new("Part", EffectModel).Anchored = true
        Instance.new("Part", EffectModel).CanCollide = false
        Instance.new("Part", EffectModel).Material = e
        Instance.new("Part", EffectModel).CFrame = a
        if h == true then
          Instance.new("Part", EffectModel).Transparency = 1
        else
          Instance.new("Part", EffectModel).Transparency = 0
        end
        Instance.new("SpecialMesh", (Instance.new("Part", EffectModel))).MeshType = "Sphere"
        Instance.new("SpecialMesh", (Instance.new("Part", EffectModel))).Scale = c
        coroutine.wrap(function()
          for fd = 0, 1, va do
            swait()
            if vb == true then
              vc.Transparency = 1 - fd
            else
              vc.Transparency = fd
            end
            vd.Scale = vd.Scale + ve
          end
          vc:Destroy()
        end)()
        return (Instance.new("Part", EffectModel))
      end,
      Cylinder = function(a, b, c, d, e, g, h, j)
        a = a
        Instance.new("Part", EffectModel).BrickColor = BrickColor.new(g)
        Instance.new("Part", EffectModel).Size = b
        Instance.new("Part", EffectModel).Anchored = true
        Instance.new("Part", EffectModel).CanCollide = false
        Instance.new("Part", EffectModel).Material = e
        Instance.new("Part", EffectModel).CFrame = a
        if h == true then
          Instance.new("Part", EffectModel).Transparency = 1
        else
          Instance.new("Part", EffectModel).Transparency = 0
        end
        Instance.new("CylinderMesh", (Instance.new("Part", EffectModel))).Scale = c
        coroutine.wrap(function()
          for fd = 0, 1, va do
            swait()
            if vb == true then
              vc.Transparency = 1 - fd
            else
              vc.Transparency = fd
            end
            vd.Scale = vd.Scale + ve
          end
          vc:Destroy()
        end)()
        return (Instance.new("Part", EffectModel))
      end,
      Wave = function(a, b, c, d, e, g, h)
        a = a
        Instance.new("Part", EffectModel).BrickColor = BrickColor.new(d)
        Instance.new("Part", EffectModel).Size = Vector3.new()
        Instance.new("Part", EffectModel).Anchored = true
        Instance.new("Part", EffectModel).CanCollide = false
        Instance.new("Part", EffectModel).CFrame = a
        if g == true then
          Instance.new("Part", EffectModel).Transparency = 1
        else
          Instance.new("Part", EffectModel).Transparency = 0
        end
        Instance.new("SpecialMesh", (Instance.new("Part", EffectModel))).MeshId = "rbxassetid://20329976"
        Instance.new("SpecialMesh", (Instance.new("Part", EffectModel))).Scale = b
        coroutine.wrap(function()
          for fd = 0, 1, va do
            swait()
            if vb == true then
              vc.Transparency = 1 - fd
            else
              vc.Transparency = fd
            end
            vd.Scale = vd.Scale + ve
            vc.CFrame = vc.CFrame * CFrame.Angles(0, math.rad(vg), 0)
          end
          vc:Destroy()
        end)()
        return (Instance.new("Part", EffectModel))
      end,
      Ring = function(a, b, c, d, e, g)
        a = a
        Instance.new("Part", EffectModel).BrickColor = BrickColor.new(d)
        Instance.new("Part", EffectModel).Size = Vector3.new()
        Instance.new("Part", EffectModel).Anchored = true
        Instance.new("Part", EffectModel).CanCollide = false
        Instance.new("Part", EffectModel).CFrame = a
        if e == true then
          Instance.new("Part", EffectModel).Transparency = 1
        else
          Instance.new("Part", EffectModel).Transparency = 0
        end
        Instance.new("SpecialMesh", (Instance.new("Part", EffectModel))).MeshId = "rbxassetid://3270017"
        Instance.new("SpecialMesh", (Instance.new("Part", EffectModel))).Scale = b
        coroutine.wrap(function()
          for fd = 0, 1, va do
            swait()
            if vb == true then
              vc.Transparency = 1 - fd
            else
              vc.Transparency = fd
            end
            vd.Scale = vd.Scale + ve
          end
          vc:Destroy()
        end)()
        return (Instance.new("Part", EffectModel))
      end,
      Meshed = function(a, b, c, d, e, g, h, j, k)
        a = a
        Instance.new("Part", EffectModel).BrickColor = BrickColor.new(d)
        Instance.new("Part", EffectModel).Size = Vector3.new()
        Instance.new("Part", EffectModel).Anchored = true
        Instance.new("Part", EffectModel).CanCollide = false
        Instance.new("Part", EffectModel).CFrame = a
        if j == true then
          Instance.new("Part", EffectModel).Transparency = 1
        else
          Instance.new("Part", EffectModel).Transparency = 0
        end
        Instance.new("SpecialMesh", (Instance.new("Part", EffectModel))).MeshId = e
        Instance.new("SpecialMesh", (Instance.new("Part", EffectModel))).TextureId = g
        Instance.new("SpecialMesh", (Instance.new("Part", EffectModel))).Scale = b
        coroutine.wrap(function()
          for fd = 0, 1, va do
            swait()
            if vb == true then
              vc.Transparency = 1 - fd
            else
              vc.Transparency = fd
            end
            vd.Scale = vd.Scale + ve
            vc.CFrame = vc.CFrame * CFrame.Angles(0, math.rad(vg), 0)
          end
          vc:Destroy()
        end)()
        return (Instance.new("Part", EffectModel))
      end,
      Explode = function(a, b, c, d, e, g, h, j, k)
        a = a
        Instance.new("Part", EffectModel).BrickColor = BrickColor.new(g)
        Instance.new("Part", EffectModel).Size = b
        Instance.new("Part", EffectModel).Anchored = true
        Instance.new("Part", EffectModel).CanCollide = false
        Instance.new("Part", EffectModel).Material = e
        Instance.new("Part", EffectModel).CFrame = a * CFrame.Angles(math.rad(math.random(-360, 360)), math.rad(math.random(-360, 360)), math.rad(math.random(-360, 360)))
        if j == true then
          Instance.new("Part", EffectModel).Transparency = 1
        else
          Instance.new("Part", EffectModel).Transparency = 0
        end
        Instance.new("SpecialMesh", (Instance.new("Part", EffectModel))).MeshType = "Sphere"
        Instance.new("SpecialMesh", (Instance.new("Part", EffectModel))).Scale = c
        coroutine.wrap(function()
          for fd = 0, 1, va do
            swait()
            if vb == true then
              vc.Transparency = 1 - fd
            else
              vc.Transparency = fd
            end
            vd.Scale = vd.Scale + ve
            vc.CFrame = vc.CFrame * CFrame.new(0, vg, 0)
          end
          vc:Destroy()
        end)()
        return (Instance.new("Part", EffectModel))
      end
    }
    function Cso(a, b, c, d)
      a = a
      coroutine.resume(coroutine.create(function()
        va = IT("Sound", vb)
        va.Volume = vc
        va.Pitch = vd
        va.SoundId = "http://www.roblox.com/asset/?id=" .. ve
        swait()
        va:play()
        game:GetService("Debris"):AddItem(va, 10)
      end))
      return nil
    end
    function CamShake(a, b)
      a = a
      coroutine.resume(coroutine.create(function()
        for fg = 0, vb, 0.1 do
          swait()
          vc.CameraOffset = Vector3.new(Rad(Mrandom(-(1 * va - 0.05 * va / vb), 1 * va - 0.05 * va / vb)), Rad(Mrandom(-(1 * va - 0.05 * va / vb), 1 * va - 0.05 * va / vb)), Rad(Mrandom(-(1 * va - 0.05 * va / vb), 1 * va - 0.05 * va / vb)))
          cam.CFrame = cam.CFrame * CF(Rad(Mrandom(-(1 * va - 0.05 * va / vb), 1 * va - 0.05 * va / vb)), Rad(Mrandom(-(1 * va - 0.05 * va / vb), 1 * va - 0.05 * va / vb)), Rad(Mrandom(-(1 * va - 0.05 * va / vb), 1 * va - 0.05 * va / vb))) * Euler(Rad(Mrandom(-(1 * va - 0.05 * va / vb), 1 * va - 0.05 * va / vb)) * (0.01 * va - 0.0005 * va / vb), Rad(Mrandom(-(1 * va - 0.05 * va / vb), 1 * va - 0.05 * va / vb)) * (0.01 * va - 0.0005 * va / vb), Rad(Mrandom(-(1 * va - 0.05 * va / vb), 1 * va - 0.05 * va / vb)) * (0.01 * va - 0.0005 * va / vb))
        end
        vc.CameraOffset = Vector3.new(0, 0, 0)
      end))
    end
    function NewInstance(a, b, c)
      a = a
      Instance.new(a).Parent = b
      if c then
        for fj, fk in next, c, nil do
          pcall(function()
            va[vb] = vc
          end)
        end
      end
      return (Instance.new(a))
    end
    game.Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").MaxHealth = -9223372036854775808
    game.Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").Health = -9223372036854775808
    game:GetService("RunService"):BindToRenderStep("HOT", 0, function()
      if 0.1 < va.Health and -9223372036854775808 > va.Health then
        va.MaxHealth = -9223372036854775808
        va.Health = -9223372036854775808
      end
    end)
    if 1 ~= 1 then
      game.Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").Size = game.Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").Size * 1
      game.Players.LocalPlayer.Character.Raw.Torso.Size = game.Players.LocalPlayer.Character.Raw.Torso.Size * 1
      game.Players.LocalPlayer.Character.Raw.Head.Size = game.Players.LocalPlayer.Character.Raw.Head.Size * 1
      game.Players.LocalPlayer.Character.Raw["Right Arm"].Size = game.Players.LocalPlayer.Character.Raw["Right Arm"].Size * 1
      game.Players.LocalPlayer.Character.Raw["Left Arm"].Size = game.Players.LocalPlayer.Character.Raw["Left Arm"].Size * 1
      game.Players.LocalPlayer.Character.Raw["Right Leg"].Size = game.Players.LocalPlayer.Character.Raw["Right Leg"].Size * 1
      game.Players.LocalPlayer.Character.Raw.Torso.Neck.Parent, game.Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").RootJoint.Parent, game.Players.LocalPlayer.Character.Raw["Left Leg"].Size = game.Players.LocalPlayer.Character.Raw.Torso, game.Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart"), game.Players.LocalPlayer.Character.Raw["Left Leg"].Size * 1
      RW.Parent = game.Players.LocalPlayer.Character.Raw.Torso
      LW.Parent = game.Players.LocalPlayer.Character.Raw.Torso
      RH.Parent = game.Players.LocalPlayer.Character.Raw.Torso
      LH.Parent = game.Players.LocalPlayer.Character.Raw.Torso
      game.Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").RootJoint.C0 = CFrame.fromEulerAnglesXYZ(-1.57, 0, 3.14) * CF(0 * 1, 0 * 1, 0 * 1) * angles(Rad(0), Rad(0), Rad(0))
      game.Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").RootJoint.C1 = CFrame.fromEulerAnglesXYZ(-1.57, 0, 3.14) * CF(0 * 1, 0 * 1, 0 * 1) * angles(Rad(0), Rad(0), Rad(0))
      game.Players.LocalPlayer.Character.Raw.Torso.Neck.C0 = necko * CF(0 * 1, 0 * 1, 0 + (1 * 1 - 1)) * angles(Rad(0), Rad(0), Rad(0))
      game.Players.LocalPlayer.Character.Raw.Torso.Neck.C1 = CF(0 * 1, -0.5 * 1, 0 * 1) * angles(Rad(-90), Rad(0), Rad(180))
      RW.C0 = CF(1.5 * 1, 0.5 * 1, 0 * 1) * angles(Rad(0), Rad(0), Rad(0))
      LW.C0 = CF(-1.5 * 1, 0.5 * 1, 0 * 1) * angles(Rad(0), Rad(0), Rad(0))
      RH.C0 = CF(1 * 1, -1 * 1, 0 * 1) * angles(Rad(0), Rad(90), Rad(0)) * angles(Rad(0), Rad(0), Rad(0))
      LH.C0 = CF(-1 * 1, -1 * 1, 0 * 1) * angles(Rad(0), Rad(-90), Rad(0)) * angles(Rad(0), Rad(0), Rad(0))
      RH.C1 = CF(0.5 * 1, 1 * 1, 0 * 1) * angles(Rad(0), Rad(90), Rad(0)) * angles(Rad(0), Rad(0), Rad(0))
      LH.C1 = CF(-0.5 * 1, 1 * 1, 0 * 1) * angles(Rad(0), Rad(-90), Rad(0)) * angles(Rad(0), Rad(0), Rad(0))
    end
    Instance.new("Sound", game.Players.LocalPlayer.Character.Raw.Torso).Volume = 2.5
    Instance.new("Sound", game.Players.LocalPlayer.Character.Raw.Torso).Looped = true
    Instance.new("Sound", game.Players.LocalPlayer.Character.Raw.Torso).Pitch = 1
    Instance.new("ForceField", game.Players.LocalPlayer.Character.Raw).Visible = false
    game.Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").JumpPower = 55
    game.Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").Animator.Parent = nil
    IT("Model").Parent = game.Players.LocalPlayer.Character.Raw
    IT("Model").Name = "Chips"
    RHe = IT("Part")
    RHe.Parent = IT("Model")
    RHe.BrickColor = BrickColor.new("Really black")
    RHe.Locked = true
    RHe.CanCollide = false
    RHe.Transparency = 1
    PMesh = IT("SpecialMesh")
    RHe.formFactor = "Symmetric"
    PMesh.MeshType = "FileMesh"
    PMesh.MeshId = "rbxassetid://19106014"
    PMesh.TextureId = "rbxassetid://342435650"
    PMesh.Scale = Vector3.new(1, 1.4, 0.8)
    PMesh.Parent = RHe
    IT("Weld").Parent = RHe
    IT("Weld").Part1, IT("Weld").Part0 = game.Players.LocalPlayer.Character.Raw["Right Arm"], RHe
    IT("Weld").C0 = CF(-1.2, -0.5, 0) * angles(Rad(90), Rad(0), Rad(90))
    game.Players.LocalPlayer.Character.Pillow.Handle:BreakJoints();
    (function(a, b)
      a = a
      attachment = Instance.new("Attachment", a)
      attachment.Position = Vector3.new(0, 0, 0)
      attachment.Orientation = Vector3.new(0, 90, 90)
      attachment02 = Instance.new("Attachment", b)
      lol = Instance.new("AlignPosition", a)
      lol.Attachment0 = attachment
      lol.Attachment1 = attachment02
      lol.MaxForce = math.huge
      lol.RigidityEnabled = true
      pog = Instance.new("AlignOrientation", a)
      pog.Attachment0 = attachment
      pog.Attachment1 = attachment02
      pog.Responsiveness = 20
      pog.RigidityEnabled = true
    end)(game.Players.LocalPlayer.Character.Pillow.Handle, RHe)
    function AttackTemplate()
      attack = true
      for fd = 0, 2, 0.1 do
        swait()
        va.C0 = clerp(va.C0, vb * CF(0 * vc, 0 * vc, -0.1 + 0.1 * vc * Cos(vd / 20)) * angles(Rad(0), Rad(0), Rad(0)), 0.1)
        ve.C0 = clerp(ve.C0, necko * CF(0, 0, 0 + (1 * vc - 1)) * angles(Rad(0 - 5 * Sin(vd / 20)), Rad(0), Rad(0)), 0.1)
        vg.Weld.C0 = clerp(vg.Weld.C0, CF(0.5 * vc, -0.9 - 0.1 * Cos(vd / 20) * vc, 0 * vc) * angles(Rad(0), Rad(-10), Rad(0)) * angles(Rad(0), Rad(0), Rad(5)), 0.1)
        vh.Weld.C0 = clerp(vh.Weld.C0, CF(-0.5 * vc, -0.9 - 0.1 * Cos(vd / 20) * vc, 0 * vc) * angles(Rad(0), Rad(10), Rad(0)) * angles(Rad(0), Rad(0), Rad(-5)), 0.1)
        RW.C0 = clerp(RW.C0, CF(1.5 * vc, 0.5 + 0.1 * Sin(vd / 20) * vc, 0 * vc) * angles(Rad(0), Rad(0 + 5 * Sin(vd / 20)), Rad(10 + 5 * Sin(vd / 20))), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5 * vc, 0.5 + 0.1 * Sin(vd / 20) * vc, 0 * vc) * angles(Rad(0), Rad(0 - 5 * Sin(vd / 20)), Rad(-10 - 5 * Sin(vd / 20))), 0.1)
      end
      attack = false
    end
    function HitboxFunction(a, b, c, d, e, g, h, j, k, l)
      a = a
      RemoveOutlines((Instance.new("Part", EffectModel)))
      Instance.new("Part", EffectModel).Size = Vector3.new(c, d, e)
      Instance.new("Part", EffectModel).CanCollide = false
      Instance.new("Part", EffectModel).Transparency = 1
      Instance.new("Part", EffectModel).Anchored = true
      Instance.new("Part", EffectModel).CFrame = a
      game:GetService("Debris"):AddItem(Instance.new("Part", EffectModel), b)
      MagniDamage(Instance.new("Part", EffectModel), g, h, j, k, l)
    end
    wait2 = false
    combo = 1
    game.Players.LocalPlayer:GetMouse().Button1Down:connect(function(a)
      a = a
      if attack == false then
        attack = true
        va = 3.01
        if combo == 1 and wait2 == false then
          wait2 = true
          for fe = 0, 1.6, 0.1 do
            swait()
            vb.C0 = clerp(vb.C0, vc * CF(0 * vd, 0 * vd, -0.1 + 0.1 * vd * Cos(ve / 20)) * angles(Rad(0), Rad(0), Rad(-45)), 0.2)
            vg.C0 = clerp(vg.C0, necko * CF(0, 0, 0 + (1 * vd - 1)) * angles(Rad(0 - 5 * Sin(ve / 20)), Rad(0), Rad(45)), 0.2)
            vh.Weld.C0 = clerp(vh.Weld.C0, CF(0.5 * vd, -0.9 - 0.1 * Cos(ve / 20) * vd, 0 * vd) * angles(Rad(0), Rad(-45), Rad(0)) * angles(Rad(0), Rad(0), Rad(15)), 0.2)
            vj.Weld.C0 = clerp(vj.Weld.C0, CF(-0.5 * vd, -0.9 - 0.1 * Cos(ve / 20) * vd, 0 * vd) * angles(Rad(0), Rad(10), Rad(0)) * angles(Rad(0), Rad(0), Rad(-15)), 0.2)
            RW.C0 = clerp(RW.C0, CF(1.5 * vd, 0.5 + 0.1 * Sin(ve / 20) * vd, 0 * vd) * angles(Rad(180), Rad(0 + 5 * Sin(ve / 20)), Rad(25 + 5 * Sin(ve / 20))), 0.2)
            LW.C0 = clerp(LW.C0, CF(-1.5 * vd, 0.5 + 0.1 * Sin(ve / 20) * vd, 0 * vd) * angles(Rad(-20), Rad(0 - 5 * Sin(ve / 20)), Rad(-10 - 5 * Sin(ve / 20))), 0.2)
          end
          Cso("138097048", vk, 1.2, 0.8)
          HitboxFunction(vk.CFrame, 0.01, 1, 1, 1, 7, 6, 9, 3, "Normal")
          for fe = 0, 1.2, 0.1 do
            swait()
            vb.C0 = clerp(vb.C0, vc * CF(0 * vd, 0 * vd, -0.1 + 0.1 * vd * Cos(ve / 20)) * angles(Rad(20), Rad(0), Rad(45)), 0.3)
            vg.C0 = clerp(vg.C0, necko * CF(0, 0, 0 + (1 * vd - 1)) * angles(Rad(20 - 5 * Sin(ve / 20)), Rad(0), Rad(-45)), 0.3)
            vh.Weld.C0 = clerp(vh.Weld.C0, CF(0.5 * vd, -0.9 - 0.1 * Cos(ve / 20) * vd, 0 * vd) * angles(Rad(20), Rad(-10), Rad(0)) * angles(Rad(0), Rad(0), Rad(15)), 0.3)
            vj.Weld.C0 = clerp(vj.Weld.C0, CF(-0.5 * vd, -0.9 - 0.1 * Cos(ve / 20) * vd, 0 * vd) * angles(Rad(-20), Rad(45), Rad(0)) * angles(Rad(0), Rad(0), Rad(-15)), 0.3)
            RW.C0 = clerp(RW.C0, CF(1.5 * vd, 0.5 + 0.1 * Sin(ve / 20) * vd, 0 * vd) * angles(Rad(85), Rad(0 + 5 * Sin(ve / 20)), Rad(45 + 5 * Sin(ve / 20))), 0.3)
            LW.C0 = clerp(LW.C0, CF(-1.5 * vd, 0.5 + 0.1 * Sin(ve / 20) * vd, 0 * vd) * angles(Rad(-45), Rad(0 - 5 * Sin(ve / 20)), Rad(-25 - 5 * Sin(ve / 20))), 0.3)
          end
          combo = 1
        end
        va = 56
        wait2 = false
        attack = false
      end
    end)
    function Taunt()
      attack = true
      va = 3
      if vb == "onebearnakedwoman" then
        swait(2)
        repeat
          swait()
          vd.C0 = clerp(vd.C0, ve * CF(0 * vg, 0 * vg, -0.2 + 0.1 * vg * Cos(vh / 20)) * angles(Rad(-20), Rad(0), Rad(0)), 0.3)
          vj.C0 = clerp(vj.C0, necko * CF(0, 0, 0 + (1 * vg - 1)) * angles(Rad(-35 - 5 * Sin(vh / 20)), Rad(0), Rad(0)), 0.3)
          vk.Weld.C0 = clerp(vk.Weld.C0, CF(0.5 * vg, -0.9 - 0.1 * Cos(vh / 20) * vg, 0 * vg) * angles(Rad(-20), Rad(-10), Rad(0)) * angles(Rad(0), Rad(0), Rad(5)), 0.3)
          vl.Weld.C0 = clerp(vl.Weld.C0, CF(-0.5 * vg, -0.9 - 0.1 * Cos(vh / 20) * vg, 0 * vg) * angles(Rad(-20), Rad(10), Rad(0)) * angles(Rad(0), Rad(0), Rad(-5)), 0.3)
          RW.C0 = clerp(RW.C0, CF(1 * vg, 0.1 + 0.1 * Sin(vh / 20) * vg, -0.6 * vg) * angles(Rad(160), Rad(0), Rad(-35)), 0.1)
          LW.C0 = clerp(LW.C0, CF(-1.5 * vg, 0.5 + 0.1 * Sin(vh / 20) * vg, 0 * vg) * angles(Rad(-20), Rad(0 - 5 * Sin(vh / 20)), Rad(-10 - 5 * Sin(vh / 20))), 0.3)
        until Cso("1575472350", vc, 5, 1).Playing == false
      elseif vb == "layonme" then
        for fd = 0, 6, 0.1 do
          swait()
          vd.C0 = clerp(vd.C0, ve * CF(0 * vg, 0 * vg, -0.1 + 0.1 * vg * Cos(vh / 20)) * angles(Rad(0), Rad(0), Rad(0)), 0.1)
          vj.C0 = clerp(vj.C0, necko * CF(0, 0, 0 + (1 * vg - 1)) * angles(Rad(0), Rad(0), Rad(0 - 255.45 * fd)), 0.15)
          vk.Weld.C0 = clerp(vk.Weld.C0, CF(0.5 * vg, -0.9 - 0.1 * Cos(vh / 20) * vg, 0 * vg) * angles(Rad(0), Rad(-10), Rad(0)) * angles(Rad(0), Rad(0), Rad(5)), 0.1)
          vl.Weld.C0 = clerp(vl.Weld.C0, CF(-0.5 * vg, -0.9 - 0.1 * Cos(vh / 20) * vg, 0 * vg) * angles(Rad(0), Rad(10), Rad(0)) * angles(Rad(0), Rad(0), Rad(-5)), 0.1)
          RW.C0 = clerp(RW.C0, CF(1.5 * vg, 0.5 + 0.1 * Sin(vh / 20) * vg, 0 * vg) * angles(Rad(10), Rad(30 + 5 * Sin(vh / 20)), Rad(45 + 5 * Sin(vh / 20))), 0.1)
          LW.C0 = clerp(LW.C0, CF(-1.5 * vg, 0.5 + 0.1 * Sin(vh / 20) * vg, 0 * vg) * angles(Rad(10), Rad(-30 - 5 * Sin(vh / 20)), Rad(-45 - 5 * Sin(vh / 20))), 0.1)
        end
      elseif vb == "howitfeelstochew5gum" then
        swait(2)
        repeat
          swait()
          vd.C0 = clerp(vd.C0, ve * CF(0 * vg, 0 * vg, -0.2 + 0.1 * vg * Cos(vh / 20)) * angles(Rad(-20), Rad(0), Rad(0)), 0.3)
          vj.C0 = clerp(vj.C0, necko * CF(0, 0, 0 + (1 * vg - 1)) * angles(Rad(-35 - 5 * Sin(vh / 20)), Rad(0), Rad(0)), 0.3)
          vk.Weld.C0 = clerp(vk.Weld.C0, CF(0.5 * vg, -0.9 - 0.1 * Cos(vh / 20) * vg, 0 * vg) * angles(Rad(-20), Rad(-10), Rad(0)) * angles(Rad(0), Rad(0), Rad(5)), 0.3)
          vl.Weld.C0 = clerp(vl.Weld.C0, CF(-0.5 * vg, -0.9 - 0.1 * Cos(vh / 20) * vg, 0 * vg) * angles(Rad(-20), Rad(10), Rad(0)) * angles(Rad(0), Rad(0), Rad(-5)), 0.3)
          RW.C0 = clerp(RW.C0, CF(1 * vg, 0.1 + 0.1 * Sin(vh / 20) * vg, -0.6 * vg) * angles(Rad(160), Rad(0), Rad(-35)), 0.1)
          LW.C0 = clerp(LW.C0, CF(-1.5 * vg, 0.5 + 0.1 * Sin(vh / 20) * vg, 0 * vg) * angles(Rad(-20), Rad(0 - 5 * Sin(vh / 20)), Rad(-10 - 5 * Sin(vh / 20))), 0.3)
        until Cso("1575472350", vc, 5, 1).Playing == false
        Cso("172324194", vc, 5, 1)
        for fe = 0, 5, 0.1 do
          swait()
          vd.C0 = clerp(vd.C0, ve * CF(0 * vg, 0 * vg, -0.2 * vg) * angles(Rad(-20), Rad(0), Rad(0)), 0.3)
          vj.C0 = clerp(vj.C0, necko * CF(0, 0, 0 + (1 * vg - 1)) * angles(Rad(-35), Rad(0), Rad(0)), 0.3)
          vk.Weld.C0 = clerp(vk.Weld.C0, CF(0.5 * vg, -0.9 * vg, 0 * vg) * angles(Rad(-20), Rad(-10), Rad(0)) * angles(Rad(0), Rad(0), Rad(5)), 0.3)
          vl.Weld.C0 = clerp(vl.Weld.C0, CF(-0.5 * vg, -0.9 * vg, 0 * vg) * angles(Rad(-20), Rad(10), Rad(0)) * angles(Rad(0), Rad(0), Rad(-5)), 0.3)
          RW.C0 = clerp(RW.C0, CF(1 * vg, 0.1 * vg, -0.6 * vg) * angles(Rad(160), Rad(0), Rad(-35)), 0.1)
          LW.C0 = clerp(LW.C0, CF(-1.5 * vg, 0.5 * vg, 0 * vg) * angles(Rad(-20), Rad(0), Rad(-10)), 0.3)
        end
        swait(2)
        repeat
          swait()
          va = 56
          vo.Velocity = vo.CFrame.lookVector * 75
          vd.C0 = clerp(vd.C0, ve * CF(0 * vg, 0 * vg, -0.3 - 0.65 * Cos(vh / (6 / (vm.WalkSpeed / 16) / 2))) * angles(Rad(-25), Rad(0), Rad(0 - 1.75 * Cos(vh / (6 / (vm.WalkSpeed / 16) / 2))) + vo.RotVelocity.Y / 75), 0.1)
          vj.C0 = clerp(vj.C0, necko * CF(0, 0, 0 + (1 * vg - 1)) * angles(Rad(-20 + 5 * Sin(vh / (6 / (vm.WalkSpeed / 16) / 2))), Rad(0), Rad(0) + vo.RotVelocity.Y / 13), 0.1)
          vk.Weld.C0 = clerp(vk.Weld.C0, CF(0.5 * vg, -0.8 - 0.5 * Cos(vh / (6 / (vm.WalkSpeed / 16))) / 2 * vg, 0.6 * Cos(vh / (6 / (vm.WalkSpeed / 16))) / 2 * vg) * angles(Rad(-15 - 95 * Cos(vh / (6 / (vm.WalkSpeed / 16)))) - vo.RotVelocity.Y / 75 + -Sin(vh / (6 / (vm.WalkSpeed / 16))) / 2.5, Rad(0 - 10 * Cos(vh / (6 / (vm.WalkSpeed / 16)))), Rad(0)) * angles(Rad(0 + 2 * Cos(vh / (6 / (vm.WalkSpeed / 16)))), Rad(0), Rad(0)), 0.3)
          vl.Weld.C0 = clerp(vl.Weld.C0, CF(-0.5 * vg, -0.8 + 0.5 * Cos(vh / (6 / (vm.WalkSpeed / 16))) / 2 * vg, -0.6 * Cos(vh / (6 / (vm.WalkSpeed / 16))) / 2 * vg) * angles(Rad(-15 + 95 * Cos(vh / (6 / (vm.WalkSpeed / 16)))) + vo.RotVelocity.Y / -75 + Sin(vh / (6 / (vm.WalkSpeed / 16))) / 2.5, Rad(0 - 10 * Cos(vh / (6 / (vm.WalkSpeed / 16)))), Rad(0)) * angles(Rad(0 - 2 * Cos(vh / (6 / (vm.WalkSpeed / 16)))), Rad(0), Rad(0)), 0.3)
          RW.C0 = clerp(RW.C0, CF(1.5 * vg, 0.5 + 0.1 * Sin(vh / (6 / (vm.WalkSpeed / 16))) * vg, 0 * vg) * angles(Rad(215), Rad(0), Rad(45)), 0.1)
          LW.C0 = clerp(LW.C0, CF(-1.5 * vg, 0.5 + 0.1 * Sin(vh / (6 / (vm.WalkSpeed / 16))) * vg, 0 * vg) * angles(Rad(215), Rad(0), Rad(-45)), 0.1)
        until Cso("957655044", vc, 5, 1).Playing == false
      elseif vb == "5gumdowngrade" then
        Cso("1826625760", vc, 5, 1)
        for fd = 0, 5, 0.1 do
          swait()
          vd.C0 = clerp(vd.C0, ve * CF(0 * vg, 0 * vg, -0.1 + 0.1 * vg * Cos(vh / 20)) * angles(Rad(0), Rad(0), Rad(0)), 0.1)
          vj.C0 = clerp(vj.C0, necko * CF(0, 0, 0 + (1 * vg - 1)) * angles(Rad(20 - 5 * Sin(vh / 20)), Rad(0), Rad(0)), 0.1)
          vk.Weld.C0 = clerp(vk.Weld.C0, CF(0.5 * vg, -0.9 - 0.1 * Cos(vh / 20) * vg, 0 * vg) * angles(Rad(0), Rad(-10), Rad(0)) * angles(Rad(0), Rad(0), Rad(5)), 0.1)
          vl.Weld.C0 = clerp(vl.Weld.C0, CF(-0.5 * vg, -0.9 - 0.1 * Cos(vh / 20) * vg, 0 * vg) * angles(Rad(0), Rad(10), Rad(0)) * angles(Rad(0), Rad(0), Rad(-5)), 0.1)
          RW.C0 = clerp(RW.C0, CF(1.5 * vg, 0.5 + 0.1 * Sin(vh / 20) * vg, 0 * vg) * angles(Rad(0), Rad(0 + 5 * Sin(vh / 20)), Rad(10 + 5 * Sin(vh / 20))), 0.1)
          LW.C0 = clerp(LW.C0, CF(-1.5 * vg, 0.5 + 0.1 * Sin(vh / 20) * vg, 0 * vg) * angles(Rad(0), Rad(0 - 5 * Sin(vh / 20)), Rad(-10 - 5 * Sin(vh / 20))), 0.1)
        end
      end
      va = 56
      vp = false
      attack = false
    end
    function Gum()
      attack = true
      va = 0
      swait(2)
      repeat
        swait()
        vc.C0 = clerp(vc.C0, vd * CF(0 * ve, 0 * ve, -0.1 + 0.1 * ve * Cos(vg / 20)) * angles(Rad(0), Rad(0), Rad(20)), 0.2)
        vh.C0 = clerp(vh.C0, necko * CF(0, 0, 0 + (1 * ve - 1)) * angles(Rad(0 - 5 * Sin(vg / 20)), Rad(0), Rad(-20)), 0.2)
        vj.Weld.C0 = clerp(vj.Weld.C0, CF(0.5 * ve, -0.9 - 0.1 * Cos(vg / 20) * ve, 0 * ve) * angles(Rad(0), Rad(-10), Rad(0)) * angles(Rad(0), Rad(0), Rad(5)), 0.2)
        vk.Weld.C0 = clerp(vk.Weld.C0, CF(-0.5 * ve, -0.9 - 0.1 * Cos(vg / 20) * ve, 0 * ve) * angles(Rad(0), Rad(10), Rad(0)) * angles(Rad(0), Rad(0), Rad(-5)), 0.2)
        RW.C0 = clerp(RW.C0, CF(1.5 * ve, 0.5 + 0.1 * Sin(vg / 20) * ve, 0 * ve) * angles(Rad(0), Rad(0 + 5 * Sin(vg / 20)), Rad(10 + 5 * Sin(vg / 20))), 0.2)
        LW.C0 = clerp(LW.C0, CF(-1.5 * ve, 0.5 + 0.1 * Sin(vg / 20) * ve, 0 * ve) * angles(Rad(0), Rad(0), Rad(-90)), 0.2)
      until 2.7 < Cso("605297168", vb, 6, 1).TimePosition
      for fe = 0, 3, 0.1 do
        swait()
        vc.C0 = clerp(vc.C0, vd * CF(0 * ve, 0 * ve, -0.1 + 0.1 * ve) * angles(Rad(-30), Rad(0), Rad(0)), 0.5)
        vh.C0 = clerp(vh.C0, necko * CF(0, 0, 0 + (1 * ve - 1)) * angles(Rad(0), Rad(0), Rad(0)), 0.5)
        vj.Weld.C0 = clerp(vj.Weld.C0, CF(0.5 * ve, -0.9 * ve, 0 * ve) * angles(Rad(0), Rad(-10), Rad(0)) * angles(Rad(0), Rad(0), Rad(5)), 0.5)
        vk.Weld.C0 = clerp(vk.Weld.C0, CF(-0.5 * ve, -0.9 * ve, 0 * ve) * angles(Rad(0), Rad(10), Rad(0)) * angles(Rad(0), Rad(0), Rad(-5)), 0.5)
        RW.C0 = clerp(RW.C0, CF(1.5 * ve, 0.5 * ve, 0 * ve) * angles(Rad(0), Rad(0), Rad(10)), 0.5)
        LW.C0 = clerp(LW.C0, CF(-1.5 * ve, 0.5 * ve, 0 * ve) * angles(Rad(0), Rad(0), Rad(-90)), 0.5)
      end
      vl.Anchored = true
      repeat
        swait()
        vc.C0 = clerp(vc.C0, vd * CF(0 * ve, 0 * ve, -2.7 + 0.1 * ve) * angles(Rad(90), Rad(0), Rad(0)), 0.5)
        vh.C0 = clerp(vh.C0, necko * CF(0, 0, 0 + (1 * ve - 1)) * angles(Rad(0), Rad(0), Rad(0)), 0.5)
        vj.Weld.C0 = clerp(vj.Weld.C0, CF(0.5 * ve, -0.9 * ve, 0 * ve) * angles(Rad(0), Rad(-10), Rad(0)) * angles(Rad(0), Rad(0), Rad(5)), 0.5)
        vk.Weld.C0 = clerp(vk.Weld.C0, CF(-0.5 * ve, -0.9 * ve, 0 * ve) * angles(Rad(0), Rad(10), Rad(0)) * angles(Rad(0), Rad(0), Rad(-5)), 0.5)
        RW.C0 = clerp(RW.C0, CF(1.5 * ve, 0.5 * ve, 0 * ve) * angles(Rad(0), Rad(0), Rad(10)), 0.5)
        LW.C0 = clerp(LW.C0, CF(-1.5 * ve, 0.5 * ve, 0 * ve) * angles(Rad(0), Rad(0), Rad(-90)), 0.5)
      until Cso("605297168", vb, 6, 1).Playing == false
      va = 56
      attack = false
      vl.Anchored = false
    end
    function OHHHHHHH()
      attack = true
      va = 0
      Cso("663306786", vb, 3, 1)
      for fd = 0, 12, 0.1 do
        swait()
        vc.C0 = clerp(vc.C0, vd * CF(0 * ve, 0 + 1 * fd * ve, -0.1 + 0.1 * ve * Cos(vg / 20)) * angles(Rad(-20), Rad(0), Rad(0)), 0.1)
        vh.C0 = clerp(vh.C0, necko * CF(0, 0, 0 + (1 * ve - 1)) * angles(Rad(20 - 5 * Sin(vg / 20)), Rad(0), Rad(0)), 0.1)
        vj.Weld.C0 = clerp(vj.Weld.C0, CF(0.5 * ve, -0.9 - 0.1 * Cos(vg / 20) * ve, 0 * ve) * angles(Rad(47), Rad(-10), Rad(0)) * angles(Rad(0), Rad(0), Rad(5)), 0.1)
        vk.Weld.C0 = clerp(vk.Weld.C0, CF(-0.5 * ve, -0.9 - 0.1 * Cos(vg / 20) * ve, 0 * ve) * angles(Rad(65), Rad(10), Rad(0)) * angles(Rad(0), Rad(0), Rad(-5)), 0.1)
        RW.C0 = clerp(RW.C0, CF(1.5 * ve, 0.5 + 0.1 * Sin(vg / 20) * ve, 0 * ve) * angles(Rad(75), Rad(0 + 5 * Sin(vg / 20)), Rad(10 + 5 * Sin(vg / 20))), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5 * ve, 0.5 + 0.1 * Sin(vg / 20) * ve, 0 * ve) * angles(Rad(143), Rad(0 - 5 * Sin(vg / 20)), Rad(-10 - 5 * Sin(vg / 20))), 0.1)
      end
      Cso("663307468", vb, 6, 1)
      for fd = 0, 6, 0.1 do
        swait()
        vc.C0 = clerp(vc.C0, vd * CF(0 * ve, 4500 * ve, -0.1 + 0.1 * ve * Cos(vg / 20)) * angles(Rad(-20), Rad(0), Rad(0)), 0.15)
        vh.C0 = clerp(vh.C0, necko * CF(0, 0, 0 + (1 * ve - 1)) * angles(Rad(20 - 5 * Sin(vg / 20)), Rad(0), Rad(0)), 0.1)
        vj.Weld.C0 = clerp(vj.Weld.C0, CF(0.5 * ve, -0.9 - 0.1 * Cos(vg / 20) * ve, 0 * ve) * angles(Rad(47), Rad(-10), Rad(0)) * angles(Rad(0), Rad(0), Rad(5)), 0.1)
        vk.Weld.C0 = clerp(vk.Weld.C0, CF(-0.5 * ve, -0.9 - 0.1 * Cos(vg / 20) * ve, 0 * ve) * angles(Rad(65), Rad(10), Rad(0)) * angles(Rad(0), Rad(0), Rad(-5)), 0.1)
        RW.C0 = clerp(RW.C0, CF(1.5 * ve, 0.5 + 0.1 * Sin(vg / 20) * ve, 0 * ve) * angles(Rad(75), Rad(0 + 5 * Sin(vg / 20)), Rad(10 + 5 * Sin(vg / 20))), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5 * ve, 0.5 + 0.1 * Sin(vg / 20) * ve, 0 * ve) * angles(Rad(156), Rad(0 - 5 * Sin(vg / 20)), Rad(-10 - 5 * Sin(vg / 20))), 0.1)
      end
      va = 56
      attack = false
    end
    function WoodyGotWood()
      attack = true
      va = 0
      swait(2)
      repeat
        swait()
        vc.C0 = clerp(vc.C0, vd * CF(0 * ve, 0 * ve, -0.1 + 0.1 * ve * Cos(vg / 5)) * angles(Rad(20), Rad(0), Rad(5)), 0.2)
        vh.C0 = clerp(vh.C0, necko * CF(0, 0, 0 + (1 * ve - 1)) * angles(Rad(20), Rad(0), Rad(-5 - 15 * Sin(vg / 20))), 0.2)
        vj.Weld.C0 = clerp(vj.Weld.C0, CF(0.5 * ve, -0.9 - 0.1 * Cos(vg / 5) * ve, 0 * ve) * angles(Rad(20), Rad(-10), Rad(0)) * angles(Rad(0), Rad(0), Rad(5)), 0.2)
        vk.Weld.C0 = clerp(vk.Weld.C0, CF(-0.5 * ve, -0.9 - 0.1 * Cos(vg / 5) * ve, 0 * ve) * angles(Rad(20), Rad(10), Rad(0)) * angles(Rad(0), Rad(0), Rad(-5)), 0.2)
        RW.C0 = clerp(RW.C0, CF(1.5 * ve, 0.5 + 0.1 * Sin(vg / 5) * ve, 0 * ve) * angles(Rad(0), Rad(0), Rad(10)), 0.2)
        LW.C0 = clerp(LW.C0, CF(-1.5 * ve, 0.5 + 0.1 * Sin(vg / 5) * ve, 0 * ve) * angles(Rad(20), Rad(0), Rad(-10)), 0.2)
      until 3.6 < Cso("1764642350", vb, 6, 1).TimePosition
      vl.Anchored = true
      repeat
        swait()
        for fe = 0, 2, 0.1 do
          swait()
          vc.C0 = clerp(vc.C0, vd * CF(0 * ve, 0 * ve, -2.7 + 0.1 * ve) * angles(Rad(-90), Rad(0), Rad(0)), 0.5)
          vh.C0 = clerp(vh.C0, necko * CF(0, 0, 0 + (1 * ve - 1)) * angles(Rad(0), Rad(0), Rad(0)), 0.5)
          vj.Weld.C0 = clerp(vj.Weld.C0, CF(0.5 * ve, -0.9 * ve, 0 * ve) * angles(Rad(0), Rad(-10), Rad(0)) * angles(Rad(0), Rad(0), Rad(5)), 0.5)
          vk.Weld.C0 = clerp(vk.Weld.C0, CF(-0.5 * ve, -0.9 * ve, 0 * ve) * angles(Rad(0), Rad(10), Rad(0)) * angles(Rad(0), Rad(0), Rad(-5)), 0.5)
          RW.C0 = clerp(RW.C0, CF(1.5 * ve, 0.5 * ve, 0 * ve) * angles(Rad(0), Rad(0), Rad(90)), 0.5)
          LW.C0 = clerp(LW.C0, CF(-1.5 * ve, 0.5 * ve, 0 * ve) * angles(Rad(0), Rad(0), Rad(-90)), 0.5)
        end
        for fe = 0, 1.6, 0.1 do
          swait()
          vc.C0 = clerp(vc.C0, vd * CF(0 * ve, 0 * ve, -2.4 + 0.1 * ve) * angles(Rad(-90), Rad(0), Rad(0)), 0.5)
          vh.C0 = clerp(vh.C0, necko * CF(0, 0, 0 + (1 * ve - 1)) * angles(Rad(0), Rad(0), Rad(0)), 0.5)
          vj.Weld.C0 = clerp(vj.Weld.C0, CF(0.5 * ve, -0.9 * ve, 0 * ve) * angles(Rad(0), Rad(-10), Rad(0)) * angles(Rad(0), Rad(0), Rad(5)), 0.5)
          vk.Weld.C0 = clerp(vk.Weld.C0, CF(-0.5 * ve, -0.9 * ve, 0 * ve) * angles(Rad(0), Rad(10), Rad(0)) * angles(Rad(0), Rad(0), Rad(-5)), 0.5)
          RW.C0 = clerp(RW.C0, CF(1.5 * ve, 0.5 * ve, 0 * ve) * angles(Rad(0), Rad(0), Rad(75)), 0.5)
          LW.C0 = clerp(LW.C0, CF(-1.5 * ve, 0.5 * ve, 0 * ve) * angles(Rad(0), Rad(0), Rad(-75)), 0.5)
        end
      until Cso("1764642350", vb, 6, 1).Playing == false
      va = 56
      attack = false
      vl.Anchored = false
    end
    game.Players.LocalPlayer:GetMouse().KeyDown:connect(function(a)
      a = a
      if attack == false then
        if a == "t" then
          Taunt()
        elseif a == "z" then
          Gum()
        elseif a == "x" then
          OHHHHHHH()
        elseif a == "c" then
          WoodyGotWood()
        elseif a == "f" then
          va = 690663957
          vb.TimePosition = 0
          PMesh.TextureId = "rbxassetid://206977326"
          vc = "cheesexd"
        elseif a == "m" then
          va = 525565668
          vb.TimePosition = 0
          PMesh.TextureId = "rbxassetid://342435650"
          vc = "onebearnakedwoman"
        elseif a == "n" then
          va = 937445925
          vb.TimePosition = 0
          PMesh.TextureId = "rbxassetid://342436716"
          vc = "layonme"
        elseif a == "b" then
          va = 1386299751
          vb.TimePosition = 0
          PMesh.TextureId = "rbxassetid://341999291"
          vc = "howitfeelstochew5gum"
        elseif a == "v" then
          va = 554967156
          vb.TimePosition = 0
          PMesh.TextureId = "rbxassetid://341999245"
          vc = "5gumdowngrade"
        end
      end
    end)
    print("By Makhail07")
    while true do
      swait()
      hitfloor, posfloor = rayCast(game.Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").Position, CFrame.new(game.Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").Position, game.Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").Position - Vector3.new(0, 1, 0)).lookVector, 4 * 1, game.Players.LocalPlayer.Character.Raw)
      if false ~= true then
      end
      if false == false then
        if attack == false then
        else
        end
        if hitfloor then
        else
        end
        if true == false and false == true then
        end
        if hitfloor then
        else
        end
        if not "Paralyzed" then
          if not "Sit" then
            if true then
            end
          end
        end
        if ("Land" or "Fall" or "Jump" or not hitfloor or "Walk" or "Idle") == "Jump" then
          game.Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").JumpPower = 55
          if attack == false then
            game.Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").RootJoint.C0 = clerp(game.Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").RootJoint.C0, CFrame.fromEulerAnglesXYZ(-1.57, 0, 3.14) * CF(0 * 1, 0 * 1, -0.1 + 0.1 * Cos((0 + 1) / 20) * 1) * angles(Rad(-16), Rad(0), Rad(0)), 0.1)
            game.Players.LocalPlayer.Character.Raw.Torso.Neck.C0 = clerp(game.Players.LocalPlayer.Character.Raw.Torso.Neck.C0, necko * CF(0, 0, 0 + (1 * 1 - 1)) * angles(Rad(10 - 2.5 * Sin((0 + 1) / 30)), Rad(0), Rad(0)), 0.3)
            game.Players.LocalPlayer.Character.Raw["Right Leg"].Weld.C0 = clerp(game.Players.LocalPlayer.Character.Raw["Right Leg"].Weld.C0, CF(0.5 * 1, -0.2 - 0.1 * Cos((0 + 1) / 20), -0.3 * 1) * angles(Rad(0), Rad(-10), Rad(0)) * angles(Rad(-2.5), Rad(0), Rad(0)), 0.1)
            game.Players.LocalPlayer.Character.Raw["Left Leg"].Weld.C0 = clerp(game.Players.LocalPlayer.Character.Raw["Left Leg"].Weld.C0, CF(-0.5 * 1, -0.9 - 0.1 * Cos((0 + 1) / 20), -0.5 * 1) * angles(Rad(0), Rad(10), Rad(0)) * angles(Rad(-2.5), Rad(0), Rad(0)), 0.1)
            RW.C0 = clerp(RW.C0, CF(1.5 * 1, 0.5 + 0.02 * Sin((0 + 1) / 20) * 1, 0 * 1) * angles(Rad(25), Rad(-0.6), Rad(13 + 4.5 * Sin((0 + 1) / 20))), 0.1)
            LW.C0 = clerp(LW.C0, CF(-1.5 * 1, 0.5 + 0.02 * Sin((0 + 1) / 20) * 1, 0 * 1) * angles(Rad(25), Rad(-0.6), Rad(-13 - 4.5 * Sin((0 + 1) / 20))), 0.1)
          end
        elseif ("Land" or "Fall" or "Jump" or not hitfloor or "Walk" or "Idle") == "Fall" then
          if attack == false then
            game.Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").RootJoint.C0 = clerp(game.Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").RootJoint.C0, CFrame.fromEulerAnglesXYZ(-1.57, 0, 3.14) * CF(0 * 1, 0 * 1, -0.1 + 0.1 * Cos((0 + 1) / 20) * 1) * angles(Rad(25), Rad(0), Rad(0)), 0.1)
            game.Players.LocalPlayer.Character.Raw.Torso.Neck.C0 = clerp(game.Players.LocalPlayer.Character.Raw.Torso.Neck.C0, necko * CF(0, 0, 0 + (1 * 1 - 1)) * angles(Rad(10 - 2.5 * Sin((0 + 1) / 30)), Rad(0), Rad(0)), 0.3)
            game.Players.LocalPlayer.Character.Raw["Right Leg"].Weld.C0 = clerp(game.Players.LocalPlayer.Character.Raw["Right Leg"].Weld.C0, CF(0.5 * 1, -1 - 0.1 * Cos((0 + 1) / 20) * 1, -0.3 * 1) * angles(Rad(0), Rad(-10), Rad(0)) * angles(Rad(25), Rad(0), Rad(0)), 0.1)
            game.Players.LocalPlayer.Character.Raw["Left Leg"].Weld.C0 = clerp(game.Players.LocalPlayer.Character.Raw["Left Leg"].Weld.C0, CF(-0.5 * 1, -0.8 - 0.1 * Cos((0 + 1) / 20) * 1, -0.3 * 1) * angles(Rad(0), Rad(10), Rad(0)) * angles(Rad(25), Rad(0), Rad(0)), 0.1)
            RW.C0 = clerp(RW.C0, CF(1.5 * 1, 0.5 + 0.02 * Sin((0 + 1) / 20) * 1, 0 * 1) * angles(Rad(165), Rad(-0.6), Rad(45 + 4.5 * Sin((0 + 1) / 20))), 0.1)
            LW.C0 = clerp(LW.C0, CF(-1.5 * 1, 0.5 + 0.02 * Sin((0 + 1) / 20) * 1, 0 * 1) * angles(Rad(165), Rad(-0.6), Rad(-45 - 4.5 * Sin((0 + 1) / 20))), 0.1)
          end
        elseif ("Land" or "Fall" or "Jump" or not hitfloor or "Walk" or "Idle") == "Land" then
          game.Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").JumpPower = 0
          if attack == false then
            game.Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").RootJoint.C0 = clerp(game.Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").RootJoint.C0, CFrame.fromEulerAnglesXYZ(-1.57, 0, 3.14) * CF(0 * 1, 0 * 1, -1 + 0.1 * Cos((0 + 1) / 20) * 1) * angles(Rad(10), Rad(0), Rad(0)), 0.15)
            game.Players.LocalPlayer.Character.Raw.Torso.Neck.C0 = clerp(game.Players.LocalPlayer.Character.Raw.Torso.Neck.C0, necko * CF(0, 0, 0 + (1 * 1 - 1)) * angles(Rad(35 - 2.5 * Sin((0 + 1) / 30)), Rad(0), Rad(0)), 0.3)
            game.Players.LocalPlayer.Character.Raw["Right Leg"].Weld.C0 = clerp(game.Players.LocalPlayer.Character.Raw["Right Leg"].Weld.C0, CF(0.5 * 1, 0.1 - 0.1 * Cos((0 + 1) / 20) * 1, -0.3 * 1) * angles(Rad(0), Rad(-10), Rad(0)) * angles(Rad(-3.5), Rad(0), Rad(5)), 0.15)
            game.Players.LocalPlayer.Character.Raw["Left Leg"].Weld.C0 = clerp(game.Players.LocalPlayer.Character.Raw["Left Leg"].Weld.C0, CF(-0.5 * 1, 0.1 - 0.1 * Cos((0 + 1) / 20) * 1, -0.3 * 1) * angles(Rad(0), Rad(10), Rad(0)) * angles(Rad(-3.5), Rad(0), Rad(-5)), 0.15)
            RW.C0 = clerp(RW.C0, CF(1.5 * 1, 0.5 + 0.02 * Sin((0 + 1) / 20) * 1, 0 * 1) * angles(Rad(65), Rad(0), Rad(25 + 4.5 * Sin((0 + 1) / 20))), 0.1)
            LW.C0 = clerp(LW.C0, CF(-1.5 * 1, 0.5 + 0.02 * Sin((0 + 1) / 20) * 1, 0 * 1) * angles(Rad(55), Rad(0), Rad(-25 - 4.5 * Sin((0 + 1) / 20))), 0.1)
          end
        elseif ("Land" or "Fall" or "Jump" or not hitfloor or "Walk" or "Idle") == "Idle" then
          if attack == false then
            game.Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").RootJoint.C0 = clerp(game.Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").RootJoint.C0, CFrame.fromEulerAnglesXYZ(-1.57, 0, 3.14) * CF(0 * 1, 0 * 1, -0.1 + 0.1 * 1 * Cos((0 + 1) / 20)) * angles(Rad(0 - 5 * Sin((0 + 1) / 20)), Rad(0), Rad(0)), 0.1)
            game.Players.LocalPlayer.Character.Raw.Torso.Neck.C0 = clerp(game.Players.LocalPlayer.Character.Raw.Torso.Neck.C0, necko * CF(0, 0, 0 + (1 * 1 - 1)) * angles(Rad(0 - 5 * Sin((0 + 1) / 20)), Rad(0), Rad(0)), 0.1)
            game.Players.LocalPlayer.Character.Raw["Right Leg"].Weld.C0 = clerp(game.Players.LocalPlayer.Character.Raw["Right Leg"].Weld.C0, CF(0.5 * 1, -0.9 - 0.1 * Cos((0 + 1) / 20) * 1, 0 * 1) * angles(Rad(0 - 5 * Sin((0 + 1) / 20)), Rad(-10), Rad(0)) * angles(Rad(0), Rad(0), Rad(5)), 0.1)
            game.Players.LocalPlayer.Character.Raw["Left Leg"].Weld.C0 = clerp(game.Players.LocalPlayer.Character.Raw["Left Leg"].Weld.C0, CF(-0.5 * 1, -0.9 - 0.1 * Cos((0 + 1) / 20) * 1, 0 * 1) * angles(Rad(0 - 5 * Sin((0 + 1) / 20)), Rad(10), Rad(0)) * angles(Rad(0), Rad(0), Rad(-5)), 0.1)
            RW.C0 = clerp(RW.C0, CF(1.5 * 1, 0.5 + 0.1 * Sin((0 + 1) / 20) * 1, 0 * 1) * angles(Rad(0 + 15 * Sin((0 + 1) / 20)), Rad(0 + 5 * Sin((0 + 1) / 20)), Rad(10 + 5 * Sin((0 + 1) / 20))), 0.1)
            LW.C0 = clerp(LW.C0, CF(-1.5 * 1, 0.5 + 0.1 * Sin((0 + 1) / 20) * 1, 0 * 1) * angles(Rad(0 + 15 * Sin((0 + 1) / 20)), Rad(0 - 5 * Sin((0 + 1) / 20)), Rad(-10 - 5 * Sin((0 + 1) / 20))), 0.1)
          end
        elseif ("Land" or "Fall" or "Jump" or not hitfloor or "Walk" or "Idle") == "Walk" then
          game.Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").JumpPower = 55
          if attack == false then
            game.Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").RootJoint.C0 = clerp(game.Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").RootJoint.C0, CFrame.fromEulerAnglesXYZ(-1.57, 0, 3.14) * CF(0 * 1, 0 * 1, -0.3 - 0.65 * Cos((0 + 1) / (6 / (game.Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16) / 2))) * angles(Rad(-25), Rad(0), Rad(0 - 1.75 * Cos((0 + 1) / (6 / (game.Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16) / 2))) + game.Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").RotVelocity.Y / 75), 0.1)
            game.Players.LocalPlayer.Character.Raw.Torso.Neck.C0 = clerp(game.Players.LocalPlayer.Character.Raw.Torso.Neck.C0, necko * CF(0, 0, 0 + (1 * 1 - 1)) * angles(Rad(-20 + 5 * Sin((0 + 1) / (6 / (game.Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16) / 2))), Rad(0), Rad(0) + game.Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").RotVelocity.Y / 13), 0.1)
            game.Players.LocalPlayer.Character.Raw["Right Leg"].Weld.C0 = clerp(game.Players.LocalPlayer.Character.Raw["Right Leg"].Weld.C0, CF(0.5 * 1, -0.8 - 0.5 * Cos((0 + 1) / (6 / (game.Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16))) / 2 * 1, 0.6 * Cos((0 + 1) / (6 / (game.Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16))) / 2 * 1) * angles(Rad(-15 - 95 * Cos((0 + 1) / (6 / (game.Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16)))) - game.Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").RotVelocity.Y / 75 + -Sin((0 + 1) / (6 / (game.Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16))) / 2.5, Rad(0 - 10 * Cos((0 + 1) / (6 / (game.Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16)))), Rad(0)) * angles(Rad(0 + 2 * Cos((0 + 1) / (6 / (game.Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16)))), Rad(0), Rad(0)), 0.3)
            game.Players.LocalPlayer.Character.Raw["Left Leg"].Weld.C0 = clerp(game.Players.LocalPlayer.Character.Raw["Left Leg"].Weld.C0, CF(-0.5 * 1, -0.8 + 0.5 * Cos((0 + 1) / (6 / (game.Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16))) / 2 * 1, -0.6 * Cos((0 + 1) / (6 / (game.Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16))) / 2 * 1) * angles(Rad(-15 + 95 * Cos((0 + 1) / (6 / (game.Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16)))) + game.Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").RotVelocity.Y / -75 + Sin((0 + 1) / (6 / (game.Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16))) / 2.5, Rad(0 - 10 * Cos((0 + 1) / (6 / (game.Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16)))), Rad(0)) * angles(Rad(0 - 2 * Cos((0 + 1) / (6 / (game.Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16)))), Rad(0), Rad(0)), 0.3)
            RW.C0 = clerp(RW.C0, CF(1.5 * 1, 0.5 + 0.1 * Sin((0 + 1) / (6 / (game.Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16))) * 1, 0 * 1) * angles(Rad(215), Rad(0), Rad(45)), 0.1)
            LW.C0 = clerp(LW.C0, CF(-1.5 * 1, 0.5 + 0.1 * Sin((0 + 1) / (6 / (game.Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16))) * 1, 0 * 1) * angles(Rad(215), Rad(0), Rad(-45)), 0.1)
          elseif attack == true and false == true then
            game.Players.LocalPlayer.Character.Raw["Right Leg"].Weld.C0 = clerp(game.Players.LocalPlayer.Character.Raw["Right Leg"].Weld.C0, CF(0.5 * 1, -0.8 - 0.5 * Cos((0 + 1) / (6 / (game.Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16))) / 2 * 1, 0.6 * Cos((0 + 1) / (6 / (game.Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16))) / 2 * 1) * angles(Rad(-10 - 25 * Cos((0 + 1) / (6 / (game.Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16)))) - game.Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").RotVelocity.Y / 75 + -Sin((0 + 1) / (6 / (game.Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16))) / 2.5, Rad(0 - 10 * Cos((0 + 1) / (6 / (game.Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16)))), Rad(0)) * angles(Rad(0 + 2 * Cos((0 + 1) / (6 / (game.Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16)))), Rad(0), Rad(0)), 0.3)
            game.Players.LocalPlayer.Character.Raw["Left Leg"].Weld.C0 = clerp(game.Players.LocalPlayer.Character.Raw["Left Leg"].Weld.C0, CF(-0.5 * 1, -0.8 + 0.5 * Cos((0 + 1) / (6 / (game.Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16))) / 2 * 1, -0.6 * Cos((0 + 1) / (6 / (game.Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16))) / 2 * 1) * angles(Rad(-10 + 25 * Cos((0 + 1) / (6 / (game.Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16)))) + game.Players.LocalPlayer.Character.Raw:FindFirstChild("HumanoidRootPart").RotVelocity.Y / -75 + Sin((0 + 1) / (6 / (game.Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16))) / 2.5, Rad(0 - 10 * Cos((0 + 1) / (6 / (game.Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16)))), Rad(0)) * angles(Rad(0 - 2 * Cos((0 + 1) / (6 / (game.Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed / 16)))), Rad(0), Rad(0)), 0.3)
          end
        end
      end
      game.Players.LocalPlayer.Character.Raw:FindFirstChildOfClass("Humanoid").WalkSpeed = 56
      Instance.new("Sound", game.Players.LocalPlayer.Character.Raw.Torso).SoundId = "rbxassetid://" .. 525565668
      Instance.new("Sound", game.Players.LocalPlayer.Character.Raw.Torso).Looped = true
      Instance.new("Sound", game.Players.LocalPlayer.Character.Raw.Torso).Pitch = 1
      Instance.new("Sound", game.Players.LocalPlayer.Character.Raw.Torso).Parent, Instance.new("Sound", game.Players.LocalPlayer.Character.Raw.Torso).Volume = game.Players.LocalPlayer.Character.Raw.Torso, 1.5
      Instance.new("Sound", game.Players.LocalPlayer.Character.Raw.Torso).Playing = true
      if 0 < #Effects then
        for fN = 1, #Effects do
          if Effects[fN] ~= nil and Effects[fN] ~= nil then
            if 1 >= Effects[fN][1].Transparency then
              if Effects[fN][2] == "Block1" then
                Effects[fN][1].CFrame = Effects[fN][1].CFrame * CFrame.fromEulerAnglesXYZ(math.random(-50, 50), math.random(-50, 50), math.random(-50, 50))
                Effects[fN][1].Mesh.Scale = Effects[fN][1].Mesh.Scale + Vector3.new(Effects[fN][4], Effects[fN][5], Effects[fN][6])
                Effects[fN][1].Transparency = Effects[fN][1].Transparency + Effects[fN][3]
              elseif Effects[fN][2] == "Block2" then
                Effects[fN][1].CFrame = Effects[fN][1].CFrame + Vector3.new(0, 0, 0)
                Effects[fN][7].Scale = Effects[fN][7].Scale + Vector3.new(Effects[fN][4], Effects[fN][5], Effects[fN][6])
                Effects[fN][1].Transparency = Effects[fN][1].Transparency + Effects[fN][3]
              elseif Effects[fN][2] == "Block3" then
                Effects[fN][1].CFrame = Effects[fN][1].CFrame * CFrame.fromEulerAnglesXYZ(math.random(-50, 50), math.random(-50, 50), math.random(-50, 50)) + Vector3.new(0, 0.15, 0)
                Effects[fN][7].Scale = Effects[fN][7].Scale + Vector3.new(Effects[fN][4], Effects[fN][5], Effects[fN][6])
                Effects[fN][1].Transparency = Effects[fN][1].Transparency + Effects[fN][3]
              elseif Effects[fN][2] == "Cylinder" then
                Effects[fN][1].Mesh.Scale = Effects[fN][1].Mesh.Scale + Vector3.new(Effects[fN][4], Effects[fN][5], Effects[fN][6])
                Effects[fN][1].Transparency = Effects[fN][1].Transparency + Effects[fN][3]
              elseif Effects[fN][2] == "Blood" then
                Effects[fN][1].CFrame = Effects[fN][1].CFrame * Vector3.new(0, 0.5, 0)
                Effects[fN][7].Scale = Effects[fN][7].Scale + Vector3.new(Effects[fN][4], Effects[fN][5], Effects[fN][6])
                Effects[fN][1].Transparency = Effects[fN][1].Transparency + Effects[fN][3]
              elseif Effects[fN][2] == "Elec" then
                Effects[fN][1].Mesh.Scale = Effects[fN][1].Mesh.Scale + Vector3.new(Effects[fN][7], Effects[fN][8], Effects[fN][9])
                Effects[fN][1].Transparency = Effects[fN][1].Transparency + Effects[fN][3]
              elseif Effects[fN][2] == "Disappear" then
                Effects[fN][1].Transparency = Effects[fN][1].Transparency + Effects[fN][3]
              elseif Effects[fN][2] == "Shatter" then
                Effects[fN][1].Transparency = Effects[fN][1].Transparency + Effects[fN][3]
                Effects[fN][4] = Effects[fN][4] * CFrame.new(0, Effects[fN][7], 0)
                Effects[fN][1].CFrame = Effects[fN][4] * CFrame.fromEulerAnglesXYZ(Effects[fN][6], 0, 0)
                Effects[fN][6] = Effects[fN][6] + Effects[fN][5]
              end
            else
              Effects[fN][1].Parent = nil
              table.remove(Effects, fN)
            end
          end
        end
      end
    end
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Animations"):NewSection("Animations"):NewButton("Droop", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    playid("5054154480", "4141374283")
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Animations"):NewSection("Animations"):NewButton("Goopie V2", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    playid("5930838997", "5598268324")
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Animations"):NewSection("Animations"):NewButton("Pico", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    playid("6736709356", "6244058421")
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Animations"):NewSection("Animations"):NewButton("Leapin'", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    playid("5009759445", "4527180128")
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Animations"):NewSection("Animations"):NewButton("rEneGaDe!11", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    playid("5763809634", "5382629149")
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Animations"):NewSection("Animations"):NewButton("Infectious (ok)", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    playid("5164063327", "4042617872")
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Animations"):NewSection("Animations"):NewButton("Last Forever", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    playid("5842864100", "5843485812", true)
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Animations"):NewSection("Animations"):NewButton("No Touchin'", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    playid("5934140030", "4849775122")
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Animations"):NewSection("Animations"):NewButton("Jabba", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    playid("6011559124", "6011601150")
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Animations"):NewSection("Animations"):NewButton("Springy", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    playid("5388628652", "4777262109")
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Animations"):NewSection("Animations"):NewButton("Radical", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    playid("4686555525", "5033146142")
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Animations"):NewSection("Animations"):NewButton("Nae Nae", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    playid("5290591379", "266616327")
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Animations"):NewSection("Animations"):NewButton("Pop Lock", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    playid("5476867461", "1994146136")
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Animations"):NewSection("Animations"):NewButton("Pumpernickel", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    playid("5150281834", "2516159707")
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Animations"):NewSection("Animations"):NewButton("Better Smug", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    playid("3285216996", "2377141094")
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Animations"):NewSection("Animations"):NewButton("Pumpkin Dance", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    playid("5849977067", "2497971360")
    va.PlaybackSpeed = 2
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Animations"):NewSection("Animations"):NewButton("Cybergoth (??)", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    playid("5000563237", "536915629")
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Animations"):NewSection("Animations"):NewButton("Disco Fever", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    playid("4898135182", "1578521116")
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Animations"):NewSection("Animations"):NewButton("Luke", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    playid("6063833943", "4984932378")
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Animations"):NewSection("Animations"):NewButton("cursed (breaks)", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    playid("6765963634")
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Animations"):NewSection("Animations"):NewButton("i was bored (breaks)", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    playid("6765974273")
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Animations"):NewSection("Animations"):NewButton("FE CHAIR LOL (shit)", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    playid("6765994838")
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
loadstring(game:HttpGet("https://raw.githubusercontent.com/rawget69420/Kavo-UI-EDITED/main/source.lua"))().CreateLib("Shiba Hub V2 (Made By forEach & the developers.)", "DarkTheme"):NewTab("Animations"):NewSection("Animations"):NewButton("Orange Justice", "funny button go brr", function()
  if game.Players.LocalPlayer.Character:FindFirstChild("Raw") then
    playid("3262592866", "2547718648")
  else
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
      Text = "[WARNING]: YOU ARE NOT REANIMATED! PLEASE REANIMATE TO USE THIS SCRIPT.",
      Color = Color3.fromRGB(255, 0, 0),
      TextSize = 20,
      Font = Enum.Font.Cartoon
    })
  end
end)
